

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sun Oct 22 21:26:13 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F917
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text5_split_1,local,class=CODE,merge=1,delta=2
    33                           	psect	text5_split_2,local,class=CODE,merge=1,delta=2
    34                           	psect	text5_split_3,local,class=CODE,merge=1,delta=2
    35                           	psect	text5_split_4,local,class=CODE,merge=1,delta=2
    36                           	psect	text5_split_5,local,class=CODE,merge=1,delta=2
    37                           	psect	text5_split_6,local,class=CODE,merge=1,delta=2
    38                           	psect	text5_split_7,local,class=CODE,merge=1,delta=2
    39                           	psect	text5_split_8,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 1.43
    43                           ; Generated 25/07/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F917 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  008F                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  0105                     	;# 
   138  0107                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0110                     	;# 
   148  0111                     	;# 
   149  0112                     	;# 
   150  0113                     	;# 
   151  0114                     	;# 
   152  0115                     	;# 
   153  0116                     	;# 
   154  0117                     	;# 
   155  0118                     	;# 
   156  0119                     	;# 
   157  011A                     	;# 
   158  011B                     	;# 
   159  011C                     	;# 
   160  011D                     	;# 
   161  011E                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  000D                     	;# 
   178  000E                     	;# 
   179  000E                     	;# 
   180  000F                     	;# 
   181  0010                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0013                     	;# 
   185  0014                     	;# 
   186  0015                     	;# 
   187  0015                     	;# 
   188  0016                     	;# 
   189  0017                     	;# 
   190  0018                     	;# 
   191  0019                     	;# 
   192  001A                     	;# 
   193  001B                     	;# 
   194  001B                     	;# 
   195  001C                     	;# 
   196  001D                     	;# 
   197  001E                     	;# 
   198  001F                     	;# 
   199  0081                     	;# 
   200  0085                     	;# 
   201  0086                     	;# 
   202  0087                     	;# 
   203  0088                     	;# 
   204  0089                     	;# 
   205  008C                     	;# 
   206  008D                     	;# 
   207  008E                     	;# 
   208  008F                     	;# 
   209  0090                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0095                     	;# 
   215  0095                     	;# 
   216  0096                     	;# 
   217  0096                     	;# 
   218  0097                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  009F                     	;# 
   225  0105                     	;# 
   226  0107                     	;# 
   227  0108                     	;# 
   228  0109                     	;# 
   229  010C                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  0110                     	;# 
   236  0111                     	;# 
   237  0112                     	;# 
   238  0113                     	;# 
   239  0114                     	;# 
   240  0115                     	;# 
   241  0116                     	;# 
   242  0117                     	;# 
   243  0118                     	;# 
   244  0119                     	;# 
   245  011A                     	;# 
   246  011B                     	;# 
   247  011C                     	;# 
   248  011D                     	;# 
   249  011E                     	;# 
   250  018C                     	;# 
   251  018D                     	;# 
   252  0000                     	;# 
   253  0001                     	;# 
   254  0002                     	;# 
   255  0003                     	;# 
   256  0004                     	;# 
   257  0005                     	;# 
   258  0006                     	;# 
   259  0007                     	;# 
   260  0008                     	;# 
   261  0009                     	;# 
   262  000A                     	;# 
   263  000B                     	;# 
   264  000C                     	;# 
   265  000D                     	;# 
   266  000E                     	;# 
   267  000E                     	;# 
   268  000F                     	;# 
   269  0010                     	;# 
   270  0011                     	;# 
   271  0012                     	;# 
   272  0013                     	;# 
   273  0014                     	;# 
   274  0015                     	;# 
   275  0015                     	;# 
   276  0016                     	;# 
   277  0017                     	;# 
   278  0018                     	;# 
   279  0019                     	;# 
   280  001A                     	;# 
   281  001B                     	;# 
   282  001B                     	;# 
   283  001C                     	;# 
   284  001D                     	;# 
   285  001E                     	;# 
   286  001F                     	;# 
   287  0081                     	;# 
   288  0085                     	;# 
   289  0086                     	;# 
   290  0087                     	;# 
   291  0088                     	;# 
   292  0089                     	;# 
   293  008C                     	;# 
   294  008D                     	;# 
   295  008E                     	;# 
   296  008F                     	;# 
   297  0090                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0093                     	;# 
   301  0094                     	;# 
   302  0095                     	;# 
   303  0095                     	;# 
   304  0096                     	;# 
   305  0096                     	;# 
   306  0097                     	;# 
   307  0098                     	;# 
   308  0099                     	;# 
   309  009C                     	;# 
   310  009D                     	;# 
   311  009E                     	;# 
   312  009F                     	;# 
   313  0105                     	;# 
   314  0107                     	;# 
   315  0108                     	;# 
   316  0109                     	;# 
   317  010C                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  010D                     	;# 
   321  010E                     	;# 
   322  010F                     	;# 
   323  0110                     	;# 
   324  0111                     	;# 
   325  0112                     	;# 
   326  0113                     	;# 
   327  0114                     	;# 
   328  0115                     	;# 
   329  0116                     	;# 
   330  0117                     	;# 
   331  0118                     	;# 
   332  0119                     	;# 
   333  011A                     	;# 
   334  011B                     	;# 
   335  011C                     	;# 
   336  011D                     	;# 
   337  011E                     	;# 
   338  018C                     	;# 
   339  018D                     	;# 
   340  0000                     	;# 
   341  0001                     	;# 
   342  0002                     	;# 
   343  0003                     	;# 
   344  0004                     	;# 
   345  0005                     	;# 
   346  0006                     	;# 
   347  0007                     	;# 
   348  0008                     	;# 
   349  0009                     	;# 
   350  000A                     	;# 
   351  000B                     	;# 
   352  000C                     	;# 
   353  000D                     	;# 
   354  000E                     	;# 
   355  000E                     	;# 
   356  000F                     	;# 
   357  0010                     	;# 
   358  0011                     	;# 
   359  0012                     	;# 
   360  0013                     	;# 
   361  0014                     	;# 
   362  0015                     	;# 
   363  0015                     	;# 
   364  0016                     	;# 
   365  0017                     	;# 
   366  0018                     	;# 
   367  0019                     	;# 
   368  001A                     	;# 
   369  001B                     	;# 
   370  001B                     	;# 
   371  001C                     	;# 
   372  001D                     	;# 
   373  001E                     	;# 
   374  001F                     	;# 
   375  0081                     	;# 
   376  0085                     	;# 
   377  0086                     	;# 
   378  0087                     	;# 
   379  0088                     	;# 
   380  0089                     	;# 
   381  008C                     	;# 
   382  008D                     	;# 
   383  008E                     	;# 
   384  008F                     	;# 
   385  0090                     	;# 
   386  0091                     	;# 
   387  0092                     	;# 
   388  0093                     	;# 
   389  0094                     	;# 
   390  0095                     	;# 
   391  0095                     	;# 
   392  0096                     	;# 
   393  0096                     	;# 
   394  0097                     	;# 
   395  0098                     	;# 
   396  0099                     	;# 
   397  009C                     	;# 
   398  009D                     	;# 
   399  009E                     	;# 
   400  009F                     	;# 
   401  0105                     	;# 
   402  0107                     	;# 
   403  0108                     	;# 
   404  0109                     	;# 
   405  010C                     	;# 
   406  010C                     	;# 
   407  010D                     	;# 
   408  010D                     	;# 
   409  010E                     	;# 
   410  010F                     	;# 
   411  0110                     	;# 
   412  0111                     	;# 
   413  0112                     	;# 
   414  0113                     	;# 
   415  0114                     	;# 
   416  0115                     	;# 
   417  0116                     	;# 
   418  0117                     	;# 
   419  0118                     	;# 
   420  0119                     	;# 
   421  011A                     	;# 
   422  011B                     	;# 
   423  011C                     	;# 
   424  011D                     	;# 
   425  011E                     	;# 
   426  018C                     	;# 
   427  018D                     	;# 
   428                           
   429                           	psect	nvBANK1
   430  00E5                     __pnvBANK1:	
   431  00E5                     _kp:	
   432  00E5                     	ds	3
   433  00E8                     _kd:	
   434  00E8                     	ds	3
   435  00EB                     _ki:	
   436  00EB                     	ds	3
   437  001A                     _RCREG	set	26
   438  0019                     _TXREG	set	25
   439  001E                     _ADRESH	set	30
   440  001F                     _ADCON0	set	31
   441  000E                     _TMR1L	set	14
   442  000F                     _TMR1H	set	15
   443  0008                     _PORTD	set	8
   444  0010                     _T1CON	set	16
   445  0012                     _T2CON	set	18
   446  001D                     _CCP2CON	set	29
   447  000B                     _INTCON	set	11
   448  001B                     _CCPR2L	set	27
   449  0065                     _RCIF	set	101
   450  00C4                     _CREN	set	196
   451  00C7                     _SPEN	set	199
   452  00F9                     _GO_nDONE	set	249
   453  0047                     _RD7	set	71
   454  0082                     _T1SYNC	set	130
   455  0081                     _TMR1CS	set	129
   456  0080                     _TMR1ON	set	128
   457  003D                     _RC5	set	61
   458  0099                     _SPBRG	set	153
   459  009E                     _ADRESL	set	158
   460  009F                     _ADCON1	set	159
   461  0091                     _ANSEL	set	145
   462  0085                     _TRISA	set	133
   463  0087                     _TRISC	set	135
   464  0092                     _PR2	set	146
   465  008F                     _OSCCON	set	143
   466  0088                     _TRISD	set	136
   467  04C1                     _TRMT	set	1217
   468  04C5                     _TXEN	set	1221
   469  043E                     _TRISC6	set	1086
   470  043F                     _TRISC7	set	1087
   471  04C4                     _SYNC	set	1220
   472  04C2                     _BRGH	set	1218
   473  0107                     _LCDCON	set	263
   474  0108                     _LCDPS	set	264
   475  011A                     _LCDDATA10	set	282
   476  011E                     _LCDSE2	set	286
   477  011D                     _LCDSE1	set	285
   478  011C                     _LCDSE0	set	284
   479  0114                     _LCDDATA4	set	276
   480  0117                     _LCDDATA7	set	279
   481  0111                     _LCDDATA1	set	273
   482  0113                     _LCDDATA3	set	275
   483  0116                     _LCDDATA6	set	278
   484  0119                     _LCDDATA9	set	281
   485  0110                     _LCDDATA0	set	272
   486  0115                     _LCDDATA5	set	277
   487  011B                     _LCDDATA11	set	283
   488  0118                     _LCDDATA8	set	280
   489  0112                     _LCDDATA2	set	274
   490                           
   491                           ; #config settings
   492  0000                     
   493                           	psect	cinit
   494  07EF                     start_initialization:	
   495  07EF                     __initialization:	
   496                           
   497                           ; Clear objects allocated to BANK1
   498  07EF  1683               	bsf	3,5	;RP0=1, select bank1
   499  07F0  1303               	bcf	3,6	;RP1=0, select bank1
   500  07F1  01DA               	clrf	__pbssBANK1& (0+127)
   501  07F2  01DB               	clrf	(__pbssBANK1+1)& (0+127)
   502  07F3  01DC               	clrf	(__pbssBANK1+2)& (0+127)
   503  07F4  01DD               	clrf	(__pbssBANK1+3)& (0+127)
   504  07F5  01DE               	clrf	(__pbssBANK1+4)& (0+127)
   505  07F6  01DF               	clrf	(__pbssBANK1+5)& (0+127)
   506  07F7  01E0               	clrf	(__pbssBANK1+6)& (0+127)
   507  07F8  01E1               	clrf	(__pbssBANK1+7)& (0+127)
   508  07F9  01E2               	clrf	(__pbssBANK1+8)& (0+127)
   509  07FA  01E3               	clrf	(__pbssBANK1+9)& (0+127)
   510  07FB  01E4               	clrf	(__pbssBANK1+10)& (0+127)
   511  07FC                     end_of_initialization:	
   512                           ;End of C runtime variable initialization code
   513                           
   514  07FC                     __end_of__initialization:	
   515  07FC  0183               	clrf	3
   516  07FD  160A  118A  2BD4   	ljmp	_main	;jump to C main() function
   517                           
   518                           	psect	bssBANK1
   519  00DA                     __pbssBANK1:	
   520  00DA                     _pid_val:	
   521  00DA                     	ds	3
   522  00DD                     _D:	
   523  00DD                     	ds	2
   524  00DF                     _I:	
   525  00DF                     	ds	2
   526  00E1                     _P:	
   527  00E1                     	ds	2
   528  00E3                     _last_error:	
   529  00E3                     	ds	2
   530                           
   531                           	psect	cstackBANK3
   532  0190                     __pcstackBANK3:	
   533  0190                     main@D3:	
   534                           
   535                           ; 28 bytes @ 0x0
   536  0190                     	ds	28
   537                           
   538                           	psect	cstackBANK1
   539  00A0                     __pcstackBANK1:	
   540  00A0                     main@timer1:	
   541                           
   542                           ; 2 bytes @ 0x0
   543  00A0                     	ds	2
   544  00A2                     main@D1:	
   545                           
   546                           ; 28 bytes @ 0x2
   547  00A2                     	ds	28
   548  00BE                     main@D2:	
   549                           
   550                           ; 28 bytes @ 0x1E
   551  00BE                     	ds	28
   552                           
   553                           	psect	cstackCOMMON
   554  0070                     __pcstackCOMMON:	
   555  0070                     ?_LCD_init:	
   556  0070                     ??_LCD_init:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_LCD_mapping:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_UART_Write_Text:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_UART_Write:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ??_UART_Write:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_PID_init:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ??_PID_init:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_main:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?___awdiv:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?___awmod:	
   584                           ; 2 bytes @ 0x0
   585                           
   586  0070                     ?___lwdiv:	
   587                           ; 2 bytes @ 0x0
   588                           
   589  0070                     ?___lwmod:	
   590                           ; 2 bytes @ 0x0
   591                           
   592  0070                     ?___ftpack:	
   593                           ; 2 bytes @ 0x0
   594                           
   595  0070                     ?___aldiv:	
   596                           ; 3 bytes @ 0x0
   597                           
   598  0070                     ?___fttol:	
   599                           ; 4 bytes @ 0x0
   600                           
   601  0070                     LCD_mapping@D2:	
   602                           ; 4 bytes @ 0x0
   603                           
   604  0070                     UART_Write@data:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ___awdiv@divisor:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ___awmod@divisor:	
   611                           ; 2 bytes @ 0x0
   612                           
   613  0070                     ___lwdiv@divisor:	
   614                           ; 2 bytes @ 0x0
   615                           
   616  0070                     ___lwmod@divisor:	
   617                           ; 2 bytes @ 0x0
   618                           
   619  0070                     ___ftpack@arg:	
   620                           ; 2 bytes @ 0x0
   621                           
   622  0070                     ___fttol@f1:	
   623                           ; 3 bytes @ 0x0
   624                           
   625  0070                     ___aldiv@divisor:	
   626                           ; 3 bytes @ 0x0
   627                           
   628                           
   629                           ; 4 bytes @ 0x0
   630  0070                     	ds	1
   631  0071                     ??_UART_Write_Text:	
   632  0071                     LCD_mapping@D3:	
   633                           ; 1 bytes @ 0x1
   634                           
   635                           
   636                           ; 1 bytes @ 0x1
   637  0071                     	ds	1
   638  0072                     ??_LCD_mapping:	
   639  0072                     UART_Write_Text@i:	
   640                           ; 1 bytes @ 0x2
   641                           
   642  0072                     ___awdiv@dividend:	
   643                           ; 2 bytes @ 0x2
   644                           
   645  0072                     ___awmod@dividend:	
   646                           ; 2 bytes @ 0x2
   647                           
   648  0072                     ___lwdiv@dividend:	
   649                           ; 2 bytes @ 0x2
   650                           
   651  0072                     ___lwmod@dividend:	
   652                           ; 2 bytes @ 0x2
   653                           
   654                           
   655                           ; 2 bytes @ 0x2
   656  0072                     	ds	1
   657  0073                     ___ftpack@exp:	
   658                           
   659                           ; 1 bytes @ 0x3
   660  0073                     	ds	1
   661  0074                     ??___awdiv:	
   662  0074                     ??___awmod:	
   663                           ; 1 bytes @ 0x4
   664                           
   665  0074                     ??___fttol:	
   666                           ; 1 bytes @ 0x4
   667                           
   668  0074                     ??___lwdiv:	
   669                           ; 1 bytes @ 0x4
   670                           
   671  0074                     ??___lwmod:	
   672                           ; 1 bytes @ 0x4
   673                           
   674  0074                     LCD_mapping@D1:	
   675                           ; 1 bytes @ 0x4
   676                           
   677  0074                     UART_Write_Text@text:	
   678                           ; 1 bytes @ 0x4
   679                           
   680  0074                     ___ftpack@sign:	
   681                           ; 1 bytes @ 0x4
   682                           
   683  0074                     ___aldiv@dividend:	
   684                           ; 1 bytes @ 0x4
   685                           
   686                           
   687                           ; 4 bytes @ 0x4
   688  0074                     	ds	1
   689  0075                     ??___ftpack:	
   690  0075                     ___awdiv@counter:	
   691                           ; 1 bytes @ 0x5
   692                           
   693  0075                     ___awmod@counter:	
   694                           ; 1 bytes @ 0x5
   695                           
   696  0075                     ___lwmod@counter:	
   697                           ; 1 bytes @ 0x5
   698                           
   699  0075                     ___lwdiv@quotient:	
   700                           ; 1 bytes @ 0x5
   701                           
   702                           
   703                           ; 2 bytes @ 0x5
   704  0075                     	ds	1
   705  0076                     ___awdiv@sign:	
   706  0076                     ___awmod@sign:	
   707                           ; 1 bytes @ 0x6
   708                           
   709                           
   710                           ; 1 bytes @ 0x6
   711  0076                     	ds	1
   712  0077                     ___lwdiv@counter:	
   713  0077                     ___awdiv@quotient:	
   714                           ; 1 bytes @ 0x7
   715                           
   716                           
   717                           ; 2 bytes @ 0x7
   718  0077                     	ds	1
   719  0078                     ?_utoa:	
   720  0078                     ??___aldiv:	
   721                           ; 1 bytes @ 0x8
   722                           
   723  0078                     ?___awtoft:	
   724                           ; 1 bytes @ 0x8
   725                           
   726  0078                     ___fttol@sign1:	
   727                           ; 3 bytes @ 0x8
   728                           
   729  0078                     ___awtoft@c:	
   730                           ; 1 bytes @ 0x8
   731                           
   732  0078                     utoa@val:	
   733                           ; 2 bytes @ 0x8
   734                           
   735                           
   736                           ; 2 bytes @ 0x8
   737  0078                     	ds	1
   738  0079                     ?_displayDigit:	
   739  0079                     displayDigit@digito:	
   740                           ; 1 bytes @ 0x9
   741                           
   742  0079                     UART_Init@x:	
   743                           ; 2 bytes @ 0x9
   744                           
   745  0079                     ___fttol@lval:	
   746                           ; 2 bytes @ 0x9
   747                           
   748                           
   749                           ; 4 bytes @ 0x9
   750  0079                     	ds	1
   751  007A                     utoa@base:	
   752                           
   753                           ; 2 bytes @ 0xA
   754  007A                     	ds	1
   755  007B                     ??___awtoft:	
   756  007B                     displayDigit@D1:	
   757                           ; 1 bytes @ 0xB
   758                           
   759                           
   760                           ; 2 bytes @ 0xB
   761  007B                     	ds	1
   762  007C                     ??_utoa:	
   763                           
   764                           ; 1 bytes @ 0xC
   765  007C                     	ds	1
   766  007D                     ??_displayNumber:	
   767  007D                     ___awtoft@sign:	
   768                           ; 1 bytes @ 0xD
   769                           
   770  007D                     ___fttol@exp1:	
   771                           ; 1 bytes @ 0xD
   772                           
   773                           
   774                           ; 1 bytes @ 0xD
   775  007D                     	ds	1
   776                           
   777                           	psect	cstackBANK0
   778  0020                     __pcstackBANK0:	
   779  0020                     ??_displayDigit:	
   780  0020                     ?___ftmul:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0020                     ___aldiv@counter:	
   784                           ; 3 bytes @ 0x0
   785                           
   786  0020                     utoa@v:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0020                     ___ftmul@f1:	
   790                           ; 2 bytes @ 0x0
   791                           
   792                           
   793                           ; 3 bytes @ 0x0
   794  0020                     	ds	1
   795  0021                     ___aldiv@sign:	
   796                           
   797                           ; 1 bytes @ 0x1
   798  0021                     	ds	1
   799  0022                     utoa@c:	
   800  0022                     ___aldiv@quotient:	
   801                           ; 1 bytes @ 0x2
   802                           
   803                           
   804                           ; 4 bytes @ 0x2
   805  0022                     	ds	1
   806  0023                     utoa@buf:	
   807  0023                     ___ftmul@f2:	
   808                           ; 1 bytes @ 0x3
   809                           
   810                           
   811                           ; 3 bytes @ 0x3
   812  0023                     	ds	3
   813  0026                     ?_UART_Init:	
   814  0026                     ??___ftmul:	
   815                           ; 1 bytes @ 0x6
   816                           
   817  0026                     UART_Init@baudrate:	
   818                           ; 1 bytes @ 0x6
   819                           
   820                           
   821                           ; 4 bytes @ 0x6
   822  0026                     	ds	3
   823  0029                     ?_displayNumber:	
   824  0029                     displayNumber@num:	
   825                           ; 1 bytes @ 0x9
   826                           
   827                           
   828                           ; 2 bytes @ 0x9
   829  0029                     	ds	1
   830  002A                     ??_UART_Init:	
   831  002A                     ___ftmul@exp:	
   832                           ; 1 bytes @ 0xA
   833                           
   834                           
   835                           ; 1 bytes @ 0xA
   836  002A                     	ds	1
   837  002B                     displayNumber@D1:	
   838  002B                     ___ftmul@f3_as_product:	
   839                           ; 1 bytes @ 0xB
   840                           
   841                           
   842                           ; 3 bytes @ 0xB
   843  002B                     	ds	1
   844  002C                     displayNumber@D2:	
   845                           
   846                           ; 1 bytes @ 0xC
   847  002C                     	ds	1
   848  002D                     displayNumber@D3:	
   849                           
   850                           ; 1 bytes @ 0xD
   851  002D                     	ds	1
   852  002E                     ___ftmul@cntr:	
   853                           
   854                           ; 1 bytes @ 0xE
   855  002E                     	ds	1
   856  002F                     ___ftmul@sign:	
   857                           
   858                           ; 1 bytes @ 0xF
   859  002F                     	ds	1
   860  0030                     ?___ftadd:	
   861  0030                     ___ftadd@f1:	
   862                           ; 3 bytes @ 0x10
   863                           
   864                           
   865                           ; 3 bytes @ 0x10
   866  0030                     	ds	3
   867  0033                     ___ftadd@f2:	
   868                           
   869                           ; 3 bytes @ 0x13
   870  0033                     	ds	3
   871  0036                     ??___ftadd:	
   872                           
   873                           ; 1 bytes @ 0x16
   874  0036                     	ds	4
   875  003A                     ___ftadd@sign:	
   876                           
   877                           ; 1 bytes @ 0x1A
   878  003A                     	ds	1
   879  003B                     ___ftadd@exp2:	
   880                           
   881                           ; 1 bytes @ 0x1B
   882  003B                     	ds	1
   883  003C                     ___ftadd@exp1:	
   884                           
   885                           ; 1 bytes @ 0x1C
   886  003C                     	ds	1
   887  003D                     ?_PID:	
   888  003D                     PID@setpoint:	
   889                           ; 2 bytes @ 0x1D
   890                           
   891                           
   892                           ; 2 bytes @ 0x1D
   893  003D                     	ds	2
   894  003F                     PID@read:	
   895                           
   896                           ; 2 bytes @ 0x1F
   897  003F                     	ds	2
   898  0041                     ??_PID:	
   899                           
   900                           ; 1 bytes @ 0x21
   901  0041                     	ds	3
   902  0044                     _PID$658:	
   903                           
   904                           ; 3 bytes @ 0x24
   905  0044                     	ds	3
   906  0047                     PID@error:	
   907                           
   908                           ; 2 bytes @ 0x27
   909  0047                     	ds	2
   910  0049                     ??_main:	
   911                           
   912                           ; 1 bytes @ 0x29
   913  0049                     	ds	4
   914  004D                     main@str:	
   915                           
   916                           ; 33 bytes @ 0x2D
   917  004D                     	ds	33
   918  006E                     main@setpoint:	
   919                           
   920                           ; 2 bytes @ 0x4E
   921  006E                     	ds	2
   922                           
   923                           	psect	maintext
   924  13D4                     __pmaintext:	
   925 ;;
   926 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   927 ;;
   928 ;; *************** function _main *****************
   929 ;; Defined at:
   930 ;;		line 61 in file "main.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;		None
   933 ;; Auto vars:     Size  Location     Type
   934 ;;  str            33   45[BANK0 ] unsigned char [33]
   935 ;;  D3             28    0[BANK3 ] struct .
   936 ;;  D2             28   30[BANK1 ] struct .
   937 ;;  D1             28    2[BANK1 ] struct .
   938 ;;  timer1          2    0[BANK1 ] unsigned int 
   939 ;;  setpoint        2   78[BANK0 ] int 
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      void 
   942 ;; Registers used:
   943 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   944 ;; Tracked objects:
   945 ;;		On entry : B00/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   949 ;;      Params:         0       0       0       0       0
   950 ;;      Locals:         0      35      58      28       0
   951 ;;      Temps:          0       4       0       0       0
   952 ;;      Totals:         0      39      58      28       0
   953 ;;Total ram usage:      125 bytes
   954 ;; Hardware stack levels required when called:    3
   955 ;; This function calls:
   956 ;;		_LCD_init
   957 ;;		_LCD_mapping
   958 ;;		_PID
   959 ;;		_PID_init
   960 ;;		_UART_Init
   961 ;;		_UART_Write
   962 ;;		_UART_Write_Text
   963 ;;		_displayNumber
   964 ;;		_utoa
   965 ;; This function is called by:
   966 ;;		Startup code after reset
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970                           
   971                           ;psect for function _main
   972  13D4                     _main:	
   973                           
   974                           ;main.c: 62: MAPKEY D1, D2, D3;
   975                           ;main.c: 65: int setpoint = 25;
   976                           
   977                           ;incstack = 0
   978                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   979  13D4  3019               	movlw	25
   980  13D5  1283               	bcf	3,5	;RP0=0, select bank0
   981  13D6  1303               	bcf	3,6	;RP1=0, select bank0
   982  13D7  00EE               	movwf	main@setpoint
   983  13D8  3000               	movlw	0
   984  13D9  00EF               	movwf	main@setpoint+1
   985                           
   986                           ;main.c: 66: unsigned int timer1;
   987                           ;main.c: 69: char str [33];
   988                           ;main.c: 72: LCD_init();
   989  13DA  160A  158A  25F3  160A  118A  	fcall	_LCD_init
   990                           
   991                           ;main.c: 73: LCD_mapping(&D1,&D2,&D3);
   992  13DF  30BE               	movlw	(low (main@D2| 0))& (0+255)
   993  13E0  1283               	bcf	3,5	;RP0=0, select bank0
   994  13E1  1303               	bcf	3,6	;RP1=0, select bank0
   995  13E2  00C9               	movwf	??_main
   996  13E3  0849               	movf	??_main,w
   997  13E4  00F0               	movwf	LCD_mapping@D2
   998  13E5  3090               	movlw	(low (main@D3| (0+256)))& (0+255)
   999  13E6  00CA               	movwf	??_main+1
  1000  13E7  084A               	movf	??_main+1,w
  1001  13E8  00F1               	movwf	LCD_mapping@D3
  1002  13E9  30A2               	movlw	(low (main@D1| 0))& (0+255)
  1003  13EA  120A  158A  2646  160A  118A  	fcall	_LCD_mapping
  1004                           
  1005                           ;main.c: 74: UART_Init(9600);
  1006  13EF  3000               	movlw	0
  1007  13F0  1283               	bcf	3,5	;RP0=0, select bank0
  1008  13F1  1303               	bcf	3,6	;RP1=0, select bank0
  1009  13F2  00A9               	movwf	UART_Init@baudrate+3
  1010  13F3  3000               	movlw	0
  1011  13F4  00A8               	movwf	UART_Init@baudrate+2
  1012  13F5  3025               	movlw	37
  1013  13F6  00A7               	movwf	UART_Init@baudrate+1
  1014  13F7  3080               	movlw	128
  1015  13F8  00A6               	movwf	UART_Init@baudrate
  1016  13F9  160A  158A  278C  160A  118A  	fcall	_UART_Init
  1017                           
  1018                           ;main.c: 75: PID_init();
  1019  13FE  160A  158A  260C  160A  118A  	fcall	_PID_init
  1020                           
  1021                           ;main.c: 78: TRISD = 0x00;
  1022  1403  1683               	bsf	3,5	;RP0=1, select bank1
  1023  1404  1303               	bcf	3,6	;RP1=0, select bank1
  1024  1405  0188               	clrf	8	;volatile
  1025                           
  1026                           ;main.c: 79: OSCCON = 0x70;
  1027  1406  3070               	movlw	112
  1028  1407  008F               	movwf	15	;volatile
  1029                           
  1030                           ;main.c: 80: PR2 = 0x3F;
  1031  1408  303F               	movlw	63
  1032  1409  0092               	movwf	18	;volatile
  1033                           
  1034                           ;main.c: 81: INTCON = 0;
  1035  140A  018B               	clrf	11	;volatile
  1036                           
  1037                           ;main.c: 82: CCPR2L = 0;
  1038  140B  1283               	bcf	3,5	;RP0=0, select bank0
  1039  140C  1303               	bcf	3,6	;RP1=0, select bank0
  1040  140D  019B               	clrf	27	;volatile
  1041                           
  1042                           ;main.c: 83: CCP2CON = 0x0C;
  1043  140E  300C               	movlw	12
  1044  140F  009D               	movwf	29	;volatile
  1045                           
  1046                           ;main.c: 84: T2CON = 0x04;
  1047  1410  3004               	movlw	4
  1048  1411  0092               	movwf	18	;volatile
  1049                           
  1050                           ;main.c: 87: TRISC |= (1 << RC5);
  1051  1412  3001               	movlw	1
  1052  1413  00C9               	movwf	??_main
  1053  1414  3000               	movlw	0
  1054  1415  1A87               	btfsc	7,5	;volatile
  1055  1416  3001               	movlw	1
  1056  1417  3E01               	addlw	1
  1057  1418  2C1B               	goto	u3864
  1058  1419                     u3865:	
  1059  1419  1003               	clrc
  1060  141A  0DC9               	rlf	??_main,f
  1061  141B                     u3864:	
  1062  141B  3EFF               	addlw	-1
  1063  141C  1D03               	skipz
  1064  141D  2C19               	goto	u3865
  1065  141E  0849               	movf	??_main,w
  1066  141F  00CA               	movwf	??_main+1
  1067  1420  084A               	movf	??_main+1,w
  1068  1421  1683               	bsf	3,5	;RP0=1, select bank1
  1069  1422  1303               	bcf	3,6	;RP1=0, select bank1
  1070  1423  0487               	iorwf	7,f	;volatile
  1071                           
  1072                           ;main.c: 91: T1CON |= (1 << TMR1ON) | (1 << TMR1CS) | (1 << T1SYNC);
  1073  1424  3001               	movlw	1
  1074  1425  1283               	bcf	3,5	;RP0=0, select bank0
  1075  1426  1303               	bcf	3,6	;RP1=0, select bank0
  1076  1427  00C9               	movwf	??_main
  1077  1428  3000               	movlw	0
  1078  1429  1910               	btfsc	16,2	;volatile
  1079  142A  3001               	movlw	1
  1080  142B  3E01               	addlw	1
  1081  142C  2C2F               	goto	u3874
  1082  142D                     u3875:	
  1083  142D  1003               	clrc
  1084  142E  0DC9               	rlf	??_main,f
  1085  142F                     u3874:	
  1086  142F  3EFF               	addlw	-1
  1087  1430  1D03               	skipz
  1088  1431  2C2D               	goto	u3875
  1089  1432  3001               	movlw	1
  1090  1433  00CA               	movwf	??_main+1
  1091  1434  3000               	movlw	0
  1092  1435  1890               	btfsc	16,1	;volatile
  1093  1436  3001               	movlw	1
  1094  1437  3E01               	addlw	1
  1095  1438  2C3B               	goto	u3884
  1096  1439                     u3885:	
  1097  1439  1003               	clrc
  1098  143A  0DCA               	rlf	??_main+1,f
  1099  143B                     u3884:	
  1100  143B  3EFF               	addlw	-1
  1101  143C  1D03               	skipz
  1102  143D  2C39               	goto	u3885
  1103  143E  3001               	movlw	1
  1104  143F  00CB               	movwf	??_main+2
  1105  1440  3000               	movlw	0
  1106  1441  1810               	btfsc	16,0	;volatile
  1107  1442  3001               	movlw	1
  1108  1443  3E01               	addlw	1
  1109  1444  2C47               	goto	u3894
  1110  1445                     u3895:	
  1111  1445  1003               	clrc
  1112  1446  0DCB               	rlf	??_main+2,f
  1113  1447                     u3894:	
  1114  1447  3EFF               	addlw	-1
  1115  1448  1D03               	skipz
  1116  1449  2C45               	goto	u3895
  1117  144A  084B               	movf	??_main+2,w
  1118  144B  044A               	iorwf	??_main+1,w
  1119  144C  0449               	iorwf	??_main,w
  1120  144D  00CC               	movwf	??_main+3
  1121  144E  084C               	movf	??_main+3,w
  1122  144F  0490               	iorwf	16,f	;volatile
  1123                           
  1124                           ;main.c: 93: PORTD |= (1 << RD7);
  1125  1450  3001               	movlw	1
  1126  1451  00C9               	movwf	??_main
  1127  1452  3000               	movlw	0
  1128  1453  1B88               	btfsc	8,7	;volatile
  1129  1454  3001               	movlw	1
  1130  1455  3E01               	addlw	1
  1131  1456  2C59               	goto	u3904
  1132  1457                     u3905:	
  1133  1457  1003               	clrc
  1134  1458  0DC9               	rlf	??_main,f
  1135  1459                     u3904:	
  1136  1459  3EFF               	addlw	-1
  1137  145A  1D03               	skipz
  1138  145B  2C57               	goto	u3905
  1139  145C  0849               	movf	??_main,w
  1140  145D  00CA               	movwf	??_main+1
  1141  145E  084A               	movf	??_main+1,w
  1142  145F  0488               	iorwf	8,f	;volatile
  1143                           
  1144                           ;main.c: 95: TMR1H = 0;
  1145  1460  018F               	clrf	15	;volatile
  1146                           
  1147                           ;main.c: 96: TMR1L = 0;
  1148  1461  018E               	clrf	14	;volatile
  1149  1462                     l1883:	
  1150                           ;main.c: 98: while(1) {
  1151                           
  1152                           
  1153                           ;main.c: 101: timer1 = (TMR1H << 8) + TMR1L;
  1154  1462  1283               	bcf	3,5	;RP0=0, select bank0
  1155  1463  1303               	bcf	3,6	;RP1=0, select bank0
  1156  1464  080F               	movf	15,w	;volatile
  1157  1465  1683               	bsf	3,5	;RP0=1, select bank1
  1158  1466  1303               	bcf	3,6	;RP1=0, select bank1
  1159  1467  00A1               	movwf	(main@timer1+1)^(0+128)
  1160  1468  1283               	bcf	3,5	;RP0=0, select bank0
  1161  1469  1303               	bcf	3,6	;RP1=0, select bank0
  1162  146A  080E               	movf	14,w	;volatile
  1163  146B  1683               	bsf	3,5	;RP0=1, select bank1
  1164  146C  1303               	bcf	3,6	;RP1=0, select bank1
  1165  146D  00A0               	movwf	main@timer1^(0+128)
  1166                           
  1167                           ;main.c: 104: displayNumber(timer1, &D1, &D2, &D3);
  1168  146E  0821               	movf	(main@timer1+1)^(0+128),w
  1169  146F  1283               	bcf	3,5	;RP0=0, select bank0
  1170  1470  1303               	bcf	3,6	;RP1=0, select bank0
  1171  1471  00AA               	movwf	displayNumber@num+1
  1172  1472  1683               	bsf	3,5	;RP0=1, select bank1
  1173  1473  1303               	bcf	3,6	;RP1=0, select bank1
  1174  1474  0820               	movf	main@timer1^(0+128),w
  1175  1475  1283               	bcf	3,5	;RP0=0, select bank0
  1176  1476  1303               	bcf	3,6	;RP1=0, select bank0
  1177  1477  00A9               	movwf	displayNumber@num
  1178  1478  30A2               	movlw	(low (main@D1| 0))& (0+255)
  1179  1479  00C9               	movwf	??_main
  1180  147A  0849               	movf	??_main,w
  1181  147B  00AB               	movwf	displayNumber@D1
  1182  147C  30BE               	movlw	(low (main@D2| 0))& (0+255)
  1183  147D  00CA               	movwf	??_main+1
  1184  147E  084A               	movf	??_main+1,w
  1185  147F  00AC               	movwf	displayNumber@D2
  1186  1480  3090               	movlw	(low (main@D3| (0+256)))& (0+255)
  1187  1481  00CB               	movwf	??_main+2
  1188  1482  084B               	movf	??_main+2,w
  1189  1483  00AD               	movwf	displayNumber@D3
  1190  1484  160A  118A  2059  160A  118A  	fcall	_displayNumber
  1191                           
  1192                           ;main.c: 107: CCPR2L = PID(setpoint, timer1);
  1193  1489  1283               	bcf	3,5	;RP0=0, select bank0
  1194  148A  1303               	bcf	3,6	;RP1=0, select bank0
  1195  148B  086F               	movf	main@setpoint+1,w
  1196  148C  00BE               	movwf	PID@setpoint+1
  1197  148D  086E               	movf	main@setpoint,w
  1198  148E  00BD               	movwf	PID@setpoint
  1199  148F  1683               	bsf	3,5	;RP0=1, select bank1
  1200  1490  1303               	bcf	3,6	;RP1=0, select bank1
  1201  1491  0821               	movf	(main@timer1+1)^(0+128),w
  1202  1492  1283               	bcf	3,5	;RP0=0, select bank0
  1203  1493  1303               	bcf	3,6	;RP1=0, select bank0
  1204  1494  00C0               	movwf	PID@read+1
  1205  1495  1683               	bsf	3,5	;RP0=1, select bank1
  1206  1496  1303               	bcf	3,6	;RP1=0, select bank1
  1207  1497  0820               	movf	main@timer1^(0+128),w
  1208  1498  1283               	bcf	3,5	;RP0=0, select bank0
  1209  1499  1303               	bcf	3,6	;RP1=0, select bank0
  1210  149A  00BF               	movwf	PID@read
  1211  149B  120A  158A  23DD  160A  118A  	fcall	_PID
  1212  14A0  1283               	bcf	3,5	;RP0=0, select bank0
  1213  14A1  1303               	bcf	3,6	;RP1=0, select bank0
  1214  14A2  083D               	movf	?_PID,w
  1215  14A3  009B               	movwf	27	;volatile
  1216                           
  1217                           ;main.c: 110: utoa(str, timer1, 10);
  1218  14A4  1683               	bsf	3,5	;RP0=1, select bank1
  1219  14A5  1303               	bcf	3,6	;RP1=0, select bank1
  1220  14A6  0821               	movf	(main@timer1+1)^(0+128),w
  1221  14A7  00F9               	movwf	utoa@val+1
  1222  14A8  0820               	movf	main@timer1^(0+128),w
  1223  14A9  00F8               	movwf	utoa@val
  1224  14AA  300A               	movlw	10
  1225  14AB  00FA               	movwf	utoa@base
  1226  14AC  3000               	movlw	0
  1227  14AD  00FB               	movwf	utoa@base+1
  1228  14AE  304D               	movlw	(low (main@str| 0))& (0+255)
  1229  14AF  160A  158A  2720  160A  118A  	fcall	_utoa
  1230                           
  1231                           ;main.c: 111: UART_Write_Text(str);
  1232  14B4  304D               	movlw	(low (main@str| 0))& (0+255)
  1233  14B5  160A  158A  2627  160A  118A  	fcall	_UART_Write_Text
  1234                           
  1235                           ;main.c: 112: UART_Write('\n');
  1236  14BA  300A               	movlw	10
  1237  14BB  120A  118A  2009  160A  118A  	fcall	_UART_Write
  1238                           
  1239                           ;main.c: 116: TMR1H = 0;
  1240  14C0  1283               	bcf	3,5	;RP0=0, select bank0
  1241  14C1  1303               	bcf	3,6	;RP1=0, select bank0
  1242  14C2  018F               	clrf	15	;volatile
  1243                           
  1244                           ;main.c: 117: TMR1L = 0;
  1245  14C3  018E               	clrf	14	;volatile
  1246                           
  1247                           ;main.c: 120: _delay((unsigned long)((600)*(8000000/4000.0)));
  1248  14C4  3007               	movlw	7
  1249  14C5  1283               	bcf	3,5	;RP0=0, select bank0
  1250  14C6  1303               	bcf	3,6	;RP1=0, select bank0
  1251  14C7  00CB               	movwf	??_main+2
  1252  14C8  3017               	movlw	23
  1253  14C9  00CA               	movwf	??_main+1
  1254  14CA  3069               	movlw	105
  1255  14CB  00C9               	movwf	??_main
  1256  14CC                     u3917:	
  1257  14CC  0BC9               	decfsz	??_main,f
  1258  14CD  2CCC               	goto	u3917
  1259  14CE  0BCA               	decfsz	??_main+1,f
  1260  14CF  2CCC               	goto	u3917
  1261  14D0  0BCB               	decfsz	??_main+2,f
  1262  14D1  2CCC               	goto	u3917
  1263  14D2  2CD3               	nop2
  1264  14D3  2C62               	goto	l1883
  1265  14D4                     __end_of_main:	
  1266                           ;main.c: 121: }
  1267                           ;main.c: 123: return;
  1268                           
  1269                           
  1270                           	psect	text1
  1271  1F20                     __ptext1:	
  1272 ;; *************** function _utoa *****************
  1273 ;; Defined at:
  1274 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\itoa.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  buf             1    wreg     PTR unsigned char 
  1277 ;;		 -> main@str(33), 
  1278 ;;  val             2    8[COMMON] unsigned int 
  1279 ;;  base            2   10[COMMON] int 
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  1282 ;;		 -> main@str(33), 
  1283 ;;  v               2    0[BANK0 ] unsigned int 
  1284 ;;  c               1    2[BANK0 ] unsigned char 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      PTR unsigned char 
  1287 ;; Registers used:
  1288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1294 ;;      Params:         4       0       0       0       0
  1295 ;;      Locals:         0       4       0       0       0
  1296 ;;      Temps:          1       0       0       0       0
  1297 ;;      Totals:         5       4       0       0       0
  1298 ;;Total ram usage:        9 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    1
  1301 ;; This function calls:
  1302 ;;		___lwdiv
  1303 ;;		___lwmod
  1304 ;; This function is called by:
  1305 ;;		_main
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           
  1310                           ;psect for function _utoa
  1311  1F20                     _utoa:	
  1312                           
  1313                           ;incstack = 0
  1314                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1315                           ;utoa@buf stored from wreg
  1316  1F20  1283               	bcf	3,5	;RP0=0, select bank0
  1317  1F21  1303               	bcf	3,6	;RP1=0, select bank0
  1318  1F22  00A3               	movwf	utoa@buf
  1319  1F23  0879               	movf	utoa@val+1,w
  1320  1F24  00A1               	movwf	utoa@v+1
  1321  1F25  0878               	movf	utoa@val,w
  1322  1F26  00A0               	movwf	utoa@v
  1323  1F27                     l1813:	
  1324  1F27  087B               	movf	utoa@base+1,w
  1325  1F28  00F1               	movwf	___lwdiv@divisor+1
  1326  1F29  087A               	movf	utoa@base,w
  1327  1F2A  00F0               	movwf	___lwdiv@divisor
  1328  1F2B  0821               	movf	utoa@v+1,w
  1329  1F2C  00F3               	movwf	___lwdiv@dividend+1
  1330  1F2D  0820               	movf	utoa@v,w
  1331  1F2E  00F2               	movwf	___lwdiv@dividend
  1332  1F2F  160A  158A  2678  160A  158A  	fcall	___lwdiv
  1333  1F34  0871               	movf	?___lwdiv+1,w
  1334  1F35  1283               	bcf	3,5	;RP0=0, select bank0
  1335  1F36  1303               	bcf	3,6	;RP1=0, select bank0
  1336  1F37  00A1               	movwf	utoa@v+1
  1337  1F38  0870               	movf	?___lwdiv,w
  1338  1F39  00A0               	movwf	utoa@v
  1339  1F3A  3001               	movlw	1
  1340  1F3B  00FC               	movwf	??_utoa
  1341  1F3C  087C               	movf	??_utoa,w
  1342  1F3D  07A3               	addwf	utoa@buf,f
  1343  1F3E  0820               	movf	utoa@v,w
  1344  1F3F  0421               	iorwf	utoa@v+1,w
  1345  1F40  1D03               	btfss	3,2
  1346  1F41  2F27               	goto	l1813
  1347  1F42  0823               	movf	utoa@buf,w
  1348  1F43  0084               	movwf	4
  1349  1F44  1383               	bcf	3,7	;select IRP bank0
  1350  1F45  0180               	clrf	0
  1351  1F46  3001               	movlw	1
  1352  1F47  02A3               	subwf	utoa@buf,f
  1353  1F48                     l1823:	
  1354  1F48  087B               	movf	utoa@base+1,w
  1355  1F49  00F1               	movwf	___lwmod@divisor+1
  1356  1F4A  087A               	movf	utoa@base,w
  1357  1F4B  00F0               	movwf	___lwmod@divisor
  1358  1F4C  0879               	movf	utoa@val+1,w
  1359  1F4D  00F3               	movwf	___lwmod@dividend+1
  1360  1F4E  0878               	movf	utoa@val,w
  1361  1F4F  00F2               	movwf	___lwmod@dividend
  1362  1F50  160A  158A  2646  160A  158A  	fcall	___lwmod
  1363  1F55  0870               	movf	?___lwmod,w
  1364  1F56  00FC               	movwf	??_utoa
  1365  1F57  087C               	movf	??_utoa,w
  1366  1F58  1283               	bcf	3,5	;RP0=0, select bank0
  1367  1F59  1303               	bcf	3,6	;RP1=0, select bank0
  1368  1F5A  00A2               	movwf	utoa@c
  1369  1F5B  087B               	movf	utoa@base+1,w
  1370  1F5C  00F1               	movwf	___lwdiv@divisor+1
  1371  1F5D  087A               	movf	utoa@base,w
  1372  1F5E  00F0               	movwf	___lwdiv@divisor
  1373  1F5F  0879               	movf	utoa@val+1,w
  1374  1F60  00F3               	movwf	___lwdiv@dividend+1
  1375  1F61  0878               	movf	utoa@val,w
  1376  1F62  00F2               	movwf	___lwdiv@dividend
  1377  1F63  160A  158A  2678  160A  158A  	fcall	___lwdiv
  1378  1F68  0871               	movf	?___lwdiv+1,w
  1379  1F69  00F9               	movwf	utoa@val+1
  1380  1F6A  0870               	movf	?___lwdiv,w
  1381  1F6B  00F8               	movwf	utoa@val
  1382  1F6C  300A               	movlw	10
  1383  1F6D  1283               	bcf	3,5	;RP0=0, select bank0
  1384  1F6E  1303               	bcf	3,6	;RP1=0, select bank0
  1385  1F6F  0222               	subwf	utoa@c,w
  1386  1F70  1C03               	skipc
  1387  1F71  2F76               	goto	l562
  1388  1F72  3007               	movlw	7
  1389  1F73  00FC               	movwf	??_utoa
  1390  1F74  087C               	movf	??_utoa,w
  1391  1F75  07A2               	addwf	utoa@c,f
  1392  1F76                     l562:	
  1393  1F76  3030               	movlw	48
  1394  1F77  00FC               	movwf	??_utoa
  1395  1F78  087C               	movf	??_utoa,w
  1396  1F79  07A2               	addwf	utoa@c,f
  1397  1F7A  0822               	movf	utoa@c,w
  1398  1F7B  00FC               	movwf	??_utoa
  1399  1F7C  0823               	movf	utoa@buf,w
  1400  1F7D  0084               	movwf	4
  1401  1F7E  087C               	movf	??_utoa,w
  1402  1F7F  1383               	bcf	3,7	;select IRP bank0
  1403  1F80  0080               	movwf	0
  1404  1F81  3001               	movlw	1
  1405  1F82  02A3               	subwf	utoa@buf,f
  1406  1F83  0878               	movf	utoa@val,w
  1407  1F84  0479               	iorwf	utoa@val+1,w
  1408  1F85  1D03               	btfss	3,2
  1409  1F86  2F48               	goto	l1823
  1410                           
  1411                           ;	Return value of _utoa is never used
  1412  1F87  3001               	movlw	1
  1413  1F88  00FC               	movwf	??_utoa
  1414  1F89  087C               	movf	??_utoa,w
  1415  1F8A  07A3               	addwf	utoa@buf,f
  1416  1F8B  0008               	return
  1417  1F8C                     __end_of_utoa:	
  1418                           
  1419                           	psect	text2
  1420  1E46                     __ptext2:	
  1421 ;; *************** function ___lwmod *****************
  1422 ;; Defined at:
  1423 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;  divisor         2    0[COMMON] unsigned int 
  1426 ;;  dividend        2    2[COMMON] unsigned int 
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  counter         1    5[COMMON] unsigned char 
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  2    0[COMMON] unsigned int 
  1431 ;; Registers used:
  1432 ;;		wreg, status,2, status,0
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1438 ;;      Params:         4       0       0       0       0
  1439 ;;      Locals:         1       0       0       0       0
  1440 ;;      Temps:          1       0       0       0       0
  1441 ;;      Totals:         6       0       0       0       0
  1442 ;;Total ram usage:        6 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; This function calls:
  1445 ;;		Nothing
  1446 ;; This function is called by:
  1447 ;;		_utoa
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           
  1452                           ;psect for function ___lwmod
  1453  1E46                     ___lwmod:	
  1454                           
  1455                           ;incstack = 0
  1456                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1457  1E46  0870               	movf	___lwmod@divisor,w
  1458  1E47  0471               	iorwf	___lwmod@divisor+1,w
  1459  1E48  1903               	btfsc	3,2
  1460  1E49  2E73               	goto	l1719
  1461  1E4A  01F5               	clrf	___lwmod@counter
  1462  1E4B  0AF5               	incf	___lwmod@counter,f
  1463  1E4C                     l1709:	
  1464  1E4C  1BF1               	btfsc	___lwmod@divisor+1,7
  1465  1E4D  2E5A               	goto	l1711
  1466  1E4E  3001               	movlw	1
  1467  1E4F                     u3735:	
  1468  1E4F  1003               	clrc
  1469  1E50  0DF0               	rlf	___lwmod@divisor,f
  1470  1E51  0DF1               	rlf	___lwmod@divisor+1,f
  1471  1E52  3EFF               	addlw	-1
  1472  1E53  1D03               	skipz
  1473  1E54  2E4F               	goto	u3735
  1474  1E55  3001               	movlw	1
  1475  1E56  00F4               	movwf	??___lwmod
  1476  1E57  0874               	movf	??___lwmod,w
  1477  1E58  07F5               	addwf	___lwmod@counter,f
  1478  1E59  2E4C               	goto	l1709
  1479  1E5A                     l1711:	
  1480  1E5A  0871               	movf	___lwmod@divisor+1,w
  1481  1E5B  0273               	subwf	___lwmod@dividend+1,w
  1482  1E5C  1D03               	skipz
  1483  1E5D  2E60               	goto	u3755
  1484  1E5E  0870               	movf	___lwmod@divisor,w
  1485  1E5F  0272               	subwf	___lwmod@dividend,w
  1486  1E60                     u3755:	
  1487  1E60  1C03               	skipc
  1488  1E61  2E68               	goto	l1715
  1489  1E62  0870               	movf	___lwmod@divisor,w
  1490  1E63  02F2               	subwf	___lwmod@dividend,f
  1491  1E64  0871               	movf	___lwmod@divisor+1,w
  1492  1E65  1C03               	skipc
  1493  1E66  03F3               	decf	___lwmod@dividend+1,f
  1494  1E67  02F3               	subwf	___lwmod@dividend+1,f
  1495  1E68                     l1715:	
  1496  1E68  3001               	movlw	1
  1497  1E69                     u3765:	
  1498  1E69  1003               	clrc
  1499  1E6A  0CF1               	rrf	___lwmod@divisor+1,f
  1500  1E6B  0CF0               	rrf	___lwmod@divisor,f
  1501  1E6C  3EFF               	addlw	-1
  1502  1E6D  1D03               	skipz
  1503  1E6E  2E69               	goto	u3765
  1504  1E6F  3001               	movlw	1
  1505  1E70  02F5               	subwf	___lwmod@counter,f
  1506  1E71  1D03               	btfss	3,2
  1507  1E72  2E5A               	goto	l1711
  1508  1E73                     l1719:	
  1509  1E73  0873               	movf	___lwmod@dividend+1,w
  1510  1E74  00F1               	movwf	?___lwmod+1
  1511  1E75  0872               	movf	___lwmod@dividend,w
  1512  1E76  00F0               	movwf	?___lwmod
  1513  1E77  0008               	return
  1514  1E78                     __end_of___lwmod:	
  1515                           
  1516                           	psect	text3
  1517  1E78                     __ptext3:	
  1518 ;; *************** function ___lwdiv *****************
  1519 ;; Defined at:
  1520 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;  divisor         2    0[COMMON] unsigned int 
  1523 ;;  dividend        2    2[COMMON] unsigned int 
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  quotient        2    5[COMMON] unsigned int 
  1526 ;;  counter         1    7[COMMON] unsigned char 
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  2    0[COMMON] unsigned int 
  1529 ;; Registers used:
  1530 ;;		wreg, status,2, status,0
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1536 ;;      Params:         4       0       0       0       0
  1537 ;;      Locals:         3       0       0       0       0
  1538 ;;      Temps:          1       0       0       0       0
  1539 ;;      Totals:         8       0       0       0       0
  1540 ;;Total ram usage:        8 bytes
  1541 ;; Hardware stack levels used:    1
  1542 ;; This function calls:
  1543 ;;		Nothing
  1544 ;; This function is called by:
  1545 ;;		_utoa
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           
  1550                           ;psect for function ___lwdiv
  1551  1E78                     ___lwdiv:	
  1552                           
  1553                           ;incstack = 0
  1554                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1555  1E78  01F5               	clrf	___lwdiv@quotient
  1556  1E79  01F6               	clrf	___lwdiv@quotient+1
  1557  1E7A  0870               	movf	___lwdiv@divisor,w
  1558  1E7B  0471               	iorwf	___lwdiv@divisor+1,w
  1559  1E7C  1903               	btfsc	3,2
  1560  1E7D  2EAF               	goto	l1697
  1561  1E7E  01F7               	clrf	___lwdiv@counter
  1562  1E7F  0AF7               	incf	___lwdiv@counter,f
  1563  1E80                     l1685:	
  1564  1E80  1BF1               	btfsc	___lwdiv@divisor+1,7
  1565  1E81  2E8E               	goto	l1687
  1566  1E82  3001               	movlw	1
  1567  1E83                     u3665:	
  1568  1E83  1003               	clrc
  1569  1E84  0DF0               	rlf	___lwdiv@divisor,f
  1570  1E85  0DF1               	rlf	___lwdiv@divisor+1,f
  1571  1E86  3EFF               	addlw	-1
  1572  1E87  1D03               	skipz
  1573  1E88  2E83               	goto	u3665
  1574  1E89  3001               	movlw	1
  1575  1E8A  00F4               	movwf	??___lwdiv
  1576  1E8B  0874               	movf	??___lwdiv,w
  1577  1E8C  07F7               	addwf	___lwdiv@counter,f
  1578  1E8D  2E80               	goto	l1685
  1579  1E8E                     l1687:	
  1580  1E8E  3001               	movlw	1
  1581  1E8F                     u3685:	
  1582  1E8F  1003               	clrc
  1583  1E90  0DF5               	rlf	___lwdiv@quotient,f
  1584  1E91  0DF6               	rlf	___lwdiv@quotient+1,f
  1585  1E92  3EFF               	addlw	-1
  1586  1E93  1D03               	skipz
  1587  1E94  2E8F               	goto	u3685
  1588  1E95  0871               	movf	___lwdiv@divisor+1,w
  1589  1E96  0273               	subwf	___lwdiv@dividend+1,w
  1590  1E97  1D03               	skipz
  1591  1E98  2E9B               	goto	u3695
  1592  1E99  0870               	movf	___lwdiv@divisor,w
  1593  1E9A  0272               	subwf	___lwdiv@dividend,w
  1594  1E9B                     u3695:	
  1595  1E9B  1C03               	skipc
  1596  1E9C  2EA4               	goto	l1693
  1597  1E9D  0870               	movf	___lwdiv@divisor,w
  1598  1E9E  02F2               	subwf	___lwdiv@dividend,f
  1599  1E9F  0871               	movf	___lwdiv@divisor+1,w
  1600  1EA0  1C03               	skipc
  1601  1EA1  03F3               	decf	___lwdiv@dividend+1,f
  1602  1EA2  02F3               	subwf	___lwdiv@dividend+1,f
  1603  1EA3  1475               	bsf	___lwdiv@quotient,0
  1604  1EA4                     l1693:	
  1605  1EA4  3001               	movlw	1
  1606  1EA5                     u3705:	
  1607  1EA5  1003               	clrc
  1608  1EA6  0CF1               	rrf	___lwdiv@divisor+1,f
  1609  1EA7  0CF0               	rrf	___lwdiv@divisor,f
  1610  1EA8  3EFF               	addlw	-1
  1611  1EA9  1D03               	skipz
  1612  1EAA  2EA5               	goto	u3705
  1613  1EAB  3001               	movlw	1
  1614  1EAC  02F7               	subwf	___lwdiv@counter,f
  1615  1EAD  1D03               	btfss	3,2
  1616  1EAE  2E8E               	goto	l1687
  1617  1EAF                     l1697:	
  1618  1EAF  0876               	movf	___lwdiv@quotient+1,w
  1619  1EB0  00F1               	movwf	?___lwdiv+1
  1620  1EB1  0875               	movf	___lwdiv@quotient,w
  1621  1EB2  00F0               	movwf	?___lwdiv
  1622  1EB3  0008               	return
  1623  1EB4                     __end_of___lwdiv:	
  1624                           
  1625                           	psect	text4
  1626  1059                     __ptext4:	
  1627 ;; *************** function _displayNumber *****************
  1628 ;; Defined at:
  1629 ;;		line 69 in file "lcd.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  num             2    9[BANK0 ] int 
  1632 ;;  D1              1   11[BANK0 ] PTR struct .
  1633 ;;		 -> main@D1(28), 
  1634 ;;  D2              1   12[BANK0 ] PTR struct .
  1635 ;;		 -> main@D2(28), 
  1636 ;;  D3              1   13[BANK0 ] PTR struct .
  1637 ;;		 -> main@D3(28), 
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;		None
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      void 
  1642 ;; Registers used:
  1643 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1649 ;;      Params:         0       5       0       0       0
  1650 ;;      Locals:         0       0       0       0       0
  1651 ;;      Temps:          0       0       0       0       0
  1652 ;;      Totals:         0       5       0       0       0
  1653 ;;Total ram usage:        5 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    1
  1656 ;; This function calls:
  1657 ;;		___awdiv
  1658 ;;		___awmod
  1659 ;;		_displayDigit
  1660 ;; This function is called by:
  1661 ;;		_main
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           
  1666                           ;psect for function _displayNumber
  1667  1059                     _displayNumber:	
  1668                           
  1669                           ;lcd.c: 71: displayDigit(num/100, D3 );
  1670                           
  1671                           ;incstack = 0
  1672                           ; Regs used in _displayNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1673  1059  3064               	movlw	100
  1674  105A  00F0               	movwf	___awdiv@divisor
  1675  105B  3000               	movlw	0
  1676  105C  00F1               	movwf	___awdiv@divisor+1
  1677  105D  1283               	bcf	3,5	;RP0=0, select bank0
  1678  105E  1303               	bcf	3,6	;RP1=0, select bank0
  1679  105F  082A               	movf	displayNumber@num+1,w
  1680  1060  00F3               	movwf	___awdiv@dividend+1
  1681  1061  0829               	movf	displayNumber@num,w
  1682  1062  00F2               	movwf	___awdiv@dividend
  1683  1063  120A  158A  200B  160A  118A  	fcall	___awdiv
  1684  1068  0871               	movf	?___awdiv+1,w
  1685  1069  00FA               	movwf	displayDigit@digito+1
  1686  106A  0870               	movf	?___awdiv,w
  1687  106B  00F9               	movwf	displayDigit@digito
  1688  106C  1283               	bcf	3,5	;RP0=0, select bank0
  1689  106D  1303               	bcf	3,6	;RP1=0, select bank0
  1690  106E  082D               	movf	displayNumber@D3,w
  1691  106F  00FB               	movwf	displayDigit@D1
  1692  1070  3001               	movlw	1
  1693  1071  00FC               	movwf	displayDigit@D1+1
  1694  1072  160A  118A  26EE  160A  118A  	fcall	_displayDigit
  1695                           
  1696                           ;lcd.c: 72: num %=100;
  1697  1077  3064               	movlw	100
  1698  1078  00F0               	movwf	___awmod@divisor
  1699  1079  3000               	movlw	0
  1700  107A  00F1               	movwf	___awmod@divisor+1
  1701  107B  1283               	bcf	3,5	;RP0=0, select bank0
  1702  107C  1303               	bcf	3,6	;RP1=0, select bank0
  1703  107D  082A               	movf	displayNumber@num+1,w
  1704  107E  00F3               	movwf	___awmod@dividend+1
  1705  107F  0829               	movf	displayNumber@num,w
  1706  1080  00F2               	movwf	___awmod@dividend
  1707  1081  160A  118A  200E  160A  118A  	fcall	___awmod
  1708  1086  0871               	movf	?___awmod+1,w
  1709  1087  1283               	bcf	3,5	;RP0=0, select bank0
  1710  1088  1303               	bcf	3,6	;RP1=0, select bank0
  1711  1089  00AA               	movwf	displayNumber@num+1
  1712  108A  0870               	movf	?___awmod,w
  1713  108B  00A9               	movwf	displayNumber@num
  1714                           
  1715                           ;lcd.c: 74: displayDigit(num/10, D2);
  1716  108C  300A               	movlw	10
  1717  108D  00F0               	movwf	___awdiv@divisor
  1718  108E  3000               	movlw	0
  1719  108F  00F1               	movwf	___awdiv@divisor+1
  1720  1090  082A               	movf	displayNumber@num+1,w
  1721  1091  00F3               	movwf	___awdiv@dividend+1
  1722  1092  0829               	movf	displayNumber@num,w
  1723  1093  00F2               	movwf	___awdiv@dividend
  1724  1094  120A  158A  200B  160A  118A  	fcall	___awdiv
  1725  1099  0871               	movf	?___awdiv+1,w
  1726  109A  00FA               	movwf	displayDigit@digito+1
  1727  109B  0870               	movf	?___awdiv,w
  1728  109C  00F9               	movwf	displayDigit@digito
  1729  109D  1283               	bcf	3,5	;RP0=0, select bank0
  1730  109E  1303               	bcf	3,6	;RP1=0, select bank0
  1731  109F  082C               	movf	displayNumber@D2,w
  1732  10A0  00FB               	movwf	displayDigit@D1
  1733  10A1  3000               	movlw	0
  1734  10A2  00FC               	movwf	displayDigit@D1+1
  1735  10A3  160A  118A  26EE  160A  118A  	fcall	_displayDigit
  1736                           
  1737                           ;lcd.c: 75: num %=10;
  1738  10A8  300A               	movlw	10
  1739  10A9  00F0               	movwf	___awmod@divisor
  1740  10AA  3000               	movlw	0
  1741  10AB  00F1               	movwf	___awmod@divisor+1
  1742  10AC  1283               	bcf	3,5	;RP0=0, select bank0
  1743  10AD  1303               	bcf	3,6	;RP1=0, select bank0
  1744  10AE  082A               	movf	displayNumber@num+1,w
  1745  10AF  00F3               	movwf	___awmod@dividend+1
  1746  10B0  0829               	movf	displayNumber@num,w
  1747  10B1  00F2               	movwf	___awmod@dividend
  1748  10B2  160A  118A  200E  160A  118A  	fcall	___awmod
  1749  10B7  0871               	movf	?___awmod+1,w
  1750  10B8  1283               	bcf	3,5	;RP0=0, select bank0
  1751  10B9  1303               	bcf	3,6	;RP1=0, select bank0
  1752  10BA  00AA               	movwf	displayNumber@num+1
  1753  10BB  0870               	movf	?___awmod,w
  1754  10BC  00A9               	movwf	displayNumber@num
  1755                           
  1756                           ;lcd.c: 76: ((LCDDATA10) |= (1UL) << (3));
  1757  10BD  1283               	bcf	3,5	;RP0=0, select bank2
  1758  10BE  1703               	bsf	3,6	;RP1=1, select bank2
  1759  10BF  159A               	bsf	26,3	;volatile
  1760                           
  1761                           ;lcd.c: 78: displayDigit(num, D1);
  1762  10C0  1283               	bcf	3,5	;RP0=0, select bank0
  1763  10C1  1303               	bcf	3,6	;RP1=0, select bank0
  1764  10C2  082A               	movf	displayNumber@num+1,w
  1765  10C3  00FA               	movwf	displayDigit@digito+1
  1766  10C4  0829               	movf	displayNumber@num,w
  1767  10C5  00F9               	movwf	displayDigit@digito
  1768  10C6  082B               	movf	displayNumber@D1,w
  1769  10C7  00FB               	movwf	displayDigit@D1
  1770  10C8  3000               	movlw	0
  1771  10C9  00FC               	movwf	displayDigit@D1+1
  1772  10CA  160A  118A  26EE   	fcall	_displayDigit
  1773  10CD  0008               	return
  1774  10CE                     __end_of_displayNumber:	
  1775                           
  1776                           	psect	text5
  1777  16EE                     __ptext5:	
  1778 ;; *************** function _displayDigit *****************
  1779 ;; Defined at:
  1780 ;;		line 83 in file "lcd.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  digito          2    9[COMMON] int 
  1783 ;;  D1              2   11[COMMON] PTR struct .
  1784 ;;		 -> main@D3(28), main@D2(28), main@D1(28), 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;		None
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1796 ;;      Params:         4       0       0       0       0
  1797 ;;      Locals:         0       0       0       0       0
  1798 ;;      Temps:          0       9       0       0       0
  1799 ;;      Totals:         4       9       0       0       0
  1800 ;;Total ram usage:       13 bytes
  1801 ;; Hardware stack levels used:    1
  1802 ;; This function calls:
  1803 ;;		Nothing
  1804 ;; This function is called by:
  1805 ;;		_displayNumber
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           
  1810                           ;psect for function _displayDigit
  1811  16EE                     _displayDigit:	
  1812                           
  1813                           ;lcd.c: 84: switch(digito){
  1814                           
  1815                           ;incstack = 0
  1816                           ; Regs used in _displayDigit: [wreg-fsr0h+status,2+status,0]
  1817  16EE  120A  118A  2FB4   	goto	l1373
  1818  16F1                     l1349:	
  1819                           ;lcd.c: 85: case 0:
  1820                           
  1821                           
  1822                           ;lcd.c: 86: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  1823  16F1  300E               	movlw	14
  1824  16F2  077B               	addwf	displayDigit@D1,w
  1825  16F3  1283               	bcf	3,5	;RP0=0, select bank0
  1826  16F4  1303               	bcf	3,6	;RP1=0, select bank0
  1827  16F5  00A0               	movwf	??_displayDigit
  1828  16F6  087C               	movf	displayDigit@D1+1,w
  1829  16F7  1803               	skipnc
  1830  16F8  3E01               	addlw	1
  1831  16F9  00A1               	movwf	??_displayDigit+1
  1832  16FA  0820               	movf	??_displayDigit,w
  1833  16FB  0084               	movwf	4
  1834  16FC  1783               	bsf	3,7
  1835  16FD  1C21               	btfss	??_displayDigit+1,0
  1836  16FE  1383               	bcf	3,7
  1837  16FF  0A00               	incf	0,w
  1838  1700  00A2               	movwf	??_displayDigit+2
  1839  1701  3001               	movlw	1
  1840  1702  00A3               	movwf	??_displayDigit+3
  1841  1703  3000               	movlw	0
  1842  1704  00A4               	movwf	??_displayDigit+4
  1843  1705  2F09               	goto	u2104
  1844  1706                     u2105:	
  1845  1706  1003               	clrc
  1846  1707  0DA3               	rlf	??_displayDigit+3,f
  1847  1708  0DA4               	rlf	??_displayDigit+4,f
  1848  1709                     u2104:	
  1849  1709  0BA2               	decfsz	??_displayDigit+2,f
  1850  170A  2F06               	goto	u2105
  1851  170B  087B               	movf	displayDigit@D1,w
  1852  170C  0084               	movwf	4
  1853  170D  1783               	bsf	3,7
  1854  170E  1C7C               	btfss	displayDigit@D1+1,0
  1855  170F  1383               	bcf	3,7
  1856  1710  0800               	movf	0,w
  1857  1711  00A5               	movwf	??_displayDigit+5
  1858  1712  0A84               	incf	4,f
  1859  1713  0800               	movf	0,w
  1860  1714  00A6               	movwf	??_displayDigit+6
  1861  1715  0825               	movf	??_displayDigit+5,w
  1862  1716  0084               	movwf	4
  1863  1717  1783               	bsf	3,7
  1864  1718  1C26               	btfss	??_displayDigit+6,0
  1865  1719  1383               	bcf	3,7
  1866  171A  0823               	movf	??_displayDigit+3,w
  1867  171B  0480               	iorwf	0,f
  1868  171C  0A84               	incf	4,f
  1869  171D  0824               	movf	??_displayDigit+4,w
  1870  171E  0480               	iorwf	0,f
  1871                           
  1872                           ;lcd.c: 87: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  1873  171F  3010               	movlw	16
  1874  1720  077B               	addwf	displayDigit@D1,w
  1875  1721  00A0               	movwf	??_displayDigit
  1876  1722  087C               	movf	displayDigit@D1+1,w
  1877  1723  1803               	skipnc
  1878  1724  3E01               	addlw	1
  1879  1725  00A1               	movwf	??_displayDigit+1
  1880  1726  0820               	movf	??_displayDigit,w
  1881  1727  0084               	movwf	4
  1882  1728  1783               	bsf	3,7
  1883  1729  1C21               	btfss	??_displayDigit+1,0
  1884  172A  1383               	bcf	3,7
  1885  172B  0A00               	incf	0,w
  1886  172C  00A2               	movwf	??_displayDigit+2
  1887  172D  3001               	movlw	1
  1888  172E  00A3               	movwf	??_displayDigit+3
  1889  172F  3000               	movlw	0
  1890  1730  00A4               	movwf	??_displayDigit+4
  1891  1731  2F35               	goto	u2114
  1892  1732                     u2115:	
  1893  1732  1003               	clrc
  1894  1733  0DA3               	rlf	??_displayDigit+3,f
  1895  1734  0DA4               	rlf	??_displayDigit+4,f
  1896  1735                     u2114:	
  1897  1735  0BA2               	decfsz	??_displayDigit+2,f
  1898  1736  2F32               	goto	u2115
  1899  1737  3002               	movlw	2
  1900  1738  077B               	addwf	displayDigit@D1,w
  1901  1739  00A5               	movwf	??_displayDigit+5
  1902  173A  087C               	movf	displayDigit@D1+1,w
  1903  173B  1803               	skipnc
  1904  173C  3E01               	addlw	1
  1905  173D  00A6               	movwf	??_displayDigit+6
  1906  173E  0825               	movf	??_displayDigit+5,w
  1907  173F  0084               	movwf	4
  1908  1740  1783               	bsf	3,7
  1909  1741  1C26               	btfss	??_displayDigit+6,0
  1910  1742  1383               	bcf	3,7
  1911  1743  0800               	movf	0,w
  1912  1744  00A7               	movwf	??_displayDigit+7
  1913  1745  0A84               	incf	4,f
  1914  1746  0800               	movf	0,w
  1915  1747  00A8               	movwf	??_displayDigit+8
  1916  1748  0827               	movf	??_displayDigit+7,w
  1917  1749  0084               	movwf	4
  1918  174A  1783               	bsf	3,7
  1919  174B  1C28               	btfss	??_displayDigit+8,0
  1920  174C  1383               	bcf	3,7
  1921  174D  0823               	movf	??_displayDigit+3,w
  1922  174E  0480               	iorwf	0,f
  1923  174F  0A84               	incf	4,f
  1924  1750  0824               	movf	??_displayDigit+4,w
  1925  1751  0480               	iorwf	0,f
  1926                           
  1927                           ;lcd.c: 88: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  1928  1752  3012               	movlw	18
  1929  1753  077B               	addwf	displayDigit@D1,w
  1930  1754  00A0               	movwf	??_displayDigit
  1931  1755  087C               	movf	displayDigit@D1+1,w
  1932  1756  1803               	skipnc
  1933  1757  3E01               	addlw	1
  1934  1758  00A1               	movwf	??_displayDigit+1
  1935  1759  0820               	movf	??_displayDigit,w
  1936  175A  0084               	movwf	4
  1937  175B  1783               	bsf	3,7
  1938  175C  1C21               	btfss	??_displayDigit+1,0
  1939  175D  1383               	bcf	3,7
  1940  175E  0A00               	incf	0,w
  1941  175F  00A2               	movwf	??_displayDigit+2
  1942  1760  3001               	movlw	1
  1943  1761  00A3               	movwf	??_displayDigit+3
  1944  1762  3000               	movlw	0
  1945  1763  00A4               	movwf	??_displayDigit+4
  1946  1764  2F68               	goto	u2124
  1947  1765                     u2125:	
  1948  1765  1003               	clrc
  1949  1766  0DA3               	rlf	??_displayDigit+3,f
  1950  1767  0DA4               	rlf	??_displayDigit+4,f
  1951  1768                     u2124:	
  1952  1768  0BA2               	decfsz	??_displayDigit+2,f
  1953  1769  2F65               	goto	u2125
  1954  176A  3004               	movlw	4
  1955  176B  077B               	addwf	displayDigit@D1,w
  1956  176C  00A5               	movwf	??_displayDigit+5
  1957  176D  087C               	movf	displayDigit@D1+1,w
  1958  176E  1803               	skipnc
  1959  176F  3E01               	addlw	1
  1960  1770  00A6               	movwf	??_displayDigit+6
  1961  1771  0825               	movf	??_displayDigit+5,w
  1962  1772  0084               	movwf	4
  1963  1773  1783               	bsf	3,7
  1964  1774  1C26               	btfss	??_displayDigit+6,0
  1965  1775  1383               	bcf	3,7
  1966  1776  0800               	movf	0,w
  1967  1777  00A7               	movwf	??_displayDigit+7
  1968  1778  0A84               	incf	4,f
  1969  1779  0800               	movf	0,w
  1970  177A  00A8               	movwf	??_displayDigit+8
  1971  177B  0827               	movf	??_displayDigit+7,w
  1972  177C  0084               	movwf	4
  1973  177D  1783               	bsf	3,7
  1974  177E  1C28               	btfss	??_displayDigit+8,0
  1975  177F  1383               	bcf	3,7
  1976  1780  0823               	movf	??_displayDigit+3,w
  1977  1781  0480               	iorwf	0,f
  1978  1782  0A84               	incf	4,f
  1979  1783  0824               	movf	??_displayDigit+4,w
  1980  1784  0480               	iorwf	0,f
  1981                           
  1982                           ;lcd.c: 89: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  1983  1785  3014               	movlw	20
  1984  1786  077B               	addwf	displayDigit@D1,w
  1985  1787  00A0               	movwf	??_displayDigit
  1986  1788  087C               	movf	displayDigit@D1+1,w
  1987  1789  1803               	skipnc
  1988  178A  3E01               	addlw	1
  1989  178B  00A1               	movwf	??_displayDigit+1
  1990  178C  0820               	movf	??_displayDigit,w
  1991  178D  0084               	movwf	4
  1992  178E  1783               	bsf	3,7
  1993  178F  1C21               	btfss	??_displayDigit+1,0
  1994  1790  1383               	bcf	3,7
  1995  1791  0A00               	incf	0,w
  1996  1792  00A2               	movwf	??_displayDigit+2
  1997  1793  3001               	movlw	1
  1998  1794  00A3               	movwf	??_displayDigit+3
  1999  1795  3000               	movlw	0
  2000  1796  00A4               	movwf	??_displayDigit+4
  2001  1797  2F9B               	goto	u2134
  2002  1798                     u2135:	
  2003  1798  1003               	clrc
  2004  1799  0DA3               	rlf	??_displayDigit+3,f
  2005  179A  0DA4               	rlf	??_displayDigit+4,f
  2006  179B                     u2134:	
  2007  179B  0BA2               	decfsz	??_displayDigit+2,f
  2008  179C  2F98               	goto	u2135
  2009  179D  3006               	movlw	6
  2010  179E  077B               	addwf	displayDigit@D1,w
  2011  179F  00A5               	movwf	??_displayDigit+5
  2012  17A0  087C               	movf	displayDigit@D1+1,w
  2013  17A1  1803               	skipnc
  2014  17A2  3E01               	addlw	1
  2015  17A3  00A6               	movwf	??_displayDigit+6
  2016  17A4  0825               	movf	??_displayDigit+5,w
  2017  17A5  0084               	movwf	4
  2018  17A6  1783               	bsf	3,7
  2019  17A7  1C26               	btfss	??_displayDigit+6,0
  2020  17A8  1383               	bcf	3,7
  2021  17A9  0800               	movf	0,w
  2022  17AA  00A7               	movwf	??_displayDigit+7
  2023  17AB  0A84               	incf	4,f
  2024  17AC  0800               	movf	0,w
  2025  17AD  00A8               	movwf	??_displayDigit+8
  2026  17AE  0827               	movf	??_displayDigit+7,w
  2027  17AF  0084               	movwf	4
  2028  17B0  1783               	bsf	3,7
  2029  17B1  1C28               	btfss	??_displayDigit+8,0
  2030  17B2  1383               	bcf	3,7
  2031  17B3  0823               	movf	??_displayDigit+3,w
  2032  17B4  0480               	iorwf	0,f
  2033  17B5  0A84               	incf	4,f
  2034  17B6  0824               	movf	??_displayDigit+4,w
  2035  17B7  0480               	iorwf	0,f
  2036                           
  2037                           ;lcd.c: 90: ((*D1->se) |= (1UL) << (D1->bits[4]));
  2038  17B8  3016               	movlw	22
  2039  17B9  077B               	addwf	displayDigit@D1,w
  2040  17BA  00A0               	movwf	??_displayDigit
  2041  17BB  087C               	movf	displayDigit@D1+1,w
  2042  17BC  1803               	skipnc
  2043  17BD  3E01               	addlw	1
  2044  17BE  00A1               	movwf	??_displayDigit+1
  2045  17BF  0820               	movf	??_displayDigit,w
  2046  17C0  0084               	movwf	4
  2047  17C1  1783               	bsf	3,7
  2048  17C2  1C21               	btfss	??_displayDigit+1,0
  2049  17C3  1383               	bcf	3,7
  2050  17C4  0A00               	incf	0,w
  2051  17C5  00A2               	movwf	??_displayDigit+2
  2052  17C6  3001               	movlw	1
  2053  17C7  00A3               	movwf	??_displayDigit+3
  2054  17C8  3000               	movlw	0
  2055  17C9  00A4               	movwf	??_displayDigit+4
  2056  17CA  2FCE               	goto	u2144
  2057  17CB                     u2145:	
  2058  17CB  1003               	clrc
  2059  17CC  0DA3               	rlf	??_displayDigit+3,f
  2060  17CD  0DA4               	rlf	??_displayDigit+4,f
  2061  17CE                     u2144:	
  2062  17CE  0BA2               	decfsz	??_displayDigit+2,f
  2063  17CF  2FCB               	goto	u2145
  2064  17D0  3008               	movlw	8
  2065  17D1  077B               	addwf	displayDigit@D1,w
  2066  17D2  00A5               	movwf	??_displayDigit+5
  2067  17D3  087C               	movf	displayDigit@D1+1,w
  2068  17D4  1803               	skipnc
  2069  17D5  3E01               	addlw	1
  2070  17D6  00A6               	movwf	??_displayDigit+6
  2071  17D7  0825               	movf	??_displayDigit+5,w
  2072  17D8  0084               	movwf	4
  2073  17D9  1783               	bsf	3,7
  2074  17DA  1C26               	btfss	??_displayDigit+6,0
  2075  17DB  1383               	bcf	3,7
  2076  17DC  0800               	movf	0,w
  2077  17DD  00A7               	movwf	??_displayDigit+7
  2078  17DE  0A84               	incf	4,f
  2079  17DF  0800               	movf	0,w
  2080  17E0  00A8               	movwf	??_displayDigit+8
  2081  17E1  0827               	movf	??_displayDigit+7,w
  2082  17E2  0084               	movwf	4
  2083  17E3  1783               	bsf	3,7
  2084  17E4  1C28               	btfss	??_displayDigit+8,0
  2085  17E5  1383               	bcf	3,7
  2086  17E6  0823               	movf	??_displayDigit+3,w
  2087  17E7  0480               	iorwf	0,f
  2088  17E8  0A84               	incf	4,f
  2089  17E9  0824               	movf	??_displayDigit+4,w
  2090  17EA  0480               	iorwf	0,f
  2091                           
  2092                           ;lcd.c: 91: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  2093  17EB  3018               	movlw	24
  2094  17EC  077B               	addwf	displayDigit@D1,w
  2095  17ED  00A0               	movwf	??_displayDigit
  2096  17EE  087C               	movf	displayDigit@D1+1,w
  2097  17EF  1803               	skipnc
  2098  17F0  3E01               	addlw	1
  2099  17F1  00A1               	movwf	??_displayDigit+1
  2100  17F2  0820               	movf	??_displayDigit,w
  2101  17F3  0084               	movwf	4
  2102  17F4  1783               	bsf	3,7
  2103  17F5  1C21               	btfss	??_displayDigit+1,0
  2104  17F6  1383               	bcf	3,7
  2105  17F7  0A00               	incf	0,w
  2106  17F8  00A2               	movwf	??_displayDigit+2
  2107  17F9  3001               	movlw	1
  2108  17FA  00A3               	movwf	??_displayDigit+3
  2109  17FB  3000               	movlw	0
  2110  17FC  00A4               	movwf	??_displayDigit+4
  2111  17FD  120A  158A  2D13   	goto	u2154
  2112                           
  2113                           	psect	text6
  2114  100E                     __ptext6:	
  2115 ;; *************** function ___awmod *****************
  2116 ;; Defined at:
  2117 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awmod.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  divisor         2    0[COMMON] int 
  2120 ;;  dividend        2    2[COMMON] int 
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;  sign            1    6[COMMON] unsigned char 
  2123 ;;  counter         1    5[COMMON] unsigned char 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  2    0[COMMON] int 
  2126 ;; Registers used:
  2127 ;;		wreg, status,2, status,0
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2133 ;;      Params:         4       0       0       0       0
  2134 ;;      Locals:         2       0       0       0       0
  2135 ;;      Temps:          1       0       0       0       0
  2136 ;;      Totals:         7       0       0       0       0
  2137 ;;Total ram usage:        7 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; This function calls:
  2140 ;;		Nothing
  2141 ;; This function is called by:
  2142 ;;		_displayNumber
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           
  2147                           ;psect for function ___awmod
  2148  100E                     ___awmod:	
  2149                           
  2150                           ;incstack = 0
  2151                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2152  100E  01F6               	clrf	___awmod@sign
  2153  100F  1FF3               	btfss	___awmod@dividend+1,7
  2154  1010  2818               	goto	l1471
  2155  1011  09F2               	comf	___awmod@dividend,f
  2156  1012  09F3               	comf	___awmod@dividend+1,f
  2157  1013  0AF2               	incf	___awmod@dividend,f
  2158  1014  1903               	skipnz
  2159  1015  0AF3               	incf	___awmod@dividend+1,f
  2160  1016  01F6               	clrf	___awmod@sign
  2161  1017  0AF6               	incf	___awmod@sign,f
  2162  1018                     l1471:	
  2163  1018  1FF1               	btfss	___awmod@divisor+1,7
  2164  1019  281F               	goto	l1475
  2165  101A  09F0               	comf	___awmod@divisor,f
  2166  101B  09F1               	comf	___awmod@divisor+1,f
  2167  101C  0AF0               	incf	___awmod@divisor,f
  2168  101D  1903               	skipnz
  2169  101E  0AF1               	incf	___awmod@divisor+1,f
  2170  101F                     l1475:	
  2171  101F  0870               	movf	___awmod@divisor,w
  2172  1020  0471               	iorwf	___awmod@divisor+1,w
  2173  1021  1903               	btfsc	3,2
  2174  1022  284C               	goto	l1493
  2175  1023  01F5               	clrf	___awmod@counter
  2176  1024  0AF5               	incf	___awmod@counter,f
  2177  1025                     l1483:	
  2178  1025  1BF1               	btfsc	___awmod@divisor+1,7
  2179  1026  2833               	goto	l1485
  2180  1027  3001               	movlw	1
  2181  1028                     u3105:	
  2182  1028  1003               	clrc
  2183  1029  0DF0               	rlf	___awmod@divisor,f
  2184  102A  0DF1               	rlf	___awmod@divisor+1,f
  2185  102B  3EFF               	addlw	-1
  2186  102C  1D03               	skipz
  2187  102D  2828               	goto	u3105
  2188  102E  3001               	movlw	1
  2189  102F  00F4               	movwf	??___awmod
  2190  1030  0874               	movf	??___awmod,w
  2191  1031  07F5               	addwf	___awmod@counter,f
  2192  1032  2825               	goto	l1483
  2193  1033                     l1485:	
  2194  1033  0871               	movf	___awmod@divisor+1,w
  2195  1034  0273               	subwf	___awmod@dividend+1,w
  2196  1035  1D03               	skipz
  2197  1036  2839               	goto	u3125
  2198  1037  0870               	movf	___awmod@divisor,w
  2199  1038  0272               	subwf	___awmod@dividend,w
  2200  1039                     u3125:	
  2201  1039  1C03               	skipc
  2202  103A  2841               	goto	l1489
  2203  103B  0870               	movf	___awmod@divisor,w
  2204  103C  02F2               	subwf	___awmod@dividend,f
  2205  103D  0871               	movf	___awmod@divisor+1,w
  2206  103E  1C03               	skipc
  2207  103F  03F3               	decf	___awmod@dividend+1,f
  2208  1040  02F3               	subwf	___awmod@dividend+1,f
  2209  1041                     l1489:	
  2210  1041  3001               	movlw	1
  2211  1042                     u3135:	
  2212  1042  1003               	clrc
  2213  1043  0CF1               	rrf	___awmod@divisor+1,f
  2214  1044  0CF0               	rrf	___awmod@divisor,f
  2215  1045  3EFF               	addlw	-1
  2216  1046  1D03               	skipz
  2217  1047  2842               	goto	u3135
  2218  1048  3001               	movlw	1
  2219  1049  02F5               	subwf	___awmod@counter,f
  2220  104A  1D03               	btfss	3,2
  2221  104B  2833               	goto	l1485
  2222  104C                     l1493:	
  2223  104C  0876               	movf	___awmod@sign,w
  2224  104D  1903               	btfsc	3,2
  2225  104E  2854               	goto	l1497
  2226  104F  09F2               	comf	___awmod@dividend,f
  2227  1050  09F3               	comf	___awmod@dividend+1,f
  2228  1051  0AF2               	incf	___awmod@dividend,f
  2229  1052  1903               	skipnz
  2230  1053  0AF3               	incf	___awmod@dividend+1,f
  2231  1054                     l1497:	
  2232  1054  0873               	movf	___awmod@dividend+1,w
  2233  1055  00F1               	movwf	?___awmod+1
  2234  1056  0872               	movf	___awmod@dividend,w
  2235  1057  00F0               	movwf	?___awmod
  2236  1058  0008               	return
  2237  1059                     __end_of___awmod:	
  2238                           
  2239                           	psect	text7
  2240  080B                     __ptext7:	
  2241 ;; *************** function ___awdiv *****************
  2242 ;; Defined at:
  2243 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;  divisor         2    0[COMMON] int 
  2246 ;;  dividend        2    2[COMMON] int 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;  quotient        2    7[COMMON] int 
  2249 ;;  sign            1    6[COMMON] unsigned char 
  2250 ;;  counter         1    5[COMMON] unsigned char 
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  2    0[COMMON] int 
  2253 ;; Registers used:
  2254 ;;		wreg, status,2, status,0
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2260 ;;      Params:         4       0       0       0       0
  2261 ;;      Locals:         4       0       0       0       0
  2262 ;;      Temps:          1       0       0       0       0
  2263 ;;      Totals:         9       0       0       0       0
  2264 ;;Total ram usage:        9 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; This function calls:
  2267 ;;		Nothing
  2268 ;; This function is called by:
  2269 ;;		_displayNumber
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           
  2274                           ;psect for function ___awdiv
  2275  080B                     ___awdiv:	
  2276                           
  2277                           ;incstack = 0
  2278                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2279  080B  01F6               	clrf	___awdiv@sign
  2280  080C  1FF1               	btfss	___awdiv@divisor+1,7
  2281  080D  2815               	goto	l1427
  2282  080E  09F0               	comf	___awdiv@divisor,f
  2283  080F  09F1               	comf	___awdiv@divisor+1,f
  2284  0810  0AF0               	incf	___awdiv@divisor,f
  2285  0811  1903               	skipnz
  2286  0812  0AF1               	incf	___awdiv@divisor+1,f
  2287  0813  01F6               	clrf	___awdiv@sign
  2288  0814  0AF6               	incf	___awdiv@sign,f
  2289  0815                     l1427:	
  2290  0815  1FF3               	btfss	___awdiv@dividend+1,7
  2291  0816  2820               	goto	l1433
  2292  0817  09F2               	comf	___awdiv@dividend,f
  2293  0818  09F3               	comf	___awdiv@dividend+1,f
  2294  0819  0AF2               	incf	___awdiv@dividend,f
  2295  081A  1903               	skipnz
  2296  081B  0AF3               	incf	___awdiv@dividend+1,f
  2297  081C  3001               	movlw	1
  2298  081D  00F4               	movwf	??___awdiv
  2299  081E  0874               	movf	??___awdiv,w
  2300  081F  06F6               	xorwf	___awdiv@sign,f
  2301  0820                     l1433:	
  2302  0820  01F7               	clrf	___awdiv@quotient
  2303  0821  01F8               	clrf	___awdiv@quotient+1
  2304  0822  0870               	movf	___awdiv@divisor,w
  2305  0823  0471               	iorwf	___awdiv@divisor+1,w
  2306  0824  1903               	btfsc	3,2
  2307  0825  2857               	goto	l1455
  2308  0826  01F5               	clrf	___awdiv@counter
  2309  0827  0AF5               	incf	___awdiv@counter,f
  2310  0828                     l1443:	
  2311  0828  1BF1               	btfsc	___awdiv@divisor+1,7
  2312  0829  2836               	goto	l1445
  2313  082A  3001               	movlw	1
  2314  082B                     u3005:	
  2315  082B  1003               	clrc
  2316  082C  0DF0               	rlf	___awdiv@divisor,f
  2317  082D  0DF1               	rlf	___awdiv@divisor+1,f
  2318  082E  3EFF               	addlw	-1
  2319  082F  1D03               	skipz
  2320  0830  282B               	goto	u3005
  2321  0831  3001               	movlw	1
  2322  0832  00F4               	movwf	??___awdiv
  2323  0833  0874               	movf	??___awdiv,w
  2324  0834  07F5               	addwf	___awdiv@counter,f
  2325  0835  2828               	goto	l1443
  2326  0836                     l1445:	
  2327  0836  3001               	movlw	1
  2328  0837                     u3025:	
  2329  0837  1003               	clrc
  2330  0838  0DF7               	rlf	___awdiv@quotient,f
  2331  0839  0DF8               	rlf	___awdiv@quotient+1,f
  2332  083A  3EFF               	addlw	-1
  2333  083B  1D03               	skipz
  2334  083C  2837               	goto	u3025
  2335  083D  0871               	movf	___awdiv@divisor+1,w
  2336  083E  0273               	subwf	___awdiv@dividend+1,w
  2337  083F  1D03               	skipz
  2338  0840  2843               	goto	u3035
  2339  0841  0870               	movf	___awdiv@divisor,w
  2340  0842  0272               	subwf	___awdiv@dividend,w
  2341  0843                     u3035:	
  2342  0843  1C03               	skipc
  2343  0844  284C               	goto	l1451
  2344  0845  0870               	movf	___awdiv@divisor,w
  2345  0846  02F2               	subwf	___awdiv@dividend,f
  2346  0847  0871               	movf	___awdiv@divisor+1,w
  2347  0848  1C03               	skipc
  2348  0849  03F3               	decf	___awdiv@dividend+1,f
  2349  084A  02F3               	subwf	___awdiv@dividend+1,f
  2350  084B  1477               	bsf	___awdiv@quotient,0
  2351  084C                     l1451:	
  2352  084C  3001               	movlw	1
  2353  084D                     u3045:	
  2354  084D  1003               	clrc
  2355  084E  0CF1               	rrf	___awdiv@divisor+1,f
  2356  084F  0CF0               	rrf	___awdiv@divisor,f
  2357  0850  3EFF               	addlw	-1
  2358  0851  1D03               	skipz
  2359  0852  284D               	goto	u3045
  2360  0853  3001               	movlw	1
  2361  0854  02F5               	subwf	___awdiv@counter,f
  2362  0855  1D03               	btfss	3,2
  2363  0856  2836               	goto	l1445
  2364  0857                     l1455:	
  2365  0857  0876               	movf	___awdiv@sign,w
  2366  0858  1903               	btfsc	3,2
  2367  0859  285F               	goto	l1459
  2368  085A  09F7               	comf	___awdiv@quotient,f
  2369  085B  09F8               	comf	___awdiv@quotient+1,f
  2370  085C  0AF7               	incf	___awdiv@quotient,f
  2371  085D  1903               	skipnz
  2372  085E  0AF8               	incf	___awdiv@quotient+1,f
  2373  085F                     l1459:	
  2374  085F  0878               	movf	___awdiv@quotient+1,w
  2375  0860  00F1               	movwf	?___awdiv+1
  2376  0861  0877               	movf	___awdiv@quotient,w
  2377  0862  00F0               	movwf	?___awdiv
  2378  0863  0008               	return
  2379  0864                     __end_of___awdiv:	
  2380                           
  2381                           	psect	text8
  2382  1E27                     __ptext8:	
  2383 ;; *************** function _UART_Write_Text *****************
  2384 ;; Defined at:
  2385 ;;		line 36 in file "uart.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;  text            1    wreg     PTR unsigned char 
  2388 ;;		 -> main@str(33), 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  text            1    4[COMMON] PTR unsigned char 
  2391 ;;		 -> main@str(33), 
  2392 ;;  i               2    2[COMMON] int 
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  1    wreg      void 
  2395 ;; Registers used:
  2396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2402 ;;      Params:         0       0       0       0       0
  2403 ;;      Locals:         3       0       0       0       0
  2404 ;;      Temps:          1       0       0       0       0
  2405 ;;      Totals:         4       0       0       0       0
  2406 ;;Total ram usage:        4 bytes
  2407 ;; Hardware stack levels used:    1
  2408 ;; Hardware stack levels required when called:    1
  2409 ;; This function calls:
  2410 ;;		_UART_Write
  2411 ;; This function is called by:
  2412 ;;		_main
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           
  2417                           ;psect for function _UART_Write_Text
  2418  1E27                     _UART_Write_Text:	
  2419                           
  2420                           ;incstack = 0
  2421                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2422                           ;UART_Write_Text@text stored from wreg
  2423  1E27  00F4               	movwf	UART_Write_Text@text
  2424                           
  2425                           ;uart.c: 37: int i;
  2426                           ;uart.c: 38: for (i = 0; text[i] != '\0'; i++)
  2427  1E28  01F2               	clrf	UART_Write_Text@i
  2428  1E29  01F3               	clrf	UART_Write_Text@i+1
  2429  1E2A                     l1847:	
  2430  1E2A  0872               	movf	UART_Write_Text@i,w
  2431  1E2B  0774               	addwf	UART_Write_Text@text,w
  2432  1E2C  00F1               	movwf	??_UART_Write_Text
  2433  1E2D  0871               	movf	??_UART_Write_Text,w
  2434  1E2E  0084               	movwf	4
  2435  1E2F  1383               	bcf	3,7	;select IRP bank0
  2436  1E30  0800               	movf	0,w
  2437  1E31  1903               	btfsc	3,2
  2438  1E32  0008               	return
  2439                           
  2440                           ;uart.c: 39: UART_Write(text[i]);
  2441  1E33  0872               	movf	UART_Write_Text@i,w
  2442  1E34  0774               	addwf	UART_Write_Text@text,w
  2443  1E35  00F1               	movwf	??_UART_Write_Text
  2444  1E36  0871               	movf	??_UART_Write_Text,w
  2445  1E37  0084               	movwf	4
  2446  1E38  1383               	bcf	3,7	;select IRP bank0
  2447  1E39  0800               	movf	0,w
  2448  1E3A  120A  118A  2009  160A  158A  	fcall	_UART_Write
  2449  1E3F  3001               	movlw	1
  2450  1E40  07F2               	addwf	UART_Write_Text@i,f
  2451  1E41  1803               	skipnc
  2452  1E42  0AF3               	incf	UART_Write_Text@i+1,f
  2453  1E43  3000               	movlw	0
  2454  1E44  07F3               	addwf	UART_Write_Text@i+1,f
  2455  1E45  2E2A               	goto	l1847
  2456  1E46                     __end_of_UART_Write_Text:	
  2457                           
  2458                           	psect	text9
  2459  0009                     __ptext9:	
  2460 ;; *************** function _UART_Write *****************
  2461 ;; Defined at:
  2462 ;;		line 24 in file "uart.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  data            1    wreg     unsigned char 
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;  data            1    0[COMMON] unsigned char 
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    wreg      void 
  2469 ;; Registers used:
  2470 ;;		wreg
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2476 ;;      Params:         0       0       0       0       0
  2477 ;;      Locals:         1       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0
  2479 ;;      Totals:         1       0       0       0       0
  2480 ;;Total ram usage:        1 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; This function calls:
  2483 ;;		Nothing
  2484 ;; This function is called by:
  2485 ;;		_main
  2486 ;;		_UART_Write_Text
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           
  2491                           ;psect for function _UART_Write
  2492  0009                     _UART_Write:	
  2493                           
  2494                           ;incstack = 0
  2495                           ; Regs used in _UART_Write: [wreg]
  2496                           ;UART_Write@data stored from wreg
  2497  0009  00F0               	movwf	UART_Write@data
  2498  000A                     l196:	
  2499                           ;uart.c: 25: while (!TRMT);
  2500                           
  2501  000A  1683               	bsf	3,5	;RP0=1, select bank1
  2502  000B  1303               	bcf	3,6	;RP1=0, select bank1
  2503  000C  1C98               	btfss	24,1	;volatile
  2504  000D  280A               	goto	l196
  2505                           
  2506                           ;uart.c: 26: TXREG = data;
  2507  000E  0870               	movf	UART_Write@data,w
  2508  000F  1283               	bcf	3,5	;RP0=0, select bank0
  2509  0010  1303               	bcf	3,6	;RP1=0, select bank0
  2510  0011  0099               	movwf	25	;volatile
  2511  0012  0008               	return
  2512  0013                     __end_of_UART_Write:	
  2513                           
  2514                           	psect	text10
  2515  1F8C                     __ptext10:	
  2516 ;; *************** function _UART_Init *****************
  2517 ;; Defined at:
  2518 ;;		line 7 in file "uart.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;  baudrate        4    6[BANK0 ] const long 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  x               2    9[COMMON] unsigned int 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      unsigned char 
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0, pclath, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2532 ;;      Params:         0       4       0       0       0
  2533 ;;      Locals:         2       0       0       0       0
  2534 ;;      Temps:          0      12       0       0       0
  2535 ;;      Totals:         2      16       0       0       0
  2536 ;;Total ram usage:       18 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    1
  2539 ;; This function calls:
  2540 ;;		___aldiv
  2541 ;; This function is called by:
  2542 ;;		_main
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           
  2547                           ;psect for function _UART_Init
  2548  1F8C                     _UART_Init:	
  2549                           
  2550                           ;uart.c: 8: unsigned int x;
  2551                           ;uart.c: 10: x = (8000000 - baudrate * 16) / (baudrate * 16);
  2552                           
  2553                           ;incstack = 0
  2554                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  2555  1F8C  1283               	bcf	3,5	;RP0=0, select bank0
  2556  1F8D  1303               	bcf	3,6	;RP1=0, select bank0
  2557  1F8E  0826               	movf	UART_Init@baudrate,w
  2558  1F8F  00AA               	movwf	??_UART_Init
  2559  1F90  0827               	movf	UART_Init@baudrate+1,w
  2560  1F91  00AB               	movwf	??_UART_Init+1
  2561  1F92  0828               	movf	UART_Init@baudrate+2,w
  2562  1F93  00AC               	movwf	??_UART_Init+2
  2563  1F94  0829               	movf	UART_Init@baudrate+3,w
  2564  1F95  00AD               	movwf	??_UART_Init+3
  2565  1F96  3004               	movlw	4
  2566  1F97                     u3795:	
  2567  1F97  1003               	clrc
  2568  1F98  0DAA               	rlf	??_UART_Init,f
  2569  1F99  0DAB               	rlf	??_UART_Init+1,f
  2570  1F9A  0DAC               	rlf	??_UART_Init+2,f
  2571  1F9B  0DAD               	rlf	??_UART_Init+3,f
  2572  1F9C  3EFF               	addlw	-1
  2573  1F9D  1D03               	skipz
  2574  1F9E  2F97               	goto	u3795
  2575  1F9F  082D               	movf	??_UART_Init+3,w
  2576  1FA0  00F3               	movwf	___aldiv@divisor+3
  2577  1FA1  082C               	movf	??_UART_Init+2,w
  2578  1FA2  00F2               	movwf	___aldiv@divisor+2
  2579  1FA3  082B               	movf	??_UART_Init+1,w
  2580  1FA4  00F1               	movwf	___aldiv@divisor+1
  2581  1FA5  082A               	movf	??_UART_Init,w
  2582  1FA6  00F0               	movwf	___aldiv@divisor
  2583  1FA7  3000               	movlw	0
  2584  1FA8  00AE               	movwf	??_UART_Init+4
  2585  1FA9  3012               	movlw	18
  2586  1FAA  00AF               	movwf	??_UART_Init+5
  2587  1FAB  307A               	movlw	122
  2588  1FAC  00B0               	movwf	??_UART_Init+6
  2589  1FAD  3000               	movlw	0
  2590  1FAE  00B1               	movwf	??_UART_Init+7
  2591  1FAF  0826               	movf	UART_Init@baudrate,w
  2592  1FB0  00B2               	movwf	??_UART_Init+8
  2593  1FB1  0827               	movf	UART_Init@baudrate+1,w
  2594  1FB2  00B3               	movwf	??_UART_Init+9
  2595  1FB3  0828               	movf	UART_Init@baudrate+2,w
  2596  1FB4  00B4               	movwf	??_UART_Init+10
  2597  1FB5  0829               	movf	UART_Init@baudrate+3,w
  2598  1FB6  00B5               	movwf	??_UART_Init+11
  2599  1FB7  3004               	movlw	4
  2600  1FB8                     u3805:	
  2601  1FB8  1003               	clrc
  2602  1FB9  0DB2               	rlf	??_UART_Init+8,f
  2603  1FBA  0DB3               	rlf	??_UART_Init+9,f
  2604  1FBB  0DB4               	rlf	??_UART_Init+10,f
  2605  1FBC  0DB5               	rlf	??_UART_Init+11,f
  2606  1FBD  3EFF               	addlw	-1
  2607  1FBE  1D03               	skipz
  2608  1FBF  2FB8               	goto	u3805
  2609  1FC0  09B2               	comf	??_UART_Init+8,f
  2610  1FC1  09B3               	comf	??_UART_Init+9,f
  2611  1FC2  09B4               	comf	??_UART_Init+10,f
  2612  1FC3  09B5               	comf	??_UART_Init+11,f
  2613  1FC4  0AB2               	incf	??_UART_Init+8,f
  2614  1FC5  1903               	skipnz
  2615  1FC6  0AB3               	incf	??_UART_Init+9,f
  2616  1FC7  1903               	skipnz
  2617  1FC8  0AB4               	incf	??_UART_Init+10,f
  2618  1FC9  1903               	skipnz
  2619  1FCA  0AB5               	incf	??_UART_Init+11,f
  2620  1FCB  0832               	movf	??_UART_Init+8,w
  2621  1FCC  07AE               	addwf	??_UART_Init+4,f
  2622  1FCD  0833               	movf	??_UART_Init+9,w
  2623  1FCE  1803               	skipnc
  2624  1FCF  0F33               	incfsz	??_UART_Init+9,w
  2625  1FD0  2FD2               	goto	u3810
  2626  1FD1  2FD3               	goto	u3811
  2627  1FD2                     u3810:	
  2628  1FD2  07AF               	addwf	??_UART_Init+5,f
  2629  1FD3                     u3811:	
  2630  1FD3  0834               	movf	??_UART_Init+10,w
  2631  1FD4  1803               	skipnc
  2632  1FD5  0F34               	incfsz	??_UART_Init+10,w
  2633  1FD6  2FD8               	goto	u3812
  2634  1FD7  2FD9               	goto	u3813
  2635  1FD8                     u3812:	
  2636  1FD8  07B0               	addwf	??_UART_Init+6,f
  2637  1FD9                     u3813:	
  2638  1FD9  0835               	movf	??_UART_Init+11,w
  2639  1FDA  1803               	skipnc
  2640  1FDB  0A35               	incf	??_UART_Init+11,w
  2641  1FDC  07B1               	addwf	??_UART_Init+7,f
  2642  1FDD  0831               	movf	??_UART_Init+7,w
  2643  1FDE  00F7               	movwf	___aldiv@dividend+3
  2644  1FDF  0830               	movf	??_UART_Init+6,w
  2645  1FE0  00F6               	movwf	___aldiv@dividend+2
  2646  1FE1  082F               	movf	??_UART_Init+5,w
  2647  1FE2  00F5               	movwf	___aldiv@dividend+1
  2648  1FE3  082E               	movf	??_UART_Init+4,w
  2649  1FE4  00F4               	movwf	___aldiv@dividend
  2650  1FE5  160A  118A  2272   	fcall	___aldiv
  2651  1FE8  0871               	movf	?___aldiv+1,w
  2652  1FE9  00FA               	movwf	UART_Init@x+1
  2653  1FEA  0870               	movf	?___aldiv,w
  2654  1FEB  00F9               	movwf	UART_Init@x
  2655                           
  2656                           ;uart.c: 11: BRGH = 1;
  2657  1FEC  1683               	bsf	3,5	;RP0=1, select bank1
  2658  1FED  1303               	bcf	3,6	;RP1=0, select bank1
  2659  1FEE  1518               	bsf	24,2	;volatile
  2660                           
  2661                           ;uart.c: 13: SPBRG = x;
  2662  1FEF  0879               	movf	UART_Init@x,w
  2663  1FF0  0099               	movwf	25	;volatile
  2664                           
  2665                           ;uart.c: 14: SYNC = 0;
  2666  1FF1  1218               	bcf	24,4	;volatile
  2667                           
  2668                           ;uart.c: 15: SPEN = 1;
  2669  1FF2  1283               	bcf	3,5	;RP0=0, select bank0
  2670  1FF3  1303               	bcf	3,6	;RP1=0, select bank0
  2671  1FF4  1798               	bsf	24,7	;volatile
  2672                           
  2673                           ;uart.c: 16: TRISC7 = 1;
  2674  1FF5  1683               	bsf	3,5	;RP0=1, select bank1
  2675  1FF6  1303               	bcf	3,6	;RP1=0, select bank1
  2676  1FF7  1787               	bsf	7,7	;volatile
  2677                           
  2678                           ;uart.c: 17: TRISC6 = 1;
  2679  1FF8  1707               	bsf	7,6	;volatile
  2680                           
  2681                           ;uart.c: 18: CREN = 1;
  2682  1FF9  1283               	bcf	3,5	;RP0=0, select bank0
  2683  1FFA  1303               	bcf	3,6	;RP1=0, select bank0
  2684  1FFB  1618               	bsf	24,4	;volatile
  2685                           
  2686                           ;uart.c: 19: TXEN = 1;
  2687  1FFC  1683               	bsf	3,5	;RP0=1, select bank1
  2688  1FFD  1303               	bcf	3,6	;RP1=0, select bank1
  2689  1FFE  1698               	bsf	24,5	;volatile
  2690  1FFF  0008               	return
  2691  2000                     __end_of_UART_Init:	
  2692                           ;uart.c: 20: return 1;
  2693                           ;	Return value of _UART_Init is never used
  2694                           
  2695                           
  2696                           	psect	text11
  2697  1272                     __ptext11:	
  2698 ;; *************** function ___aldiv *****************
  2699 ;; Defined at:
  2700 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\aldiv.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  divisor         4    0[COMMON] long 
  2703 ;;  dividend        4    4[COMMON] long 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  quotient        4    2[BANK0 ] long 
  2706 ;;  sign            1    1[BANK0 ] unsigned char 
  2707 ;;  counter         1    0[BANK0 ] unsigned char 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  4    0[COMMON] long 
  2710 ;; Registers used:
  2711 ;;		wreg, status,2, status,0
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2717 ;;      Params:         8       0       0       0       0
  2718 ;;      Locals:         0       6       0       0       0
  2719 ;;      Temps:          1       0       0       0       0
  2720 ;;      Totals:         9       6       0       0       0
  2721 ;;Total ram usage:       15 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; This function calls:
  2724 ;;		Nothing
  2725 ;; This function is called by:
  2726 ;;		_UART_Init
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           
  2731                           ;psect for function ___aldiv
  2732  1272                     ___aldiv:	
  2733                           
  2734                           ;incstack = 0
  2735                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2736  1272  1283               	bcf	3,5	;RP0=0, select bank0
  2737  1273  1303               	bcf	3,6	;RP1=0, select bank0
  2738  1274  01A1               	clrf	___aldiv@sign
  2739  1275  1FF3               	btfss	___aldiv@divisor+3,7
  2740  1276  2A84               	goto	l350
  2741  1277  09F0               	comf	___aldiv@divisor,f
  2742  1278  09F1               	comf	___aldiv@divisor+1,f
  2743  1279  09F2               	comf	___aldiv@divisor+2,f
  2744  127A  09F3               	comf	___aldiv@divisor+3,f
  2745  127B  0AF0               	incf	___aldiv@divisor,f
  2746  127C  1903               	skipnz
  2747  127D  0AF1               	incf	___aldiv@divisor+1,f
  2748  127E  1903               	skipnz
  2749  127F  0AF2               	incf	___aldiv@divisor+2,f
  2750  1280  1903               	skipnz
  2751  1281  0AF3               	incf	___aldiv@divisor+3,f
  2752  1282  01A1               	clrf	___aldiv@sign
  2753  1283  0AA1               	incf	___aldiv@sign,f
  2754  1284                     l350:	
  2755  1284  1FF7               	btfss	___aldiv@dividend+3,7
  2756  1285  2A95               	goto	l1389
  2757  1286  09F4               	comf	___aldiv@dividend,f
  2758  1287  09F5               	comf	___aldiv@dividend+1,f
  2759  1288  09F6               	comf	___aldiv@dividend+2,f
  2760  1289  09F7               	comf	___aldiv@dividend+3,f
  2761  128A  0AF4               	incf	___aldiv@dividend,f
  2762  128B  1903               	skipnz
  2763  128C  0AF5               	incf	___aldiv@dividend+1,f
  2764  128D  1903               	skipnz
  2765  128E  0AF6               	incf	___aldiv@dividend+2,f
  2766  128F  1903               	skipnz
  2767  1290  0AF7               	incf	___aldiv@dividend+3,f
  2768  1291  3001               	movlw	1
  2769  1292  00F8               	movwf	??___aldiv
  2770  1293  0878               	movf	??___aldiv,w
  2771  1294  06A1               	xorwf	___aldiv@sign,f
  2772  1295                     l1389:	
  2773  1295  3000               	movlw	0
  2774  1296  00A5               	movwf	___aldiv@quotient+3
  2775  1297  3000               	movlw	0
  2776  1298  00A4               	movwf	___aldiv@quotient+2
  2777  1299  3000               	movlw	0
  2778  129A  00A3               	movwf	___aldiv@quotient+1
  2779  129B  3000               	movlw	0
  2780  129C  00A2               	movwf	___aldiv@quotient
  2781  129D  0873               	movf	___aldiv@divisor+3,w
  2782  129E  0472               	iorwf	___aldiv@divisor+2,w
  2783  129F  0471               	iorwf	___aldiv@divisor+1,w
  2784  12A0  0470               	iorwf	___aldiv@divisor,w
  2785  12A1  1903               	skipnz
  2786  12A2  2AEA               	goto	l1411
  2787  12A3  01A0               	clrf	___aldiv@counter
  2788  12A4  0AA0               	incf	___aldiv@counter,f
  2789  12A5                     l1397:	
  2790  12A5  1BF3               	btfsc	___aldiv@divisor+3,7
  2791  12A6  2AB5               	goto	l1399
  2792  12A7  3001               	movlw	1
  2793  12A8  00F8               	movwf	??___aldiv
  2794  12A9                     u2905:	
  2795  12A9  1003               	clrc
  2796  12AA  0DF0               	rlf	___aldiv@divisor,f
  2797  12AB  0DF1               	rlf	___aldiv@divisor+1,f
  2798  12AC  0DF2               	rlf	___aldiv@divisor+2,f
  2799  12AD  0DF3               	rlf	___aldiv@divisor+3,f
  2800  12AE  0BF8               	decfsz	??___aldiv,f
  2801  12AF  2AA9               	goto	u2905
  2802  12B0  3001               	movlw	1
  2803  12B1  00F8               	movwf	??___aldiv
  2804  12B2  0878               	movf	??___aldiv,w
  2805  12B3  07A0               	addwf	___aldiv@counter,f
  2806  12B4  2AA5               	goto	l1397
  2807  12B5                     l1399:	
  2808  12B5  3001               	movlw	1
  2809  12B6  00F8               	movwf	??___aldiv
  2810  12B7                     u2925:	
  2811  12B7  1003               	clrc
  2812  12B8  0DA2               	rlf	___aldiv@quotient,f
  2813  12B9  0DA3               	rlf	___aldiv@quotient+1,f
  2814  12BA  0DA4               	rlf	___aldiv@quotient+2,f
  2815  12BB  0DA5               	rlf	___aldiv@quotient+3,f
  2816  12BC  0BF8               	decfsz	??___aldiv,f
  2817  12BD  2AB7               	goto	u2925
  2818  12BE  0873               	movf	___aldiv@divisor+3,w
  2819  12BF  0277               	subwf	___aldiv@dividend+3,w
  2820  12C0  1D03               	skipz
  2821  12C1  2ACC               	goto	u2935
  2822  12C2  0872               	movf	___aldiv@divisor+2,w
  2823  12C3  0276               	subwf	___aldiv@dividend+2,w
  2824  12C4  1D03               	skipz
  2825  12C5  2ACC               	goto	u2935
  2826  12C6  0871               	movf	___aldiv@divisor+1,w
  2827  12C7  0275               	subwf	___aldiv@dividend+1,w
  2828  12C8  1D03               	skipz
  2829  12C9  2ACC               	goto	u2935
  2830  12CA  0870               	movf	___aldiv@divisor,w
  2831  12CB  0274               	subwf	___aldiv@dividend,w
  2832  12CC                     u2935:	
  2833  12CC  1C03               	skipc
  2834  12CD  2ADD               	goto	l1407
  2835  12CE  0870               	movf	___aldiv@divisor,w
  2836  12CF  02F4               	subwf	___aldiv@dividend,f
  2837  12D0  0871               	movf	___aldiv@divisor+1,w
  2838  12D1  1C03               	skipc
  2839  12D2  0F71               	incfsz	___aldiv@divisor+1,w
  2840  12D3  02F5               	subwf	___aldiv@dividend+1,f
  2841  12D4  0872               	movf	___aldiv@divisor+2,w
  2842  12D5  1C03               	skipc
  2843  12D6  0F72               	incfsz	___aldiv@divisor+2,w
  2844  12D7  02F6               	subwf	___aldiv@dividend+2,f
  2845  12D8  0873               	movf	___aldiv@divisor+3,w
  2846  12D9  1C03               	skipc
  2847  12DA  0F73               	incfsz	___aldiv@divisor+3,w
  2848  12DB  02F7               	subwf	___aldiv@dividend+3,f
  2849  12DC  1422               	bsf	___aldiv@quotient,0
  2850  12DD                     l1407:	
  2851  12DD  3001               	movlw	1
  2852  12DE                     u2945:	
  2853  12DE  1003               	clrc
  2854  12DF  0CF3               	rrf	___aldiv@divisor+3,f
  2855  12E0  0CF2               	rrf	___aldiv@divisor+2,f
  2856  12E1  0CF1               	rrf	___aldiv@divisor+1,f
  2857  12E2  0CF0               	rrf	___aldiv@divisor,f
  2858  12E3  3EFF               	addlw	-1
  2859  12E4  1D03               	skipz
  2860  12E5  2ADE               	goto	u2945
  2861  12E6  3001               	movlw	1
  2862  12E7  02A0               	subwf	___aldiv@counter,f
  2863  12E8  1D03               	btfss	3,2
  2864  12E9  2AB5               	goto	l1399
  2865  12EA                     l1411:	
  2866  12EA  0821               	movf	___aldiv@sign,w
  2867  12EB  1903               	btfsc	3,2
  2868  12EC  2AF8               	goto	l1415
  2869  12ED  09A2               	comf	___aldiv@quotient,f
  2870  12EE  09A3               	comf	___aldiv@quotient+1,f
  2871  12EF  09A4               	comf	___aldiv@quotient+2,f
  2872  12F0  09A5               	comf	___aldiv@quotient+3,f
  2873  12F1  0AA2               	incf	___aldiv@quotient,f
  2874  12F2  1903               	skipnz
  2875  12F3  0AA3               	incf	___aldiv@quotient+1,f
  2876  12F4  1903               	skipnz
  2877  12F5  0AA4               	incf	___aldiv@quotient+2,f
  2878  12F6  1903               	skipnz
  2879  12F7  0AA5               	incf	___aldiv@quotient+3,f
  2880  12F8                     l1415:	
  2881  12F8  0825               	movf	___aldiv@quotient+3,w
  2882  12F9  00F3               	movwf	?___aldiv+3
  2883  12FA  0824               	movf	___aldiv@quotient+2,w
  2884  12FB  00F2               	movwf	?___aldiv+2
  2885  12FC  0823               	movf	___aldiv@quotient+1,w
  2886  12FD  00F1               	movwf	?___aldiv+1
  2887  12FE  0822               	movf	___aldiv@quotient,w
  2888  12FF  00F0               	movwf	?___aldiv
  2889  1300  0008               	return
  2890  1301                     __end_of___aldiv:	
  2891                           
  2892                           	psect	text12
  2893  1E0C                     __ptext12:	
  2894 ;; *************** function _PID_init *****************
  2895 ;; Defined at:
  2896 ;;		line 32 in file "main.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;		None
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;		None
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  1    wreg      void 
  2903 ;; Registers used:
  2904 ;;		wreg, status,2
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2910 ;;      Params:         0       0       0       0       0
  2911 ;;      Locals:         0       0       0       0       0
  2912 ;;      Temps:          0       0       0       0       0
  2913 ;;      Totals:         0       0       0       0       0
  2914 ;;Total ram usage:        0 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; This function calls:
  2917 ;;		Nothing
  2918 ;; This function is called by:
  2919 ;;		_main
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           
  2924                           ;psect for function _PID_init
  2925  1E0C                     _PID_init:	
  2926                           
  2927                           ;main.c: 35: P = 0;
  2928                           
  2929                           ;incstack = 0
  2930                           ; Regs used in _PID_init: [wreg+status,2]
  2931  1E0C  1683               	bsf	3,5	;RP0=1, select bank1
  2932  1E0D  1303               	bcf	3,6	;RP1=0, select bank1
  2933  1E0E  01E1               	clrf	_P^(0+128)
  2934  1E0F  01E2               	clrf	(_P+1)^(0+128)
  2935                           
  2936                           ;main.c: 36: I = 0;
  2937  1E10  01DF               	clrf	_I^(0+128)
  2938  1E11  01E0               	clrf	(_I+1)^(0+128)
  2939                           
  2940                           ;main.c: 37: D = 0;
  2941  1E12  01DD               	clrf	_D^(0+128)
  2942  1E13  01DE               	clrf	(_D+1)^(0+128)
  2943                           
  2944                           ;main.c: 40: kp = 2;
  2945  1E14  3000               	movlw	0
  2946  1E15  00E5               	movwf	_kp^(0+128)
  2947  1E16  3000               	movlw	0
  2948  1E17  00E6               	movwf	(_kp+1)^(0+128)
  2949  1E18  3040               	movlw	64
  2950  1E19  00E7               	movwf	(_kp+2)^(0+128)
  2951                           
  2952                           ;main.c: 41: ki = 0.5;
  2953  1E1A  3000               	movlw	0
  2954  1E1B  00EB               	movwf	_ki^(0+128)
  2955  1E1C  3000               	movlw	0
  2956  1E1D  00EC               	movwf	(_ki+1)^(0+128)
  2957  1E1E  303F               	movlw	63
  2958  1E1F  00ED               	movwf	(_ki+2)^(0+128)
  2959                           
  2960                           ;main.c: 42: kd = 0.1;
  2961  1E20  30CD               	movlw	205
  2962  1E21  00E8               	movwf	_kd^(0+128)
  2963  1E22  30CC               	movlw	204
  2964  1E23  00E9               	movwf	(_kd+1)^(0+128)
  2965  1E24  303D               	movlw	61
  2966  1E25  00EA               	movwf	(_kd+2)^(0+128)
  2967  1E26  0008               	return
  2968  1E27                     __end_of_PID_init:	
  2969                           
  2970                           	psect	text13
  2971  0BDD                     __ptext13:	
  2972 ;; *************** function _PID *****************
  2973 ;; Defined at:
  2974 ;;		line 45 in file "main.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;  setpoint        2   29[BANK0 ] int 
  2977 ;;  read            2   31[BANK0 ] int 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  error           2   39[BANK0 ] int 
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  2   29[BANK0 ] int 
  2982 ;; Registers used:
  2983 ;;		wreg, status,2, status,0, pclath, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2989 ;;      Params:         0       4       0       0       0
  2990 ;;      Locals:         0       5       0       0       0
  2991 ;;      Temps:          0       3       0       0       0
  2992 ;;      Totals:         0      12       0       0       0
  2993 ;;Total ram usage:       12 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; Hardware stack levels required when called:    2
  2996 ;; This function calls:
  2997 ;;		___awtoft
  2998 ;;		___ftadd
  2999 ;;		___ftmul
  3000 ;;		___fttol
  3001 ;; This function is called by:
  3002 ;;		_main
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           
  3007                           ;psect for function _PID
  3008  0BDD                     _PID:	
  3009                           
  3010                           ;main.c: 46: int error;
  3011                           ;main.c: 47: error = setpoint - read;
  3012                           
  3013                           ;incstack = 0
  3014                           ; Regs used in _PID: [wreg+status,2+status,0+pclath+cstack]
  3015  0BDD  1283               	bcf	3,5	;RP0=0, select bank0
  3016  0BDE  1303               	bcf	3,6	;RP1=0, select bank0
  3017  0BDF  093F               	comf	PID@read,w
  3018  0BE0  00C1               	movwf	??_PID
  3019  0BE1  0940               	comf	PID@read+1,w
  3020  0BE2  00C2               	movwf	??_PID+1
  3021  0BE3  0AC1               	incf	??_PID,f
  3022  0BE4  1903               	skipnz
  3023  0BE5  0AC2               	incf	??_PID+1,f
  3024  0BE6  083D               	movf	PID@setpoint,w
  3025  0BE7  0741               	addwf	??_PID,w
  3026  0BE8  00C7               	movwf	PID@error
  3027  0BE9  083E               	movf	PID@setpoint+1,w
  3028  0BEA  1803               	skipnc
  3029  0BEB  0A3E               	incf	PID@setpoint+1,w
  3030  0BEC  0742               	addwf	??_PID+1,w
  3031  0BED  00C8               	movwf	PID@error+1
  3032                           
  3033                           ;main.c: 49: if (error) {
  3034  0BEE  0847               	movf	PID@error,w
  3035  0BEF  0448               	iorwf	PID@error+1,w
  3036  0BF0  1903               	btfsc	3,2
  3037  0BF1  2D08               	goto	l1749
  3038                           
  3039                           ;main.c: 50: P = error;
  3040  0BF2  0848               	movf	PID@error+1,w
  3041  0BF3  1683               	bsf	3,5	;RP0=1, select bank1
  3042  0BF4  1303               	bcf	3,6	;RP1=0, select bank1
  3043  0BF5  00E2               	movwf	(_P+1)^(0+128)
  3044  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
  3045  0BF7  1303               	bcf	3,6	;RP1=0, select bank0
  3046  0BF8  0847               	movf	PID@error,w
  3047  0BF9  1683               	bsf	3,5	;RP0=1, select bank1
  3048  0BFA  1303               	bcf	3,6	;RP1=0, select bank1
  3049  0BFB  00E1               	movwf	_P^(0+128)
  3050                           
  3051                           ;main.c: 51: I = I + error;
  3052  0BFC  1283               	bcf	3,5	;RP0=0, select bank0
  3053  0BFD  1303               	bcf	3,6	;RP1=0, select bank0
  3054  0BFE  0847               	movf	PID@error,w
  3055  0BFF  1683               	bsf	3,5	;RP0=1, select bank1
  3056  0C00  1303               	bcf	3,6	;RP1=0, select bank1
  3057  0C01  075F               	addwf	_I^(0+128),w
  3058  0C02  00DF               	movwf	_I^(0+128)
  3059  0C03  1283               	bcf	3,5	;RP0=0, select bank0
  3060  0C04  1303               	bcf	3,6	;RP1=0, select bank0
  3061  0C05  0848               	movf	PID@error+1,w
  3062  0C06  1803               	skipnc
  3063  0C07  0A48               	incf	PID@error+1,w
  3064  0C08  1683               	bsf	3,5	;RP0=1, select bank1
  3065  0C09  1303               	bcf	3,6	;RP1=0, select bank1
  3066  0C0A  0760               	addwf	(_I+1)^(0+128),w
  3067  0C0B  00E0               	movwf	(_I+1)^(0+128)
  3068                           
  3069                           ;main.c: 52: D = error - last_error;
  3070  0C0C  0963               	comf	_last_error^(0+128),w
  3071  0C0D  1283               	bcf	3,5	;RP0=0, select bank0
  3072  0C0E  1303               	bcf	3,6	;RP1=0, select bank0
  3073  0C0F  00C1               	movwf	??_PID
  3074  0C10  1683               	bsf	3,5	;RP0=1, select bank1
  3075  0C11  1303               	bcf	3,6	;RP1=0, select bank1
  3076  0C12  0964               	comf	(_last_error+1)^(0+128),w
  3077  0C13  1283               	bcf	3,5	;RP0=0, select bank0
  3078  0C14  1303               	bcf	3,6	;RP1=0, select bank0
  3079  0C15  00C2               	movwf	??_PID+1
  3080  0C16  0AC1               	incf	??_PID,f
  3081  0C17  1903               	skipnz
  3082  0C18  0AC2               	incf	??_PID+1,f
  3083  0C19  0847               	movf	PID@error,w
  3084  0C1A  0741               	addwf	??_PID,w
  3085  0C1B  1683               	bsf	3,5	;RP0=1, select bank1
  3086  0C1C  1303               	bcf	3,6	;RP1=0, select bank1
  3087  0C1D  00DD               	movwf	_D^(0+128)
  3088  0C1E  1283               	bcf	3,5	;RP0=0, select bank0
  3089  0C1F  1303               	bcf	3,6	;RP1=0, select bank0
  3090  0C20  0848               	movf	PID@error+1,w
  3091  0C21  1803               	skipnc
  3092  0C22  0A48               	incf	PID@error+1,w
  3093  0C23  0742               	addwf	??_PID+1,w
  3094  0C24  1683               	bsf	3,5	;RP0=1, select bank1
  3095  0C25  1303               	bcf	3,6	;RP1=0, select bank1
  3096  0C26  00DE               	movwf	(_D+1)^(0+128)
  3097                           
  3098                           ;main.c: 53: last_error = error;
  3099  0C27  1283               	bcf	3,5	;RP0=0, select bank0
  3100  0C28  1303               	bcf	3,6	;RP1=0, select bank0
  3101  0C29  0848               	movf	PID@error+1,w
  3102  0C2A  1683               	bsf	3,5	;RP0=1, select bank1
  3103  0C2B  1303               	bcf	3,6	;RP1=0, select bank1
  3104  0C2C  00E4               	movwf	(_last_error+1)^(0+128)
  3105  0C2D  1283               	bcf	3,5	;RP0=0, select bank0
  3106  0C2E  1303               	bcf	3,6	;RP1=0, select bank0
  3107  0C2F  0847               	movf	PID@error,w
  3108  0C30  1683               	bsf	3,5	;RP0=1, select bank1
  3109  0C31  1303               	bcf	3,6	;RP1=0, select bank1
  3110  0C32  00E3               	movwf	_last_error^(0+128)
  3111                           
  3112                           ;main.c: 54: pid_val = kp * P + ki * I + kd * D;
  3113  0C33  086B               	movf	_ki^(0+128),w
  3114  0C34  1283               	bcf	3,5	;RP0=0, select bank0
  3115  0C35  1303               	bcf	3,6	;RP1=0, select bank0
  3116  0C36  00A0               	movwf	___ftmul@f1
  3117  0C37  1683               	bsf	3,5	;RP0=1, select bank1
  3118  0C38  1303               	bcf	3,6	;RP1=0, select bank1
  3119  0C39  086C               	movf	(_ki+1)^(0+128),w
  3120  0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  3121  0C3B  1303               	bcf	3,6	;RP1=0, select bank0
  3122  0C3C  00A1               	movwf	___ftmul@f1+1
  3123  0C3D  1683               	bsf	3,5	;RP0=1, select bank1
  3124  0C3E  1303               	bcf	3,6	;RP1=0, select bank1
  3125  0C3F  086D               	movf	(_ki+2)^(0+128),w
  3126  0C40  1283               	bcf	3,5	;RP0=0, select bank0
  3127  0C41  1303               	bcf	3,6	;RP1=0, select bank0
  3128  0C42  00A2               	movwf	___ftmul@f1+2
  3129  0C43  1683               	bsf	3,5	;RP0=1, select bank1
  3130  0C44  1303               	bcf	3,6	;RP1=0, select bank1
  3131  0C45  0860               	movf	(_I+1)^(0+128),w
  3132  0C46  00F9               	movwf	___awtoft@c+1
  3133  0C47  085F               	movf	_I^(0+128),w
  3134  0C48  00F8               	movwf	___awtoft@c
  3135  0C49  120A  118A  2013  120A  158A  	fcall	___awtoft
  3136  0C4E  0878               	movf	?___awtoft,w
  3137  0C4F  1283               	bcf	3,5	;RP0=0, select bank0
  3138  0C50  1303               	bcf	3,6	;RP1=0, select bank0
  3139  0C51  00A3               	movwf	___ftmul@f2
  3140  0C52  0879               	movf	?___awtoft+1,w
  3141  0C53  00A4               	movwf	___ftmul@f2+1
  3142  0C54  087A               	movf	?___awtoft+2,w
  3143  0C55  00A5               	movwf	___ftmul@f2+2
  3144  0C56  160A  118A  2301  120A  158A  	fcall	___ftmul
  3145  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  3146  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  3147  0C5D  0820               	movf	?___ftmul,w
  3148  0C5E  00B0               	movwf	___ftadd@f1
  3149  0C5F  0821               	movf	?___ftmul+1,w
  3150  0C60  00B1               	movwf	___ftadd@f1+1
  3151  0C61  0822               	movf	?___ftmul+2,w
  3152  0C62  00B2               	movwf	___ftadd@f1+2
  3153  0C63  1683               	bsf	3,5	;RP0=1, select bank1
  3154  0C64  1303               	bcf	3,6	;RP1=0, select bank1
  3155  0C65  0865               	movf	_kp^(0+128),w
  3156  0C66  1283               	bcf	3,5	;RP0=0, select bank0
  3157  0C67  1303               	bcf	3,6	;RP1=0, select bank0
  3158  0C68  00A0               	movwf	___ftmul@f1
  3159  0C69  1683               	bsf	3,5	;RP0=1, select bank1
  3160  0C6A  1303               	bcf	3,6	;RP1=0, select bank1
  3161  0C6B  0866               	movf	(_kp+1)^(0+128),w
  3162  0C6C  1283               	bcf	3,5	;RP0=0, select bank0
  3163  0C6D  1303               	bcf	3,6	;RP1=0, select bank0
  3164  0C6E  00A1               	movwf	___ftmul@f1+1
  3165  0C6F  1683               	bsf	3,5	;RP0=1, select bank1
  3166  0C70  1303               	bcf	3,6	;RP1=0, select bank1
  3167  0C71  0867               	movf	(_kp+2)^(0+128),w
  3168  0C72  1283               	bcf	3,5	;RP0=0, select bank0
  3169  0C73  1303               	bcf	3,6	;RP1=0, select bank0
  3170  0C74  00A2               	movwf	___ftmul@f1+2
  3171  0C75  1683               	bsf	3,5	;RP0=1, select bank1
  3172  0C76  1303               	bcf	3,6	;RP1=0, select bank1
  3173  0C77  0862               	movf	(_P+1)^(0+128),w
  3174  0C78  00F9               	movwf	___awtoft@c+1
  3175  0C79  0861               	movf	_P^(0+128),w
  3176  0C7A  00F8               	movwf	___awtoft@c
  3177  0C7B  120A  118A  2013  120A  158A  	fcall	___awtoft
  3178  0C80  0878               	movf	?___awtoft,w
  3179  0C81  1283               	bcf	3,5	;RP0=0, select bank0
  3180  0C82  1303               	bcf	3,6	;RP1=0, select bank0
  3181  0C83  00A3               	movwf	___ftmul@f2
  3182  0C84  0879               	movf	?___awtoft+1,w
  3183  0C85  00A4               	movwf	___ftmul@f2+1
  3184  0C86  087A               	movf	?___awtoft+2,w
  3185  0C87  00A5               	movwf	___ftmul@f2+2
  3186  0C88  160A  118A  2301  120A  158A  	fcall	___ftmul
  3187  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  3188  0C8E  1303               	bcf	3,6	;RP1=0, select bank0
  3189  0C8F  0820               	movf	?___ftmul,w
  3190  0C90  00B3               	movwf	___ftadd@f2
  3191  0C91  0821               	movf	?___ftmul+1,w
  3192  0C92  00B4               	movwf	___ftadd@f2+1
  3193  0C93  0822               	movf	?___ftmul+2,w
  3194  0C94  00B5               	movwf	___ftadd@f2+2
  3195  0C95  160A  118A  24D4  120A  158A  	fcall	___ftadd
  3196  0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  3197  0C9B  1303               	bcf	3,6	;RP1=0, select bank0
  3198  0C9C  0830               	movf	?___ftadd,w
  3199  0C9D  00C4               	movwf	_PID$658
  3200  0C9E  0831               	movf	?___ftadd+1,w
  3201  0C9F  00C5               	movwf	_PID$658+1
  3202  0CA0  0832               	movf	?___ftadd+2,w
  3203  0CA1  00C6               	movwf	_PID$658+2
  3204                           
  3205                           ;main.c: 54: pid_val = kp * P + ki * I + kd * D;
  3206  0CA2  1683               	bsf	3,5	;RP0=1, select bank1
  3207  0CA3  1303               	bcf	3,6	;RP1=0, select bank1
  3208  0CA4  0868               	movf	_kd^(0+128),w
  3209  0CA5  1283               	bcf	3,5	;RP0=0, select bank0
  3210  0CA6  1303               	bcf	3,6	;RP1=0, select bank0
  3211  0CA7  00A0               	movwf	___ftmul@f1
  3212  0CA8  1683               	bsf	3,5	;RP0=1, select bank1
  3213  0CA9  1303               	bcf	3,6	;RP1=0, select bank1
  3214  0CAA  0869               	movf	(_kd+1)^(0+128),w
  3215  0CAB  1283               	bcf	3,5	;RP0=0, select bank0
  3216  0CAC  1303               	bcf	3,6	;RP1=0, select bank0
  3217  0CAD  00A1               	movwf	___ftmul@f1+1
  3218  0CAE  1683               	bsf	3,5	;RP0=1, select bank1
  3219  0CAF  1303               	bcf	3,6	;RP1=0, select bank1
  3220  0CB0  086A               	movf	(_kd+2)^(0+128),w
  3221  0CB1  1283               	bcf	3,5	;RP0=0, select bank0
  3222  0CB2  1303               	bcf	3,6	;RP1=0, select bank0
  3223  0CB3  00A2               	movwf	___ftmul@f1+2
  3224  0CB4  1683               	bsf	3,5	;RP0=1, select bank1
  3225  0CB5  1303               	bcf	3,6	;RP1=0, select bank1
  3226  0CB6  085E               	movf	(_D+1)^(0+128),w
  3227  0CB7  00F9               	movwf	___awtoft@c+1
  3228  0CB8  085D               	movf	_D^(0+128),w
  3229  0CB9  00F8               	movwf	___awtoft@c
  3230  0CBA  120A  118A  2013  120A  158A  	fcall	___awtoft
  3231  0CBF  0878               	movf	?___awtoft,w
  3232  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3233  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3234  0CC2  00A3               	movwf	___ftmul@f2
  3235  0CC3  0879               	movf	?___awtoft+1,w
  3236  0CC4  00A4               	movwf	___ftmul@f2+1
  3237  0CC5  087A               	movf	?___awtoft+2,w
  3238  0CC6  00A5               	movwf	___ftmul@f2+2
  3239  0CC7  160A  118A  2301  120A  158A  	fcall	___ftmul
  3240  0CCC  1283               	bcf	3,5	;RP0=0, select bank0
  3241  0CCD  1303               	bcf	3,6	;RP1=0, select bank0
  3242  0CCE  0820               	movf	?___ftmul,w
  3243  0CCF  00B0               	movwf	___ftadd@f1
  3244  0CD0  0821               	movf	?___ftmul+1,w
  3245  0CD1  00B1               	movwf	___ftadd@f1+1
  3246  0CD2  0822               	movf	?___ftmul+2,w
  3247  0CD3  00B2               	movwf	___ftadd@f1+2
  3248  0CD4  0844               	movf	_PID$658,w
  3249  0CD5  00B3               	movwf	___ftadd@f2
  3250  0CD6  0845               	movf	_PID$658+1,w
  3251  0CD7  00B4               	movwf	___ftadd@f2+1
  3252  0CD8  0846               	movf	_PID$658+2,w
  3253  0CD9  00B5               	movwf	___ftadd@f2+2
  3254  0CDA  160A  118A  24D4  120A  158A  	fcall	___ftadd
  3255  0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  3256  0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  3257  0CE1  0830               	movf	?___ftadd,w
  3258  0CE2  1683               	bsf	3,5	;RP0=1, select bank1
  3259  0CE3  1303               	bcf	3,6	;RP1=0, select bank1
  3260  0CE4  00DA               	movwf	_pid_val^(0+128)
  3261  0CE5  1283               	bcf	3,5	;RP0=0, select bank0
  3262  0CE6  1303               	bcf	3,6	;RP1=0, select bank0
  3263  0CE7  0831               	movf	?___ftadd+1,w
  3264  0CE8  1683               	bsf	3,5	;RP0=1, select bank1
  3265  0CE9  1303               	bcf	3,6	;RP1=0, select bank1
  3266  0CEA  00DB               	movwf	(_pid_val+1)^(0+128)
  3267  0CEB  1283               	bcf	3,5	;RP0=0, select bank0
  3268  0CEC  1303               	bcf	3,6	;RP1=0, select bank0
  3269  0CED  0832               	movf	?___ftadd+2,w
  3270  0CEE  1683               	bsf	3,5	;RP0=1, select bank1
  3271  0CEF  1303               	bcf	3,6	;RP1=0, select bank1
  3272  0CF0  00DC               	movwf	(_pid_val+2)^(0+128)
  3273                           
  3274                           ;main.c: 55: return CCPR2L += pid_val;
  3275  0CF1  085A               	movf	_pid_val^(0+128),w
  3276  0CF2  00F0               	movwf	___fttol@f1
  3277  0CF3  085B               	movf	(_pid_val+1)^(0+128),w
  3278  0CF4  00F1               	movwf	___fttol@f1+1
  3279  0CF5  085C               	movf	(_pid_val+2)^(0+128),w
  3280  0CF6  00F2               	movwf	___fttol@f1+2
  3281  0CF7  160A  118A  2159   	fcall	___fttol
  3282  0CFA  0870               	movf	?___fttol,w
  3283  0CFB  1283               	bcf	3,5	;RP0=0, select bank0
  3284  0CFC  1303               	bcf	3,6	;RP1=0, select bank0
  3285  0CFD  00C1               	movwf	??_PID
  3286  0CFE  0841               	movf	??_PID,w
  3287  0CFF  079B               	addwf	27,f	;volatile
  3288  0D00  081B               	movf	27,w	;volatile
  3289  0D01  00C2               	movwf	??_PID+1
  3290  0D02  01C3               	clrf	??_PID+2
  3291  0D03  0842               	movf	??_PID+1,w
  3292  0D04  00BD               	movwf	?_PID
  3293  0D05  0843               	movf	??_PID+2,w
  3294  0D06  00BE               	movwf	?_PID+1
  3295                           
  3296                           ;main.c: 56: }
  3297  0D07  0008               	return
  3298  0D08                     l1749:	
  3299                           
  3300                           ;main.c: 57: else
  3301                           ;main.c: 58: return CCPR2L;
  3302  0D08  081B               	movf	27,w	;volatile
  3303  0D09  00C1               	movwf	??_PID
  3304  0D0A  01C2               	clrf	??_PID+1
  3305  0D0B  0841               	movf	??_PID,w
  3306  0D0C  00BD               	movwf	?_PID
  3307  0D0D  0842               	movf	??_PID+1,w
  3308  0D0E  00BE               	movwf	?_PID+1
  3309  0D0F  0008               	return
  3310  0D10                     __end_of_PID:	
  3311                           
  3312                           	psect	text14
  3313  1159                     __ptext14:	
  3314 ;; *************** function ___fttol *****************
  3315 ;; Defined at:
  3316 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fttol.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;  f1              3    0[COMMON] float 
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;  lval            4    9[COMMON] unsigned long 
  3321 ;;  exp1            1   13[COMMON] unsigned char 
  3322 ;;  sign1           1    8[COMMON] unsigned char 
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  4    0[COMMON] long 
  3325 ;; Registers used:
  3326 ;;		wreg, status,2, status,0
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3332 ;;      Params:         4       0       0       0       0
  3333 ;;      Locals:         6       0       0       0       0
  3334 ;;      Temps:          4       0       0       0       0
  3335 ;;      Totals:        14       0       0       0       0
  3336 ;;Total ram usage:       14 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; This function calls:
  3339 ;;		Nothing
  3340 ;; This function is called by:
  3341 ;;		_PID
  3342 ;; This function uses a non-reentrant model
  3343 ;;
  3344                           
  3345                           
  3346                           ;psect for function ___fttol
  3347  1159                     ___fttol:	
  3348                           
  3349                           ;incstack = 0
  3350                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3351  1159  0870               	movf	___fttol@f1,w
  3352  115A  00F4               	movwf	??___fttol
  3353  115B  0871               	movf	___fttol@f1+1,w
  3354  115C  00F5               	movwf	??___fttol+1
  3355  115D  0872               	movf	___fttol@f1+2,w
  3356  115E  00F6               	movwf	??___fttol+2
  3357  115F  1003               	clrc
  3358  1160  0D75               	rlf	??___fttol+1,w
  3359  1161  0D76               	rlf	??___fttol+2,w
  3360  1162  00F7               	movwf	??___fttol+3
  3361  1163  0877               	movf	??___fttol+3,w
  3362  1164  00FD               	movwf	___fttol@exp1
  3363  1165  087D               	movf	___fttol@exp1,w
  3364  1166  1D03               	btfss	3,2
  3365  1167  2971               	goto	l1639
  3366  1168  3000               	movlw	0
  3367  1169  00F3               	movwf	?___fttol+3
  3368  116A  3000               	movlw	0
  3369  116B  00F2               	movwf	?___fttol+2
  3370  116C  3000               	movlw	0
  3371  116D  00F1               	movwf	?___fttol+1
  3372  116E  3000               	movlw	0
  3373  116F  00F0               	movwf	?___fttol
  3374  1170  0008               	return
  3375  1171                     l1639:	
  3376  1171  0870               	movf	___fttol@f1,w
  3377  1172  00F4               	movwf	??___fttol
  3378  1173  0871               	movf	___fttol@f1+1,w
  3379  1174  00F5               	movwf	??___fttol+1
  3380  1175  0872               	movf	___fttol@f1+2,w
  3381  1176  00F6               	movwf	??___fttol+2
  3382  1177  3017               	movlw	23
  3383  1178                     u3565:	
  3384  1178  1003               	clrc
  3385  1179  0CF6               	rrf	??___fttol+2,f
  3386  117A  0CF5               	rrf	??___fttol+1,f
  3387  117B  0CF4               	rrf	??___fttol,f
  3388  117C  3EFF               	addlw	-1
  3389  117D  1D03               	skipz
  3390  117E  2978               	goto	u3565
  3391  117F  0874               	movf	??___fttol,w
  3392  1180  00F7               	movwf	??___fttol+3
  3393  1181  0877               	movf	??___fttol+3,w
  3394  1182  00F8               	movwf	___fttol@sign1
  3395  1183  17F1               	bsf	___fttol@f1+1,7
  3396  1184  30FF               	movlw	255
  3397  1185  05F0               	andwf	___fttol@f1,f
  3398  1186  30FF               	movlw	255
  3399  1187  05F1               	andwf	___fttol@f1+1,f
  3400  1188  3000               	movlw	0
  3401  1189  05F2               	andwf	___fttol@f1+2,f
  3402  118A  0870               	movf	___fttol@f1,w
  3403  118B  00F9               	movwf	___fttol@lval
  3404  118C  0871               	movf	___fttol@f1+1,w
  3405  118D  00FA               	movwf	___fttol@lval+1
  3406  118E  0872               	movf	___fttol@f1+2,w
  3407  118F  00FB               	movwf	___fttol@lval+2
  3408  1190  01FC               	clrf	___fttol@lval+3
  3409  1191  308E               	movlw	142
  3410  1192  02FD               	subwf	___fttol@exp1,f
  3411  1193  1FFD               	btfss	___fttol@exp1,7
  3412  1194  29B3               	goto	l1659
  3413  1195  087D               	movf	___fttol@exp1,w
  3414  1196  3A80               	xorlw	128
  3415  1197  3E8F               	addlw	143
  3416  1198  1803               	skipnc
  3417  1199  29A3               	goto	l1657
  3418  119A  3000               	movlw	0
  3419  119B  00F3               	movwf	?___fttol+3
  3420  119C  3000               	movlw	0
  3421  119D  00F2               	movwf	?___fttol+2
  3422  119E  3000               	movlw	0
  3423  119F  00F1               	movwf	?___fttol+1
  3424  11A0  3000               	movlw	0
  3425  11A1  00F0               	movwf	?___fttol
  3426  11A2  0008               	return
  3427  11A3                     l1657:	
  3428  11A3  3001               	movlw	1
  3429  11A4                     u3595:	
  3430  11A4  1003               	clrc
  3431  11A5  0CFC               	rrf	___fttol@lval+3,f
  3432  11A6  0CFB               	rrf	___fttol@lval+2,f
  3433  11A7  0CFA               	rrf	___fttol@lval+1,f
  3434  11A8  0CF9               	rrf	___fttol@lval,f
  3435  11A9  3EFF               	addlw	-1
  3436  11AA  1D03               	skipz
  3437  11AB  29A4               	goto	u3595
  3438  11AC  3001               	movlw	1
  3439  11AD  00F4               	movwf	??___fttol
  3440  11AE  0874               	movf	??___fttol,w
  3441  11AF  07FD               	addwf	___fttol@exp1,f
  3442  11B0  1903               	btfsc	3,2
  3443  11B1  29CE               	goto	l1667
  3444  11B2  29A3               	goto	l1657
  3445  11B3                     l1659:	
  3446  11B3  3018               	movlw	24
  3447  11B4  027D               	subwf	___fttol@exp1,w
  3448  11B5  1C03               	skipc
  3449  11B6  29CB               	goto	l547
  3450  11B7  3000               	movlw	0
  3451  11B8  00F3               	movwf	?___fttol+3
  3452  11B9  3000               	movlw	0
  3453  11BA  00F2               	movwf	?___fttol+2
  3454  11BB  3000               	movlw	0
  3455  11BC  00F1               	movwf	?___fttol+1
  3456  11BD  3000               	movlw	0
  3457  11BE  00F0               	movwf	?___fttol
  3458  11BF  0008               	return
  3459  11C0                     l1665:	
  3460  11C0  3001               	movlw	1
  3461  11C1  00F4               	movwf	??___fttol
  3462  11C2                     u3625:	
  3463  11C2  1003               	clrc
  3464  11C3  0DF9               	rlf	___fttol@lval,f
  3465  11C4  0DFA               	rlf	___fttol@lval+1,f
  3466  11C5  0DFB               	rlf	___fttol@lval+2,f
  3467  11C6  0DFC               	rlf	___fttol@lval+3,f
  3468  11C7  0BF4               	decfsz	??___fttol,f
  3469  11C8  29C2               	goto	u3625
  3470  11C9  3001               	movlw	1
  3471  11CA  02FD               	subwf	___fttol@exp1,f
  3472  11CB                     l547:	
  3473  11CB  087D               	movf	___fttol@exp1,w
  3474  11CC  1D03               	btfss	3,2
  3475  11CD  29C0               	goto	l1665
  3476  11CE                     l1667:	
  3477  11CE  0878               	movf	___fttol@sign1,w
  3478  11CF  1903               	btfsc	3,2
  3479  11D0  29DC               	goto	l1671
  3480  11D1  09F9               	comf	___fttol@lval,f
  3481  11D2  09FA               	comf	___fttol@lval+1,f
  3482  11D3  09FB               	comf	___fttol@lval+2,f
  3483  11D4  09FC               	comf	___fttol@lval+3,f
  3484  11D5  0AF9               	incf	___fttol@lval,f
  3485  11D6  1903               	skipnz
  3486  11D7  0AFA               	incf	___fttol@lval+1,f
  3487  11D8  1903               	skipnz
  3488  11D9  0AFB               	incf	___fttol@lval+2,f
  3489  11DA  1903               	skipnz
  3490  11DB  0AFC               	incf	___fttol@lval+3,f
  3491  11DC                     l1671:	
  3492  11DC  087C               	movf	___fttol@lval+3,w
  3493  11DD  00F3               	movwf	?___fttol+3
  3494  11DE  087B               	movf	___fttol@lval+2,w
  3495  11DF  00F2               	movwf	?___fttol+2
  3496  11E0  087A               	movf	___fttol@lval+1,w
  3497  11E1  00F1               	movwf	?___fttol+1
  3498  11E2  0879               	movf	___fttol@lval,w
  3499  11E3  00F0               	movwf	?___fttol
  3500  11E4  0008               	return
  3501  11E5                     __end_of___fttol:	
  3502                           
  3503                           	psect	text15
  3504  1301                     __ptext15:	
  3505 ;; *************** function ___ftmul *****************
  3506 ;; Defined at:
  3507 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  f1              3    0[BANK0 ] float 
  3510 ;;  f2              3    3[BANK0 ] float 
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  3513 ;;  sign            1   15[BANK0 ] unsigned char 
  3514 ;;  cntr            1   14[BANK0 ] unsigned char 
  3515 ;;  exp             1   10[BANK0 ] unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  3    0[BANK0 ] float 
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0, pclath, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3525 ;;      Params:         0       6       0       0       0
  3526 ;;      Locals:         0       6       0       0       0
  3527 ;;      Temps:          0       4       0       0       0
  3528 ;;      Totals:         0      16       0       0       0
  3529 ;;Total ram usage:       16 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; Hardware stack levels required when called:    1
  3532 ;; This function calls:
  3533 ;;		___ftpack
  3534 ;; This function is called by:
  3535 ;;		_PID
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           
  3540                           ;psect for function ___ftmul
  3541  1301                     ___ftmul:	
  3542                           
  3543                           ;incstack = 0
  3544                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3545  1301  1283               	bcf	3,5	;RP0=0, select bank0
  3546  1302  1303               	bcf	3,6	;RP1=0, select bank0
  3547  1303  0820               	movf	___ftmul@f1,w
  3548  1304  00A6               	movwf	??___ftmul
  3549  1305  0821               	movf	___ftmul@f1+1,w
  3550  1306  00A7               	movwf	??___ftmul+1
  3551  1307  0822               	movf	___ftmul@f1+2,w
  3552  1308  00A8               	movwf	??___ftmul+2
  3553  1309  1003               	clrc
  3554  130A  0D27               	rlf	??___ftmul+1,w
  3555  130B  0D28               	rlf	??___ftmul+2,w
  3556  130C  00A9               	movwf	??___ftmul+3
  3557  130D  0829               	movf	??___ftmul+3,w
  3558  130E  00AA               	movwf	___ftmul@exp
  3559  130F  082A               	movf	___ftmul@exp,w
  3560  1310  1D03               	btfss	3,2
  3561  1311  2B19               	goto	l1589
  3562  1312  3000               	movlw	0
  3563  1313  00A0               	movwf	?___ftmul
  3564  1314  3000               	movlw	0
  3565  1315  00A1               	movwf	?___ftmul+1
  3566  1316  3000               	movlw	0
  3567  1317  00A2               	movwf	?___ftmul+2
  3568  1318  0008               	return
  3569  1319                     l1589:	
  3570  1319  0823               	movf	___ftmul@f2,w
  3571  131A  00A6               	movwf	??___ftmul
  3572  131B  0824               	movf	___ftmul@f2+1,w
  3573  131C  00A7               	movwf	??___ftmul+1
  3574  131D  0825               	movf	___ftmul@f2+2,w
  3575  131E  00A8               	movwf	??___ftmul+2
  3576  131F  1003               	clrc
  3577  1320  0D27               	rlf	??___ftmul+1,w
  3578  1321  0D28               	rlf	??___ftmul+2,w
  3579  1322  00A9               	movwf	??___ftmul+3
  3580  1323  0829               	movf	??___ftmul+3,w
  3581  1324  00AF               	movwf	___ftmul@sign
  3582  1325  082F               	movf	___ftmul@sign,w
  3583  1326  1D03               	btfss	3,2
  3584  1327  2B2F               	goto	l1595
  3585  1328  3000               	movlw	0
  3586  1329  00A0               	movwf	?___ftmul
  3587  132A  3000               	movlw	0
  3588  132B  00A1               	movwf	?___ftmul+1
  3589  132C  3000               	movlw	0
  3590  132D  00A2               	movwf	?___ftmul+2
  3591  132E  0008               	return
  3592  132F                     l1595:	
  3593  132F  082F               	movf	___ftmul@sign,w
  3594  1330  3E7B               	addlw	123
  3595  1331  00A6               	movwf	??___ftmul
  3596  1332  0826               	movf	??___ftmul,w
  3597  1333  07AA               	addwf	___ftmul@exp,f
  3598  1334  0820               	movf	___ftmul@f1,w
  3599  1335  00A6               	movwf	??___ftmul
  3600  1336  0821               	movf	___ftmul@f1+1,w
  3601  1337  00A7               	movwf	??___ftmul+1
  3602  1338  0822               	movf	___ftmul@f1+2,w
  3603  1339  00A8               	movwf	??___ftmul+2
  3604  133A  3010               	movlw	16
  3605  133B                     u3435:	
  3606  133B  1003               	clrc
  3607  133C  0CA8               	rrf	??___ftmul+2,f
  3608  133D  0CA7               	rrf	??___ftmul+1,f
  3609  133E  0CA6               	rrf	??___ftmul,f
  3610  133F  3EFF               	addlw	-1
  3611  1340  1D03               	skipz
  3612  1341  2B3B               	goto	u3435
  3613  1342  0826               	movf	??___ftmul,w
  3614  1343  00A9               	movwf	??___ftmul+3
  3615  1344  0829               	movf	??___ftmul+3,w
  3616  1345  00AF               	movwf	___ftmul@sign
  3617  1346  0823               	movf	___ftmul@f2,w
  3618  1347  00A6               	movwf	??___ftmul
  3619  1348  0824               	movf	___ftmul@f2+1,w
  3620  1349  00A7               	movwf	??___ftmul+1
  3621  134A  0825               	movf	___ftmul@f2+2,w
  3622  134B  00A8               	movwf	??___ftmul+2
  3623  134C  3010               	movlw	16
  3624  134D                     u3445:	
  3625  134D  1003               	clrc
  3626  134E  0CA8               	rrf	??___ftmul+2,f
  3627  134F  0CA7               	rrf	??___ftmul+1,f
  3628  1350  0CA6               	rrf	??___ftmul,f
  3629  1351  3EFF               	addlw	-1
  3630  1352  1D03               	skipz
  3631  1353  2B4D               	goto	u3445
  3632  1354  0826               	movf	??___ftmul,w
  3633  1355  00A9               	movwf	??___ftmul+3
  3634  1356  0829               	movf	??___ftmul+3,w
  3635  1357  06AF               	xorwf	___ftmul@sign,f
  3636  1358  3080               	movlw	128
  3637  1359  00A6               	movwf	??___ftmul
  3638  135A  0826               	movf	??___ftmul,w
  3639  135B  05AF               	andwf	___ftmul@sign,f
  3640  135C  17A1               	bsf	___ftmul@f1+1,7
  3641  135D  17A4               	bsf	___ftmul@f2+1,7
  3642  135E  30FF               	movlw	255
  3643  135F  05A3               	andwf	___ftmul@f2,f
  3644  1360  30FF               	movlw	255
  3645  1361  05A4               	andwf	___ftmul@f2+1,f
  3646  1362  3000               	movlw	0
  3647  1363  05A5               	andwf	___ftmul@f2+2,f
  3648  1364  3000               	movlw	0
  3649  1365  00AB               	movwf	___ftmul@f3_as_product
  3650  1366  3000               	movlw	0
  3651  1367  00AC               	movwf	___ftmul@f3_as_product+1
  3652  1368  3000               	movlw	0
  3653  1369  00AD               	movwf	___ftmul@f3_as_product+2
  3654  136A  3007               	movlw	7
  3655  136B  00A6               	movwf	??___ftmul
  3656  136C  0826               	movf	??___ftmul,w
  3657  136D  00AE               	movwf	___ftmul@cntr
  3658  136E                     l1607:	
  3659  136E  1C20               	btfss	___ftmul@f1,0
  3660  136F  2B7E               	goto	l1611
  3661  1370  0823               	movf	___ftmul@f2,w
  3662  1371  07AB               	addwf	___ftmul@f3_as_product,f
  3663  1372  0824               	movf	___ftmul@f2+1,w
  3664  1373  1103               	clrz
  3665  1374  1803               	skipnc
  3666  1375  0A24               	incf	___ftmul@f2+1,w
  3667  1376  1D03               	btfss	3,2
  3668  1377  07AC               	addwf	___ftmul@f3_as_product+1,f
  3669  1378  0825               	movf	___ftmul@f2+2,w
  3670  1379  1103               	clrz
  3671  137A  1803               	skipnc
  3672  137B  0A25               	incf	___ftmul@f2+2,w
  3673  137C  1D03               	btfss	3,2
  3674  137D  07AD               	addwf	___ftmul@f3_as_product+2,f
  3675  137E                     l1611:	
  3676  137E  3001               	movlw	1
  3677  137F                     u3475:	
  3678  137F  1003               	clrc
  3679  1380  0CA2               	rrf	___ftmul@f1+2,f
  3680  1381  0CA1               	rrf	___ftmul@f1+1,f
  3681  1382  0CA0               	rrf	___ftmul@f1,f
  3682  1383  3EFF               	addlw	-1
  3683  1384  1D03               	skipz
  3684  1385  2B7F               	goto	u3475
  3685  1386  3001               	movlw	1
  3686  1387                     u3485:	
  3687  1387  1003               	clrc
  3688  1388  0DA3               	rlf	___ftmul@f2,f
  3689  1389  0DA4               	rlf	___ftmul@f2+1,f
  3690  138A  0DA5               	rlf	___ftmul@f2+2,f
  3691  138B  3EFF               	addlw	-1
  3692  138C  1D03               	skipz
  3693  138D  2B87               	goto	u3485
  3694  138E  3001               	movlw	1
  3695  138F  02AE               	subwf	___ftmul@cntr,f
  3696  1390  1D03               	btfss	3,2
  3697  1391  2B6E               	goto	l1607
  3698  1392  3009               	movlw	9
  3699  1393  00A6               	movwf	??___ftmul
  3700  1394  0826               	movf	??___ftmul,w
  3701  1395  00AE               	movwf	___ftmul@cntr
  3702  1396                     l1619:	
  3703  1396  1C20               	btfss	___ftmul@f1,0
  3704  1397  2BA6               	goto	l1623
  3705  1398  0823               	movf	___ftmul@f2,w
  3706  1399  07AB               	addwf	___ftmul@f3_as_product,f
  3707  139A  0824               	movf	___ftmul@f2+1,w
  3708  139B  1103               	clrz
  3709  139C  1803               	skipnc
  3710  139D  0A24               	incf	___ftmul@f2+1,w
  3711  139E  1D03               	btfss	3,2
  3712  139F  07AC               	addwf	___ftmul@f3_as_product+1,f
  3713  13A0  0825               	movf	___ftmul@f2+2,w
  3714  13A1  1103               	clrz
  3715  13A2  1803               	skipnc
  3716  13A3  0A25               	incf	___ftmul@f2+2,w
  3717  13A4  1D03               	btfss	3,2
  3718  13A5  07AD               	addwf	___ftmul@f3_as_product+2,f
  3719  13A6                     l1623:	
  3720  13A6  3001               	movlw	1
  3721  13A7                     u3525:	
  3722  13A7  1003               	clrc
  3723  13A8  0CA2               	rrf	___ftmul@f1+2,f
  3724  13A9  0CA1               	rrf	___ftmul@f1+1,f
  3725  13AA  0CA0               	rrf	___ftmul@f1,f
  3726  13AB  3EFF               	addlw	-1
  3727  13AC  1D03               	skipz
  3728  13AD  2BA7               	goto	u3525
  3729  13AE  3001               	movlw	1
  3730  13AF                     u3535:	
  3731  13AF  1003               	clrc
  3732  13B0  0CAD               	rrf	___ftmul@f3_as_product+2,f
  3733  13B1  0CAC               	rrf	___ftmul@f3_as_product+1,f
  3734  13B2  0CAB               	rrf	___ftmul@f3_as_product,f
  3735  13B3  3EFF               	addlw	-1
  3736  13B4  1D03               	skipz
  3737  13B5  2BAF               	goto	u3535
  3738  13B6  3001               	movlw	1
  3739  13B7  02AE               	subwf	___ftmul@cntr,f
  3740  13B8  1D03               	btfss	3,2
  3741  13B9  2B96               	goto	l1619
  3742  13BA  082B               	movf	___ftmul@f3_as_product,w
  3743  13BB  00F0               	movwf	___ftpack@arg
  3744  13BC  082C               	movf	___ftmul@f3_as_product+1,w
  3745  13BD  00F1               	movwf	___ftpack@arg+1
  3746  13BE  082D               	movf	___ftmul@f3_as_product+2,w
  3747  13BF  00F2               	movwf	___ftpack@arg+2
  3748  13C0  082A               	movf	___ftmul@exp,w
  3749  13C1  00A6               	movwf	??___ftmul
  3750  13C2  0826               	movf	??___ftmul,w
  3751  13C3  00F3               	movwf	___ftpack@exp
  3752  13C4  082F               	movf	___ftmul@sign,w
  3753  13C5  00A7               	movwf	??___ftmul+1
  3754  13C6  0827               	movf	??___ftmul+1,w
  3755  13C7  00F4               	movwf	___ftpack@sign
  3756  13C8  160A  158A  26B4   	fcall	___ftpack
  3757  13CB  0870               	movf	?___ftpack,w
  3758  13CC  1283               	bcf	3,5	;RP0=0, select bank0
  3759  13CD  1303               	bcf	3,6	;RP1=0, select bank0
  3760  13CE  00A0               	movwf	?___ftmul
  3761  13CF  0871               	movf	?___ftpack+1,w
  3762  13D0  00A1               	movwf	?___ftmul+1
  3763  13D1  0872               	movf	?___ftpack+2,w
  3764  13D2  00A2               	movwf	?___ftmul+2
  3765  13D3  0008               	return
  3766  13D4                     __end_of___ftmul:	
  3767                           
  3768                           	psect	text16
  3769  14D4                     __ptext16:	
  3770 ;; *************** function ___ftadd *****************
  3771 ;; Defined at:
  3772 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftadd.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;  f1              3   16[BANK0 ] float 
  3775 ;;  f2              3   19[BANK0 ] float 
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  exp1            1   28[BANK0 ] unsigned char 
  3778 ;;  exp2            1   27[BANK0 ] unsigned char 
  3779 ;;  sign            1   26[BANK0 ] unsigned char 
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  3   16[BANK0 ] float 
  3782 ;; Registers used:
  3783 ;;		wreg, status,2, status,0, pclath, cstack
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3789 ;;      Params:         0       6       0       0       0
  3790 ;;      Locals:         0       3       0       0       0
  3791 ;;      Temps:          0       4       0       0       0
  3792 ;;      Totals:         0      13       0       0       0
  3793 ;;Total ram usage:       13 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; Hardware stack levels required when called:    1
  3796 ;; This function calls:
  3797 ;;		___ftpack
  3798 ;; This function is called by:
  3799 ;;		_PID
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           
  3804                           ;psect for function ___ftadd
  3805  14D4                     ___ftadd:	
  3806                           
  3807                           ;incstack = 0
  3808                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3809  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  3810  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  3811  14D6  0830               	movf	___ftadd@f1,w
  3812  14D7  00B6               	movwf	??___ftadd
  3813  14D8  0831               	movf	___ftadd@f1+1,w
  3814  14D9  00B7               	movwf	??___ftadd+1
  3815  14DA  0832               	movf	___ftadd@f1+2,w
  3816  14DB  00B8               	movwf	??___ftadd+2
  3817  14DC  1003               	clrc
  3818  14DD  0D37               	rlf	??___ftadd+1,w
  3819  14DE  0D38               	rlf	??___ftadd+2,w
  3820  14DF  00B9               	movwf	??___ftadd+3
  3821  14E0  0839               	movf	??___ftadd+3,w
  3822  14E1  00BC               	movwf	___ftadd@exp1
  3823  14E2  0833               	movf	___ftadd@f2,w
  3824  14E3  00B6               	movwf	??___ftadd
  3825  14E4  0834               	movf	___ftadd@f2+1,w
  3826  14E5  00B7               	movwf	??___ftadd+1
  3827  14E6  0835               	movf	___ftadd@f2+2,w
  3828  14E7  00B8               	movwf	??___ftadd+2
  3829  14E8  1003               	clrc
  3830  14E9  0D37               	rlf	??___ftadd+1,w
  3831  14EA  0D38               	rlf	??___ftadd+2,w
  3832  14EB  00B9               	movwf	??___ftadd+3
  3833  14EC  0839               	movf	??___ftadd+3,w
  3834  14ED  00BB               	movwf	___ftadd@exp2
  3835  14EE  083C               	movf	___ftadd@exp1,w
  3836  14EF  1903               	btfsc	3,2
  3837  14F0  2CFD               	goto	l1519
  3838  14F1  083B               	movf	___ftadd@exp2,w
  3839  14F2  023C               	subwf	___ftadd@exp1,w
  3840  14F3  1803               	skipnc
  3841  14F4  2D04               	goto	l1523
  3842  14F5  033C               	decf	___ftadd@exp1,w
  3843  14F6  3AFF               	xorlw	255
  3844  14F7  073B               	addwf	___ftadd@exp2,w
  3845  14F8  00B6               	movwf	??___ftadd
  3846  14F9  3019               	movlw	25
  3847  14FA  0236               	subwf	??___ftadd,w
  3848  14FB  1C03               	skipc
  3849  14FC  2D04               	goto	l1523
  3850  14FD                     l1519:	
  3851  14FD  0833               	movf	___ftadd@f2,w
  3852  14FE  00B0               	movwf	?___ftadd
  3853  14FF  0834               	movf	___ftadd@f2+1,w
  3854  1500  00B1               	movwf	?___ftadd+1
  3855  1501  0835               	movf	___ftadd@f2+2,w
  3856  1502  00B2               	movwf	?___ftadd+2
  3857  1503  0008               	return
  3858  1504                     l1523:	
  3859  1504  083B               	movf	___ftadd@exp2,w
  3860  1505  1903               	btfsc	3,2
  3861  1506  0008               	return
  3862  1507  083C               	movf	___ftadd@exp1,w
  3863  1508  023B               	subwf	___ftadd@exp2,w
  3864  1509  1803               	skipnc
  3865  150A  2D13               	goto	l1529
  3866  150B  033B               	decf	___ftadd@exp2,w
  3867  150C  3AFF               	xorlw	255
  3868  150D  073C               	addwf	___ftadd@exp1,w
  3869  150E  00B6               	movwf	??___ftadd
  3870  150F  3019               	movlw	25
  3871  1510  0236               	subwf	??___ftadd,w
  3872  1511  1803               	btfsc	3,0
  3873  1512  0008               	return
  3874  1513                     l1529:	
  3875  1513  3006               	movlw	6
  3876  1514  00B6               	movwf	??___ftadd
  3877  1515  0836               	movf	??___ftadd,w
  3878  1516  00BA               	movwf	___ftadd@sign
  3879  1517  1BB2               	btfsc	___ftadd@f1+2,7
  3880  1518  17BA               	bsf	___ftadd@sign,7
  3881  1519  1BB5               	btfsc	___ftadd@f2+2,7
  3882  151A  173A               	bsf	___ftadd@sign,6
  3883  151B  17B1               	bsf	___ftadd@f1+1,7
  3884  151C  30FF               	movlw	255
  3885  151D  05B0               	andwf	___ftadd@f1,f
  3886  151E  30FF               	movlw	255
  3887  151F  05B1               	andwf	___ftadd@f1+1,f
  3888  1520  3000               	movlw	0
  3889  1521  05B2               	andwf	___ftadd@f1+2,f
  3890  1522  17B4               	bsf	___ftadd@f2+1,7
  3891  1523  30FF               	movlw	255
  3892  1524  05B3               	andwf	___ftadd@f2,f
  3893  1525  30FF               	movlw	255
  3894  1526  05B4               	andwf	___ftadd@f2+1,f
  3895  1527  3000               	movlw	0
  3896  1528  05B5               	andwf	___ftadd@f2+2,f
  3897  1529  083B               	movf	___ftadd@exp2,w
  3898  152A  023C               	subwf	___ftadd@exp1,w
  3899  152B  1803               	skipnc
  3900  152C  2D53               	goto	l1551
  3901  152D                     l1541:	
  3902  152D  3001               	movlw	1
  3903  152E                     u3265:	
  3904  152E  1003               	clrc
  3905  152F  0DB3               	rlf	___ftadd@f2,f
  3906  1530  0DB4               	rlf	___ftadd@f2+1,f
  3907  1531  0DB5               	rlf	___ftadd@f2+2,f
  3908  1532  3EFF               	addlw	-1
  3909  1533  1D03               	skipz
  3910  1534  2D2E               	goto	u3265
  3911  1535  3001               	movlw	1
  3912  1536  02BB               	subwf	___ftadd@exp2,f
  3913  1537  083B               	movf	___ftadd@exp2,w
  3914  1538  063C               	xorwf	___ftadd@exp1,w
  3915  1539  1903               	skipnz
  3916  153A  2D4E               	goto	l1549
  3917  153B  3001               	movlw	1
  3918  153C  02BA               	subwf	___ftadd@sign,f
  3919  153D  083A               	movf	___ftadd@sign,w
  3920  153E  3907               	andlw	7
  3921  153F  1903               	btfsc	3,2
  3922  1540  2D4E               	goto	l1549
  3923  1541  2D2D               	goto	l1541
  3924  1542                     l1547:	
  3925  1542  3001               	movlw	1
  3926  1543                     u3295:	
  3927  1543  1003               	clrc
  3928  1544  0CB2               	rrf	___ftadd@f1+2,f
  3929  1545  0CB1               	rrf	___ftadd@f1+1,f
  3930  1546  0CB0               	rrf	___ftadd@f1,f
  3931  1547  3EFF               	addlw	-1
  3932  1548  1D03               	skipz
  3933  1549  2D43               	goto	u3295
  3934  154A  3001               	movlw	1
  3935  154B  00B6               	movwf	??___ftadd
  3936  154C  0836               	movf	??___ftadd,w
  3937  154D  07BC               	addwf	___ftadd@exp1,f
  3938  154E                     l1549:	
  3939  154E  083C               	movf	___ftadd@exp1,w
  3940  154F  063B               	xorwf	___ftadd@exp2,w
  3941  1550  1903               	btfsc	3,2
  3942  1551  2D7C               	goto	l487
  3943  1552  2D42               	goto	l1547
  3944  1553                     l1551:	
  3945  1553  083C               	movf	___ftadd@exp1,w
  3946  1554  023B               	subwf	___ftadd@exp2,w
  3947  1555  1803               	skipnc
  3948  1556  2D7C               	goto	l487
  3949  1557                     l1553:	
  3950  1557  3001               	movlw	1
  3951  1558                     u3325:	
  3952  1558  1003               	clrc
  3953  1559  0DB0               	rlf	___ftadd@f1,f
  3954  155A  0DB1               	rlf	___ftadd@f1+1,f
  3955  155B  0DB2               	rlf	___ftadd@f1+2,f
  3956  155C  3EFF               	addlw	-1
  3957  155D  1D03               	skipz
  3958  155E  2D58               	goto	u3325
  3959  155F  3001               	movlw	1
  3960  1560  02BC               	subwf	___ftadd@exp1,f
  3961  1561  083B               	movf	___ftadd@exp2,w
  3962  1562  063C               	xorwf	___ftadd@exp1,w
  3963  1563  1903               	skipnz
  3964  1564  2D78               	goto	l1561
  3965  1565  3001               	movlw	1
  3966  1566  02BA               	subwf	___ftadd@sign,f
  3967  1567  083A               	movf	___ftadd@sign,w
  3968  1568  3907               	andlw	7
  3969  1569  1903               	btfsc	3,2
  3970  156A  2D78               	goto	l1561
  3971  156B  2D57               	goto	l1553
  3972  156C                     l1559:	
  3973  156C  3001               	movlw	1
  3974  156D                     u3355:	
  3975  156D  1003               	clrc
  3976  156E  0CB5               	rrf	___ftadd@f2+2,f
  3977  156F  0CB4               	rrf	___ftadd@f2+1,f
  3978  1570  0CB3               	rrf	___ftadd@f2,f
  3979  1571  3EFF               	addlw	-1
  3980  1572  1D03               	skipz
  3981  1573  2D6D               	goto	u3355
  3982  1574  3001               	movlw	1
  3983  1575  00B6               	movwf	??___ftadd
  3984  1576  0836               	movf	??___ftadd,w
  3985  1577  07BB               	addwf	___ftadd@exp2,f
  3986  1578                     l1561:	
  3987  1578  083C               	movf	___ftadd@exp1,w
  3988  1579  063B               	xorwf	___ftadd@exp2,w
  3989  157A  1D03               	skipz
  3990  157B  2D6C               	goto	l1559
  3991  157C                     l487:	
  3992  157C  1FBA               	btfss	___ftadd@sign,7
  3993  157D  2D8E               	goto	l1565
  3994  157E  30FF               	movlw	255
  3995  157F  06B0               	xorwf	___ftadd@f1,f
  3996  1580  30FF               	movlw	255
  3997  1581  06B1               	xorwf	___ftadd@f1+1,f
  3998  1582  30FF               	movlw	255
  3999  1583  06B2               	xorwf	___ftadd@f1+2,f
  4000  1584  3001               	movlw	1
  4001  1585  07B0               	addwf	___ftadd@f1,f
  4002  1586  3000               	movlw	0
  4003  1587  1803               	skipnc
  4004  1588  3001               	movlw	1
  4005  1589  07B1               	addwf	___ftadd@f1+1,f
  4006  158A  3000               	movlw	0
  4007  158B  1803               	skipnc
  4008  158C  3001               	movlw	1
  4009  158D  07B2               	addwf	___ftadd@f1+2,f
  4010  158E                     l1565:	
  4011  158E  1F3A               	btfss	___ftadd@sign,6
  4012  158F  2DA0               	goto	l1569
  4013  1590  30FF               	movlw	255
  4014  1591  06B3               	xorwf	___ftadd@f2,f
  4015  1592  30FF               	movlw	255
  4016  1593  06B4               	xorwf	___ftadd@f2+1,f
  4017  1594  30FF               	movlw	255
  4018  1595  06B5               	xorwf	___ftadd@f2+2,f
  4019  1596  3001               	movlw	1
  4020  1597  07B3               	addwf	___ftadd@f2,f
  4021  1598  3000               	movlw	0
  4022  1599  1803               	skipnc
  4023  159A  3001               	movlw	1
  4024  159B  07B4               	addwf	___ftadd@f2+1,f
  4025  159C  3000               	movlw	0
  4026  159D  1803               	skipnc
  4027  159E  3001               	movlw	1
  4028  159F  07B5               	addwf	___ftadd@f2+2,f
  4029  15A0                     l1569:	
  4030  15A0  01BA               	clrf	___ftadd@sign
  4031  15A1  0830               	movf	___ftadd@f1,w
  4032  15A2  07B3               	addwf	___ftadd@f2,f
  4033  15A3  0831               	movf	___ftadd@f1+1,w
  4034  15A4  1103               	clrz
  4035  15A5  1803               	skipnc
  4036  15A6  0A31               	incf	___ftadd@f1+1,w
  4037  15A7  1D03               	btfss	3,2
  4038  15A8  07B4               	addwf	___ftadd@f2+1,f
  4039  15A9  0832               	movf	___ftadd@f1+2,w
  4040  15AA  1103               	clrz
  4041  15AB  1803               	skipnc
  4042  15AC  0A32               	incf	___ftadd@f1+2,w
  4043  15AD  1D03               	btfss	3,2
  4044  15AE  07B5               	addwf	___ftadd@f2+2,f
  4045  15AF  1FB5               	btfss	___ftadd@f2+2,7
  4046  15B0  2DC3               	goto	l1579
  4047  15B1  30FF               	movlw	255
  4048  15B2  06B3               	xorwf	___ftadd@f2,f
  4049  15B3  30FF               	movlw	255
  4050  15B4  06B4               	xorwf	___ftadd@f2+1,f
  4051  15B5  30FF               	movlw	255
  4052  15B6  06B5               	xorwf	___ftadd@f2+2,f
  4053  15B7  3001               	movlw	1
  4054  15B8  07B3               	addwf	___ftadd@f2,f
  4055  15B9  3000               	movlw	0
  4056  15BA  1803               	skipnc
  4057  15BB  3001               	movlw	1
  4058  15BC  07B4               	addwf	___ftadd@f2+1,f
  4059  15BD  3000               	movlw	0
  4060  15BE  1803               	skipnc
  4061  15BF  3001               	movlw	1
  4062  15C0  07B5               	addwf	___ftadd@f2+2,f
  4063  15C1  01BA               	clrf	___ftadd@sign
  4064  15C2  0ABA               	incf	___ftadd@sign,f
  4065  15C3                     l1579:	
  4066  15C3  0833               	movf	___ftadd@f2,w
  4067  15C4  00F0               	movwf	___ftpack@arg
  4068  15C5  0834               	movf	___ftadd@f2+1,w
  4069  15C6  00F1               	movwf	___ftpack@arg+1
  4070  15C7  0835               	movf	___ftadd@f2+2,w
  4071  15C8  00F2               	movwf	___ftpack@arg+2
  4072  15C9  083C               	movf	___ftadd@exp1,w
  4073  15CA  00B6               	movwf	??___ftadd
  4074  15CB  0836               	movf	??___ftadd,w
  4075  15CC  00F3               	movwf	___ftpack@exp
  4076  15CD  083A               	movf	___ftadd@sign,w
  4077  15CE  00B7               	movwf	??___ftadd+1
  4078  15CF  0837               	movf	??___ftadd+1,w
  4079  15D0  00F4               	movwf	___ftpack@sign
  4080  15D1  160A  158A  26B4   	fcall	___ftpack
  4081  15D4  0870               	movf	?___ftpack,w
  4082  15D5  1283               	bcf	3,5	;RP0=0, select bank0
  4083  15D6  1303               	bcf	3,6	;RP1=0, select bank0
  4084  15D7  00B0               	movwf	?___ftadd
  4085  15D8  0871               	movf	?___ftpack+1,w
  4086  15D9  00B1               	movwf	?___ftadd+1
  4087  15DA  0872               	movf	?___ftpack+2,w
  4088  15DB  00B2               	movwf	?___ftadd+2
  4089  15DC  0008               	return
  4090  15DD                     __end_of___ftadd:	
  4091                           
  4092                           	psect	text17
  4093  0013                     __ptext17:	
  4094 ;; *************** function ___awtoft *****************
  4095 ;; Defined at:
  4096 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awtoft.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;  c               2    8[COMMON] int 
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  sign            1   13[COMMON] unsigned char 
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  3    8[COMMON] float 
  4103 ;; Registers used:
  4104 ;;		wreg, status,2, status,0, pclath, cstack
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4110 ;;      Params:         3       0       0       0       0
  4111 ;;      Locals:         1       0       0       0       0
  4112 ;;      Temps:          2       0       0       0       0
  4113 ;;      Totals:         6       0       0       0       0
  4114 ;;Total ram usage:        6 bytes
  4115 ;; Hardware stack levels used:    1
  4116 ;; Hardware stack levels required when called:    1
  4117 ;; This function calls:
  4118 ;;		___ftpack
  4119 ;; This function is called by:
  4120 ;;		_PID
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           
  4125                           ;psect for function ___awtoft
  4126  0013                     ___awtoft:	
  4127                           
  4128                           ;incstack = 0
  4129                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  4130  0013  01FD               	clrf	___awtoft@sign
  4131  0014  1FF9               	btfss	___awtoft@c+1,7
  4132  0015  281D               	goto	l1509
  4133  0016  09F8               	comf	___awtoft@c,f
  4134  0017  09F9               	comf	___awtoft@c+1,f
  4135  0018  0AF8               	incf	___awtoft@c,f
  4136  0019  1903               	skipnz
  4137  001A  0AF9               	incf	___awtoft@c+1,f
  4138  001B  01FD               	clrf	___awtoft@sign
  4139  001C  0AFD               	incf	___awtoft@sign,f
  4140  001D                     l1509:	
  4141  001D  0878               	movf	___awtoft@c,w
  4142  001E  00F0               	movwf	___ftpack@arg
  4143  001F  0879               	movf	___awtoft@c+1,w
  4144  0020  00F1               	movwf	___ftpack@arg+1
  4145  0021  01F2               	clrf	___ftpack@arg+2
  4146  0022  308E               	movlw	142
  4147  0023  00FB               	movwf	??___awtoft
  4148  0024  087B               	movf	??___awtoft,w
  4149  0025  00F3               	movwf	___ftpack@exp
  4150  0026  087D               	movf	___awtoft@sign,w
  4151  0027  00FC               	movwf	??___awtoft+1
  4152  0028  087C               	movf	??___awtoft+1,w
  4153  0029  00F4               	movwf	___ftpack@sign
  4154  002A  160A  158A  26B4   	fcall	___ftpack
  4155  002D  0870               	movf	?___ftpack,w
  4156  002E  00F8               	movwf	?___awtoft
  4157  002F  0871               	movf	?___ftpack+1,w
  4158  0030  00F9               	movwf	?___awtoft+1
  4159  0031  0872               	movf	?___ftpack+2,w
  4160  0032  00FA               	movwf	?___awtoft+2
  4161  0033  0008               	return
  4162  0034                     __end_of___awtoft:	
  4163                           
  4164                           	psect	text18
  4165  1EB4                     __ptext18:	
  4166 ;; *************** function ___ftpack *****************
  4167 ;; Defined at:
  4168 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  arg             3    0[COMMON] unsigned um
  4171 ;;  exp             1    3[COMMON] unsigned char 
  4172 ;;  sign            1    4[COMMON] unsigned char 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;		None
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  3    0[COMMON] float 
  4177 ;; Registers used:
  4178 ;;		wreg, status,2, status,0
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4184 ;;      Params:         5       0       0       0       0
  4185 ;;      Locals:         0       0       0       0       0
  4186 ;;      Temps:          3       0       0       0       0
  4187 ;;      Totals:         8       0       0       0       0
  4188 ;;Total ram usage:        8 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; This function calls:
  4191 ;;		Nothing
  4192 ;; This function is called by:
  4193 ;;		___awtoft
  4194 ;;		___ftadd
  4195 ;;		___ftmul
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           
  4200                           ;psect for function ___ftpack
  4201  1EB4                     ___ftpack:	
  4202                           
  4203                           ;incstack = 0
  4204                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4205  1EB4  0873               	movf	___ftpack@exp,w
  4206  1EB5  1903               	btfsc	3,2
  4207  1EB6  2EBC               	goto	l1315
  4208  1EB7  0872               	movf	___ftpack@arg+2,w
  4209  1EB8  0471               	iorwf	___ftpack@arg+1,w
  4210  1EB9  0470               	iorwf	___ftpack@arg,w
  4211  1EBA  1D03               	skipz
  4212  1EBB  2ECF               	goto	l1321
  4213  1EBC                     l1315:	
  4214  1EBC  3000               	movlw	0
  4215  1EBD  00F0               	movwf	?___ftpack
  4216  1EBE  3000               	movlw	0
  4217  1EBF  00F1               	movwf	?___ftpack+1
  4218  1EC0  3000               	movlw	0
  4219  1EC1  00F2               	movwf	?___ftpack+2
  4220  1EC2  0008               	return
  4221  1EC3                     l1319:	
  4222  1EC3  3001               	movlw	1
  4223  1EC4  00F5               	movwf	??___ftpack
  4224  1EC5  0875               	movf	??___ftpack,w
  4225  1EC6  07F3               	addwf	___ftpack@exp,f
  4226  1EC7  3001               	movlw	1
  4227  1EC8                     u1995:	
  4228  1EC8  1003               	clrc
  4229  1EC9  0CF2               	rrf	___ftpack@arg+2,f
  4230  1ECA  0CF1               	rrf	___ftpack@arg+1,f
  4231  1ECB  0CF0               	rrf	___ftpack@arg,f
  4232  1ECC  3EFF               	addlw	-1
  4233  1ECD  1D03               	skipz
  4234  1ECE  2EC8               	goto	u1995
  4235  1ECF                     l1321:	
  4236  1ECF  30FE               	movlw	254
  4237  1ED0  0572               	andwf	___ftpack@arg+2,w
  4238  1ED1  1903               	btfsc	3,2
  4239  1ED2  2EEA               	goto	l456
  4240  1ED3  2EC3               	goto	l1319
  4241  1ED4                     l1323:	
  4242  1ED4  3001               	movlw	1
  4243  1ED5  00F5               	movwf	??___ftpack
  4244  1ED6  0875               	movf	??___ftpack,w
  4245  1ED7  07F3               	addwf	___ftpack@exp,f
  4246  1ED8  3001               	movlw	1
  4247  1ED9  07F0               	addwf	___ftpack@arg,f
  4248  1EDA  3000               	movlw	0
  4249  1EDB  1803               	skipnc
  4250  1EDC  3001               	movlw	1
  4251  1EDD  07F1               	addwf	___ftpack@arg+1,f
  4252  1EDE  3000               	movlw	0
  4253  1EDF  1803               	skipnc
  4254  1EE0  3001               	movlw	1
  4255  1EE1  07F2               	addwf	___ftpack@arg+2,f
  4256  1EE2  3001               	movlw	1
  4257  1EE3                     u2015:	
  4258  1EE3  1003               	clrc
  4259  1EE4  0CF2               	rrf	___ftpack@arg+2,f
  4260  1EE5  0CF1               	rrf	___ftpack@arg+1,f
  4261  1EE6  0CF0               	rrf	___ftpack@arg,f
  4262  1EE7  3EFF               	addlw	-1
  4263  1EE8  1D03               	skipz
  4264  1EE9  2EE3               	goto	u2015
  4265  1EEA                     l456:	
  4266  1EEA  30FF               	movlw	255
  4267  1EEB  0572               	andwf	___ftpack@arg+2,w
  4268  1EEC  1903               	btfsc	3,2
  4269  1EED  2EF9               	goto	l1331
  4270  1EEE  2ED4               	goto	l1323
  4271  1EEF                     l1329:	
  4272  1EEF  3001               	movlw	1
  4273  1EF0  02F3               	subwf	___ftpack@exp,f
  4274  1EF1  3001               	movlw	1
  4275  1EF2                     u2035:	
  4276  1EF2  1003               	clrc
  4277  1EF3  0DF0               	rlf	___ftpack@arg,f
  4278  1EF4  0DF1               	rlf	___ftpack@arg+1,f
  4279  1EF5  0DF2               	rlf	___ftpack@arg+2,f
  4280  1EF6  3EFF               	addlw	-1
  4281  1EF7  1D03               	skipz
  4282  1EF8  2EF2               	goto	u2035
  4283  1EF9                     l1331:	
  4284  1EF9  1BF1               	btfsc	___ftpack@arg+1,7
  4285  1EFA  2EFF               	goto	l463
  4286  1EFB  3002               	movlw	2
  4287  1EFC  0273               	subwf	___ftpack@exp,w
  4288  1EFD  1803               	skipnc
  4289  1EFE  2EEF               	goto	l1329
  4290  1EFF                     l463:	
  4291  1EFF  1873               	btfsc	___ftpack@exp,0
  4292  1F00  2F07               	goto	l464
  4293  1F01  30FF               	movlw	255
  4294  1F02  05F0               	andwf	___ftpack@arg,f
  4295  1F03  307F               	movlw	127
  4296  1F04  05F1               	andwf	___ftpack@arg+1,f
  4297  1F05  30FF               	movlw	255
  4298  1F06  05F2               	andwf	___ftpack@arg+2,f
  4299  1F07                     l464:	
  4300  1F07  1003               	clrc
  4301  1F08  0CF3               	rrf	___ftpack@exp,f
  4302  1F09  0873               	movf	___ftpack@exp,w
  4303  1F0A  00F5               	movwf	??___ftpack
  4304  1F0B  01F6               	clrf	??___ftpack+1
  4305  1F0C  01F7               	clrf	??___ftpack+2
  4306  1F0D  3010               	movlw	16
  4307  1F0E                     u2075:	
  4308  1F0E  1003               	clrc
  4309  1F0F  0DF5               	rlf	??___ftpack,f
  4310  1F10  0DF6               	rlf	??___ftpack+1,f
  4311  1F11  0DF7               	rlf	??___ftpack+2,f
  4312  1F12  3EFF               	addlw	-1
  4313  1F13  1D03               	skipz
  4314  1F14  2F0E               	goto	u2075
  4315  1F15  0875               	movf	??___ftpack,w
  4316  1F16  04F0               	iorwf	___ftpack@arg,f
  4317  1F17  0876               	movf	??___ftpack+1,w
  4318  1F18  04F1               	iorwf	___ftpack@arg+1,f
  4319  1F19  0877               	movf	??___ftpack+2,w
  4320  1F1A  04F2               	iorwf	___ftpack@arg+2,f
  4321  1F1B  0874               	movf	___ftpack@sign,w
  4322  1F1C  1903               	btfsc	3,2
  4323  1F1D  0008               	return
  4324  1F1E  17F2               	bsf	___ftpack@arg+2,7
  4325  1F1F  0008               	return
  4326  1F20                     __end_of___ftpack:	
  4327                           
  4328                           	psect	text19
  4329  0E46                     __ptext19:	
  4330 ;; *************** function _LCD_mapping *****************
  4331 ;; Defined at:
  4332 ;;		line 9 in file "lcd.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;  D1              1    wreg     PTR struct .
  4335 ;;		 -> main@D1(28), 
  4336 ;;  D2              1    0[COMMON] PTR struct .
  4337 ;;		 -> main@D2(28), 
  4338 ;;  D3              1    1[COMMON] PTR struct .
  4339 ;;		 -> main@D3(28), 
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;  D1              1    4[COMMON] PTR struct .
  4342 ;;		 -> main@D1(28), 
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  1    wreg      void 
  4345 ;; Registers used:
  4346 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4352 ;;      Params:         2       0       0       0       0
  4353 ;;      Locals:         1       0       0       0       0
  4354 ;;      Temps:          2       0       0       0       0
  4355 ;;      Totals:         5       0       0       0       0
  4356 ;;Total ram usage:        5 bytes
  4357 ;; Hardware stack levels used:    1
  4358 ;; This function calls:
  4359 ;;		Nothing
  4360 ;; This function is called by:
  4361 ;;		_main
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           
  4366                           ;psect for function _LCD_mapping
  4367  0E46                     _LCD_mapping:	
  4368                           
  4369                           ;incstack = 0
  4370                           ; Regs used in _LCD_mapping: [wreg-fsr0h+status,2+status,0]
  4371                           ;LCD_mapping@D1 stored from wreg
  4372  0E46  00F4               	movwf	LCD_mapping@D1
  4373                           
  4374                           ;lcd.c: 11: D1->sa = &LCDDATA2; D1->bits[0] =6 ;
  4375  0E47  3012               	movlw	18
  4376  0E48  00F2               	movwf	??_LCD_mapping
  4377  0E49  3001               	movlw	1
  4378  0E4A  00F3               	movwf	??_LCD_mapping+1
  4379  0E4B  0874               	movf	LCD_mapping@D1,w
  4380  0E4C  0084               	movwf	4
  4381  0E4D  0872               	movf	??_LCD_mapping,w
  4382  0E4E  1383               	bcf	3,7	;select IRP bank0
  4383  0E4F  0080               	movwf	0
  4384  0E50  0873               	movf	??_LCD_mapping+1,w
  4385  0E51  0A84               	incf	4,f
  4386  0E52  0080               	movwf	0
  4387  0E53  0384               	decf	4,f
  4388  0E54  0874               	movf	LCD_mapping@D1,w
  4389  0E55  3E0E               	addlw	14
  4390  0E56  0084               	movwf	4
  4391  0E57  3006               	movlw	6
  4392  0E58  0080               	movwf	0
  4393  0E59  0A84               	incf	4,f
  4394  0E5A  3000               	movlw	0
  4395  0E5B  0080               	movwf	0
  4396                           
  4397                           ;lcd.c: 12: D1->sb = &LCDDATA2; D1->bits[1] =7 ;
  4398  0E5C  3012               	movlw	18
  4399  0E5D  00F2               	movwf	??_LCD_mapping
  4400  0E5E  3001               	movlw	1
  4401  0E5F  00F3               	movwf	??_LCD_mapping+1
  4402  0E60  0874               	movf	LCD_mapping@D1,w
  4403  0E61  3E02               	addlw	2
  4404  0E62  0084               	movwf	4
  4405  0E63  0872               	movf	??_LCD_mapping,w
  4406  0E64  0080               	movwf	0
  4407  0E65  0873               	movf	??_LCD_mapping+1,w
  4408  0E66  0A84               	incf	4,f
  4409  0E67  0080               	movwf	0
  4410  0E68  0384               	decf	4,f
  4411  0E69  0874               	movf	LCD_mapping@D1,w
  4412  0E6A  3E10               	addlw	16
  4413  0E6B  0084               	movwf	4
  4414  0E6C  3007               	movlw	7
  4415  0E6D  0080               	movwf	0
  4416  0E6E  0A84               	incf	4,f
  4417  0E6F  3000               	movlw	0
  4418  0E70  0080               	movwf	0
  4419                           
  4420                           ;lcd.c: 13: D1->sc = &LCDDATA8; D1->bits[2] =7 ;
  4421  0E71  3018               	movlw	24
  4422  0E72  00F2               	movwf	??_LCD_mapping
  4423  0E73  3001               	movlw	1
  4424  0E74  00F3               	movwf	??_LCD_mapping+1
  4425  0E75  0874               	movf	LCD_mapping@D1,w
  4426  0E76  3E04               	addlw	4
  4427  0E77  0084               	movwf	4
  4428  0E78  0872               	movf	??_LCD_mapping,w
  4429  0E79  0080               	movwf	0
  4430  0E7A  0873               	movf	??_LCD_mapping+1,w
  4431  0E7B  0A84               	incf	4,f
  4432  0E7C  0080               	movwf	0
  4433  0E7D  0384               	decf	4,f
  4434  0E7E  0874               	movf	LCD_mapping@D1,w
  4435  0E7F  3E12               	addlw	18
  4436  0E80  0084               	movwf	4
  4437  0E81  3007               	movlw	7
  4438  0E82  0080               	movwf	0
  4439  0E83  0A84               	incf	4,f
  4440  0E84  3000               	movlw	0
  4441  0E85  0080               	movwf	0
  4442                           
  4443                           ;lcd.c: 14: D1->sd = &LCDDATA11; D1->bits[3] =6 ;
  4444  0E86  301B               	movlw	27
  4445  0E87  00F2               	movwf	??_LCD_mapping
  4446  0E88  3001               	movlw	1
  4447  0E89  00F3               	movwf	??_LCD_mapping+1
  4448  0E8A  0874               	movf	LCD_mapping@D1,w
  4449  0E8B  3E06               	addlw	6
  4450  0E8C  0084               	movwf	4
  4451  0E8D  0872               	movf	??_LCD_mapping,w
  4452  0E8E  0080               	movwf	0
  4453  0E8F  0873               	movf	??_LCD_mapping+1,w
  4454  0E90  0A84               	incf	4,f
  4455  0E91  0080               	movwf	0
  4456  0E92  0384               	decf	4,f
  4457  0E93  0874               	movf	LCD_mapping@D1,w
  4458  0E94  3E14               	addlw	20
  4459  0E95  0084               	movwf	4
  4460  0E96  3006               	movlw	6
  4461  0E97  0080               	movwf	0
  4462  0E98  0A84               	incf	4,f
  4463  0E99  3000               	movlw	0
  4464  0E9A  0080               	movwf	0
  4465                           
  4466                           ;lcd.c: 15: D1->se = &LCDDATA8; D1->bits[4] =6 ;
  4467  0E9B  3018               	movlw	24
  4468  0E9C  00F2               	movwf	??_LCD_mapping
  4469  0E9D  3001               	movlw	1
  4470  0E9E  00F3               	movwf	??_LCD_mapping+1
  4471  0E9F  0874               	movf	LCD_mapping@D1,w
  4472  0EA0  3E08               	addlw	8
  4473  0EA1  0084               	movwf	4
  4474  0EA2  0872               	movf	??_LCD_mapping,w
  4475  0EA3  0080               	movwf	0
  4476  0EA4  0873               	movf	??_LCD_mapping+1,w
  4477  0EA5  0A84               	incf	4,f
  4478  0EA6  0080               	movwf	0
  4479  0EA7  0384               	decf	4,f
  4480  0EA8  0874               	movf	LCD_mapping@D1,w
  4481  0EA9  3E16               	addlw	22
  4482  0EAA  0084               	movwf	4
  4483  0EAB  3006               	movlw	6
  4484  0EAC  0080               	movwf	0
  4485  0EAD  0A84               	incf	4,f
  4486  0EAE  3000               	movlw	0
  4487  0EAF  0080               	movwf	0
  4488                           
  4489                           ;lcd.c: 16: D1->sf = &LCDDATA5; D1->bits[5] =6 ;
  4490  0EB0  3015               	movlw	21
  4491  0EB1  00F2               	movwf	??_LCD_mapping
  4492  0EB2  3001               	movlw	1
  4493  0EB3  00F3               	movwf	??_LCD_mapping+1
  4494  0EB4  0874               	movf	LCD_mapping@D1,w
  4495  0EB5  3E0A               	addlw	10
  4496  0EB6  0084               	movwf	4
  4497  0EB7  0872               	movf	??_LCD_mapping,w
  4498  0EB8  0080               	movwf	0
  4499  0EB9  0873               	movf	??_LCD_mapping+1,w
  4500  0EBA  0A84               	incf	4,f
  4501  0EBB  0080               	movwf	0
  4502  0EBC  0384               	decf	4,f
  4503  0EBD  0874               	movf	LCD_mapping@D1,w
  4504  0EBE  3E18               	addlw	24
  4505  0EBF  0084               	movwf	4
  4506  0EC0  3006               	movlw	6
  4507  0EC1  0080               	movwf	0
  4508  0EC2  0A84               	incf	4,f
  4509  0EC3  3000               	movlw	0
  4510  0EC4  0080               	movwf	0
  4511                           
  4512                           ;lcd.c: 17: D1->sg = &LCDDATA5; D1->bits[6] =7 ;
  4513  0EC5  3015               	movlw	21
  4514  0EC6  00F2               	movwf	??_LCD_mapping
  4515  0EC7  3001               	movlw	1
  4516  0EC8  00F3               	movwf	??_LCD_mapping+1
  4517  0EC9  0874               	movf	LCD_mapping@D1,w
  4518  0ECA  3E0C               	addlw	12
  4519  0ECB  0084               	movwf	4
  4520  0ECC  0872               	movf	??_LCD_mapping,w
  4521  0ECD  0080               	movwf	0
  4522  0ECE  0873               	movf	??_LCD_mapping+1,w
  4523  0ECF  0A84               	incf	4,f
  4524  0ED0  0080               	movwf	0
  4525  0ED1  0384               	decf	4,f
  4526  0ED2  0874               	movf	LCD_mapping@D1,w
  4527  0ED3  3E1A               	addlw	26
  4528  0ED4  0084               	movwf	4
  4529  0ED5  3007               	movlw	7
  4530  0ED6  0080               	movwf	0
  4531  0ED7  0A84               	incf	4,f
  4532  0ED8  3000               	movlw	0
  4533  0ED9  0080               	movwf	0
  4534                           
  4535                           ;lcd.c: 20: D2->sa = &LCDDATA0; D2->bits[0] =6 ;
  4536  0EDA  3010               	movlw	16
  4537  0EDB  00F2               	movwf	??_LCD_mapping
  4538  0EDC  3001               	movlw	1
  4539  0EDD  00F3               	movwf	??_LCD_mapping+1
  4540  0EDE  0870               	movf	LCD_mapping@D2,w
  4541  0EDF  0084               	movwf	4
  4542  0EE0  0872               	movf	??_LCD_mapping,w
  4543  0EE1  0080               	movwf	0
  4544  0EE2  0873               	movf	??_LCD_mapping+1,w
  4545  0EE3  0A84               	incf	4,f
  4546  0EE4  0080               	movwf	0
  4547  0EE5  0384               	decf	4,f
  4548  0EE6  0870               	movf	LCD_mapping@D2,w
  4549  0EE7  3E0E               	addlw	14
  4550  0EE8  0084               	movwf	4
  4551  0EE9  3006               	movlw	6
  4552  0EEA  0080               	movwf	0
  4553  0EEB  0A84               	incf	4,f
  4554  0EEC  3000               	movlw	0
  4555  0EED  0080               	movwf	0
  4556                           
  4557                           ;lcd.c: 21: D2->sb = &LCDDATA2; D2->bits[1] =5 ;
  4558  0EEE  3012               	movlw	18
  4559  0EEF  00F2               	movwf	??_LCD_mapping
  4560  0EF0  3001               	movlw	1
  4561  0EF1  00F3               	movwf	??_LCD_mapping+1
  4562  0EF2  0870               	movf	LCD_mapping@D2,w
  4563  0EF3  3E02               	addlw	2
  4564  0EF4  0084               	movwf	4
  4565  0EF5  0872               	movf	??_LCD_mapping,w
  4566  0EF6  0080               	movwf	0
  4567  0EF7  0873               	movf	??_LCD_mapping+1,w
  4568  0EF8  0A84               	incf	4,f
  4569  0EF9  0080               	movwf	0
  4570  0EFA  0384               	decf	4,f
  4571  0EFB  0870               	movf	LCD_mapping@D2,w
  4572  0EFC  3E10               	addlw	16
  4573  0EFD  0084               	movwf	4
  4574  0EFE  3005               	movlw	5
  4575  0EFF  0080               	movwf	0
  4576  0F00  0A84               	incf	4,f
  4577  0F01  3000               	movlw	0
  4578  0F02  0080               	movwf	0
  4579                           
  4580                           ;lcd.c: 22: D2->sc = &LCDDATA8; D2->bits[2] =5 ;
  4581  0F03  3018               	movlw	24
  4582  0F04  00F2               	movwf	??_LCD_mapping
  4583  0F05  3001               	movlw	1
  4584  0F06  00F3               	movwf	??_LCD_mapping+1
  4585  0F07  0870               	movf	LCD_mapping@D2,w
  4586  0F08  3E04               	addlw	4
  4587  0F09  0084               	movwf	4
  4588  0F0A  0872               	movf	??_LCD_mapping,w
  4589  0F0B  0080               	movwf	0
  4590  0F0C  0873               	movf	??_LCD_mapping+1,w
  4591  0F0D  0A84               	incf	4,f
  4592  0F0E  0080               	movwf	0
  4593  0F0F  0384               	decf	4,f
  4594  0F10  0870               	movf	LCD_mapping@D2,w
  4595  0F11  3E12               	addlw	18
  4596  0F12  0084               	movwf	4
  4597  0F13  3005               	movlw	5
  4598  0F14  0080               	movwf	0
  4599  0F15  0A84               	incf	4,f
  4600  0F16  3000               	movlw	0
  4601  0F17  0080               	movwf	0
  4602                           
  4603                           ;lcd.c: 23: D2->sd = &LCDDATA9; D2->bits[3] =6 ;
  4604  0F18  3019               	movlw	25
  4605  0F19  00F2               	movwf	??_LCD_mapping
  4606  0F1A  3001               	movlw	1
  4607  0F1B  00F3               	movwf	??_LCD_mapping+1
  4608  0F1C  0870               	movf	LCD_mapping@D2,w
  4609  0F1D  3E06               	addlw	6
  4610  0F1E  0084               	movwf	4
  4611  0F1F  0872               	movf	??_LCD_mapping,w
  4612  0F20  0080               	movwf	0
  4613  0F21  0873               	movf	??_LCD_mapping+1,w
  4614  0F22  0A84               	incf	4,f
  4615  0F23  0080               	movwf	0
  4616  0F24  0384               	decf	4,f
  4617  0F25  0870               	movf	LCD_mapping@D2,w
  4618  0F26  3E14               	addlw	20
  4619  0F27  0084               	movwf	4
  4620  0F28  3006               	movlw	6
  4621  0F29  0080               	movwf	0
  4622  0F2A  0A84               	incf	4,f
  4623  0F2B  3000               	movlw	0
  4624  0F2C  0080               	movwf	0
  4625                           
  4626                           ;lcd.c: 24: D2->se = &LCDDATA6; D2->bits[4] =6 ;
  4627  0F2D  3016               	movlw	22
  4628  0F2E  00F2               	movwf	??_LCD_mapping
  4629  0F2F  3001               	movlw	1
  4630  0F30  00F3               	movwf	??_LCD_mapping+1
  4631  0F31  0870               	movf	LCD_mapping@D2,w
  4632  0F32  3E08               	addlw	8
  4633  0F33  0084               	movwf	4
  4634  0F34  0872               	movf	??_LCD_mapping,w
  4635  0F35  0080               	movwf	0
  4636  0F36  0873               	movf	??_LCD_mapping+1,w
  4637  0F37  0A84               	incf	4,f
  4638  0F38  0080               	movwf	0
  4639  0F39  0384               	decf	4,f
  4640  0F3A  0870               	movf	LCD_mapping@D2,w
  4641  0F3B  3E16               	addlw	22
  4642  0F3C  0084               	movwf	4
  4643  0F3D  3006               	movlw	6
  4644  0F3E  0080               	movwf	0
  4645  0F3F  0A84               	incf	4,f
  4646  0F40  3000               	movlw	0
  4647  0F41  0080               	movwf	0
  4648                           
  4649                           ;lcd.c: 25: D2->sf = &LCDDATA3; D2->bits[5] =6 ;
  4650  0F42  3013               	movlw	19
  4651  0F43  00F2               	movwf	??_LCD_mapping
  4652  0F44  3001               	movlw	1
  4653  0F45  00F3               	movwf	??_LCD_mapping+1
  4654  0F46  0870               	movf	LCD_mapping@D2,w
  4655  0F47  3E0A               	addlw	10
  4656  0F48  0084               	movwf	4
  4657  0F49  0872               	movf	??_LCD_mapping,w
  4658  0F4A  0080               	movwf	0
  4659  0F4B  0873               	movf	??_LCD_mapping+1,w
  4660  0F4C  0A84               	incf	4,f
  4661  0F4D  0080               	movwf	0
  4662  0F4E  0384               	decf	4,f
  4663  0F4F  0870               	movf	LCD_mapping@D2,w
  4664  0F50  3E18               	addlw	24
  4665  0F51  0084               	movwf	4
  4666  0F52  3006               	movlw	6
  4667  0F53  0080               	movwf	0
  4668  0F54  0A84               	incf	4,f
  4669  0F55  3000               	movlw	0
  4670  0F56  0080               	movwf	0
  4671                           
  4672                           ;lcd.c: 26: D2->sg = &LCDDATA5; D2->bits[6] =5 ;
  4673  0F57  3015               	movlw	21
  4674  0F58  00F2               	movwf	??_LCD_mapping
  4675  0F59  3001               	movlw	1
  4676  0F5A  00F3               	movwf	??_LCD_mapping+1
  4677  0F5B  0870               	movf	LCD_mapping@D2,w
  4678  0F5C  3E0C               	addlw	12
  4679  0F5D  0084               	movwf	4
  4680  0F5E  0872               	movf	??_LCD_mapping,w
  4681  0F5F  0080               	movwf	0
  4682  0F60  0873               	movf	??_LCD_mapping+1,w
  4683  0F61  0A84               	incf	4,f
  4684  0F62  0080               	movwf	0
  4685  0F63  0384               	decf	4,f
  4686  0F64  0870               	movf	LCD_mapping@D2,w
  4687  0F65  3E1A               	addlw	26
  4688  0F66  0084               	movwf	4
  4689  0F67  3005               	movlw	5
  4690  0F68  0080               	movwf	0
  4691  0F69  0A84               	incf	4,f
  4692  0F6A  3000               	movlw	0
  4693  0F6B  0080               	movwf	0
  4694                           
  4695                           ;lcd.c: 29: D3->sa = &LCDDATA0; D3->bits[0] =3 ;
  4696  0F6C  3010               	movlw	16
  4697  0F6D  00F2               	movwf	??_LCD_mapping
  4698  0F6E  3001               	movlw	1
  4699  0F6F  00F3               	movwf	??_LCD_mapping+1
  4700  0F70  0871               	movf	LCD_mapping@D3,w
  4701  0F71  0084               	movwf	4
  4702  0F72  0872               	movf	??_LCD_mapping,w
  4703  0F73  1783               	bsf	3,7	;select IRP bank2
  4704  0F74  0080               	movwf	0
  4705  0F75  0873               	movf	??_LCD_mapping+1,w
  4706  0F76  0A84               	incf	4,f
  4707  0F77  0080               	movwf	0
  4708  0F78  0384               	decf	4,f
  4709  0F79  0871               	movf	LCD_mapping@D3,w
  4710  0F7A  3E0E               	addlw	14
  4711  0F7B  0084               	movwf	4
  4712  0F7C  3003               	movlw	3
  4713  0F7D  0080               	movwf	0
  4714  0F7E  0A84               	incf	4,f
  4715  0F7F  3000               	movlw	0
  4716  0F80  0080               	movwf	0
  4717                           
  4718                           ;lcd.c: 30: D3->sb = &LCDDATA1; D3->bits[1] =3 ;
  4719  0F81  3011               	movlw	17
  4720  0F82  00F2               	movwf	??_LCD_mapping
  4721  0F83  3001               	movlw	1
  4722  0F84  00F3               	movwf	??_LCD_mapping+1
  4723  0F85  0871               	movf	LCD_mapping@D3,w
  4724  0F86  3E02               	addlw	2
  4725  0F87  0084               	movwf	4
  4726  0F88  0872               	movf	??_LCD_mapping,w
  4727  0F89  0080               	movwf	0
  4728  0F8A  0873               	movf	??_LCD_mapping+1,w
  4729  0F8B  0A84               	incf	4,f
  4730  0F8C  0080               	movwf	0
  4731  0F8D  0384               	decf	4,f
  4732  0F8E  0871               	movf	LCD_mapping@D3,w
  4733  0F8F  3E10               	addlw	16
  4734  0F90  0084               	movwf	4
  4735  0F91  3003               	movlw	3
  4736  0F92  0080               	movwf	0
  4737  0F93  0A84               	incf	4,f
  4738  0F94  3000               	movlw	0
  4739  0F95  0080               	movwf	0
  4740                           
  4741                           ;lcd.c: 31: D3->sc = &LCDDATA7; D3->bits[2] =3 ;
  4742  0F96  3017               	movlw	23
  4743  0F97  00F2               	movwf	??_LCD_mapping
  4744  0F98  3001               	movlw	1
  4745  0F99  00F3               	movwf	??_LCD_mapping+1
  4746  0F9A  0871               	movf	LCD_mapping@D3,w
  4747  0F9B  3E04               	addlw	4
  4748  0F9C  0084               	movwf	4
  4749  0F9D  0872               	movf	??_LCD_mapping,w
  4750  0F9E  0080               	movwf	0
  4751  0F9F  0873               	movf	??_LCD_mapping+1,w
  4752  0FA0  0A84               	incf	4,f
  4753  0FA1  0080               	movwf	0
  4754  0FA2  0384               	decf	4,f
  4755  0FA3  0871               	movf	LCD_mapping@D3,w
  4756  0FA4  3E12               	addlw	18
  4757  0FA5  0084               	movwf	4
  4758  0FA6  3003               	movlw	3
  4759  0FA7  0080               	movwf	0
  4760  0FA8  0A84               	incf	4,f
  4761  0FA9  3000               	movlw	0
  4762  0FAA  0080               	movwf	0
  4763                           
  4764                           ;lcd.c: 32: D3->sd = &LCDDATA9; D3->bits[3] =3 ;
  4765  0FAB  3019               	movlw	25
  4766  0FAC  00F2               	movwf	??_LCD_mapping
  4767  0FAD  3001               	movlw	1
  4768  0FAE  00F3               	movwf	??_LCD_mapping+1
  4769  0FAF  0871               	movf	LCD_mapping@D3,w
  4770  0FB0  3E06               	addlw	6
  4771  0FB1  0084               	movwf	4
  4772  0FB2  0872               	movf	??_LCD_mapping,w
  4773  0FB3  0080               	movwf	0
  4774  0FB4  0873               	movf	??_LCD_mapping+1,w
  4775  0FB5  0A84               	incf	4,f
  4776  0FB6  0080               	movwf	0
  4777  0FB7  0384               	decf	4,f
  4778  0FB8  0871               	movf	LCD_mapping@D3,w
  4779  0FB9  3E14               	addlw	20
  4780  0FBA  0084               	movwf	4
  4781  0FBB  3003               	movlw	3
  4782  0FBC  0080               	movwf	0
  4783  0FBD  0A84               	incf	4,f
  4784  0FBE  3000               	movlw	0
  4785  0FBF  0080               	movwf	0
  4786                           
  4787                           ;lcd.c: 33: D3->se = &LCDDATA6; D3->bits[4] =3 ;
  4788  0FC0  3016               	movlw	22
  4789  0FC1  00F2               	movwf	??_LCD_mapping
  4790  0FC2  3001               	movlw	1
  4791  0FC3  00F3               	movwf	??_LCD_mapping+1
  4792  0FC4  0871               	movf	LCD_mapping@D3,w
  4793  0FC5  3E08               	addlw	8
  4794  0FC6  0084               	movwf	4
  4795  0FC7  0872               	movf	??_LCD_mapping,w
  4796  0FC8  0080               	movwf	0
  4797  0FC9  0873               	movf	??_LCD_mapping+1,w
  4798  0FCA  0A84               	incf	4,f
  4799  0FCB  0080               	movwf	0
  4800  0FCC  0384               	decf	4,f
  4801  0FCD  0871               	movf	LCD_mapping@D3,w
  4802  0FCE  3E16               	addlw	22
  4803  0FCF  0084               	movwf	4
  4804  0FD0  3003               	movlw	3
  4805  0FD1  0080               	movwf	0
  4806  0FD2  0A84               	incf	4,f
  4807  0FD3  3000               	movlw	0
  4808  0FD4  0080               	movwf	0
  4809                           
  4810                           ;lcd.c: 34: D3->sf = &LCDDATA3; D3->bits[5] =3 ;
  4811  0FD5  3013               	movlw	19
  4812  0FD6  00F2               	movwf	??_LCD_mapping
  4813  0FD7  3001               	movlw	1
  4814  0FD8  00F3               	movwf	??_LCD_mapping+1
  4815  0FD9  0871               	movf	LCD_mapping@D3,w
  4816  0FDA  3E0A               	addlw	10
  4817  0FDB  0084               	movwf	4
  4818  0FDC  0872               	movf	??_LCD_mapping,w
  4819  0FDD  0080               	movwf	0
  4820  0FDE  0873               	movf	??_LCD_mapping+1,w
  4821  0FDF  0A84               	incf	4,f
  4822  0FE0  0080               	movwf	0
  4823  0FE1  0384               	decf	4,f
  4824  0FE2  0871               	movf	LCD_mapping@D3,w
  4825  0FE3  3E18               	addlw	24
  4826  0FE4  0084               	movwf	4
  4827  0FE5  3003               	movlw	3
  4828  0FE6  0080               	movwf	0
  4829  0FE7  0A84               	incf	4,f
  4830  0FE8  3000               	movlw	0
  4831  0FE9  0080               	movwf	0
  4832                           
  4833                           ;lcd.c: 35: D3->sg = &LCDDATA4; D3->bits[6] =3 ;
  4834  0FEA  3014               	movlw	20
  4835  0FEB  00F2               	movwf	??_LCD_mapping
  4836  0FEC  3001               	movlw	1
  4837  0FED  00F3               	movwf	??_LCD_mapping+1
  4838  0FEE  0871               	movf	LCD_mapping@D3,w
  4839  0FEF  3E0C               	addlw	12
  4840  0FF0  0084               	movwf	4
  4841  0FF1  0872               	movf	??_LCD_mapping,w
  4842  0FF2  0080               	movwf	0
  4843  0FF3  0873               	movf	??_LCD_mapping+1,w
  4844  0FF4  0A84               	incf	4,f
  4845  0FF5  0080               	movwf	0
  4846  0FF6  0384               	decf	4,f
  4847  0FF7  0871               	movf	LCD_mapping@D3,w
  4848  0FF8  3E1A               	addlw	26
  4849  0FF9  0084               	movwf	4
  4850  0FFA  3003               	movlw	3
  4851  0FFB  0080               	movwf	0
  4852  0FFC  0A84               	incf	4,f
  4853  0FFD  3000               	movlw	0
  4854  0FFE  0080               	movwf	0
  4855  0FFF  0008               	return
  4856  1000                     __end_of_LCD_mapping:	
  4857                           
  4858                           	psect	text20
  4859  1DF3                     __ptext20:	
  4860 ;; *************** function _LCD_init *****************
  4861 ;; Defined at:
  4862 ;;		line 38 in file "lcd.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;		None
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;		None
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  1    wreg      void 
  4869 ;; Registers used:
  4870 ;;		wreg, status,2
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4876 ;;      Params:         0       0       0       0       0
  4877 ;;      Locals:         0       0       0       0       0
  4878 ;;      Temps:          0       0       0       0       0
  4879 ;;      Totals:         0       0       0       0       0
  4880 ;;Total ram usage:        0 bytes
  4881 ;; Hardware stack levels used:    1
  4882 ;; This function calls:
  4883 ;;		Nothing
  4884 ;; This function is called by:
  4885 ;;		_main
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888                           
  4889                           
  4890                           ;psect for function _LCD_init
  4891  1DF3                     _LCD_init:	
  4892                           
  4893                           ;lcd.c: 40: LCDSE0 = 0x4F;
  4894                           
  4895                           ;incstack = 0
  4896                           ; Regs used in _LCD_init: [wreg+status,2]
  4897  1DF3  304F               	movlw	79
  4898  1DF4  1283               	bcf	3,5	;RP0=0, select bank2
  4899  1DF5  1703               	bsf	3,6	;RP1=1, select bank2
  4900  1DF6  009C               	movwf	28	;volatile
  4901                           
  4902                           ;lcd.c: 41: LCDSE1 = 0x08;
  4903  1DF7  3008               	movlw	8
  4904  1DF8  009D               	movwf	29	;volatile
  4905                           
  4906                           ;lcd.c: 42: LCDSE2 = 0xE1;
  4907  1DF9  30E1               	movlw	225
  4908  1DFA  009E               	movwf	30	;volatile
  4909                           
  4910                           ;lcd.c: 45: ((LCDDATA0) &= 0x00);
  4911  1DFB  0190               	clrf	16	;volatile
  4912                           
  4913                           ;lcd.c: 46: ((LCDDATA1) &= 0x00);
  4914  1DFC  0191               	clrf	17	;volatile
  4915                           
  4916                           ;lcd.c: 47: ((LCDDATA2) &= 0x00);
  4917  1DFD  0192               	clrf	18	;volatile
  4918                           
  4919                           ;lcd.c: 48: ((LCDDATA3) &= 0x00);
  4920  1DFE  0193               	clrf	19	;volatile
  4921                           
  4922                           ;lcd.c: 49: ((LCDDATA4) &= 0x00);
  4923  1DFF  0194               	clrf	20	;volatile
  4924                           
  4925                           ;lcd.c: 50: ((LCDDATA5) &= 0x00);
  4926  1E00  0195               	clrf	21	;volatile
  4927                           
  4928                           ;lcd.c: 51: ((LCDDATA6) &= 0x00);
  4929  1E01  0196               	clrf	22	;volatile
  4930                           
  4931                           ;lcd.c: 52: ((LCDDATA7) &= 0x00);
  4932  1E02  0197               	clrf	23	;volatile
  4933                           
  4934                           ;lcd.c: 53: ((LCDDATA8) &= 0x00);
  4935  1E03  0198               	clrf	24	;volatile
  4936                           
  4937                           ;lcd.c: 54: ((LCDDATA9) &= 0x00);
  4938  1E04  0199               	clrf	25	;volatile
  4939                           
  4940                           ;lcd.c: 55: ((LCDDATA10) &= 0x00);
  4941  1E05  019A               	clrf	26	;volatile
  4942                           
  4943                           ;lcd.c: 56: ((LCDDATA11) &= 0x00);
  4944  1E06  019B               	clrf	27	;volatile
  4945                           
  4946                           ;lcd.c: 60: LCDPS = 0x20;
  4947  1E07  3020               	movlw	32
  4948  1E08  0088               	movwf	8	;volatile
  4949                           
  4950                           ;lcd.c: 64: LCDCON = 0x93;
  4951  1E09  3093               	movlw	147
  4952  1E0A  0087               	movwf	7	;volatile
  4953  1E0B  0008               	return
  4954  1E0C                     __end_of_LCD_init:	
  4955  007E                     btemp	set	126	;btemp
  4956  007E                     wtemp0	set	126
  4957                           
  4958                           	psect	text5_split_1
  4959  0D10                     u2155:	
  4960  0D10  1003               	clrc
  4961  0D11  0DA3               	rlf	??_displayDigit+3,f
  4962  0D12  0DA4               	rlf	??_displayDigit+4,f
  4963  0D13                     u2154:	
  4964  0D13  0BA2               	decfsz	??_displayDigit+2,f
  4965  0D14  2D10               	goto	u2155
  4966  0D15  300A               	movlw	10
  4967  0D16  077B               	addwf	displayDigit@D1,w
  4968  0D17  00A5               	movwf	??_displayDigit+5
  4969  0D18  087C               	movf	displayDigit@D1+1,w
  4970  0D19  1803               	skipnc
  4971  0D1A  3E01               	addlw	1
  4972  0D1B  00A6               	movwf	??_displayDigit+6
  4973  0D1C  0825               	movf	??_displayDigit+5,w
  4974  0D1D  0084               	movwf	4
  4975  0D1E  1783               	bsf	3,7
  4976  0D1F  1C26               	btfss	??_displayDigit+6,0
  4977  0D20  1383               	bcf	3,7
  4978  0D21  0800               	movf	0,w
  4979  0D22  00A7               	movwf	??_displayDigit+7
  4980  0D23  0A84               	incf	4,f
  4981  0D24  0800               	movf	0,w
  4982  0D25  00A8               	movwf	??_displayDigit+8
  4983  0D26  0827               	movf	??_displayDigit+7,w
  4984  0D27  0084               	movwf	4
  4985  0D28  1783               	bsf	3,7
  4986  0D29  1C28               	btfss	??_displayDigit+8,0
  4987  0D2A  1383               	bcf	3,7
  4988  0D2B  0823               	movf	??_displayDigit+3,w
  4989  0D2C  0480               	iorwf	0,f
  4990  0D2D  0A84               	incf	4,f
  4991  0D2E  0824               	movf	??_displayDigit+4,w
  4992  0D2F  0480               	iorwf	0,f
  4993                           
  4994                           ;lcd.c: 92: ((*D1->sg) &= ~((1UL) << (D1->bits[6])));
  4995  0D30  301A               	movlw	26
  4996  0D31  077B               	addwf	displayDigit@D1,w
  4997  0D32  00A0               	movwf	??_displayDigit
  4998  0D33  087C               	movf	displayDigit@D1+1,w
  4999  0D34  1803               	skipnc
  5000  0D35  3E01               	addlw	1
  5001  0D36  00A1               	movwf	??_displayDigit+1
  5002  0D37  0820               	movf	??_displayDigit,w
  5003  0D38  0084               	movwf	4
  5004  0D39  1783               	bsf	3,7
  5005  0D3A  1C21               	btfss	??_displayDigit+1,0
  5006  0D3B  1383               	bcf	3,7
  5007  0D3C  0A00               	incf	0,w
  5008  0D3D  00A2               	movwf	??_displayDigit+2
  5009  0D3E  3001               	movlw	1
  5010  0D3F  00A3               	movwf	??_displayDigit+3
  5011  0D40  3000               	movlw	0
  5012  0D41  00A4               	movwf	??_displayDigit+4
  5013  0D42  2D46               	goto	u2164
  5014  0D43                     u2165:	
  5015  0D43  1003               	clrc
  5016  0D44  0DA3               	rlf	??_displayDigit+3,f
  5017  0D45  0DA4               	rlf	??_displayDigit+4,f
  5018  0D46                     u2164:	
  5019  0D46  0BA2               	decfsz	??_displayDigit+2,f
  5020  0D47  2D43               	goto	u2165
  5021  0D48  09A3               	comf	??_displayDigit+3,f
  5022  0D49  09A4               	comf	??_displayDigit+4,f
  5023  0D4A  300C               	movlw	12
  5024  0D4B  077B               	addwf	displayDigit@D1,w
  5025  0D4C  00A5               	movwf	??_displayDigit+5
  5026  0D4D  087C               	movf	displayDigit@D1+1,w
  5027  0D4E  1803               	skipnc
  5028  0D4F  3E01               	addlw	1
  5029  0D50  00A6               	movwf	??_displayDigit+6
  5030  0D51  0825               	movf	??_displayDigit+5,w
  5031  0D52  0084               	movwf	4
  5032  0D53  1783               	bsf	3,7
  5033  0D54  1C26               	btfss	??_displayDigit+6,0
  5034  0D55  1383               	bcf	3,7
  5035  0D56  0800               	movf	0,w
  5036  0D57  00A7               	movwf	??_displayDigit+7
  5037  0D58  0A84               	incf	4,f
  5038  0D59  0800               	movf	0,w
  5039  0D5A  00A8               	movwf	??_displayDigit+8
  5040  0D5B  0827               	movf	??_displayDigit+7,w
  5041  0D5C  0084               	movwf	4
  5042  0D5D  1783               	bsf	3,7
  5043  0D5E  1C28               	btfss	??_displayDigit+8,0
  5044  0D5F  1383               	bcf	3,7
  5045  0D60  0823               	movf	??_displayDigit+3,w
  5046  0D61  0580               	andwf	0,f
  5047  0D62  0A84               	incf	4,f
  5048  0D63  0824               	movf	??_displayDigit+4,w
  5049  0D64  0580               	andwf	0,f
  5050                           
  5051                           ;lcd.c: 93: break;
  5052  0D65  0008               	return
  5053  0D66                     l1351:	
  5054                           ;lcd.c: 94: case 1:
  5055                           
  5056                           
  5057                           ;lcd.c: 95: ((*D1->sa) &= ~((1UL) << (D1->bits[0])));
  5058  0D66  300E               	movlw	14
  5059  0D67  077B               	addwf	displayDigit@D1,w
  5060  0D68  1283               	bcf	3,5	;RP0=0, select bank0
  5061  0D69  1303               	bcf	3,6	;RP1=0, select bank0
  5062  0D6A  00A0               	movwf	??_displayDigit
  5063  0D6B  087C               	movf	displayDigit@D1+1,w
  5064  0D6C  1803               	skipnc
  5065  0D6D  3E01               	addlw	1
  5066  0D6E  00A1               	movwf	??_displayDigit+1
  5067  0D6F  0820               	movf	??_displayDigit,w
  5068  0D70  0084               	movwf	4
  5069  0D71  1783               	bsf	3,7
  5070  0D72  1C21               	btfss	??_displayDigit+1,0
  5071  0D73  1383               	bcf	3,7
  5072  0D74  0A00               	incf	0,w
  5073  0D75  00A2               	movwf	??_displayDigit+2
  5074  0D76  3001               	movlw	1
  5075  0D77  00A3               	movwf	??_displayDigit+3
  5076  0D78  3000               	movlw	0
  5077  0D79  00A4               	movwf	??_displayDigit+4
  5078  0D7A  2D7E               	goto	u2174
  5079  0D7B                     u2175:	
  5080  0D7B  1003               	clrc
  5081  0D7C  0DA3               	rlf	??_displayDigit+3,f
  5082  0D7D  0DA4               	rlf	??_displayDigit+4,f
  5083  0D7E                     u2174:	
  5084  0D7E  0BA2               	decfsz	??_displayDigit+2,f
  5085  0D7F  2D7B               	goto	u2175
  5086  0D80  09A3               	comf	??_displayDigit+3,f
  5087  0D81  09A4               	comf	??_displayDigit+4,f
  5088  0D82  087B               	movf	displayDigit@D1,w
  5089  0D83  0084               	movwf	4
  5090  0D84  1783               	bsf	3,7
  5091  0D85  1C7C               	btfss	displayDigit@D1+1,0
  5092  0D86  1383               	bcf	3,7
  5093  0D87  0800               	movf	0,w
  5094  0D88  00A5               	movwf	??_displayDigit+5
  5095  0D89  0A84               	incf	4,f
  5096  0D8A  0800               	movf	0,w
  5097  0D8B  00A6               	movwf	??_displayDigit+6
  5098  0D8C  0825               	movf	??_displayDigit+5,w
  5099  0D8D  0084               	movwf	4
  5100  0D8E  1783               	bsf	3,7
  5101  0D8F  1C26               	btfss	??_displayDigit+6,0
  5102  0D90  1383               	bcf	3,7
  5103  0D91  0823               	movf	??_displayDigit+3,w
  5104  0D92  0580               	andwf	0,f
  5105  0D93  0A84               	incf	4,f
  5106  0D94  0824               	movf	??_displayDigit+4,w
  5107  0D95  0580               	andwf	0,f
  5108                           
  5109                           ;lcd.c: 96: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  5110  0D96  3010               	movlw	16
  5111  0D97  077B               	addwf	displayDigit@D1,w
  5112  0D98  00A0               	movwf	??_displayDigit
  5113  0D99  087C               	movf	displayDigit@D1+1,w
  5114  0D9A  1803               	skipnc
  5115  0D9B  3E01               	addlw	1
  5116  0D9C  00A1               	movwf	??_displayDigit+1
  5117  0D9D  0820               	movf	??_displayDigit,w
  5118  0D9E  0084               	movwf	4
  5119  0D9F  1783               	bsf	3,7
  5120  0DA0  1C21               	btfss	??_displayDigit+1,0
  5121  0DA1  1383               	bcf	3,7
  5122  0DA2  0A00               	incf	0,w
  5123  0DA3  00A2               	movwf	??_displayDigit+2
  5124  0DA4  3001               	movlw	1
  5125  0DA5  00A3               	movwf	??_displayDigit+3
  5126  0DA6  3000               	movlw	0
  5127  0DA7  00A4               	movwf	??_displayDigit+4
  5128  0DA8  2DAC               	goto	u2184
  5129  0DA9                     u2185:	
  5130  0DA9  1003               	clrc
  5131  0DAA  0DA3               	rlf	??_displayDigit+3,f
  5132  0DAB  0DA4               	rlf	??_displayDigit+4,f
  5133  0DAC                     u2184:	
  5134  0DAC  0BA2               	decfsz	??_displayDigit+2,f
  5135  0DAD  2DA9               	goto	u2185
  5136  0DAE  3002               	movlw	2
  5137  0DAF  077B               	addwf	displayDigit@D1,w
  5138  0DB0  00A5               	movwf	??_displayDigit+5
  5139  0DB1  087C               	movf	displayDigit@D1+1,w
  5140  0DB2  1803               	skipnc
  5141  0DB3  3E01               	addlw	1
  5142  0DB4  00A6               	movwf	??_displayDigit+6
  5143  0DB5  0825               	movf	??_displayDigit+5,w
  5144  0DB6  0084               	movwf	4
  5145  0DB7  1783               	bsf	3,7
  5146  0DB8  1C26               	btfss	??_displayDigit+6,0
  5147  0DB9  1383               	bcf	3,7
  5148  0DBA  0800               	movf	0,w
  5149  0DBB  00A7               	movwf	??_displayDigit+7
  5150  0DBC  0A84               	incf	4,f
  5151  0DBD  0800               	movf	0,w
  5152  0DBE  00A8               	movwf	??_displayDigit+8
  5153  0DBF  0827               	movf	??_displayDigit+7,w
  5154  0DC0  0084               	movwf	4
  5155  0DC1  1783               	bsf	3,7
  5156  0DC2  1C28               	btfss	??_displayDigit+8,0
  5157  0DC3  1383               	bcf	3,7
  5158  0DC4  0823               	movf	??_displayDigit+3,w
  5159  0DC5  0480               	iorwf	0,f
  5160  0DC6  0A84               	incf	4,f
  5161  0DC7  0824               	movf	??_displayDigit+4,w
  5162  0DC8  0480               	iorwf	0,f
  5163                           
  5164                           ;lcd.c: 97: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  5165  0DC9  3012               	movlw	18
  5166  0DCA  077B               	addwf	displayDigit@D1,w
  5167  0DCB  00A0               	movwf	??_displayDigit
  5168  0DCC  087C               	movf	displayDigit@D1+1,w
  5169  0DCD  1803               	skipnc
  5170  0DCE  3E01               	addlw	1
  5171  0DCF  00A1               	movwf	??_displayDigit+1
  5172  0DD0  0820               	movf	??_displayDigit,w
  5173  0DD1  0084               	movwf	4
  5174  0DD2  1783               	bsf	3,7
  5175  0DD3  1C21               	btfss	??_displayDigit+1,0
  5176  0DD4  1383               	bcf	3,7
  5177  0DD5  0A00               	incf	0,w
  5178  0DD6  00A2               	movwf	??_displayDigit+2
  5179  0DD7  3001               	movlw	1
  5180  0DD8  00A3               	movwf	??_displayDigit+3
  5181  0DD9  3000               	movlw	0
  5182  0DDA  00A4               	movwf	??_displayDigit+4
  5183  0DDB  2DDF               	goto	u2194
  5184  0DDC                     u2195:	
  5185  0DDC  1003               	clrc
  5186  0DDD  0DA3               	rlf	??_displayDigit+3,f
  5187  0DDE  0DA4               	rlf	??_displayDigit+4,f
  5188  0DDF                     u2194:	
  5189  0DDF  0BA2               	decfsz	??_displayDigit+2,f
  5190  0DE0  2DDC               	goto	u2195
  5191  0DE1  3004               	movlw	4
  5192  0DE2  077B               	addwf	displayDigit@D1,w
  5193  0DE3  00A5               	movwf	??_displayDigit+5
  5194  0DE4  087C               	movf	displayDigit@D1+1,w
  5195  0DE5  1803               	skipnc
  5196  0DE6  3E01               	addlw	1
  5197  0DE7  00A6               	movwf	??_displayDigit+6
  5198  0DE8  0825               	movf	??_displayDigit+5,w
  5199  0DE9  0084               	movwf	4
  5200  0DEA  1783               	bsf	3,7
  5201  0DEB  1C26               	btfss	??_displayDigit+6,0
  5202  0DEC  1383               	bcf	3,7
  5203  0DED  0800               	movf	0,w
  5204  0DEE  00A7               	movwf	??_displayDigit+7
  5205  0DEF  0A84               	incf	4,f
  5206  0DF0  0800               	movf	0,w
  5207  0DF1  00A8               	movwf	??_displayDigit+8
  5208  0DF2  0827               	movf	??_displayDigit+7,w
  5209  0DF3  0084               	movwf	4
  5210  0DF4  1783               	bsf	3,7
  5211  0DF5  1C28               	btfss	??_displayDigit+8,0
  5212  0DF6  1383               	bcf	3,7
  5213  0DF7  0823               	movf	??_displayDigit+3,w
  5214  0DF8  0480               	iorwf	0,f
  5215  0DF9  0A84               	incf	4,f
  5216  0DFA  0824               	movf	??_displayDigit+4,w
  5217  0DFB  0480               	iorwf	0,f
  5218                           
  5219                           ;lcd.c: 98: ((*D1->sd) &= ~((1UL) << (D1->bits[3])));
  5220  0DFC  3014               	movlw	20
  5221  0DFD  077B               	addwf	displayDigit@D1,w
  5222  0DFE  00A0               	movwf	??_displayDigit
  5223  0DFF  087C               	movf	displayDigit@D1+1,w
  5224  0E00  1803               	skipnc
  5225  0E01  3E01               	addlw	1
  5226  0E02  00A1               	movwf	??_displayDigit+1
  5227  0E03  0820               	movf	??_displayDigit,w
  5228  0E04  0084               	movwf	4
  5229  0E05  1783               	bsf	3,7
  5230  0E06  1C21               	btfss	??_displayDigit+1,0
  5231  0E07  1383               	bcf	3,7
  5232  0E08  0A00               	incf	0,w
  5233  0E09  00A2               	movwf	??_displayDigit+2
  5234  0E0A  3001               	movlw	1
  5235  0E0B  00A3               	movwf	??_displayDigit+3
  5236  0E0C  3000               	movlw	0
  5237  0E0D  00A4               	movwf	??_displayDigit+4
  5238  0E0E  2E12               	goto	u2204
  5239  0E0F                     u2205:	
  5240  0E0F  1003               	clrc
  5241  0E10  0DA3               	rlf	??_displayDigit+3,f
  5242  0E11  0DA4               	rlf	??_displayDigit+4,f
  5243  0E12                     u2204:	
  5244  0E12  0BA2               	decfsz	??_displayDigit+2,f
  5245  0E13  2E0F               	goto	u2205
  5246  0E14  09A3               	comf	??_displayDigit+3,f
  5247  0E15  09A4               	comf	??_displayDigit+4,f
  5248  0E16  3006               	movlw	6
  5249  0E17  077B               	addwf	displayDigit@D1,w
  5250  0E18  00A5               	movwf	??_displayDigit+5
  5251  0E19  087C               	movf	displayDigit@D1+1,w
  5252  0E1A  1803               	skipnc
  5253  0E1B  3E01               	addlw	1
  5254  0E1C  00A6               	movwf	??_displayDigit+6
  5255  0E1D  0825               	movf	??_displayDigit+5,w
  5256  0E1E  0084               	movwf	4
  5257  0E1F  1783               	bsf	3,7
  5258  0E20  1C26               	btfss	??_displayDigit+6,0
  5259  0E21  1383               	bcf	3,7
  5260  0E22  0800               	movf	0,w
  5261  0E23  00A7               	movwf	??_displayDigit+7
  5262  0E24  0A84               	incf	4,f
  5263  0E25  0800               	movf	0,w
  5264  0E26  00A8               	movwf	??_displayDigit+8
  5265  0E27  0827               	movf	??_displayDigit+7,w
  5266  0E28  0084               	movwf	4
  5267  0E29  1783               	bsf	3,7
  5268  0E2A  1C28               	btfss	??_displayDigit+8,0
  5269  0E2B  1383               	bcf	3,7
  5270  0E2C  0823               	movf	??_displayDigit+3,w
  5271  0E2D  0580               	andwf	0,f
  5272  0E2E  0A84               	incf	4,f
  5273  0E2F  0824               	movf	??_displayDigit+4,w
  5274  0E30  0580               	andwf	0,f
  5275                           
  5276                           ;lcd.c: 99: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  5277  0E31  3016               	movlw	22
  5278  0E32  077B               	addwf	displayDigit@D1,w
  5279  0E33  00A0               	movwf	??_displayDigit
  5280  0E34  087C               	movf	displayDigit@D1+1,w
  5281  0E35  1803               	skipnc
  5282  0E36  3E01               	addlw	1
  5283  0E37  00A1               	movwf	??_displayDigit+1
  5284  0E38  0820               	movf	??_displayDigit,w
  5285  0E39  0084               	movwf	4
  5286  0E3A  1783               	bsf	3,7
  5287  0E3B  1C21               	btfss	??_displayDigit+1,0
  5288  0E3C  1383               	bcf	3,7
  5289  0E3D  0A00               	incf	0,w
  5290  0E3E  00A2               	movwf	??_displayDigit+2
  5291  0E3F  3001               	movlw	1
  5292  0E40  00A3               	movwf	??_displayDigit+3
  5293  0E41  3000               	movlw	0
  5294  0E42  00A4               	movwf	??_displayDigit+4
  5295  0E43  160A  118A  29E8   	goto	u2214
  5296                           
  5297                           	psect	text5_split_2
  5298  11E5                     u2215:	
  5299  11E5  1003               	clrc
  5300  11E6  0DA3               	rlf	??_displayDigit+3,f
  5301  11E7  0DA4               	rlf	??_displayDigit+4,f
  5302  11E8                     u2214:	
  5303  11E8  0BA2               	decfsz	??_displayDigit+2,f
  5304  11E9  29E5               	goto	u2215
  5305  11EA  09A3               	comf	??_displayDigit+3,f
  5306  11EB  09A4               	comf	??_displayDigit+4,f
  5307  11EC  3008               	movlw	8
  5308  11ED  077B               	addwf	displayDigit@D1,w
  5309  11EE  00A5               	movwf	??_displayDigit+5
  5310  11EF  087C               	movf	displayDigit@D1+1,w
  5311  11F0  1803               	skipnc
  5312  11F1  3E01               	addlw	1
  5313  11F2  00A6               	movwf	??_displayDigit+6
  5314  11F3  0825               	movf	??_displayDigit+5,w
  5315  11F4  0084               	movwf	4
  5316  11F5  1783               	bsf	3,7
  5317  11F6  1C26               	btfss	??_displayDigit+6,0
  5318  11F7  1383               	bcf	3,7
  5319  11F8  0800               	movf	0,w
  5320  11F9  00A7               	movwf	??_displayDigit+7
  5321  11FA  0A84               	incf	4,f
  5322  11FB  0800               	movf	0,w
  5323  11FC  00A8               	movwf	??_displayDigit+8
  5324  11FD  0827               	movf	??_displayDigit+7,w
  5325  11FE  0084               	movwf	4
  5326  11FF  1783               	bsf	3,7
  5327  1200  1C28               	btfss	??_displayDigit+8,0
  5328  1201  1383               	bcf	3,7
  5329  1202  0823               	movf	??_displayDigit+3,w
  5330  1203  0580               	andwf	0,f
  5331  1204  0A84               	incf	4,f
  5332  1205  0824               	movf	??_displayDigit+4,w
  5333  1206  0580               	andwf	0,f
  5334                           
  5335                           ;lcd.c: 100: ((*D1->sf) &= ~((1UL) << (D1->bits[5])));
  5336  1207  3018               	movlw	24
  5337  1208  077B               	addwf	displayDigit@D1,w
  5338  1209  00A0               	movwf	??_displayDigit
  5339  120A  087C               	movf	displayDigit@D1+1,w
  5340  120B  1803               	skipnc
  5341  120C  3E01               	addlw	1
  5342  120D  00A1               	movwf	??_displayDigit+1
  5343  120E  0820               	movf	??_displayDigit,w
  5344  120F  0084               	movwf	4
  5345  1210  1783               	bsf	3,7
  5346  1211  1C21               	btfss	??_displayDigit+1,0
  5347  1212  1383               	bcf	3,7
  5348  1213  0A00               	incf	0,w
  5349  1214  00A2               	movwf	??_displayDigit+2
  5350  1215  3001               	movlw	1
  5351  1216  00A3               	movwf	??_displayDigit+3
  5352  1217  3000               	movlw	0
  5353  1218  00A4               	movwf	??_displayDigit+4
  5354  1219  2A1D               	goto	u2224
  5355  121A                     u2225:	
  5356  121A  1003               	clrc
  5357  121B  0DA3               	rlf	??_displayDigit+3,f
  5358  121C  0DA4               	rlf	??_displayDigit+4,f
  5359  121D                     u2224:	
  5360  121D  0BA2               	decfsz	??_displayDigit+2,f
  5361  121E  2A1A               	goto	u2225
  5362  121F  09A3               	comf	??_displayDigit+3,f
  5363  1220  09A4               	comf	??_displayDigit+4,f
  5364  1221  300A               	movlw	10
  5365  1222  077B               	addwf	displayDigit@D1,w
  5366  1223  00A5               	movwf	??_displayDigit+5
  5367  1224  087C               	movf	displayDigit@D1+1,w
  5368  1225  1803               	skipnc
  5369  1226  3E01               	addlw	1
  5370  1227  00A6               	movwf	??_displayDigit+6
  5371  1228  0825               	movf	??_displayDigit+5,w
  5372  1229  0084               	movwf	4
  5373  122A  1783               	bsf	3,7
  5374  122B  1C26               	btfss	??_displayDigit+6,0
  5375  122C  1383               	bcf	3,7
  5376  122D  0800               	movf	0,w
  5377  122E  00A7               	movwf	??_displayDigit+7
  5378  122F  0A84               	incf	4,f
  5379  1230  0800               	movf	0,w
  5380  1231  00A8               	movwf	??_displayDigit+8
  5381  1232  0827               	movf	??_displayDigit+7,w
  5382  1233  0084               	movwf	4
  5383  1234  1783               	bsf	3,7
  5384  1235  1C28               	btfss	??_displayDigit+8,0
  5385  1236  1383               	bcf	3,7
  5386  1237  0823               	movf	??_displayDigit+3,w
  5387  1238  0580               	andwf	0,f
  5388  1239  0A84               	incf	4,f
  5389  123A  0824               	movf	??_displayDigit+4,w
  5390  123B  0580               	andwf	0,f
  5391                           
  5392                           ;lcd.c: 101: ((*D1->sg) &= ~((1UL) << (D1->bits[6])));
  5393  123C  301A               	movlw	26
  5394  123D  077B               	addwf	displayDigit@D1,w
  5395  123E  00A0               	movwf	??_displayDigit
  5396  123F  087C               	movf	displayDigit@D1+1,w
  5397  1240  1803               	skipnc
  5398  1241  3E01               	addlw	1
  5399  1242  00A1               	movwf	??_displayDigit+1
  5400  1243  0820               	movf	??_displayDigit,w
  5401  1244  0084               	movwf	4
  5402  1245  1783               	bsf	3,7
  5403  1246  1C21               	btfss	??_displayDigit+1,0
  5404  1247  1383               	bcf	3,7
  5405  1248  0A00               	incf	0,w
  5406  1249  00A2               	movwf	??_displayDigit+2
  5407  124A  3001               	movlw	1
  5408  124B  00A3               	movwf	??_displayDigit+3
  5409  124C  3000               	movlw	0
  5410  124D  00A4               	movwf	??_displayDigit+4
  5411  124E  2A52               	goto	u2234
  5412  124F                     u2235:	
  5413  124F  1003               	clrc
  5414  1250  0DA3               	rlf	??_displayDigit+3,f
  5415  1251  0DA4               	rlf	??_displayDigit+4,f
  5416  1252                     u2234:	
  5417  1252  0BA2               	decfsz	??_displayDigit+2,f
  5418  1253  2A4F               	goto	u2235
  5419  1254  09A3               	comf	??_displayDigit+3,f
  5420  1255  09A4               	comf	??_displayDigit+4,f
  5421  1256  300C               	movlw	12
  5422  1257  077B               	addwf	displayDigit@D1,w
  5423  1258  00A5               	movwf	??_displayDigit+5
  5424  1259  087C               	movf	displayDigit@D1+1,w
  5425  125A  1803               	skipnc
  5426  125B  3E01               	addlw	1
  5427  125C  00A6               	movwf	??_displayDigit+6
  5428  125D  0825               	movf	??_displayDigit+5,w
  5429  125E  0084               	movwf	4
  5430  125F  1783               	bsf	3,7
  5431  1260  1C26               	btfss	??_displayDigit+6,0
  5432  1261  1383               	bcf	3,7
  5433  1262  0800               	movf	0,w
  5434  1263  00A7               	movwf	??_displayDigit+7
  5435  1264  0A84               	incf	4,f
  5436  1265  0800               	movf	0,w
  5437  1266  00A8               	movwf	??_displayDigit+8
  5438  1267  0827               	movf	??_displayDigit+7,w
  5439  1268  0084               	movwf	4
  5440  1269  1783               	bsf	3,7
  5441  126A  1C28               	btfss	??_displayDigit+8,0
  5442  126B  1383               	bcf	3,7
  5443  126C  0823               	movf	??_displayDigit+3,w
  5444  126D  0580               	andwf	0,f
  5445  126E  0A84               	incf	4,f
  5446  126F  0824               	movf	??_displayDigit+4,w
  5447  1270  0580               	andwf	0,f
  5448                           
  5449                           ;lcd.c: 102: break;
  5450  1271  0008               	return
  5451                           
  5452                           	psect	text5_split_3
  5453  15DD                     l1353:	
  5454                           ;lcd.c: 103: case 2:
  5455                           
  5456                           
  5457                           ;lcd.c: 104: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  5458  15DD  300E               	movlw	14
  5459  15DE  077B               	addwf	displayDigit@D1,w
  5460  15DF  1283               	bcf	3,5	;RP0=0, select bank0
  5461  15E0  1303               	bcf	3,6	;RP1=0, select bank0
  5462  15E1  00A0               	movwf	??_displayDigit
  5463  15E2  087C               	movf	displayDigit@D1+1,w
  5464  15E3  1803               	skipnc
  5465  15E4  3E01               	addlw	1
  5466  15E5  00A1               	movwf	??_displayDigit+1
  5467  15E6  0820               	movf	??_displayDigit,w
  5468  15E7  0084               	movwf	4
  5469  15E8  1783               	bsf	3,7
  5470  15E9  1C21               	btfss	??_displayDigit+1,0
  5471  15EA  1383               	bcf	3,7
  5472  15EB  0A00               	incf	0,w
  5473  15EC  00A2               	movwf	??_displayDigit+2
  5474  15ED  3001               	movlw	1
  5475  15EE  00A3               	movwf	??_displayDigit+3
  5476  15EF  3000               	movlw	0
  5477  15F0  00A4               	movwf	??_displayDigit+4
  5478  15F1  2DF5               	goto	u2244
  5479  15F2                     u2245:	
  5480  15F2  1003               	clrc
  5481  15F3  0DA3               	rlf	??_displayDigit+3,f
  5482  15F4  0DA4               	rlf	??_displayDigit+4,f
  5483  15F5                     u2244:	
  5484  15F5  0BA2               	decfsz	??_displayDigit+2,f
  5485  15F6  2DF2               	goto	u2245
  5486  15F7  087B               	movf	displayDigit@D1,w
  5487  15F8  0084               	movwf	4
  5488  15F9  1783               	bsf	3,7
  5489  15FA  1C7C               	btfss	displayDigit@D1+1,0
  5490  15FB  1383               	bcf	3,7
  5491  15FC  0800               	movf	0,w
  5492  15FD  00A5               	movwf	??_displayDigit+5
  5493  15FE  0A84               	incf	4,f
  5494  15FF  0800               	movf	0,w
  5495  1600  00A6               	movwf	??_displayDigit+6
  5496  1601  0825               	movf	??_displayDigit+5,w
  5497  1602  0084               	movwf	4
  5498  1603  1783               	bsf	3,7
  5499  1604  1C26               	btfss	??_displayDigit+6,0
  5500  1605  1383               	bcf	3,7
  5501  1606  0823               	movf	??_displayDigit+3,w
  5502  1607  0480               	iorwf	0,f
  5503  1608  0A84               	incf	4,f
  5504  1609  0824               	movf	??_displayDigit+4,w
  5505  160A  0480               	iorwf	0,f
  5506                           
  5507                           ;lcd.c: 105: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  5508  160B  3010               	movlw	16
  5509  160C  077B               	addwf	displayDigit@D1,w
  5510  160D  00A0               	movwf	??_displayDigit
  5511  160E  087C               	movf	displayDigit@D1+1,w
  5512  160F  1803               	skipnc
  5513  1610  3E01               	addlw	1
  5514  1611  00A1               	movwf	??_displayDigit+1
  5515  1612  0820               	movf	??_displayDigit,w
  5516  1613  0084               	movwf	4
  5517  1614  1783               	bsf	3,7
  5518  1615  1C21               	btfss	??_displayDigit+1,0
  5519  1616  1383               	bcf	3,7
  5520  1617  0A00               	incf	0,w
  5521  1618  00A2               	movwf	??_displayDigit+2
  5522  1619  3001               	movlw	1
  5523  161A  00A3               	movwf	??_displayDigit+3
  5524  161B  3000               	movlw	0
  5525  161C  00A4               	movwf	??_displayDigit+4
  5526  161D  2E21               	goto	u2254
  5527  161E                     u2255:	
  5528  161E  1003               	clrc
  5529  161F  0DA3               	rlf	??_displayDigit+3,f
  5530  1620  0DA4               	rlf	??_displayDigit+4,f
  5531  1621                     u2254:	
  5532  1621  0BA2               	decfsz	??_displayDigit+2,f
  5533  1622  2E1E               	goto	u2255
  5534  1623  3002               	movlw	2
  5535  1624  077B               	addwf	displayDigit@D1,w
  5536  1625  00A5               	movwf	??_displayDigit+5
  5537  1626  087C               	movf	displayDigit@D1+1,w
  5538  1627  1803               	skipnc
  5539  1628  3E01               	addlw	1
  5540  1629  00A6               	movwf	??_displayDigit+6
  5541  162A  0825               	movf	??_displayDigit+5,w
  5542  162B  0084               	movwf	4
  5543  162C  1783               	bsf	3,7
  5544  162D  1C26               	btfss	??_displayDigit+6,0
  5545  162E  1383               	bcf	3,7
  5546  162F  0800               	movf	0,w
  5547  1630  00A7               	movwf	??_displayDigit+7
  5548  1631  0A84               	incf	4,f
  5549  1632  0800               	movf	0,w
  5550  1633  00A8               	movwf	??_displayDigit+8
  5551  1634  0827               	movf	??_displayDigit+7,w
  5552  1635  0084               	movwf	4
  5553  1636  1783               	bsf	3,7
  5554  1637  1C28               	btfss	??_displayDigit+8,0
  5555  1638  1383               	bcf	3,7
  5556  1639  0823               	movf	??_displayDigit+3,w
  5557  163A  0480               	iorwf	0,f
  5558  163B  0A84               	incf	4,f
  5559  163C  0824               	movf	??_displayDigit+4,w
  5560  163D  0480               	iorwf	0,f
  5561                           
  5562                           ;lcd.c: 106: ((*D1->sc) &= ~((1UL) << (D1->bits[2])));
  5563  163E  3012               	movlw	18
  5564  163F  077B               	addwf	displayDigit@D1,w
  5565  1640  00A0               	movwf	??_displayDigit
  5566  1641  087C               	movf	displayDigit@D1+1,w
  5567  1642  1803               	skipnc
  5568  1643  3E01               	addlw	1
  5569  1644  00A1               	movwf	??_displayDigit+1
  5570  1645  0820               	movf	??_displayDigit,w
  5571  1646  0084               	movwf	4
  5572  1647  1783               	bsf	3,7
  5573  1648  1C21               	btfss	??_displayDigit+1,0
  5574  1649  1383               	bcf	3,7
  5575  164A  0A00               	incf	0,w
  5576  164B  00A2               	movwf	??_displayDigit+2
  5577  164C  3001               	movlw	1
  5578  164D  00A3               	movwf	??_displayDigit+3
  5579  164E  3000               	movlw	0
  5580  164F  00A4               	movwf	??_displayDigit+4
  5581  1650  2E54               	goto	u2264
  5582  1651                     u2265:	
  5583  1651  1003               	clrc
  5584  1652  0DA3               	rlf	??_displayDigit+3,f
  5585  1653  0DA4               	rlf	??_displayDigit+4,f
  5586  1654                     u2264:	
  5587  1654  0BA2               	decfsz	??_displayDigit+2,f
  5588  1655  2E51               	goto	u2265
  5589  1656  09A3               	comf	??_displayDigit+3,f
  5590  1657  09A4               	comf	??_displayDigit+4,f
  5591  1658  3004               	movlw	4
  5592  1659  077B               	addwf	displayDigit@D1,w
  5593  165A  00A5               	movwf	??_displayDigit+5
  5594  165B  087C               	movf	displayDigit@D1+1,w
  5595  165C  1803               	skipnc
  5596  165D  3E01               	addlw	1
  5597  165E  00A6               	movwf	??_displayDigit+6
  5598  165F  0825               	movf	??_displayDigit+5,w
  5599  1660  0084               	movwf	4
  5600  1661  1783               	bsf	3,7
  5601  1662  1C26               	btfss	??_displayDigit+6,0
  5602  1663  1383               	bcf	3,7
  5603  1664  0800               	movf	0,w
  5604  1665  00A7               	movwf	??_displayDigit+7
  5605  1666  0A84               	incf	4,f
  5606  1667  0800               	movf	0,w
  5607  1668  00A8               	movwf	??_displayDigit+8
  5608  1669  0827               	movf	??_displayDigit+7,w
  5609  166A  0084               	movwf	4
  5610  166B  1783               	bsf	3,7
  5611  166C  1C28               	btfss	??_displayDigit+8,0
  5612  166D  1383               	bcf	3,7
  5613  166E  0823               	movf	??_displayDigit+3,w
  5614  166F  0580               	andwf	0,f
  5615  1670  0A84               	incf	4,f
  5616  1671  0824               	movf	??_displayDigit+4,w
  5617  1672  0580               	andwf	0,f
  5618                           
  5619                           ;lcd.c: 107: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  5620  1673  3014               	movlw	20
  5621  1674  077B               	addwf	displayDigit@D1,w
  5622  1675  00A0               	movwf	??_displayDigit
  5623  1676  087C               	movf	displayDigit@D1+1,w
  5624  1677  1803               	skipnc
  5625  1678  3E01               	addlw	1
  5626  1679  00A1               	movwf	??_displayDigit+1
  5627  167A  0820               	movf	??_displayDigit,w
  5628  167B  0084               	movwf	4
  5629  167C  1783               	bsf	3,7
  5630  167D  1C21               	btfss	??_displayDigit+1,0
  5631  167E  1383               	bcf	3,7
  5632  167F  0A00               	incf	0,w
  5633  1680  00A2               	movwf	??_displayDigit+2
  5634  1681  3001               	movlw	1
  5635  1682  00A3               	movwf	??_displayDigit+3
  5636  1683  3000               	movlw	0
  5637  1684  00A4               	movwf	??_displayDigit+4
  5638  1685  2E89               	goto	u2274
  5639  1686                     u2275:	
  5640  1686  1003               	clrc
  5641  1687  0DA3               	rlf	??_displayDigit+3,f
  5642  1688  0DA4               	rlf	??_displayDigit+4,f
  5643  1689                     u2274:	
  5644  1689  0BA2               	decfsz	??_displayDigit+2,f
  5645  168A  2E86               	goto	u2275
  5646  168B  3006               	movlw	6
  5647  168C  077B               	addwf	displayDigit@D1,w
  5648  168D  00A5               	movwf	??_displayDigit+5
  5649  168E  087C               	movf	displayDigit@D1+1,w
  5650  168F  1803               	skipnc
  5651  1690  3E01               	addlw	1
  5652  1691  00A6               	movwf	??_displayDigit+6
  5653  1692  0825               	movf	??_displayDigit+5,w
  5654  1693  0084               	movwf	4
  5655  1694  1783               	bsf	3,7
  5656  1695  1C26               	btfss	??_displayDigit+6,0
  5657  1696  1383               	bcf	3,7
  5658  1697  0800               	movf	0,w
  5659  1698  00A7               	movwf	??_displayDigit+7
  5660  1699  0A84               	incf	4,f
  5661  169A  0800               	movf	0,w
  5662  169B  00A8               	movwf	??_displayDigit+8
  5663  169C  0827               	movf	??_displayDigit+7,w
  5664  169D  0084               	movwf	4
  5665  169E  1783               	bsf	3,7
  5666  169F  1C28               	btfss	??_displayDigit+8,0
  5667  16A0  1383               	bcf	3,7
  5668  16A1  0823               	movf	??_displayDigit+3,w
  5669  16A2  0480               	iorwf	0,f
  5670  16A3  0A84               	incf	4,f
  5671  16A4  0824               	movf	??_displayDigit+4,w
  5672  16A5  0480               	iorwf	0,f
  5673                           
  5674                           ;lcd.c: 108: ((*D1->se) |= (1UL) << (D1->bits[4]));
  5675  16A6  3016               	movlw	22
  5676  16A7  077B               	addwf	displayDigit@D1,w
  5677  16A8  00A0               	movwf	??_displayDigit
  5678  16A9  087C               	movf	displayDigit@D1+1,w
  5679  16AA  1803               	skipnc
  5680  16AB  3E01               	addlw	1
  5681  16AC  00A1               	movwf	??_displayDigit+1
  5682  16AD  0820               	movf	??_displayDigit,w
  5683  16AE  0084               	movwf	4
  5684  16AF  1783               	bsf	3,7
  5685  16B0  1C21               	btfss	??_displayDigit+1,0
  5686  16B1  1383               	bcf	3,7
  5687  16B2  0A00               	incf	0,w
  5688  16B3  00A2               	movwf	??_displayDigit+2
  5689  16B4  3001               	movlw	1
  5690  16B5  00A3               	movwf	??_displayDigit+3
  5691  16B6  3000               	movlw	0
  5692  16B7  00A4               	movwf	??_displayDigit+4
  5693  16B8  2EBC               	goto	u2284
  5694  16B9                     u2285:	
  5695  16B9  1003               	clrc
  5696  16BA  0DA3               	rlf	??_displayDigit+3,f
  5697  16BB  0DA4               	rlf	??_displayDigit+4,f
  5698  16BC                     u2284:	
  5699  16BC  0BA2               	decfsz	??_displayDigit+2,f
  5700  16BD  2EB9               	goto	u2285
  5701  16BE  3008               	movlw	8
  5702  16BF  077B               	addwf	displayDigit@D1,w
  5703  16C0  00A5               	movwf	??_displayDigit+5
  5704  16C1  087C               	movf	displayDigit@D1+1,w
  5705  16C2  1803               	skipnc
  5706  16C3  3E01               	addlw	1
  5707  16C4  00A6               	movwf	??_displayDigit+6
  5708  16C5  0825               	movf	??_displayDigit+5,w
  5709  16C6  0084               	movwf	4
  5710  16C7  1783               	bsf	3,7
  5711  16C8  1C26               	btfss	??_displayDigit+6,0
  5712  16C9  1383               	bcf	3,7
  5713  16CA  0800               	movf	0,w
  5714  16CB  00A7               	movwf	??_displayDigit+7
  5715  16CC  0A84               	incf	4,f
  5716  16CD  0800               	movf	0,w
  5717  16CE  00A8               	movwf	??_displayDigit+8
  5718  16CF  0827               	movf	??_displayDigit+7,w
  5719  16D0  0084               	movwf	4
  5720  16D1  1783               	bsf	3,7
  5721  16D2  1C28               	btfss	??_displayDigit+8,0
  5722  16D3  1383               	bcf	3,7
  5723  16D4  0823               	movf	??_displayDigit+3,w
  5724  16D5  0480               	iorwf	0,f
  5725  16D6  0A84               	incf	4,f
  5726  16D7  0824               	movf	??_displayDigit+4,w
  5727  16D8  0480               	iorwf	0,f
  5728                           
  5729                           ;lcd.c: 109: ((*D1->sf) &= ~((1UL) << (D1->bits[5])));
  5730  16D9  3018               	movlw	24
  5731  16DA  077B               	addwf	displayDigit@D1,w
  5732  16DB  00A0               	movwf	??_displayDigit
  5733  16DC  087C               	movf	displayDigit@D1+1,w
  5734  16DD  1803               	skipnc
  5735  16DE  3E01               	addlw	1
  5736  16DF  00A1               	movwf	??_displayDigit+1
  5737  16E0  0820               	movf	??_displayDigit,w
  5738  16E1  0084               	movwf	4
  5739  16E2  1783               	bsf	3,7
  5740  16E3  1C21               	btfss	??_displayDigit+1,0
  5741  16E4  1383               	bcf	3,7
  5742  16E5  0A00               	incf	0,w
  5743  16E6  00A2               	movwf	??_displayDigit+2
  5744  16E7  3001               	movlw	1
  5745  16E8  00A3               	movwf	??_displayDigit+3
  5746  16E9  3000               	movlw	0
  5747  16EA  00A4               	movwf	??_displayDigit+4
  5748  16EB  120A  158A  2AAE   	goto	u2294
  5749                           
  5750                           	psect	text5_split_4
  5751  0AAB                     u2295:	
  5752  0AAB  1003               	clrc
  5753  0AAC  0DA3               	rlf	??_displayDigit+3,f
  5754  0AAD  0DA4               	rlf	??_displayDigit+4,f
  5755  0AAE                     u2294:	
  5756  0AAE  0BA2               	decfsz	??_displayDigit+2,f
  5757  0AAF  2AAB               	goto	u2295
  5758  0AB0  09A3               	comf	??_displayDigit+3,f
  5759  0AB1  09A4               	comf	??_displayDigit+4,f
  5760  0AB2  300A               	movlw	10
  5761  0AB3  077B               	addwf	displayDigit@D1,w
  5762  0AB4  00A5               	movwf	??_displayDigit+5
  5763  0AB5  087C               	movf	displayDigit@D1+1,w
  5764  0AB6  1803               	skipnc
  5765  0AB7  3E01               	addlw	1
  5766  0AB8  00A6               	movwf	??_displayDigit+6
  5767  0AB9  0825               	movf	??_displayDigit+5,w
  5768  0ABA  0084               	movwf	4
  5769  0ABB  1783               	bsf	3,7
  5770  0ABC  1C26               	btfss	??_displayDigit+6,0
  5771  0ABD  1383               	bcf	3,7
  5772  0ABE  0800               	movf	0,w
  5773  0ABF  00A7               	movwf	??_displayDigit+7
  5774  0AC0  0A84               	incf	4,f
  5775  0AC1  0800               	movf	0,w
  5776  0AC2  00A8               	movwf	??_displayDigit+8
  5777  0AC3  0827               	movf	??_displayDigit+7,w
  5778  0AC4  0084               	movwf	4
  5779  0AC5  1783               	bsf	3,7
  5780  0AC6  1C28               	btfss	??_displayDigit+8,0
  5781  0AC7  1383               	bcf	3,7
  5782  0AC8  0823               	movf	??_displayDigit+3,w
  5783  0AC9  0580               	andwf	0,f
  5784  0ACA  0A84               	incf	4,f
  5785  0ACB  0824               	movf	??_displayDigit+4,w
  5786  0ACC  0580               	andwf	0,f
  5787                           
  5788                           ;lcd.c: 110: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  5789  0ACD  301A               	movlw	26
  5790  0ACE  077B               	addwf	displayDigit@D1,w
  5791  0ACF  00A0               	movwf	??_displayDigit
  5792  0AD0  087C               	movf	displayDigit@D1+1,w
  5793  0AD1  1803               	skipnc
  5794  0AD2  3E01               	addlw	1
  5795  0AD3  00A1               	movwf	??_displayDigit+1
  5796  0AD4  0820               	movf	??_displayDigit,w
  5797  0AD5  0084               	movwf	4
  5798  0AD6  1783               	bsf	3,7
  5799  0AD7  1C21               	btfss	??_displayDigit+1,0
  5800  0AD8  1383               	bcf	3,7
  5801  0AD9  0A00               	incf	0,w
  5802  0ADA  00A2               	movwf	??_displayDigit+2
  5803  0ADB  3001               	movlw	1
  5804  0ADC  00A3               	movwf	??_displayDigit+3
  5805  0ADD  3000               	movlw	0
  5806  0ADE  00A4               	movwf	??_displayDigit+4
  5807  0ADF  2AE3               	goto	u2304
  5808  0AE0                     u2305:	
  5809  0AE0  1003               	clrc
  5810  0AE1  0DA3               	rlf	??_displayDigit+3,f
  5811  0AE2  0DA4               	rlf	??_displayDigit+4,f
  5812  0AE3                     u2304:	
  5813  0AE3  0BA2               	decfsz	??_displayDigit+2,f
  5814  0AE4  2AE0               	goto	u2305
  5815  0AE5  300C               	movlw	12
  5816  0AE6  077B               	addwf	displayDigit@D1,w
  5817  0AE7  00A5               	movwf	??_displayDigit+5
  5818  0AE8  087C               	movf	displayDigit@D1+1,w
  5819  0AE9  1803               	skipnc
  5820  0AEA  3E01               	addlw	1
  5821  0AEB  00A6               	movwf	??_displayDigit+6
  5822  0AEC  0825               	movf	??_displayDigit+5,w
  5823  0AED  0084               	movwf	4
  5824  0AEE  1783               	bsf	3,7
  5825  0AEF  1C26               	btfss	??_displayDigit+6,0
  5826  0AF0  1383               	bcf	3,7
  5827  0AF1  0800               	movf	0,w
  5828  0AF2  00A7               	movwf	??_displayDigit+7
  5829  0AF3  0A84               	incf	4,f
  5830  0AF4  0800               	movf	0,w
  5831  0AF5  00A8               	movwf	??_displayDigit+8
  5832  0AF6  0827               	movf	??_displayDigit+7,w
  5833  0AF7  0084               	movwf	4
  5834  0AF8  1783               	bsf	3,7
  5835  0AF9  1C28               	btfss	??_displayDigit+8,0
  5836  0AFA  1383               	bcf	3,7
  5837  0AFB  0823               	movf	??_displayDigit+3,w
  5838  0AFC  0480               	iorwf	0,f
  5839  0AFD  0A84               	incf	4,f
  5840  0AFE  0824               	movf	??_displayDigit+4,w
  5841  0AFF  0480               	iorwf	0,f
  5842                           
  5843                           ;lcd.c: 111: break;
  5844  0B00  0008               	return
  5845  0B01                     l1355:	
  5846                           ;lcd.c: 112: case 3:
  5847                           
  5848                           
  5849                           ;lcd.c: 113: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  5850  0B01  300E               	movlw	14
  5851  0B02  077B               	addwf	displayDigit@D1,w
  5852  0B03  1283               	bcf	3,5	;RP0=0, select bank0
  5853  0B04  1303               	bcf	3,6	;RP1=0, select bank0
  5854  0B05  00A0               	movwf	??_displayDigit
  5855  0B06  087C               	movf	displayDigit@D1+1,w
  5856  0B07  1803               	skipnc
  5857  0B08  3E01               	addlw	1
  5858  0B09  00A1               	movwf	??_displayDigit+1
  5859  0B0A  0820               	movf	??_displayDigit,w
  5860  0B0B  0084               	movwf	4
  5861  0B0C  1783               	bsf	3,7
  5862  0B0D  1C21               	btfss	??_displayDigit+1,0
  5863  0B0E  1383               	bcf	3,7
  5864  0B0F  0A00               	incf	0,w
  5865  0B10  00A2               	movwf	??_displayDigit+2
  5866  0B11  3001               	movlw	1
  5867  0B12  00A3               	movwf	??_displayDigit+3
  5868  0B13  3000               	movlw	0
  5869  0B14  00A4               	movwf	??_displayDigit+4
  5870  0B15  2B19               	goto	u2314
  5871  0B16                     u2315:	
  5872  0B16  1003               	clrc
  5873  0B17  0DA3               	rlf	??_displayDigit+3,f
  5874  0B18  0DA4               	rlf	??_displayDigit+4,f
  5875  0B19                     u2314:	
  5876  0B19  0BA2               	decfsz	??_displayDigit+2,f
  5877  0B1A  2B16               	goto	u2315
  5878  0B1B  087B               	movf	displayDigit@D1,w
  5879  0B1C  0084               	movwf	4
  5880  0B1D  1783               	bsf	3,7
  5881  0B1E  1C7C               	btfss	displayDigit@D1+1,0
  5882  0B1F  1383               	bcf	3,7
  5883  0B20  0800               	movf	0,w
  5884  0B21  00A5               	movwf	??_displayDigit+5
  5885  0B22  0A84               	incf	4,f
  5886  0B23  0800               	movf	0,w
  5887  0B24  00A6               	movwf	??_displayDigit+6
  5888  0B25  0825               	movf	??_displayDigit+5,w
  5889  0B26  0084               	movwf	4
  5890  0B27  1783               	bsf	3,7
  5891  0B28  1C26               	btfss	??_displayDigit+6,0
  5892  0B29  1383               	bcf	3,7
  5893  0B2A  0823               	movf	??_displayDigit+3,w
  5894  0B2B  0480               	iorwf	0,f
  5895  0B2C  0A84               	incf	4,f
  5896  0B2D  0824               	movf	??_displayDigit+4,w
  5897  0B2E  0480               	iorwf	0,f
  5898                           
  5899                           ;lcd.c: 114: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  5900  0B2F  3010               	movlw	16
  5901  0B30  077B               	addwf	displayDigit@D1,w
  5902  0B31  00A0               	movwf	??_displayDigit
  5903  0B32  087C               	movf	displayDigit@D1+1,w
  5904  0B33  1803               	skipnc
  5905  0B34  3E01               	addlw	1
  5906  0B35  00A1               	movwf	??_displayDigit+1
  5907  0B36  0820               	movf	??_displayDigit,w
  5908  0B37  0084               	movwf	4
  5909  0B38  1783               	bsf	3,7
  5910  0B39  1C21               	btfss	??_displayDigit+1,0
  5911  0B3A  1383               	bcf	3,7
  5912  0B3B  0A00               	incf	0,w
  5913  0B3C  00A2               	movwf	??_displayDigit+2
  5914  0B3D  3001               	movlw	1
  5915  0B3E  00A3               	movwf	??_displayDigit+3
  5916  0B3F  3000               	movlw	0
  5917  0B40  00A4               	movwf	??_displayDigit+4
  5918  0B41  2B45               	goto	u2324
  5919  0B42                     u2325:	
  5920  0B42  1003               	clrc
  5921  0B43  0DA3               	rlf	??_displayDigit+3,f
  5922  0B44  0DA4               	rlf	??_displayDigit+4,f
  5923  0B45                     u2324:	
  5924  0B45  0BA2               	decfsz	??_displayDigit+2,f
  5925  0B46  2B42               	goto	u2325
  5926  0B47  3002               	movlw	2
  5927  0B48  077B               	addwf	displayDigit@D1,w
  5928  0B49  00A5               	movwf	??_displayDigit+5
  5929  0B4A  087C               	movf	displayDigit@D1+1,w
  5930  0B4B  1803               	skipnc
  5931  0B4C  3E01               	addlw	1
  5932  0B4D  00A6               	movwf	??_displayDigit+6
  5933  0B4E  0825               	movf	??_displayDigit+5,w
  5934  0B4F  0084               	movwf	4
  5935  0B50  1783               	bsf	3,7
  5936  0B51  1C26               	btfss	??_displayDigit+6,0
  5937  0B52  1383               	bcf	3,7
  5938  0B53  0800               	movf	0,w
  5939  0B54  00A7               	movwf	??_displayDigit+7
  5940  0B55  0A84               	incf	4,f
  5941  0B56  0800               	movf	0,w
  5942  0B57  00A8               	movwf	??_displayDigit+8
  5943  0B58  0827               	movf	??_displayDigit+7,w
  5944  0B59  0084               	movwf	4
  5945  0B5A  1783               	bsf	3,7
  5946  0B5B  1C28               	btfss	??_displayDigit+8,0
  5947  0B5C  1383               	bcf	3,7
  5948  0B5D  0823               	movf	??_displayDigit+3,w
  5949  0B5E  0480               	iorwf	0,f
  5950  0B5F  0A84               	incf	4,f
  5951  0B60  0824               	movf	??_displayDigit+4,w
  5952  0B61  0480               	iorwf	0,f
  5953                           
  5954                           ;lcd.c: 115: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  5955  0B62  3012               	movlw	18
  5956  0B63  077B               	addwf	displayDigit@D1,w
  5957  0B64  00A0               	movwf	??_displayDigit
  5958  0B65  087C               	movf	displayDigit@D1+1,w
  5959  0B66  1803               	skipnc
  5960  0B67  3E01               	addlw	1
  5961  0B68  00A1               	movwf	??_displayDigit+1
  5962  0B69  0820               	movf	??_displayDigit,w
  5963  0B6A  0084               	movwf	4
  5964  0B6B  1783               	bsf	3,7
  5965  0B6C  1C21               	btfss	??_displayDigit+1,0
  5966  0B6D  1383               	bcf	3,7
  5967  0B6E  0A00               	incf	0,w
  5968  0B6F  00A2               	movwf	??_displayDigit+2
  5969  0B70  3001               	movlw	1
  5970  0B71  00A3               	movwf	??_displayDigit+3
  5971  0B72  3000               	movlw	0
  5972  0B73  00A4               	movwf	??_displayDigit+4
  5973  0B74  2B78               	goto	u2334
  5974  0B75                     u2335:	
  5975  0B75  1003               	clrc
  5976  0B76  0DA3               	rlf	??_displayDigit+3,f
  5977  0B77  0DA4               	rlf	??_displayDigit+4,f
  5978  0B78                     u2334:	
  5979  0B78  0BA2               	decfsz	??_displayDigit+2,f
  5980  0B79  2B75               	goto	u2335
  5981  0B7A  3004               	movlw	4
  5982  0B7B  077B               	addwf	displayDigit@D1,w
  5983  0B7C  00A5               	movwf	??_displayDigit+5
  5984  0B7D  087C               	movf	displayDigit@D1+1,w
  5985  0B7E  1803               	skipnc
  5986  0B7F  3E01               	addlw	1
  5987  0B80  00A6               	movwf	??_displayDigit+6
  5988  0B81  0825               	movf	??_displayDigit+5,w
  5989  0B82  0084               	movwf	4
  5990  0B83  1783               	bsf	3,7
  5991  0B84  1C26               	btfss	??_displayDigit+6,0
  5992  0B85  1383               	bcf	3,7
  5993  0B86  0800               	movf	0,w
  5994  0B87  00A7               	movwf	??_displayDigit+7
  5995  0B88  0A84               	incf	4,f
  5996  0B89  0800               	movf	0,w
  5997  0B8A  00A8               	movwf	??_displayDigit+8
  5998  0B8B  0827               	movf	??_displayDigit+7,w
  5999  0B8C  0084               	movwf	4
  6000  0B8D  1783               	bsf	3,7
  6001  0B8E  1C28               	btfss	??_displayDigit+8,0
  6002  0B8F  1383               	bcf	3,7
  6003  0B90  0823               	movf	??_displayDigit+3,w
  6004  0B91  0480               	iorwf	0,f
  6005  0B92  0A84               	incf	4,f
  6006  0B93  0824               	movf	??_displayDigit+4,w
  6007  0B94  0480               	iorwf	0,f
  6008                           
  6009                           ;lcd.c: 116: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  6010  0B95  3014               	movlw	20
  6011  0B96  077B               	addwf	displayDigit@D1,w
  6012  0B97  00A0               	movwf	??_displayDigit
  6013  0B98  087C               	movf	displayDigit@D1+1,w
  6014  0B99  1803               	skipnc
  6015  0B9A  3E01               	addlw	1
  6016  0B9B  00A1               	movwf	??_displayDigit+1
  6017  0B9C  0820               	movf	??_displayDigit,w
  6018  0B9D  0084               	movwf	4
  6019  0B9E  1783               	bsf	3,7
  6020  0B9F  1C21               	btfss	??_displayDigit+1,0
  6021  0BA0  1383               	bcf	3,7
  6022  0BA1  0A00               	incf	0,w
  6023  0BA2  00A2               	movwf	??_displayDigit+2
  6024  0BA3  3001               	movlw	1
  6025  0BA4  00A3               	movwf	??_displayDigit+3
  6026  0BA5  3000               	movlw	0
  6027  0BA6  00A4               	movwf	??_displayDigit+4
  6028  0BA7  2BAB               	goto	u2344
  6029  0BA8                     u2345:	
  6030  0BA8  1003               	clrc
  6031  0BA9  0DA3               	rlf	??_displayDigit+3,f
  6032  0BAA  0DA4               	rlf	??_displayDigit+4,f
  6033  0BAB                     u2344:	
  6034  0BAB  0BA2               	decfsz	??_displayDigit+2,f
  6035  0BAC  2BA8               	goto	u2345
  6036  0BAD  3006               	movlw	6
  6037  0BAE  077B               	addwf	displayDigit@D1,w
  6038  0BAF  00A5               	movwf	??_displayDigit+5
  6039  0BB0  087C               	movf	displayDigit@D1+1,w
  6040  0BB1  1803               	skipnc
  6041  0BB2  3E01               	addlw	1
  6042  0BB3  00A6               	movwf	??_displayDigit+6
  6043  0BB4  0825               	movf	??_displayDigit+5,w
  6044  0BB5  0084               	movwf	4
  6045  0BB6  1783               	bsf	3,7
  6046  0BB7  1C26               	btfss	??_displayDigit+6,0
  6047  0BB8  1383               	bcf	3,7
  6048  0BB9  0800               	movf	0,w
  6049  0BBA  00A7               	movwf	??_displayDigit+7
  6050  0BBB  0A84               	incf	4,f
  6051  0BBC  0800               	movf	0,w
  6052  0BBD  00A8               	movwf	??_displayDigit+8
  6053  0BBE  0827               	movf	??_displayDigit+7,w
  6054  0BBF  0084               	movwf	4
  6055  0BC0  1783               	bsf	3,7
  6056  0BC1  1C28               	btfss	??_displayDigit+8,0
  6057  0BC2  1383               	bcf	3,7
  6058  0BC3  0823               	movf	??_displayDigit+3,w
  6059  0BC4  0480               	iorwf	0,f
  6060  0BC5  0A84               	incf	4,f
  6061  0BC6  0824               	movf	??_displayDigit+4,w
  6062  0BC7  0480               	iorwf	0,f
  6063                           
  6064                           ;lcd.c: 117: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  6065  0BC8  3016               	movlw	22
  6066  0BC9  077B               	addwf	displayDigit@D1,w
  6067  0BCA  00A0               	movwf	??_displayDigit
  6068  0BCB  087C               	movf	displayDigit@D1+1,w
  6069  0BCC  1803               	skipnc
  6070  0BCD  3E01               	addlw	1
  6071  0BCE  00A1               	movwf	??_displayDigit+1
  6072  0BCF  0820               	movf	??_displayDigit,w
  6073  0BD0  0084               	movwf	4
  6074  0BD1  1783               	bsf	3,7
  6075  0BD2  1C21               	btfss	??_displayDigit+1,0
  6076  0BD3  1383               	bcf	3,7
  6077  0BD4  0A00               	incf	0,w
  6078  0BD5  00A2               	movwf	??_displayDigit+2
  6079  0BD6  3001               	movlw	1
  6080  0BD7  00A3               	movwf	??_displayDigit+3
  6081  0BD8  3000               	movlw	0
  6082  0BD9  00A4               	movwf	??_displayDigit+4
  6083  0BDA  160A  118A  28D1   	goto	u2354
  6084                           
  6085                           	psect	text5_split_5
  6086  10CE                     u2355:	
  6087  10CE  1003               	clrc
  6088  10CF  0DA3               	rlf	??_displayDigit+3,f
  6089  10D0  0DA4               	rlf	??_displayDigit+4,f
  6090  10D1                     u2354:	
  6091  10D1  0BA2               	decfsz	??_displayDigit+2,f
  6092  10D2  28CE               	goto	u2355
  6093  10D3  09A3               	comf	??_displayDigit+3,f
  6094  10D4  09A4               	comf	??_displayDigit+4,f
  6095  10D5  3008               	movlw	8
  6096  10D6  077B               	addwf	displayDigit@D1,w
  6097  10D7  00A5               	movwf	??_displayDigit+5
  6098  10D8  087C               	movf	displayDigit@D1+1,w
  6099  10D9  1803               	skipnc
  6100  10DA  3E01               	addlw	1
  6101  10DB  00A6               	movwf	??_displayDigit+6
  6102  10DC  0825               	movf	??_displayDigit+5,w
  6103  10DD  0084               	movwf	4
  6104  10DE  1783               	bsf	3,7
  6105  10DF  1C26               	btfss	??_displayDigit+6,0
  6106  10E0  1383               	bcf	3,7
  6107  10E1  0800               	movf	0,w
  6108  10E2  00A7               	movwf	??_displayDigit+7
  6109  10E3  0A84               	incf	4,f
  6110  10E4  0800               	movf	0,w
  6111  10E5  00A8               	movwf	??_displayDigit+8
  6112  10E6  0827               	movf	??_displayDigit+7,w
  6113  10E7  0084               	movwf	4
  6114  10E8  1783               	bsf	3,7
  6115  10E9  1C28               	btfss	??_displayDigit+8,0
  6116  10EA  1383               	bcf	3,7
  6117  10EB  0823               	movf	??_displayDigit+3,w
  6118  10EC  0580               	andwf	0,f
  6119  10ED  0A84               	incf	4,f
  6120  10EE  0824               	movf	??_displayDigit+4,w
  6121  10EF  0580               	andwf	0,f
  6122                           
  6123                           ;lcd.c: 118: ((*D1->sf) &= ~((1UL) << (D1->bits[5])));
  6124  10F0  3018               	movlw	24
  6125  10F1  077B               	addwf	displayDigit@D1,w
  6126  10F2  00A0               	movwf	??_displayDigit
  6127  10F3  087C               	movf	displayDigit@D1+1,w
  6128  10F4  1803               	skipnc
  6129  10F5  3E01               	addlw	1
  6130  10F6  00A1               	movwf	??_displayDigit+1
  6131  10F7  0820               	movf	??_displayDigit,w
  6132  10F8  0084               	movwf	4
  6133  10F9  1783               	bsf	3,7
  6134  10FA  1C21               	btfss	??_displayDigit+1,0
  6135  10FB  1383               	bcf	3,7
  6136  10FC  0A00               	incf	0,w
  6137  10FD  00A2               	movwf	??_displayDigit+2
  6138  10FE  3001               	movlw	1
  6139  10FF  00A3               	movwf	??_displayDigit+3
  6140  1100  3000               	movlw	0
  6141  1101  00A4               	movwf	??_displayDigit+4
  6142  1102  2906               	goto	u2364
  6143  1103                     u2365:	
  6144  1103  1003               	clrc
  6145  1104  0DA3               	rlf	??_displayDigit+3,f
  6146  1105  0DA4               	rlf	??_displayDigit+4,f
  6147  1106                     u2364:	
  6148  1106  0BA2               	decfsz	??_displayDigit+2,f
  6149  1107  2903               	goto	u2365
  6150  1108  09A3               	comf	??_displayDigit+3,f
  6151  1109  09A4               	comf	??_displayDigit+4,f
  6152  110A  300A               	movlw	10
  6153  110B  077B               	addwf	displayDigit@D1,w
  6154  110C  00A5               	movwf	??_displayDigit+5
  6155  110D  087C               	movf	displayDigit@D1+1,w
  6156  110E  1803               	skipnc
  6157  110F  3E01               	addlw	1
  6158  1110  00A6               	movwf	??_displayDigit+6
  6159  1111  0825               	movf	??_displayDigit+5,w
  6160  1112  0084               	movwf	4
  6161  1113  1783               	bsf	3,7
  6162  1114  1C26               	btfss	??_displayDigit+6,0
  6163  1115  1383               	bcf	3,7
  6164  1116  0800               	movf	0,w
  6165  1117  00A7               	movwf	??_displayDigit+7
  6166  1118  0A84               	incf	4,f
  6167  1119  0800               	movf	0,w
  6168  111A  00A8               	movwf	??_displayDigit+8
  6169  111B  0827               	movf	??_displayDigit+7,w
  6170  111C  0084               	movwf	4
  6171  111D  1783               	bsf	3,7
  6172  111E  1C28               	btfss	??_displayDigit+8,0
  6173  111F  1383               	bcf	3,7
  6174  1120  0823               	movf	??_displayDigit+3,w
  6175  1121  0580               	andwf	0,f
  6176  1122  0A84               	incf	4,f
  6177  1123  0824               	movf	??_displayDigit+4,w
  6178  1124  0580               	andwf	0,f
  6179                           
  6180                           ;lcd.c: 119: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  6181  1125  301A               	movlw	26
  6182  1126  077B               	addwf	displayDigit@D1,w
  6183  1127  00A0               	movwf	??_displayDigit
  6184  1128  087C               	movf	displayDigit@D1+1,w
  6185  1129  1803               	skipnc
  6186  112A  3E01               	addlw	1
  6187  112B  00A1               	movwf	??_displayDigit+1
  6188  112C  0820               	movf	??_displayDigit,w
  6189  112D  0084               	movwf	4
  6190  112E  1783               	bsf	3,7
  6191  112F  1C21               	btfss	??_displayDigit+1,0
  6192  1130  1383               	bcf	3,7
  6193  1131  0A00               	incf	0,w
  6194  1132  00A2               	movwf	??_displayDigit+2
  6195  1133  3001               	movlw	1
  6196  1134  00A3               	movwf	??_displayDigit+3
  6197  1135  3000               	movlw	0
  6198  1136  00A4               	movwf	??_displayDigit+4
  6199  1137  293B               	goto	u2374
  6200  1138                     u2375:	
  6201  1138  1003               	clrc
  6202  1139  0DA3               	rlf	??_displayDigit+3,f
  6203  113A  0DA4               	rlf	??_displayDigit+4,f
  6204  113B                     u2374:	
  6205  113B  0BA2               	decfsz	??_displayDigit+2,f
  6206  113C  2938               	goto	u2375
  6207  113D  300C               	movlw	12
  6208  113E  077B               	addwf	displayDigit@D1,w
  6209  113F  00A5               	movwf	??_displayDigit+5
  6210  1140  087C               	movf	displayDigit@D1+1,w
  6211  1141  1803               	skipnc
  6212  1142  3E01               	addlw	1
  6213  1143  00A6               	movwf	??_displayDigit+6
  6214  1144  0825               	movf	??_displayDigit+5,w
  6215  1145  0084               	movwf	4
  6216  1146  1783               	bsf	3,7
  6217  1147  1C26               	btfss	??_displayDigit+6,0
  6218  1148  1383               	bcf	3,7
  6219  1149  0800               	movf	0,w
  6220  114A  00A7               	movwf	??_displayDigit+7
  6221  114B  0A84               	incf	4,f
  6222  114C  0800               	movf	0,w
  6223  114D  00A8               	movwf	??_displayDigit+8
  6224  114E  0827               	movf	??_displayDigit+7,w
  6225  114F  0084               	movwf	4
  6226  1150  1783               	bsf	3,7
  6227  1151  1C28               	btfss	??_displayDigit+8,0
  6228  1152  1383               	bcf	3,7
  6229  1153  0823               	movf	??_displayDigit+3,w
  6230  1154  0480               	iorwf	0,f
  6231  1155  0A84               	incf	4,f
  6232  1156  0824               	movf	??_displayDigit+4,w
  6233  1157  0480               	iorwf	0,f
  6234                           
  6235                           ;lcd.c: 120: break;
  6236  1158  0008               	return
  6237                           
  6238                           	psect	text5_split_6
  6239  0864                     l1357:	
  6240                           ;lcd.c: 121: case 4:
  6241                           
  6242                           
  6243                           ;lcd.c: 122: ((*D1->sa) &= ~((1UL) << (D1->bits[0])));
  6244  0864  300E               	movlw	14
  6245  0865  077B               	addwf	displayDigit@D1,w
  6246  0866  1283               	bcf	3,5	;RP0=0, select bank0
  6247  0867  1303               	bcf	3,6	;RP1=0, select bank0
  6248  0868  00A0               	movwf	??_displayDigit
  6249  0869  087C               	movf	displayDigit@D1+1,w
  6250  086A  1803               	skipnc
  6251  086B  3E01               	addlw	1
  6252  086C  00A1               	movwf	??_displayDigit+1
  6253  086D  0820               	movf	??_displayDigit,w
  6254  086E  0084               	movwf	4
  6255  086F  1783               	bsf	3,7
  6256  0870  1C21               	btfss	??_displayDigit+1,0
  6257  0871  1383               	bcf	3,7
  6258  0872  0A00               	incf	0,w
  6259  0873  00A2               	movwf	??_displayDigit+2
  6260  0874  3001               	movlw	1
  6261  0875  00A3               	movwf	??_displayDigit+3
  6262  0876  3000               	movlw	0
  6263  0877  00A4               	movwf	??_displayDigit+4
  6264  0878  287C               	goto	u2384
  6265  0879                     u2385:	
  6266  0879  1003               	clrc
  6267  087A  0DA3               	rlf	??_displayDigit+3,f
  6268  087B  0DA4               	rlf	??_displayDigit+4,f
  6269  087C                     u2384:	
  6270  087C  0BA2               	decfsz	??_displayDigit+2,f
  6271  087D  2879               	goto	u2385
  6272  087E  09A3               	comf	??_displayDigit+3,f
  6273  087F  09A4               	comf	??_displayDigit+4,f
  6274  0880  087B               	movf	displayDigit@D1,w
  6275  0881  0084               	movwf	4
  6276  0882  1783               	bsf	3,7
  6277  0883  1C7C               	btfss	displayDigit@D1+1,0
  6278  0884  1383               	bcf	3,7
  6279  0885  0800               	movf	0,w
  6280  0886  00A5               	movwf	??_displayDigit+5
  6281  0887  0A84               	incf	4,f
  6282  0888  0800               	movf	0,w
  6283  0889  00A6               	movwf	??_displayDigit+6
  6284  088A  0825               	movf	??_displayDigit+5,w
  6285  088B  0084               	movwf	4
  6286  088C  1783               	bsf	3,7
  6287  088D  1C26               	btfss	??_displayDigit+6,0
  6288  088E  1383               	bcf	3,7
  6289  088F  0823               	movf	??_displayDigit+3,w
  6290  0890  0580               	andwf	0,f
  6291  0891  0A84               	incf	4,f
  6292  0892  0824               	movf	??_displayDigit+4,w
  6293  0893  0580               	andwf	0,f
  6294                           
  6295                           ;lcd.c: 123: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  6296  0894  3010               	movlw	16
  6297  0895  077B               	addwf	displayDigit@D1,w
  6298  0896  00A0               	movwf	??_displayDigit
  6299  0897  087C               	movf	displayDigit@D1+1,w
  6300  0898  1803               	skipnc
  6301  0899  3E01               	addlw	1
  6302  089A  00A1               	movwf	??_displayDigit+1
  6303  089B  0820               	movf	??_displayDigit,w
  6304  089C  0084               	movwf	4
  6305  089D  1783               	bsf	3,7
  6306  089E  1C21               	btfss	??_displayDigit+1,0
  6307  089F  1383               	bcf	3,7
  6308  08A0  0A00               	incf	0,w
  6309  08A1  00A2               	movwf	??_displayDigit+2
  6310  08A2  3001               	movlw	1
  6311  08A3  00A3               	movwf	??_displayDigit+3
  6312  08A4  3000               	movlw	0
  6313  08A5  00A4               	movwf	??_displayDigit+4
  6314  08A6  28AA               	goto	u2394
  6315  08A7                     u2395:	
  6316  08A7  1003               	clrc
  6317  08A8  0DA3               	rlf	??_displayDigit+3,f
  6318  08A9  0DA4               	rlf	??_displayDigit+4,f
  6319  08AA                     u2394:	
  6320  08AA  0BA2               	decfsz	??_displayDigit+2,f
  6321  08AB  28A7               	goto	u2395
  6322  08AC  3002               	movlw	2
  6323  08AD  077B               	addwf	displayDigit@D1,w
  6324  08AE  00A5               	movwf	??_displayDigit+5
  6325  08AF  087C               	movf	displayDigit@D1+1,w
  6326  08B0  1803               	skipnc
  6327  08B1  3E01               	addlw	1
  6328  08B2  00A6               	movwf	??_displayDigit+6
  6329  08B3  0825               	movf	??_displayDigit+5,w
  6330  08B4  0084               	movwf	4
  6331  08B5  1783               	bsf	3,7
  6332  08B6  1C26               	btfss	??_displayDigit+6,0
  6333  08B7  1383               	bcf	3,7
  6334  08B8  0800               	movf	0,w
  6335  08B9  00A7               	movwf	??_displayDigit+7
  6336  08BA  0A84               	incf	4,f
  6337  08BB  0800               	movf	0,w
  6338  08BC  00A8               	movwf	??_displayDigit+8
  6339  08BD  0827               	movf	??_displayDigit+7,w
  6340  08BE  0084               	movwf	4
  6341  08BF  1783               	bsf	3,7
  6342  08C0  1C28               	btfss	??_displayDigit+8,0
  6343  08C1  1383               	bcf	3,7
  6344  08C2  0823               	movf	??_displayDigit+3,w
  6345  08C3  0480               	iorwf	0,f
  6346  08C4  0A84               	incf	4,f
  6347  08C5  0824               	movf	??_displayDigit+4,w
  6348  08C6  0480               	iorwf	0,f
  6349                           
  6350                           ;lcd.c: 124: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  6351  08C7  3012               	movlw	18
  6352  08C8  077B               	addwf	displayDigit@D1,w
  6353  08C9  00A0               	movwf	??_displayDigit
  6354  08CA  087C               	movf	displayDigit@D1+1,w
  6355  08CB  1803               	skipnc
  6356  08CC  3E01               	addlw	1
  6357  08CD  00A1               	movwf	??_displayDigit+1
  6358  08CE  0820               	movf	??_displayDigit,w
  6359  08CF  0084               	movwf	4
  6360  08D0  1783               	bsf	3,7
  6361  08D1  1C21               	btfss	??_displayDigit+1,0
  6362  08D2  1383               	bcf	3,7
  6363  08D3  0A00               	incf	0,w
  6364  08D4  00A2               	movwf	??_displayDigit+2
  6365  08D5  3001               	movlw	1
  6366  08D6  00A3               	movwf	??_displayDigit+3
  6367  08D7  3000               	movlw	0
  6368  08D8  00A4               	movwf	??_displayDigit+4
  6369  08D9  28DD               	goto	u2404
  6370  08DA                     u2405:	
  6371  08DA  1003               	clrc
  6372  08DB  0DA3               	rlf	??_displayDigit+3,f
  6373  08DC  0DA4               	rlf	??_displayDigit+4,f
  6374  08DD                     u2404:	
  6375  08DD  0BA2               	decfsz	??_displayDigit+2,f
  6376  08DE  28DA               	goto	u2405
  6377  08DF  3004               	movlw	4
  6378  08E0  077B               	addwf	displayDigit@D1,w
  6379  08E1  00A5               	movwf	??_displayDigit+5
  6380  08E2  087C               	movf	displayDigit@D1+1,w
  6381  08E3  1803               	skipnc
  6382  08E4  3E01               	addlw	1
  6383  08E5  00A6               	movwf	??_displayDigit+6
  6384  08E6  0825               	movf	??_displayDigit+5,w
  6385  08E7  0084               	movwf	4
  6386  08E8  1783               	bsf	3,7
  6387  08E9  1C26               	btfss	??_displayDigit+6,0
  6388  08EA  1383               	bcf	3,7
  6389  08EB  0800               	movf	0,w
  6390  08EC  00A7               	movwf	??_displayDigit+7
  6391  08ED  0A84               	incf	4,f
  6392  08EE  0800               	movf	0,w
  6393  08EF  00A8               	movwf	??_displayDigit+8
  6394  08F0  0827               	movf	??_displayDigit+7,w
  6395  08F1  0084               	movwf	4
  6396  08F2  1783               	bsf	3,7
  6397  08F3  1C28               	btfss	??_displayDigit+8,0
  6398  08F4  1383               	bcf	3,7
  6399  08F5  0823               	movf	??_displayDigit+3,w
  6400  08F6  0480               	iorwf	0,f
  6401  08F7  0A84               	incf	4,f
  6402  08F8  0824               	movf	??_displayDigit+4,w
  6403  08F9  0480               	iorwf	0,f
  6404                           
  6405                           ;lcd.c: 125: ((*D1->sd) &= ~((1UL) << (D1->bits[3])));
  6406  08FA  3014               	movlw	20
  6407  08FB  077B               	addwf	displayDigit@D1,w
  6408  08FC  00A0               	movwf	??_displayDigit
  6409  08FD  087C               	movf	displayDigit@D1+1,w
  6410  08FE  1803               	skipnc
  6411  08FF  3E01               	addlw	1
  6412  0900  00A1               	movwf	??_displayDigit+1
  6413  0901  0820               	movf	??_displayDigit,w
  6414  0902  0084               	movwf	4
  6415  0903  1783               	bsf	3,7
  6416  0904  1C21               	btfss	??_displayDigit+1,0
  6417  0905  1383               	bcf	3,7
  6418  0906  0A00               	incf	0,w
  6419  0907  00A2               	movwf	??_displayDigit+2
  6420  0908  3001               	movlw	1
  6421  0909  00A3               	movwf	??_displayDigit+3
  6422  090A  3000               	movlw	0
  6423  090B  00A4               	movwf	??_displayDigit+4
  6424  090C  2910               	goto	u2414
  6425  090D                     u2415:	
  6426  090D  1003               	clrc
  6427  090E  0DA3               	rlf	??_displayDigit+3,f
  6428  090F  0DA4               	rlf	??_displayDigit+4,f
  6429  0910                     u2414:	
  6430  0910  0BA2               	decfsz	??_displayDigit+2,f
  6431  0911  290D               	goto	u2415
  6432  0912  09A3               	comf	??_displayDigit+3,f
  6433  0913  09A4               	comf	??_displayDigit+4,f
  6434  0914  3006               	movlw	6
  6435  0915  077B               	addwf	displayDigit@D1,w
  6436  0916  00A5               	movwf	??_displayDigit+5
  6437  0917  087C               	movf	displayDigit@D1+1,w
  6438  0918  1803               	skipnc
  6439  0919  3E01               	addlw	1
  6440  091A  00A6               	movwf	??_displayDigit+6
  6441  091B  0825               	movf	??_displayDigit+5,w
  6442  091C  0084               	movwf	4
  6443  091D  1783               	bsf	3,7
  6444  091E  1C26               	btfss	??_displayDigit+6,0
  6445  091F  1383               	bcf	3,7
  6446  0920  0800               	movf	0,w
  6447  0921  00A7               	movwf	??_displayDigit+7
  6448  0922  0A84               	incf	4,f
  6449  0923  0800               	movf	0,w
  6450  0924  00A8               	movwf	??_displayDigit+8
  6451  0925  0827               	movf	??_displayDigit+7,w
  6452  0926  0084               	movwf	4
  6453  0927  1783               	bsf	3,7
  6454  0928  1C28               	btfss	??_displayDigit+8,0
  6455  0929  1383               	bcf	3,7
  6456  092A  0823               	movf	??_displayDigit+3,w
  6457  092B  0580               	andwf	0,f
  6458  092C  0A84               	incf	4,f
  6459  092D  0824               	movf	??_displayDigit+4,w
  6460  092E  0580               	andwf	0,f
  6461                           
  6462                           ;lcd.c: 126: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  6463  092F  3016               	movlw	22
  6464  0930  077B               	addwf	displayDigit@D1,w
  6465  0931  00A0               	movwf	??_displayDigit
  6466  0932  087C               	movf	displayDigit@D1+1,w
  6467  0933  1803               	skipnc
  6468  0934  3E01               	addlw	1
  6469  0935  00A1               	movwf	??_displayDigit+1
  6470  0936  0820               	movf	??_displayDigit,w
  6471  0937  0084               	movwf	4
  6472  0938  1783               	bsf	3,7
  6473  0939  1C21               	btfss	??_displayDigit+1,0
  6474  093A  1383               	bcf	3,7
  6475  093B  0A00               	incf	0,w
  6476  093C  00A2               	movwf	??_displayDigit+2
  6477  093D  3001               	movlw	1
  6478  093E  00A3               	movwf	??_displayDigit+3
  6479  093F  3000               	movlw	0
  6480  0940  00A4               	movwf	??_displayDigit+4
  6481  0941  2945               	goto	u2424
  6482  0942                     u2425:	
  6483  0942  1003               	clrc
  6484  0943  0DA3               	rlf	??_displayDigit+3,f
  6485  0944  0DA4               	rlf	??_displayDigit+4,f
  6486  0945                     u2424:	
  6487  0945  0BA2               	decfsz	??_displayDigit+2,f
  6488  0946  2942               	goto	u2425
  6489  0947  09A3               	comf	??_displayDigit+3,f
  6490  0948  09A4               	comf	??_displayDigit+4,f
  6491  0949  3008               	movlw	8
  6492  094A  077B               	addwf	displayDigit@D1,w
  6493  094B  00A5               	movwf	??_displayDigit+5
  6494  094C  087C               	movf	displayDigit@D1+1,w
  6495  094D  1803               	skipnc
  6496  094E  3E01               	addlw	1
  6497  094F  00A6               	movwf	??_displayDigit+6
  6498  0950  0825               	movf	??_displayDigit+5,w
  6499  0951  0084               	movwf	4
  6500  0952  1783               	bsf	3,7
  6501  0953  1C26               	btfss	??_displayDigit+6,0
  6502  0954  1383               	bcf	3,7
  6503  0955  0800               	movf	0,w
  6504  0956  00A7               	movwf	??_displayDigit+7
  6505  0957  0A84               	incf	4,f
  6506  0958  0800               	movf	0,w
  6507  0959  00A8               	movwf	??_displayDigit+8
  6508  095A  0827               	movf	??_displayDigit+7,w
  6509  095B  0084               	movwf	4
  6510  095C  1783               	bsf	3,7
  6511  095D  1C28               	btfss	??_displayDigit+8,0
  6512  095E  1383               	bcf	3,7
  6513  095F  0823               	movf	??_displayDigit+3,w
  6514  0960  0580               	andwf	0,f
  6515  0961  0A84               	incf	4,f
  6516  0962  0824               	movf	??_displayDigit+4,w
  6517  0963  0580               	andwf	0,f
  6518                           
  6519                           ;lcd.c: 127: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  6520  0964  3018               	movlw	24
  6521  0965  077B               	addwf	displayDigit@D1,w
  6522  0966  00A0               	movwf	??_displayDigit
  6523  0967  087C               	movf	displayDigit@D1+1,w
  6524  0968  1803               	skipnc
  6525  0969  3E01               	addlw	1
  6526  096A  00A1               	movwf	??_displayDigit+1
  6527  096B  0820               	movf	??_displayDigit,w
  6528  096C  0084               	movwf	4
  6529  096D  1783               	bsf	3,7
  6530  096E  1C21               	btfss	??_displayDigit+1,0
  6531  096F  1383               	bcf	3,7
  6532  0970  0A00               	incf	0,w
  6533  0971  00A2               	movwf	??_displayDigit+2
  6534  0972  3001               	movlw	1
  6535  0973  00A3               	movwf	??_displayDigit+3
  6536  0974  3000               	movlw	0
  6537  0975  00A4               	movwf	??_displayDigit+4
  6538  0976  120A  158A  297C   	goto	u2434
  6539                           
  6540                           	psect	text5_split_7
  6541  0979                     u2435:	
  6542  0979  1003               	clrc
  6543  097A  0DA3               	rlf	??_displayDigit+3,f
  6544  097B  0DA4               	rlf	??_displayDigit+4,f
  6545  097C                     u2434:	
  6546  097C  0BA2               	decfsz	??_displayDigit+2,f
  6547  097D  2979               	goto	u2435
  6548  097E  300A               	movlw	10
  6549  097F  077B               	addwf	displayDigit@D1,w
  6550  0980  00A5               	movwf	??_displayDigit+5
  6551  0981  087C               	movf	displayDigit@D1+1,w
  6552  0982  1803               	skipnc
  6553  0983  3E01               	addlw	1
  6554  0984  00A6               	movwf	??_displayDigit+6
  6555  0985  0825               	movf	??_displayDigit+5,w
  6556  0986  0084               	movwf	4
  6557  0987  1783               	bsf	3,7
  6558  0988  1C26               	btfss	??_displayDigit+6,0
  6559  0989  1383               	bcf	3,7
  6560  098A  0800               	movf	0,w
  6561  098B  00A7               	movwf	??_displayDigit+7
  6562  098C  0A84               	incf	4,f
  6563  098D  0800               	movf	0,w
  6564  098E  00A8               	movwf	??_displayDigit+8
  6565  098F  0827               	movf	??_displayDigit+7,w
  6566  0990  0084               	movwf	4
  6567  0991  1783               	bsf	3,7
  6568  0992  1C28               	btfss	??_displayDigit+8,0
  6569  0993  1383               	bcf	3,7
  6570  0994  0823               	movf	??_displayDigit+3,w
  6571  0995  0480               	iorwf	0,f
  6572  0996  0A84               	incf	4,f
  6573  0997  0824               	movf	??_displayDigit+4,w
  6574  0998  0480               	iorwf	0,f
  6575                           
  6576                           ;lcd.c: 128: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  6577  0999  301A               	movlw	26
  6578  099A  077B               	addwf	displayDigit@D1,w
  6579  099B  00A0               	movwf	??_displayDigit
  6580  099C  087C               	movf	displayDigit@D1+1,w
  6581  099D  1803               	skipnc
  6582  099E  3E01               	addlw	1
  6583  099F  00A1               	movwf	??_displayDigit+1
  6584  09A0  0820               	movf	??_displayDigit,w
  6585  09A1  0084               	movwf	4
  6586  09A2  1783               	bsf	3,7
  6587  09A3  1C21               	btfss	??_displayDigit+1,0
  6588  09A4  1383               	bcf	3,7
  6589  09A5  0A00               	incf	0,w
  6590  09A6  00A2               	movwf	??_displayDigit+2
  6591  09A7  3001               	movlw	1
  6592  09A8  00A3               	movwf	??_displayDigit+3
  6593  09A9  3000               	movlw	0
  6594  09AA  00A4               	movwf	??_displayDigit+4
  6595  09AB  29AF               	goto	u2444
  6596  09AC                     u2445:	
  6597  09AC  1003               	clrc
  6598  09AD  0DA3               	rlf	??_displayDigit+3,f
  6599  09AE  0DA4               	rlf	??_displayDigit+4,f
  6600  09AF                     u2444:	
  6601  09AF  0BA2               	decfsz	??_displayDigit+2,f
  6602  09B0  29AC               	goto	u2445
  6603  09B1  300C               	movlw	12
  6604  09B2  077B               	addwf	displayDigit@D1,w
  6605  09B3  00A5               	movwf	??_displayDigit+5
  6606  09B4  087C               	movf	displayDigit@D1+1,w
  6607  09B5  1803               	skipnc
  6608  09B6  3E01               	addlw	1
  6609  09B7  00A6               	movwf	??_displayDigit+6
  6610  09B8  0825               	movf	??_displayDigit+5,w
  6611  09B9  0084               	movwf	4
  6612  09BA  1783               	bsf	3,7
  6613  09BB  1C26               	btfss	??_displayDigit+6,0
  6614  09BC  1383               	bcf	3,7
  6615  09BD  0800               	movf	0,w
  6616  09BE  00A7               	movwf	??_displayDigit+7
  6617  09BF  0A84               	incf	4,f
  6618  09C0  0800               	movf	0,w
  6619  09C1  00A8               	movwf	??_displayDigit+8
  6620  09C2  0827               	movf	??_displayDigit+7,w
  6621  09C3  0084               	movwf	4
  6622  09C4  1783               	bsf	3,7
  6623  09C5  1C28               	btfss	??_displayDigit+8,0
  6624  09C6  1383               	bcf	3,7
  6625  09C7  0823               	movf	??_displayDigit+3,w
  6626  09C8  0480               	iorwf	0,f
  6627  09C9  0A84               	incf	4,f
  6628  09CA  0824               	movf	??_displayDigit+4,w
  6629  09CB  0480               	iorwf	0,f
  6630                           
  6631                           ;lcd.c: 129: break;
  6632  09CC  0008               	return
  6633  09CD                     l1359:	
  6634                           ;lcd.c: 130: case 5:
  6635                           
  6636                           
  6637                           ;lcd.c: 131: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  6638  09CD  300E               	movlw	14
  6639  09CE  077B               	addwf	displayDigit@D1,w
  6640  09CF  1283               	bcf	3,5	;RP0=0, select bank0
  6641  09D0  1303               	bcf	3,6	;RP1=0, select bank0
  6642  09D1  00A0               	movwf	??_displayDigit
  6643  09D2  087C               	movf	displayDigit@D1+1,w
  6644  09D3  1803               	skipnc
  6645  09D4  3E01               	addlw	1
  6646  09D5  00A1               	movwf	??_displayDigit+1
  6647  09D6  0820               	movf	??_displayDigit,w
  6648  09D7  0084               	movwf	4
  6649  09D8  1783               	bsf	3,7
  6650  09D9  1C21               	btfss	??_displayDigit+1,0
  6651  09DA  1383               	bcf	3,7
  6652  09DB  0A00               	incf	0,w
  6653  09DC  00A2               	movwf	??_displayDigit+2
  6654  09DD  3001               	movlw	1
  6655  09DE  00A3               	movwf	??_displayDigit+3
  6656  09DF  3000               	movlw	0
  6657  09E0  00A4               	movwf	??_displayDigit+4
  6658  09E1  29E5               	goto	u2454
  6659  09E2                     u2455:	
  6660  09E2  1003               	clrc
  6661  09E3  0DA3               	rlf	??_displayDigit+3,f
  6662  09E4  0DA4               	rlf	??_displayDigit+4,f
  6663  09E5                     u2454:	
  6664  09E5  0BA2               	decfsz	??_displayDigit+2,f
  6665  09E6  29E2               	goto	u2455
  6666  09E7  087B               	movf	displayDigit@D1,w
  6667  09E8  0084               	movwf	4
  6668  09E9  1783               	bsf	3,7
  6669  09EA  1C7C               	btfss	displayDigit@D1+1,0
  6670  09EB  1383               	bcf	3,7
  6671  09EC  0800               	movf	0,w
  6672  09ED  00A5               	movwf	??_displayDigit+5
  6673  09EE  0A84               	incf	4,f
  6674  09EF  0800               	movf	0,w
  6675  09F0  00A6               	movwf	??_displayDigit+6
  6676  09F1  0825               	movf	??_displayDigit+5,w
  6677  09F2  0084               	movwf	4
  6678  09F3  1783               	bsf	3,7
  6679  09F4  1C26               	btfss	??_displayDigit+6,0
  6680  09F5  1383               	bcf	3,7
  6681  09F6  0823               	movf	??_displayDigit+3,w
  6682  09F7  0480               	iorwf	0,f
  6683  09F8  0A84               	incf	4,f
  6684  09F9  0824               	movf	??_displayDigit+4,w
  6685  09FA  0480               	iorwf	0,f
  6686                           
  6687                           ;lcd.c: 132: ((*D1->sb) &= ~((1UL) << (D1->bits[1])));
  6688  09FB  3010               	movlw	16
  6689  09FC  077B               	addwf	displayDigit@D1,w
  6690  09FD  00A0               	movwf	??_displayDigit
  6691  09FE  087C               	movf	displayDigit@D1+1,w
  6692  09FF  1803               	skipnc
  6693  0A00  3E01               	addlw	1
  6694  0A01  00A1               	movwf	??_displayDigit+1
  6695  0A02  0820               	movf	??_displayDigit,w
  6696  0A03  0084               	movwf	4
  6697  0A04  1783               	bsf	3,7
  6698  0A05  1C21               	btfss	??_displayDigit+1,0
  6699  0A06  1383               	bcf	3,7
  6700  0A07  0A00               	incf	0,w
  6701  0A08  00A2               	movwf	??_displayDigit+2
  6702  0A09  3001               	movlw	1
  6703  0A0A  00A3               	movwf	??_displayDigit+3
  6704  0A0B  3000               	movlw	0
  6705  0A0C  00A4               	movwf	??_displayDigit+4
  6706  0A0D  2A11               	goto	u2464
  6707  0A0E                     u2465:	
  6708  0A0E  1003               	clrc
  6709  0A0F  0DA3               	rlf	??_displayDigit+3,f
  6710  0A10  0DA4               	rlf	??_displayDigit+4,f
  6711  0A11                     u2464:	
  6712  0A11  0BA2               	decfsz	??_displayDigit+2,f
  6713  0A12  2A0E               	goto	u2465
  6714  0A13  09A3               	comf	??_displayDigit+3,f
  6715  0A14  09A4               	comf	??_displayDigit+4,f
  6716  0A15  3002               	movlw	2
  6717  0A16  077B               	addwf	displayDigit@D1,w
  6718  0A17  00A5               	movwf	??_displayDigit+5
  6719  0A18  087C               	movf	displayDigit@D1+1,w
  6720  0A19  1803               	skipnc
  6721  0A1A  3E01               	addlw	1
  6722  0A1B  00A6               	movwf	??_displayDigit+6
  6723  0A1C  0825               	movf	??_displayDigit+5,w
  6724  0A1D  0084               	movwf	4
  6725  0A1E  1783               	bsf	3,7
  6726  0A1F  1C26               	btfss	??_displayDigit+6,0
  6727  0A20  1383               	bcf	3,7
  6728  0A21  0800               	movf	0,w
  6729  0A22  00A7               	movwf	??_displayDigit+7
  6730  0A23  0A84               	incf	4,f
  6731  0A24  0800               	movf	0,w
  6732  0A25  00A8               	movwf	??_displayDigit+8
  6733  0A26  0827               	movf	??_displayDigit+7,w
  6734  0A27  0084               	movwf	4
  6735  0A28  1783               	bsf	3,7
  6736  0A29  1C28               	btfss	??_displayDigit+8,0
  6737  0A2A  1383               	bcf	3,7
  6738  0A2B  0823               	movf	??_displayDigit+3,w
  6739  0A2C  0580               	andwf	0,f
  6740  0A2D  0A84               	incf	4,f
  6741  0A2E  0824               	movf	??_displayDigit+4,w
  6742  0A2F  0580               	andwf	0,f
  6743                           
  6744                           ;lcd.c: 133: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  6745  0A30  3012               	movlw	18
  6746  0A31  077B               	addwf	displayDigit@D1,w
  6747  0A32  00A0               	movwf	??_displayDigit
  6748  0A33  087C               	movf	displayDigit@D1+1,w
  6749  0A34  1803               	skipnc
  6750  0A35  3E01               	addlw	1
  6751  0A36  00A1               	movwf	??_displayDigit+1
  6752  0A37  0820               	movf	??_displayDigit,w
  6753  0A38  0084               	movwf	4
  6754  0A39  1783               	bsf	3,7
  6755  0A3A  1C21               	btfss	??_displayDigit+1,0
  6756  0A3B  1383               	bcf	3,7
  6757  0A3C  0A00               	incf	0,w
  6758  0A3D  00A2               	movwf	??_displayDigit+2
  6759  0A3E  3001               	movlw	1
  6760  0A3F  00A3               	movwf	??_displayDigit+3
  6761  0A40  3000               	movlw	0
  6762  0A41  00A4               	movwf	??_displayDigit+4
  6763  0A42  2A46               	goto	u2474
  6764  0A43                     u2475:	
  6765  0A43  1003               	clrc
  6766  0A44  0DA3               	rlf	??_displayDigit+3,f
  6767  0A45  0DA4               	rlf	??_displayDigit+4,f
  6768  0A46                     u2474:	
  6769  0A46  0BA2               	decfsz	??_displayDigit+2,f
  6770  0A47  2A43               	goto	u2475
  6771  0A48  3004               	movlw	4
  6772  0A49  077B               	addwf	displayDigit@D1,w
  6773  0A4A  00A5               	movwf	??_displayDigit+5
  6774  0A4B  087C               	movf	displayDigit@D1+1,w
  6775  0A4C  1803               	skipnc
  6776  0A4D  3E01               	addlw	1
  6777  0A4E  00A6               	movwf	??_displayDigit+6
  6778  0A4F  0825               	movf	??_displayDigit+5,w
  6779  0A50  0084               	movwf	4
  6780  0A51  1783               	bsf	3,7
  6781  0A52  1C26               	btfss	??_displayDigit+6,0
  6782  0A53  1383               	bcf	3,7
  6783  0A54  0800               	movf	0,w
  6784  0A55  00A7               	movwf	??_displayDigit+7
  6785  0A56  0A84               	incf	4,f
  6786  0A57  0800               	movf	0,w
  6787  0A58  00A8               	movwf	??_displayDigit+8
  6788  0A59  0827               	movf	??_displayDigit+7,w
  6789  0A5A  0084               	movwf	4
  6790  0A5B  1783               	bsf	3,7
  6791  0A5C  1C28               	btfss	??_displayDigit+8,0
  6792  0A5D  1383               	bcf	3,7
  6793  0A5E  0823               	movf	??_displayDigit+3,w
  6794  0A5F  0480               	iorwf	0,f
  6795  0A60  0A84               	incf	4,f
  6796  0A61  0824               	movf	??_displayDigit+4,w
  6797  0A62  0480               	iorwf	0,f
  6798                           
  6799                           ;lcd.c: 134: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  6800  0A63  3014               	movlw	20
  6801  0A64  077B               	addwf	displayDigit@D1,w
  6802  0A65  00A0               	movwf	??_displayDigit
  6803  0A66  087C               	movf	displayDigit@D1+1,w
  6804  0A67  1803               	skipnc
  6805  0A68  3E01               	addlw	1
  6806  0A69  00A1               	movwf	??_displayDigit+1
  6807  0A6A  0820               	movf	??_displayDigit,w
  6808  0A6B  0084               	movwf	4
  6809  0A6C  1783               	bsf	3,7
  6810  0A6D  1C21               	btfss	??_displayDigit+1,0
  6811  0A6E  1383               	bcf	3,7
  6812  0A6F  0A00               	incf	0,w
  6813  0A70  00A2               	movwf	??_displayDigit+2
  6814  0A71  3001               	movlw	1
  6815  0A72  00A3               	movwf	??_displayDigit+3
  6816  0A73  3000               	movlw	0
  6817  0A74  00A4               	movwf	??_displayDigit+4
  6818  0A75  2A79               	goto	u2484
  6819  0A76                     u2485:	
  6820  0A76  1003               	clrc
  6821  0A77  0DA3               	rlf	??_displayDigit+3,f
  6822  0A78  0DA4               	rlf	??_displayDigit+4,f
  6823  0A79                     u2484:	
  6824  0A79  0BA2               	decfsz	??_displayDigit+2,f
  6825  0A7A  2A76               	goto	u2485
  6826  0A7B  3006               	movlw	6
  6827  0A7C  077B               	addwf	displayDigit@D1,w
  6828  0A7D  00A5               	movwf	??_displayDigit+5
  6829  0A7E  087C               	movf	displayDigit@D1+1,w
  6830  0A7F  1803               	skipnc
  6831  0A80  3E01               	addlw	1
  6832  0A81  00A6               	movwf	??_displayDigit+6
  6833  0A82  0825               	movf	??_displayDigit+5,w
  6834  0A83  0084               	movwf	4
  6835  0A84  1783               	bsf	3,7
  6836  0A85  1C26               	btfss	??_displayDigit+6,0
  6837  0A86  1383               	bcf	3,7
  6838  0A87  0800               	movf	0,w
  6839  0A88  00A7               	movwf	??_displayDigit+7
  6840  0A89  0A84               	incf	4,f
  6841  0A8A  0800               	movf	0,w
  6842  0A8B  00A8               	movwf	??_displayDigit+8
  6843  0A8C  0827               	movf	??_displayDigit+7,w
  6844  0A8D  0084               	movwf	4
  6845  0A8E  1783               	bsf	3,7
  6846  0A8F  1C28               	btfss	??_displayDigit+8,0
  6847  0A90  1383               	bcf	3,7
  6848  0A91  0823               	movf	??_displayDigit+3,w
  6849  0A92  0480               	iorwf	0,f
  6850  0A93  0A84               	incf	4,f
  6851  0A94  0824               	movf	??_displayDigit+4,w
  6852  0A95  0480               	iorwf	0,f
  6853                           
  6854                           ;lcd.c: 135: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  6855  0A96  3016               	movlw	22
  6856  0A97  077B               	addwf	displayDigit@D1,w
  6857  0A98  00A0               	movwf	??_displayDigit
  6858  0A99  087C               	movf	displayDigit@D1+1,w
  6859  0A9A  1803               	skipnc
  6860  0A9B  3E01               	addlw	1
  6861  0A9C  00A1               	movwf	??_displayDigit+1
  6862  0A9D  0820               	movf	??_displayDigit,w
  6863  0A9E  0084               	movwf	4
  6864  0A9F  1783               	bsf	3,7
  6865  0AA0  1C21               	btfss	??_displayDigit+1,0
  6866  0AA1  1383               	bcf	3,7
  6867  0AA2  0A00               	incf	0,w
  6868  0AA3  00A2               	movwf	??_displayDigit+2
  6869  0AA4  3001               	movlw	1
  6870  0AA5  00A3               	movwf	??_displayDigit+3
  6871  0AA6  3000               	movlw	0
  6872  0AA7  00A4               	movwf	??_displayDigit+4
  6873  0AA8  120A  118A  2837   	goto	u2494
  6874                           
  6875                           	psect	text5_split_8
  6876  0034                     u2495:	
  6877  0034  1003               	clrc
  6878  0035  0DA3               	rlf	??_displayDigit+3,f
  6879  0036  0DA4               	rlf	??_displayDigit+4,f
  6880  0037                     u2494:	
  6881  0037  0BA2               	decfsz	??_displayDigit+2,f
  6882  0038  2834               	goto	u2495
  6883  0039  09A3               	comf	??_displayDigit+3,f
  6884  003A  09A4               	comf	??_displayDigit+4,f
  6885  003B  3008               	movlw	8
  6886  003C  077B               	addwf	displayDigit@D1,w
  6887  003D  00A5               	movwf	??_displayDigit+5
  6888  003E  087C               	movf	displayDigit@D1+1,w
  6889  003F  1803               	skipnc
  6890  0040  3E01               	addlw	1
  6891  0041  00A6               	movwf	??_displayDigit+6
  6892  0042  0825               	movf	??_displayDigit+5,w
  6893  0043  0084               	movwf	4
  6894  0044  1783               	bsf	3,7
  6895  0045  1C26               	btfss	??_displayDigit+6,0
  6896  0046  1383               	bcf	3,7
  6897  0047  0800               	movf	0,w
  6898  0048  00A7               	movwf	??_displayDigit+7
  6899  0049  0A84               	incf	4,f
  6900  004A  0800               	movf	0,w
  6901  004B  00A8               	movwf	??_displayDigit+8
  6902  004C  0827               	movf	??_displayDigit+7,w
  6903  004D  0084               	movwf	4
  6904  004E  1783               	bsf	3,7
  6905  004F  1C28               	btfss	??_displayDigit+8,0
  6906  0050  1383               	bcf	3,7
  6907  0051  0823               	movf	??_displayDigit+3,w
  6908  0052  0580               	andwf	0,f
  6909  0053  0A84               	incf	4,f
  6910  0054  0824               	movf	??_displayDigit+4,w
  6911  0055  0580               	andwf	0,f
  6912                           
  6913                           ;lcd.c: 136: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  6914  0056  3018               	movlw	24
  6915  0057  077B               	addwf	displayDigit@D1,w
  6916  0058  00A0               	movwf	??_displayDigit
  6917  0059  087C               	movf	displayDigit@D1+1,w
  6918  005A  1803               	skipnc
  6919  005B  3E01               	addlw	1
  6920  005C  00A1               	movwf	??_displayDigit+1
  6921  005D  0820               	movf	??_displayDigit,w
  6922  005E  0084               	movwf	4
  6923  005F  1783               	bsf	3,7
  6924  0060  1C21               	btfss	??_displayDigit+1,0
  6925  0061  1383               	bcf	3,7
  6926  0062  0A00               	incf	0,w
  6927  0063  00A2               	movwf	??_displayDigit+2
  6928  0064  3001               	movlw	1
  6929  0065  00A3               	movwf	??_displayDigit+3
  6930  0066  3000               	movlw	0
  6931  0067  00A4               	movwf	??_displayDigit+4
  6932  0068  286C               	goto	u2504
  6933  0069                     u2505:	
  6934  0069  1003               	clrc
  6935  006A  0DA3               	rlf	??_displayDigit+3,f
  6936  006B  0DA4               	rlf	??_displayDigit+4,f
  6937  006C                     u2504:	
  6938  006C  0BA2               	decfsz	??_displayDigit+2,f
  6939  006D  2869               	goto	u2505
  6940  006E  300A               	movlw	10
  6941  006F  077B               	addwf	displayDigit@D1,w
  6942  0070  00A5               	movwf	??_displayDigit+5
  6943  0071  087C               	movf	displayDigit@D1+1,w
  6944  0072  1803               	skipnc
  6945  0073  3E01               	addlw	1
  6946  0074  00A6               	movwf	??_displayDigit+6
  6947  0075  0825               	movf	??_displayDigit+5,w
  6948  0076  0084               	movwf	4
  6949  0077  1783               	bsf	3,7
  6950  0078  1C26               	btfss	??_displayDigit+6,0
  6951  0079  1383               	bcf	3,7
  6952  007A  0800               	movf	0,w
  6953  007B  00A7               	movwf	??_displayDigit+7
  6954  007C  0A84               	incf	4,f
  6955  007D  0800               	movf	0,w
  6956  007E  00A8               	movwf	??_displayDigit+8
  6957  007F  0827               	movf	??_displayDigit+7,w
  6958  0080  0084               	movwf	4
  6959  0081  1783               	bsf	3,7
  6960  0082  1C28               	btfss	??_displayDigit+8,0
  6961  0083  1383               	bcf	3,7
  6962  0084  0823               	movf	??_displayDigit+3,w
  6963  0085  0480               	iorwf	0,f
  6964  0086  0A84               	incf	4,f
  6965  0087  0824               	movf	??_displayDigit+4,w
  6966  0088  0480               	iorwf	0,f
  6967                           
  6968                           ;lcd.c: 137: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  6969  0089  301A               	movlw	26
  6970  008A  077B               	addwf	displayDigit@D1,w
  6971  008B  00A0               	movwf	??_displayDigit
  6972  008C  087C               	movf	displayDigit@D1+1,w
  6973  008D  1803               	skipnc
  6974  008E  3E01               	addlw	1
  6975  008F  00A1               	movwf	??_displayDigit+1
  6976  0090  0820               	movf	??_displayDigit,w
  6977  0091  0084               	movwf	4
  6978  0092  1783               	bsf	3,7
  6979  0093  1C21               	btfss	??_displayDigit+1,0
  6980  0094  1383               	bcf	3,7
  6981  0095  0A00               	incf	0,w
  6982  0096  00A2               	movwf	??_displayDigit+2
  6983  0097  3001               	movlw	1
  6984  0098  00A3               	movwf	??_displayDigit+3
  6985  0099  3000               	movlw	0
  6986  009A  00A4               	movwf	??_displayDigit+4
  6987  009B  289F               	goto	u2514
  6988  009C                     u2515:	
  6989  009C  1003               	clrc
  6990  009D  0DA3               	rlf	??_displayDigit+3,f
  6991  009E  0DA4               	rlf	??_displayDigit+4,f
  6992  009F                     u2514:	
  6993  009F  0BA2               	decfsz	??_displayDigit+2,f
  6994  00A0  289C               	goto	u2515
  6995  00A1  300C               	movlw	12
  6996  00A2  077B               	addwf	displayDigit@D1,w
  6997  00A3  00A5               	movwf	??_displayDigit+5
  6998  00A4  087C               	movf	displayDigit@D1+1,w
  6999  00A5  1803               	skipnc
  7000  00A6  3E01               	addlw	1
  7001  00A7  00A6               	movwf	??_displayDigit+6
  7002  00A8  0825               	movf	??_displayDigit+5,w
  7003  00A9  0084               	movwf	4
  7004  00AA  1783               	bsf	3,7
  7005  00AB  1C26               	btfss	??_displayDigit+6,0
  7006  00AC  1383               	bcf	3,7
  7007  00AD  0800               	movf	0,w
  7008  00AE  00A7               	movwf	??_displayDigit+7
  7009  00AF  0A84               	incf	4,f
  7010  00B0  0800               	movf	0,w
  7011  00B1  00A8               	movwf	??_displayDigit+8
  7012  00B2  0827               	movf	??_displayDigit+7,w
  7013  00B3  0084               	movwf	4
  7014  00B4  1783               	bsf	3,7
  7015  00B5  1C28               	btfss	??_displayDigit+8,0
  7016  00B6  1383               	bcf	3,7
  7017  00B7  0823               	movf	??_displayDigit+3,w
  7018  00B8  0480               	iorwf	0,f
  7019  00B9  0A84               	incf	4,f
  7020  00BA  0824               	movf	??_displayDigit+4,w
  7021  00BB  0480               	iorwf	0,f
  7022                           
  7023                           ;lcd.c: 138: break;
  7024  00BC  0008               	return
  7025  00BD                     l1361:	
  7026                           ;lcd.c: 139: case 6:
  7027                           
  7028                           
  7029                           ;lcd.c: 140: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  7030  00BD  300E               	movlw	14
  7031  00BE  077B               	addwf	displayDigit@D1,w
  7032  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  7033  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  7034  00C1  00A0               	movwf	??_displayDigit
  7035  00C2  087C               	movf	displayDigit@D1+1,w
  7036  00C3  1803               	skipnc
  7037  00C4  3E01               	addlw	1
  7038  00C5  00A1               	movwf	??_displayDigit+1
  7039  00C6  0820               	movf	??_displayDigit,w
  7040  00C7  0084               	movwf	4
  7041  00C8  1783               	bsf	3,7
  7042  00C9  1C21               	btfss	??_displayDigit+1,0
  7043  00CA  1383               	bcf	3,7
  7044  00CB  0A00               	incf	0,w
  7045  00CC  00A2               	movwf	??_displayDigit+2
  7046  00CD  3001               	movlw	1
  7047  00CE  00A3               	movwf	??_displayDigit+3
  7048  00CF  3000               	movlw	0
  7049  00D0  00A4               	movwf	??_displayDigit+4
  7050  00D1  28D5               	goto	u2524
  7051  00D2                     u2525:	
  7052  00D2  1003               	clrc
  7053  00D3  0DA3               	rlf	??_displayDigit+3,f
  7054  00D4  0DA4               	rlf	??_displayDigit+4,f
  7055  00D5                     u2524:	
  7056  00D5  0BA2               	decfsz	??_displayDigit+2,f
  7057  00D6  28D2               	goto	u2525
  7058  00D7  087B               	movf	displayDigit@D1,w
  7059  00D8  0084               	movwf	4
  7060  00D9  1783               	bsf	3,7
  7061  00DA  1C7C               	btfss	displayDigit@D1+1,0
  7062  00DB  1383               	bcf	3,7
  7063  00DC  0800               	movf	0,w
  7064  00DD  00A5               	movwf	??_displayDigit+5
  7065  00DE  0A84               	incf	4,f
  7066  00DF  0800               	movf	0,w
  7067  00E0  00A6               	movwf	??_displayDigit+6
  7068  00E1  0825               	movf	??_displayDigit+5,w
  7069  00E2  0084               	movwf	4
  7070  00E3  1783               	bsf	3,7
  7071  00E4  1C26               	btfss	??_displayDigit+6,0
  7072  00E5  1383               	bcf	3,7
  7073  00E6  0823               	movf	??_displayDigit+3,w
  7074  00E7  0480               	iorwf	0,f
  7075  00E8  0A84               	incf	4,f
  7076  00E9  0824               	movf	??_displayDigit+4,w
  7077  00EA  0480               	iorwf	0,f
  7078                           
  7079                           ;lcd.c: 141: ((*D1->sb) &= ~((1UL) << (D1->bits[1])));
  7080  00EB  3010               	movlw	16
  7081  00EC  077B               	addwf	displayDigit@D1,w
  7082  00ED  00A0               	movwf	??_displayDigit
  7083  00EE  087C               	movf	displayDigit@D1+1,w
  7084  00EF  1803               	skipnc
  7085  00F0  3E01               	addlw	1
  7086  00F1  00A1               	movwf	??_displayDigit+1
  7087  00F2  0820               	movf	??_displayDigit,w
  7088  00F3  0084               	movwf	4
  7089  00F4  1783               	bsf	3,7
  7090  00F5  1C21               	btfss	??_displayDigit+1,0
  7091  00F6  1383               	bcf	3,7
  7092  00F7  0A00               	incf	0,w
  7093  00F8  00A2               	movwf	??_displayDigit+2
  7094  00F9  3001               	movlw	1
  7095  00FA  00A3               	movwf	??_displayDigit+3
  7096  00FB  3000               	movlw	0
  7097  00FC  00A4               	movwf	??_displayDigit+4
  7098  00FD  2901               	goto	u2534
  7099  00FE                     u2535:	
  7100  00FE  1003               	clrc
  7101  00FF  0DA3               	rlf	??_displayDigit+3,f
  7102  0100  0DA4               	rlf	??_displayDigit+4,f
  7103  0101                     u2534:	
  7104  0101  0BA2               	decfsz	??_displayDigit+2,f
  7105  0102  28FE               	goto	u2535
  7106  0103  09A3               	comf	??_displayDigit+3,f
  7107  0104  09A4               	comf	??_displayDigit+4,f
  7108  0105  3002               	movlw	2
  7109  0106  077B               	addwf	displayDigit@D1,w
  7110  0107  00A5               	movwf	??_displayDigit+5
  7111  0108  087C               	movf	displayDigit@D1+1,w
  7112  0109  1803               	skipnc
  7113  010A  3E01               	addlw	1
  7114  010B  00A6               	movwf	??_displayDigit+6
  7115  010C  0825               	movf	??_displayDigit+5,w
  7116  010D  0084               	movwf	4
  7117  010E  1783               	bsf	3,7
  7118  010F  1C26               	btfss	??_displayDigit+6,0
  7119  0110  1383               	bcf	3,7
  7120  0111  0800               	movf	0,w
  7121  0112  00A7               	movwf	??_displayDigit+7
  7122  0113  0A84               	incf	4,f
  7123  0114  0800               	movf	0,w
  7124  0115  00A8               	movwf	??_displayDigit+8
  7125  0116  0827               	movf	??_displayDigit+7,w
  7126  0117  0084               	movwf	4
  7127  0118  1783               	bsf	3,7
  7128  0119  1C28               	btfss	??_displayDigit+8,0
  7129  011A  1383               	bcf	3,7
  7130  011B  0823               	movf	??_displayDigit+3,w
  7131  011C  0580               	andwf	0,f
  7132  011D  0A84               	incf	4,f
  7133  011E  0824               	movf	??_displayDigit+4,w
  7134  011F  0580               	andwf	0,f
  7135                           
  7136                           ;lcd.c: 142: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  7137  0120  3012               	movlw	18
  7138  0121  077B               	addwf	displayDigit@D1,w
  7139  0122  00A0               	movwf	??_displayDigit
  7140  0123  087C               	movf	displayDigit@D1+1,w
  7141  0124  1803               	skipnc
  7142  0125  3E01               	addlw	1
  7143  0126  00A1               	movwf	??_displayDigit+1
  7144  0127  0820               	movf	??_displayDigit,w
  7145  0128  0084               	movwf	4
  7146  0129  1783               	bsf	3,7
  7147  012A  1C21               	btfss	??_displayDigit+1,0
  7148  012B  1383               	bcf	3,7
  7149  012C  0A00               	incf	0,w
  7150  012D  00A2               	movwf	??_displayDigit+2
  7151  012E  3001               	movlw	1
  7152  012F  00A3               	movwf	??_displayDigit+3
  7153  0130  3000               	movlw	0
  7154  0131  00A4               	movwf	??_displayDigit+4
  7155  0132  2936               	goto	u2544
  7156  0133                     u2545:	
  7157  0133  1003               	clrc
  7158  0134  0DA3               	rlf	??_displayDigit+3,f
  7159  0135  0DA4               	rlf	??_displayDigit+4,f
  7160  0136                     u2544:	
  7161  0136  0BA2               	decfsz	??_displayDigit+2,f
  7162  0137  2933               	goto	u2545
  7163  0138  3004               	movlw	4
  7164  0139  077B               	addwf	displayDigit@D1,w
  7165  013A  00A5               	movwf	??_displayDigit+5
  7166  013B  087C               	movf	displayDigit@D1+1,w
  7167  013C  1803               	skipnc
  7168  013D  3E01               	addlw	1
  7169  013E  00A6               	movwf	??_displayDigit+6
  7170  013F  0825               	movf	??_displayDigit+5,w
  7171  0140  0084               	movwf	4
  7172  0141  1783               	bsf	3,7
  7173  0142  1C26               	btfss	??_displayDigit+6,0
  7174  0143  1383               	bcf	3,7
  7175  0144  0800               	movf	0,w
  7176  0145  00A7               	movwf	??_displayDigit+7
  7177  0146  0A84               	incf	4,f
  7178  0147  0800               	movf	0,w
  7179  0148  00A8               	movwf	??_displayDigit+8
  7180  0149  0827               	movf	??_displayDigit+7,w
  7181  014A  0084               	movwf	4
  7182  014B  1783               	bsf	3,7
  7183  014C  1C28               	btfss	??_displayDigit+8,0
  7184  014D  1383               	bcf	3,7
  7185  014E  0823               	movf	??_displayDigit+3,w
  7186  014F  0480               	iorwf	0,f
  7187  0150  0A84               	incf	4,f
  7188  0151  0824               	movf	??_displayDigit+4,w
  7189  0152  0480               	iorwf	0,f
  7190                           
  7191                           ;lcd.c: 143: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  7192  0153  3014               	movlw	20
  7193  0154  077B               	addwf	displayDigit@D1,w
  7194  0155  00A0               	movwf	??_displayDigit
  7195  0156  087C               	movf	displayDigit@D1+1,w
  7196  0157  1803               	skipnc
  7197  0158  3E01               	addlw	1
  7198  0159  00A1               	movwf	??_displayDigit+1
  7199  015A  0820               	movf	??_displayDigit,w
  7200  015B  0084               	movwf	4
  7201  015C  1783               	bsf	3,7
  7202  015D  1C21               	btfss	??_displayDigit+1,0
  7203  015E  1383               	bcf	3,7
  7204  015F  0A00               	incf	0,w
  7205  0160  00A2               	movwf	??_displayDigit+2
  7206  0161  3001               	movlw	1
  7207  0162  00A3               	movwf	??_displayDigit+3
  7208  0163  3000               	movlw	0
  7209  0164  00A4               	movwf	??_displayDigit+4
  7210  0165  2969               	goto	u2554
  7211  0166                     u2555:	
  7212  0166  1003               	clrc
  7213  0167  0DA3               	rlf	??_displayDigit+3,f
  7214  0168  0DA4               	rlf	??_displayDigit+4,f
  7215  0169                     u2554:	
  7216  0169  0BA2               	decfsz	??_displayDigit+2,f
  7217  016A  2966               	goto	u2555
  7218  016B  3006               	movlw	6
  7219  016C  077B               	addwf	displayDigit@D1,w
  7220  016D  00A5               	movwf	??_displayDigit+5
  7221  016E  087C               	movf	displayDigit@D1+1,w
  7222  016F  1803               	skipnc
  7223  0170  3E01               	addlw	1
  7224  0171  00A6               	movwf	??_displayDigit+6
  7225  0172  0825               	movf	??_displayDigit+5,w
  7226  0173  0084               	movwf	4
  7227  0174  1783               	bsf	3,7
  7228  0175  1C26               	btfss	??_displayDigit+6,0
  7229  0176  1383               	bcf	3,7
  7230  0177  0800               	movf	0,w
  7231  0178  00A7               	movwf	??_displayDigit+7
  7232  0179  0A84               	incf	4,f
  7233  017A  0800               	movf	0,w
  7234  017B  00A8               	movwf	??_displayDigit+8
  7235  017C  0827               	movf	??_displayDigit+7,w
  7236  017D  0084               	movwf	4
  7237  017E  1783               	bsf	3,7
  7238  017F  1C28               	btfss	??_displayDigit+8,0
  7239  0180  1383               	bcf	3,7
  7240  0181  0823               	movf	??_displayDigit+3,w
  7241  0182  0480               	iorwf	0,f
  7242  0183  0A84               	incf	4,f
  7243  0184  0824               	movf	??_displayDigit+4,w
  7244  0185  0480               	iorwf	0,f
  7245                           
  7246                           ;lcd.c: 144: ((*D1->se) |= (1UL) << (D1->bits[4]));
  7247  0186  3016               	movlw	22
  7248  0187  077B               	addwf	displayDigit@D1,w
  7249  0188  00A0               	movwf	??_displayDigit
  7250  0189  087C               	movf	displayDigit@D1+1,w
  7251  018A  1803               	skipnc
  7252  018B  3E01               	addlw	1
  7253  018C  00A1               	movwf	??_displayDigit+1
  7254  018D  0820               	movf	??_displayDigit,w
  7255  018E  0084               	movwf	4
  7256  018F  1783               	bsf	3,7
  7257  0190  1C21               	btfss	??_displayDigit+1,0
  7258  0191  1383               	bcf	3,7
  7259  0192  0A00               	incf	0,w
  7260  0193  00A2               	movwf	??_displayDigit+2
  7261  0194  3001               	movlw	1
  7262  0195  00A3               	movwf	??_displayDigit+3
  7263  0196  3000               	movlw	0
  7264  0197  00A4               	movwf	??_displayDigit+4
  7265  0198  299C               	goto	u2564
  7266  0199                     u2565:	
  7267  0199  1003               	clrc
  7268  019A  0DA3               	rlf	??_displayDigit+3,f
  7269  019B  0DA4               	rlf	??_displayDigit+4,f
  7270  019C                     u2564:	
  7271  019C  0BA2               	decfsz	??_displayDigit+2,f
  7272  019D  2999               	goto	u2565
  7273  019E  3008               	movlw	8
  7274  019F  077B               	addwf	displayDigit@D1,w
  7275  01A0  00A5               	movwf	??_displayDigit+5
  7276  01A1  087C               	movf	displayDigit@D1+1,w
  7277  01A2  1803               	skipnc
  7278  01A3  3E01               	addlw	1
  7279  01A4  00A6               	movwf	??_displayDigit+6
  7280  01A5  0825               	movf	??_displayDigit+5,w
  7281  01A6  0084               	movwf	4
  7282  01A7  1783               	bsf	3,7
  7283  01A8  1C26               	btfss	??_displayDigit+6,0
  7284  01A9  1383               	bcf	3,7
  7285  01AA  0800               	movf	0,w
  7286  01AB  00A7               	movwf	??_displayDigit+7
  7287  01AC  0A84               	incf	4,f
  7288  01AD  0800               	movf	0,w
  7289  01AE  00A8               	movwf	??_displayDigit+8
  7290  01AF  0827               	movf	??_displayDigit+7,w
  7291  01B0  0084               	movwf	4
  7292  01B1  1783               	bsf	3,7
  7293  01B2  1C28               	btfss	??_displayDigit+8,0
  7294  01B3  1383               	bcf	3,7
  7295  01B4  0823               	movf	??_displayDigit+3,w
  7296  01B5  0480               	iorwf	0,f
  7297  01B6  0A84               	incf	4,f
  7298  01B7  0824               	movf	??_displayDigit+4,w
  7299  01B8  0480               	iorwf	0,f
  7300                           
  7301                           ;lcd.c: 145: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  7302  01B9  3018               	movlw	24
  7303  01BA  077B               	addwf	displayDigit@D1,w
  7304  01BB  00A0               	movwf	??_displayDigit
  7305  01BC  087C               	movf	displayDigit@D1+1,w
  7306  01BD  1803               	skipnc
  7307  01BE  3E01               	addlw	1
  7308  01BF  00A1               	movwf	??_displayDigit+1
  7309  01C0  0820               	movf	??_displayDigit,w
  7310  01C1  0084               	movwf	4
  7311  01C2  1783               	bsf	3,7
  7312  01C3  1C21               	btfss	??_displayDigit+1,0
  7313  01C4  1383               	bcf	3,7
  7314  01C5  0A00               	incf	0,w
  7315  01C6  00A2               	movwf	??_displayDigit+2
  7316  01C7  3001               	movlw	1
  7317  01C8  00A3               	movwf	??_displayDigit+3
  7318  01C9  3000               	movlw	0
  7319  01CA  00A4               	movwf	??_displayDigit+4
  7320  01CB  29CF               	goto	u2574
  7321  01CC                     u2575:	
  7322  01CC  1003               	clrc
  7323  01CD  0DA3               	rlf	??_displayDigit+3,f
  7324  01CE  0DA4               	rlf	??_displayDigit+4,f
  7325  01CF                     u2574:	
  7326  01CF  0BA2               	decfsz	??_displayDigit+2,f
  7327  01D0  29CC               	goto	u2575
  7328  01D1  300A               	movlw	10
  7329  01D2  077B               	addwf	displayDigit@D1,w
  7330  01D3  00A5               	movwf	??_displayDigit+5
  7331  01D4  087C               	movf	displayDigit@D1+1,w
  7332  01D5  1803               	skipnc
  7333  01D6  3E01               	addlw	1
  7334  01D7  00A6               	movwf	??_displayDigit+6
  7335  01D8  0825               	movf	??_displayDigit+5,w
  7336  01D9  0084               	movwf	4
  7337  01DA  1783               	bsf	3,7
  7338  01DB  1C26               	btfss	??_displayDigit+6,0
  7339  01DC  1383               	bcf	3,7
  7340  01DD  0800               	movf	0,w
  7341  01DE  00A7               	movwf	??_displayDigit+7
  7342  01DF  0A84               	incf	4,f
  7343  01E0  0800               	movf	0,w
  7344  01E1  00A8               	movwf	??_displayDigit+8
  7345  01E2  0827               	movf	??_displayDigit+7,w
  7346  01E3  0084               	movwf	4
  7347  01E4  1783               	bsf	3,7
  7348  01E5  1C28               	btfss	??_displayDigit+8,0
  7349  01E6  1383               	bcf	3,7
  7350  01E7  0823               	movf	??_displayDigit+3,w
  7351  01E8  0480               	iorwf	0,f
  7352  01E9  0A84               	incf	4,f
  7353  01EA  0824               	movf	??_displayDigit+4,w
  7354  01EB  0480               	iorwf	0,f
  7355                           
  7356                           ;lcd.c: 146: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  7357  01EC  301A               	movlw	26
  7358  01ED  077B               	addwf	displayDigit@D1,w
  7359  01EE  00A0               	movwf	??_displayDigit
  7360  01EF  087C               	movf	displayDigit@D1+1,w
  7361  01F0  1803               	skipnc
  7362  01F1  3E01               	addlw	1
  7363  01F2  00A1               	movwf	??_displayDigit+1
  7364  01F3  0820               	movf	??_displayDigit,w
  7365  01F4  0084               	movwf	4
  7366  01F5  1783               	bsf	3,7
  7367  01F6  1C21               	btfss	??_displayDigit+1,0
  7368  01F7  1383               	bcf	3,7
  7369  01F8  0A00               	incf	0,w
  7370  01F9  00A2               	movwf	??_displayDigit+2
  7371  01FA  3001               	movlw	1
  7372  01FB  00A3               	movwf	??_displayDigit+3
  7373  01FC  3000               	movlw	0
  7374  01FD  00A4               	movwf	??_displayDigit+4
  7375  01FE  2A02               	goto	u2584
  7376  01FF                     u2585:	
  7377  01FF  1003               	clrc
  7378  0200  0DA3               	rlf	??_displayDigit+3,f
  7379  0201  0DA4               	rlf	??_displayDigit+4,f
  7380  0202                     u2584:	
  7381  0202  0BA2               	decfsz	??_displayDigit+2,f
  7382  0203  29FF               	goto	u2585
  7383  0204  300C               	movlw	12
  7384  0205  077B               	addwf	displayDigit@D1,w
  7385  0206  00A5               	movwf	??_displayDigit+5
  7386  0207  087C               	movf	displayDigit@D1+1,w
  7387  0208  1803               	skipnc
  7388  0209  3E01               	addlw	1
  7389  020A  00A6               	movwf	??_displayDigit+6
  7390  020B  0825               	movf	??_displayDigit+5,w
  7391  020C  0084               	movwf	4
  7392  020D  1783               	bsf	3,7
  7393  020E  1C26               	btfss	??_displayDigit+6,0
  7394  020F  1383               	bcf	3,7
  7395  0210  0800               	movf	0,w
  7396  0211  00A7               	movwf	??_displayDigit+7
  7397  0212  0A84               	incf	4,f
  7398  0213  0800               	movf	0,w
  7399  0214  00A8               	movwf	??_displayDigit+8
  7400  0215  0827               	movf	??_displayDigit+7,w
  7401  0216  0084               	movwf	4
  7402  0217  1783               	bsf	3,7
  7403  0218  1C28               	btfss	??_displayDigit+8,0
  7404  0219  1383               	bcf	3,7
  7405  021A  0823               	movf	??_displayDigit+3,w
  7406  021B  0480               	iorwf	0,f
  7407  021C  0A84               	incf	4,f
  7408  021D  0824               	movf	??_displayDigit+4,w
  7409  021E  0480               	iorwf	0,f
  7410                           
  7411                           ;lcd.c: 147: break;
  7412  021F  0008               	return
  7413  0220                     l1363:	
  7414                           ;lcd.c: 148: case 7:
  7415                           
  7416                           
  7417                           ;lcd.c: 149: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  7418  0220  300E               	movlw	14
  7419  0221  077B               	addwf	displayDigit@D1,w
  7420  0222  1283               	bcf	3,5	;RP0=0, select bank0
  7421  0223  1303               	bcf	3,6	;RP1=0, select bank0
  7422  0224  00A0               	movwf	??_displayDigit
  7423  0225  087C               	movf	displayDigit@D1+1,w
  7424  0226  1803               	skipnc
  7425  0227  3E01               	addlw	1
  7426  0228  00A1               	movwf	??_displayDigit+1
  7427  0229  0820               	movf	??_displayDigit,w
  7428  022A  0084               	movwf	4
  7429  022B  1783               	bsf	3,7
  7430  022C  1C21               	btfss	??_displayDigit+1,0
  7431  022D  1383               	bcf	3,7
  7432  022E  0A00               	incf	0,w
  7433  022F  00A2               	movwf	??_displayDigit+2
  7434  0230  3001               	movlw	1
  7435  0231  00A3               	movwf	??_displayDigit+3
  7436  0232  3000               	movlw	0
  7437  0233  00A4               	movwf	??_displayDigit+4
  7438  0234  2A38               	goto	u2594
  7439  0235                     u2595:	
  7440  0235  1003               	clrc
  7441  0236  0DA3               	rlf	??_displayDigit+3,f
  7442  0237  0DA4               	rlf	??_displayDigit+4,f
  7443  0238                     u2594:	
  7444  0238  0BA2               	decfsz	??_displayDigit+2,f
  7445  0239  2A35               	goto	u2595
  7446  023A  087B               	movf	displayDigit@D1,w
  7447  023B  0084               	movwf	4
  7448  023C  1783               	bsf	3,7
  7449  023D  1C7C               	btfss	displayDigit@D1+1,0
  7450  023E  1383               	bcf	3,7
  7451  023F  0800               	movf	0,w
  7452  0240  00A5               	movwf	??_displayDigit+5
  7453  0241  0A84               	incf	4,f
  7454  0242  0800               	movf	0,w
  7455  0243  00A6               	movwf	??_displayDigit+6
  7456  0244  0825               	movf	??_displayDigit+5,w
  7457  0245  0084               	movwf	4
  7458  0246  1783               	bsf	3,7
  7459  0247  1C26               	btfss	??_displayDigit+6,0
  7460  0248  1383               	bcf	3,7
  7461  0249  0823               	movf	??_displayDigit+3,w
  7462  024A  0480               	iorwf	0,f
  7463  024B  0A84               	incf	4,f
  7464  024C  0824               	movf	??_displayDigit+4,w
  7465  024D  0480               	iorwf	0,f
  7466                           
  7467                           ;lcd.c: 150: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  7468  024E  3010               	movlw	16
  7469  024F  077B               	addwf	displayDigit@D1,w
  7470  0250  00A0               	movwf	??_displayDigit
  7471  0251  087C               	movf	displayDigit@D1+1,w
  7472  0252  1803               	skipnc
  7473  0253  3E01               	addlw	1
  7474  0254  00A1               	movwf	??_displayDigit+1
  7475  0255  0820               	movf	??_displayDigit,w
  7476  0256  0084               	movwf	4
  7477  0257  1783               	bsf	3,7
  7478  0258  1C21               	btfss	??_displayDigit+1,0
  7479  0259  1383               	bcf	3,7
  7480  025A  0A00               	incf	0,w
  7481  025B  00A2               	movwf	??_displayDigit+2
  7482  025C  3001               	movlw	1
  7483  025D  00A3               	movwf	??_displayDigit+3
  7484  025E  3000               	movlw	0
  7485  025F  00A4               	movwf	??_displayDigit+4
  7486  0260  2A64               	goto	u2604
  7487  0261                     u2605:	
  7488  0261  1003               	clrc
  7489  0262  0DA3               	rlf	??_displayDigit+3,f
  7490  0263  0DA4               	rlf	??_displayDigit+4,f
  7491  0264                     u2604:	
  7492  0264  0BA2               	decfsz	??_displayDigit+2,f
  7493  0265  2A61               	goto	u2605
  7494  0266  3002               	movlw	2
  7495  0267  077B               	addwf	displayDigit@D1,w
  7496  0268  00A5               	movwf	??_displayDigit+5
  7497  0269  087C               	movf	displayDigit@D1+1,w
  7498  026A  1803               	skipnc
  7499  026B  3E01               	addlw	1
  7500  026C  00A6               	movwf	??_displayDigit+6
  7501  026D  0825               	movf	??_displayDigit+5,w
  7502  026E  0084               	movwf	4
  7503  026F  1783               	bsf	3,7
  7504  0270  1C26               	btfss	??_displayDigit+6,0
  7505  0271  1383               	bcf	3,7
  7506  0272  0800               	movf	0,w
  7507  0273  00A7               	movwf	??_displayDigit+7
  7508  0274  0A84               	incf	4,f
  7509  0275  0800               	movf	0,w
  7510  0276  00A8               	movwf	??_displayDigit+8
  7511  0277  0827               	movf	??_displayDigit+7,w
  7512  0278  0084               	movwf	4
  7513  0279  1783               	bsf	3,7
  7514  027A  1C28               	btfss	??_displayDigit+8,0
  7515  027B  1383               	bcf	3,7
  7516  027C  0823               	movf	??_displayDigit+3,w
  7517  027D  0480               	iorwf	0,f
  7518  027E  0A84               	incf	4,f
  7519  027F  0824               	movf	??_displayDigit+4,w
  7520  0280  0480               	iorwf	0,f
  7521                           
  7522                           ;lcd.c: 151: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  7523  0281  3012               	movlw	18
  7524  0282  077B               	addwf	displayDigit@D1,w
  7525  0283  00A0               	movwf	??_displayDigit
  7526  0284  087C               	movf	displayDigit@D1+1,w
  7527  0285  1803               	skipnc
  7528  0286  3E01               	addlw	1
  7529  0287  00A1               	movwf	??_displayDigit+1
  7530  0288  0820               	movf	??_displayDigit,w
  7531  0289  0084               	movwf	4
  7532  028A  1783               	bsf	3,7
  7533  028B  1C21               	btfss	??_displayDigit+1,0
  7534  028C  1383               	bcf	3,7
  7535  028D  0A00               	incf	0,w
  7536  028E  00A2               	movwf	??_displayDigit+2
  7537  028F  3001               	movlw	1
  7538  0290  00A3               	movwf	??_displayDigit+3
  7539  0291  3000               	movlw	0
  7540  0292  00A4               	movwf	??_displayDigit+4
  7541  0293  2A97               	goto	u2614
  7542  0294                     u2615:	
  7543  0294  1003               	clrc
  7544  0295  0DA3               	rlf	??_displayDigit+3,f
  7545  0296  0DA4               	rlf	??_displayDigit+4,f
  7546  0297                     u2614:	
  7547  0297  0BA2               	decfsz	??_displayDigit+2,f
  7548  0298  2A94               	goto	u2615
  7549  0299  3004               	movlw	4
  7550  029A  077B               	addwf	displayDigit@D1,w
  7551  029B  00A5               	movwf	??_displayDigit+5
  7552  029C  087C               	movf	displayDigit@D1+1,w
  7553  029D  1803               	skipnc
  7554  029E  3E01               	addlw	1
  7555  029F  00A6               	movwf	??_displayDigit+6
  7556  02A0  0825               	movf	??_displayDigit+5,w
  7557  02A1  0084               	movwf	4
  7558  02A2  1783               	bsf	3,7
  7559  02A3  1C26               	btfss	??_displayDigit+6,0
  7560  02A4  1383               	bcf	3,7
  7561  02A5  0800               	movf	0,w
  7562  02A6  00A7               	movwf	??_displayDigit+7
  7563  02A7  0A84               	incf	4,f
  7564  02A8  0800               	movf	0,w
  7565  02A9  00A8               	movwf	??_displayDigit+8
  7566  02AA  0827               	movf	??_displayDigit+7,w
  7567  02AB  0084               	movwf	4
  7568  02AC  1783               	bsf	3,7
  7569  02AD  1C28               	btfss	??_displayDigit+8,0
  7570  02AE  1383               	bcf	3,7
  7571  02AF  0823               	movf	??_displayDigit+3,w
  7572  02B0  0480               	iorwf	0,f
  7573  02B1  0A84               	incf	4,f
  7574  02B2  0824               	movf	??_displayDigit+4,w
  7575  02B3  0480               	iorwf	0,f
  7576                           
  7577                           ;lcd.c: 152: ((*D1->sd) &= ~((1UL) << (D1->bits[3])));
  7578  02B4  3014               	movlw	20
  7579  02B5  077B               	addwf	displayDigit@D1,w
  7580  02B6  00A0               	movwf	??_displayDigit
  7581  02B7  087C               	movf	displayDigit@D1+1,w
  7582  02B8  1803               	skipnc
  7583  02B9  3E01               	addlw	1
  7584  02BA  00A1               	movwf	??_displayDigit+1
  7585  02BB  0820               	movf	??_displayDigit,w
  7586  02BC  0084               	movwf	4
  7587  02BD  1783               	bsf	3,7
  7588  02BE  1C21               	btfss	??_displayDigit+1,0
  7589  02BF  1383               	bcf	3,7
  7590  02C0  0A00               	incf	0,w
  7591  02C1  00A2               	movwf	??_displayDigit+2
  7592  02C2  3001               	movlw	1
  7593  02C3  00A3               	movwf	??_displayDigit+3
  7594  02C4  3000               	movlw	0
  7595  02C5  00A4               	movwf	??_displayDigit+4
  7596  02C6  2ACA               	goto	u2624
  7597  02C7                     u2625:	
  7598  02C7  1003               	clrc
  7599  02C8  0DA3               	rlf	??_displayDigit+3,f
  7600  02C9  0DA4               	rlf	??_displayDigit+4,f
  7601  02CA                     u2624:	
  7602  02CA  0BA2               	decfsz	??_displayDigit+2,f
  7603  02CB  2AC7               	goto	u2625
  7604  02CC  09A3               	comf	??_displayDigit+3,f
  7605  02CD  09A4               	comf	??_displayDigit+4,f
  7606  02CE  3006               	movlw	6
  7607  02CF  077B               	addwf	displayDigit@D1,w
  7608  02D0  00A5               	movwf	??_displayDigit+5
  7609  02D1  087C               	movf	displayDigit@D1+1,w
  7610  02D2  1803               	skipnc
  7611  02D3  3E01               	addlw	1
  7612  02D4  00A6               	movwf	??_displayDigit+6
  7613  02D5  0825               	movf	??_displayDigit+5,w
  7614  02D6  0084               	movwf	4
  7615  02D7  1783               	bsf	3,7
  7616  02D8  1C26               	btfss	??_displayDigit+6,0
  7617  02D9  1383               	bcf	3,7
  7618  02DA  0800               	movf	0,w
  7619  02DB  00A7               	movwf	??_displayDigit+7
  7620  02DC  0A84               	incf	4,f
  7621  02DD  0800               	movf	0,w
  7622  02DE  00A8               	movwf	??_displayDigit+8
  7623  02DF  0827               	movf	??_displayDigit+7,w
  7624  02E0  0084               	movwf	4
  7625  02E1  1783               	bsf	3,7
  7626  02E2  1C28               	btfss	??_displayDigit+8,0
  7627  02E3  1383               	bcf	3,7
  7628  02E4  0823               	movf	??_displayDigit+3,w
  7629  02E5  0580               	andwf	0,f
  7630  02E6  0A84               	incf	4,f
  7631  02E7  0824               	movf	??_displayDigit+4,w
  7632  02E8  0580               	andwf	0,f
  7633                           
  7634                           ;lcd.c: 153: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  7635  02E9  3016               	movlw	22
  7636  02EA  077B               	addwf	displayDigit@D1,w
  7637  02EB  00A0               	movwf	??_displayDigit
  7638  02EC  087C               	movf	displayDigit@D1+1,w
  7639  02ED  1803               	skipnc
  7640  02EE  3E01               	addlw	1
  7641  02EF  00A1               	movwf	??_displayDigit+1
  7642  02F0  0820               	movf	??_displayDigit,w
  7643  02F1  0084               	movwf	4
  7644  02F2  1783               	bsf	3,7
  7645  02F3  1C21               	btfss	??_displayDigit+1,0
  7646  02F4  1383               	bcf	3,7
  7647  02F5  0A00               	incf	0,w
  7648  02F6  00A2               	movwf	??_displayDigit+2
  7649  02F7  3001               	movlw	1
  7650  02F8  00A3               	movwf	??_displayDigit+3
  7651  02F9  3000               	movlw	0
  7652  02FA  00A4               	movwf	??_displayDigit+4
  7653  02FB  2AFF               	goto	u2634
  7654  02FC                     u2635:	
  7655  02FC  1003               	clrc
  7656  02FD  0DA3               	rlf	??_displayDigit+3,f
  7657  02FE  0DA4               	rlf	??_displayDigit+4,f
  7658  02FF                     u2634:	
  7659  02FF  0BA2               	decfsz	??_displayDigit+2,f
  7660  0300  2AFC               	goto	u2635
  7661  0301  09A3               	comf	??_displayDigit+3,f
  7662  0302  09A4               	comf	??_displayDigit+4,f
  7663  0303  3008               	movlw	8
  7664  0304  077B               	addwf	displayDigit@D1,w
  7665  0305  00A5               	movwf	??_displayDigit+5
  7666  0306  087C               	movf	displayDigit@D1+1,w
  7667  0307  1803               	skipnc
  7668  0308  3E01               	addlw	1
  7669  0309  00A6               	movwf	??_displayDigit+6
  7670  030A  0825               	movf	??_displayDigit+5,w
  7671  030B  0084               	movwf	4
  7672  030C  1783               	bsf	3,7
  7673  030D  1C26               	btfss	??_displayDigit+6,0
  7674  030E  1383               	bcf	3,7
  7675  030F  0800               	movf	0,w
  7676  0310  00A7               	movwf	??_displayDigit+7
  7677  0311  0A84               	incf	4,f
  7678  0312  0800               	movf	0,w
  7679  0313  00A8               	movwf	??_displayDigit+8
  7680  0314  0827               	movf	??_displayDigit+7,w
  7681  0315  0084               	movwf	4
  7682  0316  1783               	bsf	3,7
  7683  0317  1C28               	btfss	??_displayDigit+8,0
  7684  0318  1383               	bcf	3,7
  7685  0319  0823               	movf	??_displayDigit+3,w
  7686  031A  0580               	andwf	0,f
  7687  031B  0A84               	incf	4,f
  7688  031C  0824               	movf	??_displayDigit+4,w
  7689  031D  0580               	andwf	0,f
  7690                           
  7691                           ;lcd.c: 154: ((*D1->sf) &= ~((1UL) << (D1->bits[5])));
  7692  031E  3018               	movlw	24
  7693  031F  077B               	addwf	displayDigit@D1,w
  7694  0320  00A0               	movwf	??_displayDigit
  7695  0321  087C               	movf	displayDigit@D1+1,w
  7696  0322  1803               	skipnc
  7697  0323  3E01               	addlw	1
  7698  0324  00A1               	movwf	??_displayDigit+1
  7699  0325  0820               	movf	??_displayDigit,w
  7700  0326  0084               	movwf	4
  7701  0327  1783               	bsf	3,7
  7702  0328  1C21               	btfss	??_displayDigit+1,0
  7703  0329  1383               	bcf	3,7
  7704  032A  0A00               	incf	0,w
  7705  032B  00A2               	movwf	??_displayDigit+2
  7706  032C  3001               	movlw	1
  7707  032D  00A3               	movwf	??_displayDigit+3
  7708  032E  3000               	movlw	0
  7709  032F  00A4               	movwf	??_displayDigit+4
  7710  0330  2B34               	goto	u2644
  7711  0331                     u2645:	
  7712  0331  1003               	clrc
  7713  0332  0DA3               	rlf	??_displayDigit+3,f
  7714  0333  0DA4               	rlf	??_displayDigit+4,f
  7715  0334                     u2644:	
  7716  0334  0BA2               	decfsz	??_displayDigit+2,f
  7717  0335  2B31               	goto	u2645
  7718  0336  09A3               	comf	??_displayDigit+3,f
  7719  0337  09A4               	comf	??_displayDigit+4,f
  7720  0338  300A               	movlw	10
  7721  0339  077B               	addwf	displayDigit@D1,w
  7722  033A  00A5               	movwf	??_displayDigit+5
  7723  033B  087C               	movf	displayDigit@D1+1,w
  7724  033C  1803               	skipnc
  7725  033D  3E01               	addlw	1
  7726  033E  00A6               	movwf	??_displayDigit+6
  7727  033F  0825               	movf	??_displayDigit+5,w
  7728  0340  0084               	movwf	4
  7729  0341  1783               	bsf	3,7
  7730  0342  1C26               	btfss	??_displayDigit+6,0
  7731  0343  1383               	bcf	3,7
  7732  0344  0800               	movf	0,w
  7733  0345  00A7               	movwf	??_displayDigit+7
  7734  0346  0A84               	incf	4,f
  7735  0347  0800               	movf	0,w
  7736  0348  00A8               	movwf	??_displayDigit+8
  7737  0349  0827               	movf	??_displayDigit+7,w
  7738  034A  0084               	movwf	4
  7739  034B  1783               	bsf	3,7
  7740  034C  1C28               	btfss	??_displayDigit+8,0
  7741  034D  1383               	bcf	3,7
  7742  034E  0823               	movf	??_displayDigit+3,w
  7743  034F  0580               	andwf	0,f
  7744  0350  0A84               	incf	4,f
  7745  0351  0824               	movf	??_displayDigit+4,w
  7746  0352  0580               	andwf	0,f
  7747                           
  7748                           ;lcd.c: 155: ((*D1->sg) &= ~((1UL) << (D1->bits[6])));
  7749  0353  301A               	movlw	26
  7750  0354  077B               	addwf	displayDigit@D1,w
  7751  0355  00A0               	movwf	??_displayDigit
  7752  0356  087C               	movf	displayDigit@D1+1,w
  7753  0357  1803               	skipnc
  7754  0358  3E01               	addlw	1
  7755  0359  00A1               	movwf	??_displayDigit+1
  7756  035A  0820               	movf	??_displayDigit,w
  7757  035B  0084               	movwf	4
  7758  035C  1783               	bsf	3,7
  7759  035D  1C21               	btfss	??_displayDigit+1,0
  7760  035E  1383               	bcf	3,7
  7761  035F  0A00               	incf	0,w
  7762  0360  00A2               	movwf	??_displayDigit+2
  7763  0361  3001               	movlw	1
  7764  0362  00A3               	movwf	??_displayDigit+3
  7765  0363  3000               	movlw	0
  7766  0364  00A4               	movwf	??_displayDigit+4
  7767  0365  2B69               	goto	u2654
  7768  0366                     u2655:	
  7769  0366  1003               	clrc
  7770  0367  0DA3               	rlf	??_displayDigit+3,f
  7771  0368  0DA4               	rlf	??_displayDigit+4,f
  7772  0369                     u2654:	
  7773  0369  0BA2               	decfsz	??_displayDigit+2,f
  7774  036A  2B66               	goto	u2655
  7775  036B  09A3               	comf	??_displayDigit+3,f
  7776  036C  09A4               	comf	??_displayDigit+4,f
  7777  036D  300C               	movlw	12
  7778  036E  077B               	addwf	displayDigit@D1,w
  7779  036F  00A5               	movwf	??_displayDigit+5
  7780  0370  087C               	movf	displayDigit@D1+1,w
  7781  0371  1803               	skipnc
  7782  0372  3E01               	addlw	1
  7783  0373  00A6               	movwf	??_displayDigit+6
  7784  0374  0825               	movf	??_displayDigit+5,w
  7785  0375  0084               	movwf	4
  7786  0376  1783               	bsf	3,7
  7787  0377  1C26               	btfss	??_displayDigit+6,0
  7788  0378  1383               	bcf	3,7
  7789  0379  0800               	movf	0,w
  7790  037A  00A7               	movwf	??_displayDigit+7
  7791  037B  0A84               	incf	4,f
  7792  037C  0800               	movf	0,w
  7793  037D  00A8               	movwf	??_displayDigit+8
  7794  037E  0827               	movf	??_displayDigit+7,w
  7795  037F  0084               	movwf	4
  7796  0380  1783               	bsf	3,7
  7797  0381  1C28               	btfss	??_displayDigit+8,0
  7798  0382  1383               	bcf	3,7
  7799  0383  0823               	movf	??_displayDigit+3,w
  7800  0384  0580               	andwf	0,f
  7801  0385  0A84               	incf	4,f
  7802  0386  0824               	movf	??_displayDigit+4,w
  7803  0387  0580               	andwf	0,f
  7804                           
  7805                           ;lcd.c: 156: break;
  7806  0388  0008               	return
  7807  0389                     l1365:	
  7808                           ;lcd.c: 157: case 8:
  7809                           
  7810                           
  7811                           ;lcd.c: 158: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  7812  0389  300E               	movlw	14
  7813  038A  077B               	addwf	displayDigit@D1,w
  7814  038B  1283               	bcf	3,5	;RP0=0, select bank0
  7815  038C  1303               	bcf	3,6	;RP1=0, select bank0
  7816  038D  00A0               	movwf	??_displayDigit
  7817  038E  087C               	movf	displayDigit@D1+1,w
  7818  038F  1803               	skipnc
  7819  0390  3E01               	addlw	1
  7820  0391  00A1               	movwf	??_displayDigit+1
  7821  0392  0820               	movf	??_displayDigit,w
  7822  0393  0084               	movwf	4
  7823  0394  1783               	bsf	3,7
  7824  0395  1C21               	btfss	??_displayDigit+1,0
  7825  0396  1383               	bcf	3,7
  7826  0397  0A00               	incf	0,w
  7827  0398  00A2               	movwf	??_displayDigit+2
  7828  0399  3001               	movlw	1
  7829  039A  00A3               	movwf	??_displayDigit+3
  7830  039B  3000               	movlw	0
  7831  039C  00A4               	movwf	??_displayDigit+4
  7832  039D  2BA1               	goto	u2664
  7833  039E                     u2665:	
  7834  039E  1003               	clrc
  7835  039F  0DA3               	rlf	??_displayDigit+3,f
  7836  03A0  0DA4               	rlf	??_displayDigit+4,f
  7837  03A1                     u2664:	
  7838  03A1  0BA2               	decfsz	??_displayDigit+2,f
  7839  03A2  2B9E               	goto	u2665
  7840  03A3  087B               	movf	displayDigit@D1,w
  7841  03A4  0084               	movwf	4
  7842  03A5  1783               	bsf	3,7
  7843  03A6  1C7C               	btfss	displayDigit@D1+1,0
  7844  03A7  1383               	bcf	3,7
  7845  03A8  0800               	movf	0,w
  7846  03A9  00A5               	movwf	??_displayDigit+5
  7847  03AA  0A84               	incf	4,f
  7848  03AB  0800               	movf	0,w
  7849  03AC  00A6               	movwf	??_displayDigit+6
  7850  03AD  0825               	movf	??_displayDigit+5,w
  7851  03AE  0084               	movwf	4
  7852  03AF  1783               	bsf	3,7
  7853  03B0  1C26               	btfss	??_displayDigit+6,0
  7854  03B1  1383               	bcf	3,7
  7855  03B2  0823               	movf	??_displayDigit+3,w
  7856  03B3  0480               	iorwf	0,f
  7857  03B4  0A84               	incf	4,f
  7858  03B5  0824               	movf	??_displayDigit+4,w
  7859  03B6  0480               	iorwf	0,f
  7860                           
  7861                           ;lcd.c: 159: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  7862  03B7  3010               	movlw	16
  7863  03B8  077B               	addwf	displayDigit@D1,w
  7864  03B9  00A0               	movwf	??_displayDigit
  7865  03BA  087C               	movf	displayDigit@D1+1,w
  7866  03BB  1803               	skipnc
  7867  03BC  3E01               	addlw	1
  7868  03BD  00A1               	movwf	??_displayDigit+1
  7869  03BE  0820               	movf	??_displayDigit,w
  7870  03BF  0084               	movwf	4
  7871  03C0  1783               	bsf	3,7
  7872  03C1  1C21               	btfss	??_displayDigit+1,0
  7873  03C2  1383               	bcf	3,7
  7874  03C3  0A00               	incf	0,w
  7875  03C4  00A2               	movwf	??_displayDigit+2
  7876  03C5  3001               	movlw	1
  7877  03C6  00A3               	movwf	??_displayDigit+3
  7878  03C7  3000               	movlw	0
  7879  03C8  00A4               	movwf	??_displayDigit+4
  7880  03C9  2BCD               	goto	u2674
  7881  03CA                     u2675:	
  7882  03CA  1003               	clrc
  7883  03CB  0DA3               	rlf	??_displayDigit+3,f
  7884  03CC  0DA4               	rlf	??_displayDigit+4,f
  7885  03CD                     u2674:	
  7886  03CD  0BA2               	decfsz	??_displayDigit+2,f
  7887  03CE  2BCA               	goto	u2675
  7888  03CF  3002               	movlw	2
  7889  03D0  077B               	addwf	displayDigit@D1,w
  7890  03D1  00A5               	movwf	??_displayDigit+5
  7891  03D2  087C               	movf	displayDigit@D1+1,w
  7892  03D3  1803               	skipnc
  7893  03D4  3E01               	addlw	1
  7894  03D5  00A6               	movwf	??_displayDigit+6
  7895  03D6  0825               	movf	??_displayDigit+5,w
  7896  03D7  0084               	movwf	4
  7897  03D8  1783               	bsf	3,7
  7898  03D9  1C26               	btfss	??_displayDigit+6,0
  7899  03DA  1383               	bcf	3,7
  7900  03DB  0800               	movf	0,w
  7901  03DC  00A7               	movwf	??_displayDigit+7
  7902  03DD  0A84               	incf	4,f
  7903  03DE  0800               	movf	0,w
  7904  03DF  00A8               	movwf	??_displayDigit+8
  7905  03E0  0827               	movf	??_displayDigit+7,w
  7906  03E1  0084               	movwf	4
  7907  03E2  1783               	bsf	3,7
  7908  03E3  1C28               	btfss	??_displayDigit+8,0
  7909  03E4  1383               	bcf	3,7
  7910  03E5  0823               	movf	??_displayDigit+3,w
  7911  03E6  0480               	iorwf	0,f
  7912  03E7  0A84               	incf	4,f
  7913  03E8  0824               	movf	??_displayDigit+4,w
  7914  03E9  0480               	iorwf	0,f
  7915                           
  7916                           ;lcd.c: 160: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  7917  03EA  3012               	movlw	18
  7918  03EB  077B               	addwf	displayDigit@D1,w
  7919  03EC  00A0               	movwf	??_displayDigit
  7920  03ED  087C               	movf	displayDigit@D1+1,w
  7921  03EE  1803               	skipnc
  7922  03EF  3E01               	addlw	1
  7923  03F0  00A1               	movwf	??_displayDigit+1
  7924  03F1  0820               	movf	??_displayDigit,w
  7925  03F2  0084               	movwf	4
  7926  03F3  1783               	bsf	3,7
  7927  03F4  1C21               	btfss	??_displayDigit+1,0
  7928  03F5  1383               	bcf	3,7
  7929  03F6  0A00               	incf	0,w
  7930  03F7  00A2               	movwf	??_displayDigit+2
  7931  03F8  3001               	movlw	1
  7932  03F9  00A3               	movwf	??_displayDigit+3
  7933  03FA  3000               	movlw	0
  7934  03FB  00A4               	movwf	??_displayDigit+4
  7935  03FC  2C00               	goto	u2684
  7936  03FD                     u2685:	
  7937  03FD  1003               	clrc
  7938  03FE  0DA3               	rlf	??_displayDigit+3,f
  7939  03FF  0DA4               	rlf	??_displayDigit+4,f
  7940  0400                     u2684:	
  7941  0400  0BA2               	decfsz	??_displayDigit+2,f
  7942  0401  2BFD               	goto	u2685
  7943  0402  3004               	movlw	4
  7944  0403  077B               	addwf	displayDigit@D1,w
  7945  0404  00A5               	movwf	??_displayDigit+5
  7946  0405  087C               	movf	displayDigit@D1+1,w
  7947  0406  1803               	skipnc
  7948  0407  3E01               	addlw	1
  7949  0408  00A6               	movwf	??_displayDigit+6
  7950  0409  0825               	movf	??_displayDigit+5,w
  7951  040A  0084               	movwf	4
  7952  040B  1783               	bsf	3,7
  7953  040C  1C26               	btfss	??_displayDigit+6,0
  7954  040D  1383               	bcf	3,7
  7955  040E  0800               	movf	0,w
  7956  040F  00A7               	movwf	??_displayDigit+7
  7957  0410  0A84               	incf	4,f
  7958  0411  0800               	movf	0,w
  7959  0412  00A8               	movwf	??_displayDigit+8
  7960  0413  0827               	movf	??_displayDigit+7,w
  7961  0414  0084               	movwf	4
  7962  0415  1783               	bsf	3,7
  7963  0416  1C28               	btfss	??_displayDigit+8,0
  7964  0417  1383               	bcf	3,7
  7965  0418  0823               	movf	??_displayDigit+3,w
  7966  0419  0480               	iorwf	0,f
  7967  041A  0A84               	incf	4,f
  7968  041B  0824               	movf	??_displayDigit+4,w
  7969  041C  0480               	iorwf	0,f
  7970                           
  7971                           ;lcd.c: 161: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  7972  041D  3014               	movlw	20
  7973  041E  077B               	addwf	displayDigit@D1,w
  7974  041F  00A0               	movwf	??_displayDigit
  7975  0420  087C               	movf	displayDigit@D1+1,w
  7976  0421  1803               	skipnc
  7977  0422  3E01               	addlw	1
  7978  0423  00A1               	movwf	??_displayDigit+1
  7979  0424  0820               	movf	??_displayDigit,w
  7980  0425  0084               	movwf	4
  7981  0426  1783               	bsf	3,7
  7982  0427  1C21               	btfss	??_displayDigit+1,0
  7983  0428  1383               	bcf	3,7
  7984  0429  0A00               	incf	0,w
  7985  042A  00A2               	movwf	??_displayDigit+2
  7986  042B  3001               	movlw	1
  7987  042C  00A3               	movwf	??_displayDigit+3
  7988  042D  3000               	movlw	0
  7989  042E  00A4               	movwf	??_displayDigit+4
  7990  042F  2C33               	goto	u2694
  7991  0430                     u2695:	
  7992  0430  1003               	clrc
  7993  0431  0DA3               	rlf	??_displayDigit+3,f
  7994  0432  0DA4               	rlf	??_displayDigit+4,f
  7995  0433                     u2694:	
  7996  0433  0BA2               	decfsz	??_displayDigit+2,f
  7997  0434  2C30               	goto	u2695
  7998  0435  3006               	movlw	6
  7999  0436  077B               	addwf	displayDigit@D1,w
  8000  0437  00A5               	movwf	??_displayDigit+5
  8001  0438  087C               	movf	displayDigit@D1+1,w
  8002  0439  1803               	skipnc
  8003  043A  3E01               	addlw	1
  8004  043B  00A6               	movwf	??_displayDigit+6
  8005  043C  0825               	movf	??_displayDigit+5,w
  8006  043D  0084               	movwf	4
  8007  043E  1783               	bsf	3,7
  8008  043F  1C26               	btfss	??_displayDigit+6,0
  8009  0440  1383               	bcf	3,7
  8010  0441  0800               	movf	0,w
  8011  0442  00A7               	movwf	??_displayDigit+7
  8012  0443  0A84               	incf	4,f
  8013  0444  0800               	movf	0,w
  8014  0445  00A8               	movwf	??_displayDigit+8
  8015  0446  0827               	movf	??_displayDigit+7,w
  8016  0447  0084               	movwf	4
  8017  0448  1783               	bsf	3,7
  8018  0449  1C28               	btfss	??_displayDigit+8,0
  8019  044A  1383               	bcf	3,7
  8020  044B  0823               	movf	??_displayDigit+3,w
  8021  044C  0480               	iorwf	0,f
  8022  044D  0A84               	incf	4,f
  8023  044E  0824               	movf	??_displayDigit+4,w
  8024  044F  0480               	iorwf	0,f
  8025                           
  8026                           ;lcd.c: 162: ((*D1->se) |= (1UL) << (D1->bits[4]));
  8027  0450  3016               	movlw	22
  8028  0451  077B               	addwf	displayDigit@D1,w
  8029  0452  00A0               	movwf	??_displayDigit
  8030  0453  087C               	movf	displayDigit@D1+1,w
  8031  0454  1803               	skipnc
  8032  0455  3E01               	addlw	1
  8033  0456  00A1               	movwf	??_displayDigit+1
  8034  0457  0820               	movf	??_displayDigit,w
  8035  0458  0084               	movwf	4
  8036  0459  1783               	bsf	3,7
  8037  045A  1C21               	btfss	??_displayDigit+1,0
  8038  045B  1383               	bcf	3,7
  8039  045C  0A00               	incf	0,w
  8040  045D  00A2               	movwf	??_displayDigit+2
  8041  045E  3001               	movlw	1
  8042  045F  00A3               	movwf	??_displayDigit+3
  8043  0460  3000               	movlw	0
  8044  0461  00A4               	movwf	??_displayDigit+4
  8045  0462  2C66               	goto	u2704
  8046  0463                     u2705:	
  8047  0463  1003               	clrc
  8048  0464  0DA3               	rlf	??_displayDigit+3,f
  8049  0465  0DA4               	rlf	??_displayDigit+4,f
  8050  0466                     u2704:	
  8051  0466  0BA2               	decfsz	??_displayDigit+2,f
  8052  0467  2C63               	goto	u2705
  8053  0468  3008               	movlw	8
  8054  0469  077B               	addwf	displayDigit@D1,w
  8055  046A  00A5               	movwf	??_displayDigit+5
  8056  046B  087C               	movf	displayDigit@D1+1,w
  8057  046C  1803               	skipnc
  8058  046D  3E01               	addlw	1
  8059  046E  00A6               	movwf	??_displayDigit+6
  8060  046F  0825               	movf	??_displayDigit+5,w
  8061  0470  0084               	movwf	4
  8062  0471  1783               	bsf	3,7
  8063  0472  1C26               	btfss	??_displayDigit+6,0
  8064  0473  1383               	bcf	3,7
  8065  0474  0800               	movf	0,w
  8066  0475  00A7               	movwf	??_displayDigit+7
  8067  0476  0A84               	incf	4,f
  8068  0477  0800               	movf	0,w
  8069  0478  00A8               	movwf	??_displayDigit+8
  8070  0479  0827               	movf	??_displayDigit+7,w
  8071  047A  0084               	movwf	4
  8072  047B  1783               	bsf	3,7
  8073  047C  1C28               	btfss	??_displayDigit+8,0
  8074  047D  1383               	bcf	3,7
  8075  047E  0823               	movf	??_displayDigit+3,w
  8076  047F  0480               	iorwf	0,f
  8077  0480  0A84               	incf	4,f
  8078  0481  0824               	movf	??_displayDigit+4,w
  8079  0482  0480               	iorwf	0,f
  8080                           
  8081                           ;lcd.c: 163: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  8082  0483  3018               	movlw	24
  8083  0484  077B               	addwf	displayDigit@D1,w
  8084  0485  00A0               	movwf	??_displayDigit
  8085  0486  087C               	movf	displayDigit@D1+1,w
  8086  0487  1803               	skipnc
  8087  0488  3E01               	addlw	1
  8088  0489  00A1               	movwf	??_displayDigit+1
  8089  048A  0820               	movf	??_displayDigit,w
  8090  048B  0084               	movwf	4
  8091  048C  1783               	bsf	3,7
  8092  048D  1C21               	btfss	??_displayDigit+1,0
  8093  048E  1383               	bcf	3,7
  8094  048F  0A00               	incf	0,w
  8095  0490  00A2               	movwf	??_displayDigit+2
  8096  0491  3001               	movlw	1
  8097  0492  00A3               	movwf	??_displayDigit+3
  8098  0493  3000               	movlw	0
  8099  0494  00A4               	movwf	??_displayDigit+4
  8100  0495  2C99               	goto	u2714
  8101  0496                     u2715:	
  8102  0496  1003               	clrc
  8103  0497  0DA3               	rlf	??_displayDigit+3,f
  8104  0498  0DA4               	rlf	??_displayDigit+4,f
  8105  0499                     u2714:	
  8106  0499  0BA2               	decfsz	??_displayDigit+2,f
  8107  049A  2C96               	goto	u2715
  8108  049B  300A               	movlw	10
  8109  049C  077B               	addwf	displayDigit@D1,w
  8110  049D  00A5               	movwf	??_displayDigit+5
  8111  049E  087C               	movf	displayDigit@D1+1,w
  8112  049F  1803               	skipnc
  8113  04A0  3E01               	addlw	1
  8114  04A1  00A6               	movwf	??_displayDigit+6
  8115  04A2  0825               	movf	??_displayDigit+5,w
  8116  04A3  0084               	movwf	4
  8117  04A4  1783               	bsf	3,7
  8118  04A5  1C26               	btfss	??_displayDigit+6,0
  8119  04A6  1383               	bcf	3,7
  8120  04A7  0800               	movf	0,w
  8121  04A8  00A7               	movwf	??_displayDigit+7
  8122  04A9  0A84               	incf	4,f
  8123  04AA  0800               	movf	0,w
  8124  04AB  00A8               	movwf	??_displayDigit+8
  8125  04AC  0827               	movf	??_displayDigit+7,w
  8126  04AD  0084               	movwf	4
  8127  04AE  1783               	bsf	3,7
  8128  04AF  1C28               	btfss	??_displayDigit+8,0
  8129  04B0  1383               	bcf	3,7
  8130  04B1  0823               	movf	??_displayDigit+3,w
  8131  04B2  0480               	iorwf	0,f
  8132  04B3  0A84               	incf	4,f
  8133  04B4  0824               	movf	??_displayDigit+4,w
  8134  04B5  0480               	iorwf	0,f
  8135                           
  8136                           ;lcd.c: 164: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  8137  04B6  301A               	movlw	26
  8138  04B7  077B               	addwf	displayDigit@D1,w
  8139  04B8  00A0               	movwf	??_displayDigit
  8140  04B9  087C               	movf	displayDigit@D1+1,w
  8141  04BA  1803               	skipnc
  8142  04BB  3E01               	addlw	1
  8143  04BC  00A1               	movwf	??_displayDigit+1
  8144  04BD  0820               	movf	??_displayDigit,w
  8145  04BE  0084               	movwf	4
  8146  04BF  1783               	bsf	3,7
  8147  04C0  1C21               	btfss	??_displayDigit+1,0
  8148  04C1  1383               	bcf	3,7
  8149  04C2  0A00               	incf	0,w
  8150  04C3  00A2               	movwf	??_displayDigit+2
  8151  04C4  3001               	movlw	1
  8152  04C5  00A3               	movwf	??_displayDigit+3
  8153  04C6  3000               	movlw	0
  8154  04C7  00A4               	movwf	??_displayDigit+4
  8155  04C8  2CCC               	goto	u2724
  8156  04C9                     u2725:	
  8157  04C9  1003               	clrc
  8158  04CA  0DA3               	rlf	??_displayDigit+3,f
  8159  04CB  0DA4               	rlf	??_displayDigit+4,f
  8160  04CC                     u2724:	
  8161  04CC  0BA2               	decfsz	??_displayDigit+2,f
  8162  04CD  2CC9               	goto	u2725
  8163  04CE  300C               	movlw	12
  8164  04CF  077B               	addwf	displayDigit@D1,w
  8165  04D0  00A5               	movwf	??_displayDigit+5
  8166  04D1  087C               	movf	displayDigit@D1+1,w
  8167  04D2  1803               	skipnc
  8168  04D3  3E01               	addlw	1
  8169  04D4  00A6               	movwf	??_displayDigit+6
  8170  04D5  0825               	movf	??_displayDigit+5,w
  8171  04D6  0084               	movwf	4
  8172  04D7  1783               	bsf	3,7
  8173  04D8  1C26               	btfss	??_displayDigit+6,0
  8174  04D9  1383               	bcf	3,7
  8175  04DA  0800               	movf	0,w
  8176  04DB  00A7               	movwf	??_displayDigit+7
  8177  04DC  0A84               	incf	4,f
  8178  04DD  0800               	movf	0,w
  8179  04DE  00A8               	movwf	??_displayDigit+8
  8180  04DF  0827               	movf	??_displayDigit+7,w
  8181  04E0  0084               	movwf	4
  8182  04E1  1783               	bsf	3,7
  8183  04E2  1C28               	btfss	??_displayDigit+8,0
  8184  04E3  1383               	bcf	3,7
  8185  04E4  0823               	movf	??_displayDigit+3,w
  8186  04E5  0480               	iorwf	0,f
  8187  04E6  0A84               	incf	4,f
  8188  04E7  0824               	movf	??_displayDigit+4,w
  8189  04E8  0480               	iorwf	0,f
  8190                           
  8191                           ;lcd.c: 165: break;
  8192  04E9  0008               	return
  8193  04EA                     l1367:	
  8194                           ;lcd.c: 166: case 9:
  8195                           
  8196                           
  8197                           ;lcd.c: 167: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  8198  04EA  300E               	movlw	14
  8199  04EB  077B               	addwf	displayDigit@D1,w
  8200  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  8201  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  8202  04EE  00A0               	movwf	??_displayDigit
  8203  04EF  087C               	movf	displayDigit@D1+1,w
  8204  04F0  1803               	skipnc
  8205  04F1  3E01               	addlw	1
  8206  04F2  00A1               	movwf	??_displayDigit+1
  8207  04F3  0820               	movf	??_displayDigit,w
  8208  04F4  0084               	movwf	4
  8209  04F5  1783               	bsf	3,7
  8210  04F6  1C21               	btfss	??_displayDigit+1,0
  8211  04F7  1383               	bcf	3,7
  8212  04F8  0A00               	incf	0,w
  8213  04F9  00A2               	movwf	??_displayDigit+2
  8214  04FA  3001               	movlw	1
  8215  04FB  00A3               	movwf	??_displayDigit+3
  8216  04FC  3000               	movlw	0
  8217  04FD  00A4               	movwf	??_displayDigit+4
  8218  04FE  2D02               	goto	u2734
  8219  04FF                     u2735:	
  8220  04FF  1003               	clrc
  8221  0500  0DA3               	rlf	??_displayDigit+3,f
  8222  0501  0DA4               	rlf	??_displayDigit+4,f
  8223  0502                     u2734:	
  8224  0502  0BA2               	decfsz	??_displayDigit+2,f
  8225  0503  2CFF               	goto	u2735
  8226  0504  087B               	movf	displayDigit@D1,w
  8227  0505  0084               	movwf	4
  8228  0506  1783               	bsf	3,7
  8229  0507  1C7C               	btfss	displayDigit@D1+1,0
  8230  0508  1383               	bcf	3,7
  8231  0509  0800               	movf	0,w
  8232  050A  00A5               	movwf	??_displayDigit+5
  8233  050B  0A84               	incf	4,f
  8234  050C  0800               	movf	0,w
  8235  050D  00A6               	movwf	??_displayDigit+6
  8236  050E  0825               	movf	??_displayDigit+5,w
  8237  050F  0084               	movwf	4
  8238  0510  1783               	bsf	3,7
  8239  0511  1C26               	btfss	??_displayDigit+6,0
  8240  0512  1383               	bcf	3,7
  8241  0513  0823               	movf	??_displayDigit+3,w
  8242  0514  0480               	iorwf	0,f
  8243  0515  0A84               	incf	4,f
  8244  0516  0824               	movf	??_displayDigit+4,w
  8245  0517  0480               	iorwf	0,f
  8246                           
  8247                           ;lcd.c: 168: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  8248  0518  3010               	movlw	16
  8249  0519  077B               	addwf	displayDigit@D1,w
  8250  051A  00A0               	movwf	??_displayDigit
  8251  051B  087C               	movf	displayDigit@D1+1,w
  8252  051C  1803               	skipnc
  8253  051D  3E01               	addlw	1
  8254  051E  00A1               	movwf	??_displayDigit+1
  8255  051F  0820               	movf	??_displayDigit,w
  8256  0520  0084               	movwf	4
  8257  0521  1783               	bsf	3,7
  8258  0522  1C21               	btfss	??_displayDigit+1,0
  8259  0523  1383               	bcf	3,7
  8260  0524  0A00               	incf	0,w
  8261  0525  00A2               	movwf	??_displayDigit+2
  8262  0526  3001               	movlw	1
  8263  0527  00A3               	movwf	??_displayDigit+3
  8264  0528  3000               	movlw	0
  8265  0529  00A4               	movwf	??_displayDigit+4
  8266  052A  2D2E               	goto	u2744
  8267  052B                     u2745:	
  8268  052B  1003               	clrc
  8269  052C  0DA3               	rlf	??_displayDigit+3,f
  8270  052D  0DA4               	rlf	??_displayDigit+4,f
  8271  052E                     u2744:	
  8272  052E  0BA2               	decfsz	??_displayDigit+2,f
  8273  052F  2D2B               	goto	u2745
  8274  0530  3002               	movlw	2
  8275  0531  077B               	addwf	displayDigit@D1,w
  8276  0532  00A5               	movwf	??_displayDigit+5
  8277  0533  087C               	movf	displayDigit@D1+1,w
  8278  0534  1803               	skipnc
  8279  0535  3E01               	addlw	1
  8280  0536  00A6               	movwf	??_displayDigit+6
  8281  0537  0825               	movf	??_displayDigit+5,w
  8282  0538  0084               	movwf	4
  8283  0539  1783               	bsf	3,7
  8284  053A  1C26               	btfss	??_displayDigit+6,0
  8285  053B  1383               	bcf	3,7
  8286  053C  0800               	movf	0,w
  8287  053D  00A7               	movwf	??_displayDigit+7
  8288  053E  0A84               	incf	4,f
  8289  053F  0800               	movf	0,w
  8290  0540  00A8               	movwf	??_displayDigit+8
  8291  0541  0827               	movf	??_displayDigit+7,w
  8292  0542  0084               	movwf	4
  8293  0543  1783               	bsf	3,7
  8294  0544  1C28               	btfss	??_displayDigit+8,0
  8295  0545  1383               	bcf	3,7
  8296  0546  0823               	movf	??_displayDigit+3,w
  8297  0547  0480               	iorwf	0,f
  8298  0548  0A84               	incf	4,f
  8299  0549  0824               	movf	??_displayDigit+4,w
  8300  054A  0480               	iorwf	0,f
  8301                           
  8302                           ;lcd.c: 169: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  8303  054B  3012               	movlw	18
  8304  054C  077B               	addwf	displayDigit@D1,w
  8305  054D  00A0               	movwf	??_displayDigit
  8306  054E  087C               	movf	displayDigit@D1+1,w
  8307  054F  1803               	skipnc
  8308  0550  3E01               	addlw	1
  8309  0551  00A1               	movwf	??_displayDigit+1
  8310  0552  0820               	movf	??_displayDigit,w
  8311  0553  0084               	movwf	4
  8312  0554  1783               	bsf	3,7
  8313  0555  1C21               	btfss	??_displayDigit+1,0
  8314  0556  1383               	bcf	3,7
  8315  0557  0A00               	incf	0,w
  8316  0558  00A2               	movwf	??_displayDigit+2
  8317  0559  3001               	movlw	1
  8318  055A  00A3               	movwf	??_displayDigit+3
  8319  055B  3000               	movlw	0
  8320  055C  00A4               	movwf	??_displayDigit+4
  8321  055D  2D61               	goto	u2754
  8322  055E                     u2755:	
  8323  055E  1003               	clrc
  8324  055F  0DA3               	rlf	??_displayDigit+3,f
  8325  0560  0DA4               	rlf	??_displayDigit+4,f
  8326  0561                     u2754:	
  8327  0561  0BA2               	decfsz	??_displayDigit+2,f
  8328  0562  2D5E               	goto	u2755
  8329  0563  3004               	movlw	4
  8330  0564  077B               	addwf	displayDigit@D1,w
  8331  0565  00A5               	movwf	??_displayDigit+5
  8332  0566  087C               	movf	displayDigit@D1+1,w
  8333  0567  1803               	skipnc
  8334  0568  3E01               	addlw	1
  8335  0569  00A6               	movwf	??_displayDigit+6
  8336  056A  0825               	movf	??_displayDigit+5,w
  8337  056B  0084               	movwf	4
  8338  056C  1783               	bsf	3,7
  8339  056D  1C26               	btfss	??_displayDigit+6,0
  8340  056E  1383               	bcf	3,7
  8341  056F  0800               	movf	0,w
  8342  0570  00A7               	movwf	??_displayDigit+7
  8343  0571  0A84               	incf	4,f
  8344  0572  0800               	movf	0,w
  8345  0573  00A8               	movwf	??_displayDigit+8
  8346  0574  0827               	movf	??_displayDigit+7,w
  8347  0575  0084               	movwf	4
  8348  0576  1783               	bsf	3,7
  8349  0577  1C28               	btfss	??_displayDigit+8,0
  8350  0578  1383               	bcf	3,7
  8351  0579  0823               	movf	??_displayDigit+3,w
  8352  057A  0480               	iorwf	0,f
  8353  057B  0A84               	incf	4,f
  8354  057C  0824               	movf	??_displayDigit+4,w
  8355  057D  0480               	iorwf	0,f
  8356                           
  8357                           ;lcd.c: 170: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  8358  057E  3014               	movlw	20
  8359  057F  077B               	addwf	displayDigit@D1,w
  8360  0580  00A0               	movwf	??_displayDigit
  8361  0581  087C               	movf	displayDigit@D1+1,w
  8362  0582  1803               	skipnc
  8363  0583  3E01               	addlw	1
  8364  0584  00A1               	movwf	??_displayDigit+1
  8365  0585  0820               	movf	??_displayDigit,w
  8366  0586  0084               	movwf	4
  8367  0587  1783               	bsf	3,7
  8368  0588  1C21               	btfss	??_displayDigit+1,0
  8369  0589  1383               	bcf	3,7
  8370  058A  0A00               	incf	0,w
  8371  058B  00A2               	movwf	??_displayDigit+2
  8372  058C  3001               	movlw	1
  8373  058D  00A3               	movwf	??_displayDigit+3
  8374  058E  3000               	movlw	0
  8375  058F  00A4               	movwf	??_displayDigit+4
  8376  0590  2D94               	goto	u2764
  8377  0591                     u2765:	
  8378  0591  1003               	clrc
  8379  0592  0DA3               	rlf	??_displayDigit+3,f
  8380  0593  0DA4               	rlf	??_displayDigit+4,f
  8381  0594                     u2764:	
  8382  0594  0BA2               	decfsz	??_displayDigit+2,f
  8383  0595  2D91               	goto	u2765
  8384  0596  3006               	movlw	6
  8385  0597  077B               	addwf	displayDigit@D1,w
  8386  0598  00A5               	movwf	??_displayDigit+5
  8387  0599  087C               	movf	displayDigit@D1+1,w
  8388  059A  1803               	skipnc
  8389  059B  3E01               	addlw	1
  8390  059C  00A6               	movwf	??_displayDigit+6
  8391  059D  0825               	movf	??_displayDigit+5,w
  8392  059E  0084               	movwf	4
  8393  059F  1783               	bsf	3,7
  8394  05A0  1C26               	btfss	??_displayDigit+6,0
  8395  05A1  1383               	bcf	3,7
  8396  05A2  0800               	movf	0,w
  8397  05A3  00A7               	movwf	??_displayDigit+7
  8398  05A4  0A84               	incf	4,f
  8399  05A5  0800               	movf	0,w
  8400  05A6  00A8               	movwf	??_displayDigit+8
  8401  05A7  0827               	movf	??_displayDigit+7,w
  8402  05A8  0084               	movwf	4
  8403  05A9  1783               	bsf	3,7
  8404  05AA  1C28               	btfss	??_displayDigit+8,0
  8405  05AB  1383               	bcf	3,7
  8406  05AC  0823               	movf	??_displayDigit+3,w
  8407  05AD  0480               	iorwf	0,f
  8408  05AE  0A84               	incf	4,f
  8409  05AF  0824               	movf	??_displayDigit+4,w
  8410  05B0  0480               	iorwf	0,f
  8411                           
  8412                           ;lcd.c: 171: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  8413  05B1  3016               	movlw	22
  8414  05B2  077B               	addwf	displayDigit@D1,w
  8415  05B3  00A0               	movwf	??_displayDigit
  8416  05B4  087C               	movf	displayDigit@D1+1,w
  8417  05B5  1803               	skipnc
  8418  05B6  3E01               	addlw	1
  8419  05B7  00A1               	movwf	??_displayDigit+1
  8420  05B8  0820               	movf	??_displayDigit,w
  8421  05B9  0084               	movwf	4
  8422  05BA  1783               	bsf	3,7
  8423  05BB  1C21               	btfss	??_displayDigit+1,0
  8424  05BC  1383               	bcf	3,7
  8425  05BD  0A00               	incf	0,w
  8426  05BE  00A2               	movwf	??_displayDigit+2
  8427  05BF  3001               	movlw	1
  8428  05C0  00A3               	movwf	??_displayDigit+3
  8429  05C1  3000               	movlw	0
  8430  05C2  00A4               	movwf	??_displayDigit+4
  8431  05C3  2DC7               	goto	u2774
  8432  05C4                     u2775:	
  8433  05C4  1003               	clrc
  8434  05C5  0DA3               	rlf	??_displayDigit+3,f
  8435  05C6  0DA4               	rlf	??_displayDigit+4,f
  8436  05C7                     u2774:	
  8437  05C7  0BA2               	decfsz	??_displayDigit+2,f
  8438  05C8  2DC4               	goto	u2775
  8439  05C9  09A3               	comf	??_displayDigit+3,f
  8440  05CA  09A4               	comf	??_displayDigit+4,f
  8441  05CB  3008               	movlw	8
  8442  05CC  077B               	addwf	displayDigit@D1,w
  8443  05CD  00A5               	movwf	??_displayDigit+5
  8444  05CE  087C               	movf	displayDigit@D1+1,w
  8445  05CF  1803               	skipnc
  8446  05D0  3E01               	addlw	1
  8447  05D1  00A6               	movwf	??_displayDigit+6
  8448  05D2  0825               	movf	??_displayDigit+5,w
  8449  05D3  0084               	movwf	4
  8450  05D4  1783               	bsf	3,7
  8451  05D5  1C26               	btfss	??_displayDigit+6,0
  8452  05D6  1383               	bcf	3,7
  8453  05D7  0800               	movf	0,w
  8454  05D8  00A7               	movwf	??_displayDigit+7
  8455  05D9  0A84               	incf	4,f
  8456  05DA  0800               	movf	0,w
  8457  05DB  00A8               	movwf	??_displayDigit+8
  8458  05DC  0827               	movf	??_displayDigit+7,w
  8459  05DD  0084               	movwf	4
  8460  05DE  1783               	bsf	3,7
  8461  05DF  1C28               	btfss	??_displayDigit+8,0
  8462  05E0  1383               	bcf	3,7
  8463  05E1  0823               	movf	??_displayDigit+3,w
  8464  05E2  0580               	andwf	0,f
  8465  05E3  0A84               	incf	4,f
  8466  05E4  0824               	movf	??_displayDigit+4,w
  8467  05E5  0580               	andwf	0,f
  8468                           
  8469                           ;lcd.c: 172: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  8470  05E6  3018               	movlw	24
  8471  05E7  077B               	addwf	displayDigit@D1,w
  8472  05E8  00A0               	movwf	??_displayDigit
  8473  05E9  087C               	movf	displayDigit@D1+1,w
  8474  05EA  1803               	skipnc
  8475  05EB  3E01               	addlw	1
  8476  05EC  00A1               	movwf	??_displayDigit+1
  8477  05ED  0820               	movf	??_displayDigit,w
  8478  05EE  0084               	movwf	4
  8479  05EF  1783               	bsf	3,7
  8480  05F0  1C21               	btfss	??_displayDigit+1,0
  8481  05F1  1383               	bcf	3,7
  8482  05F2  0A00               	incf	0,w
  8483  05F3  00A2               	movwf	??_displayDigit+2
  8484  05F4  3001               	movlw	1
  8485  05F5  00A3               	movwf	??_displayDigit+3
  8486  05F6  3000               	movlw	0
  8487  05F7  00A4               	movwf	??_displayDigit+4
  8488  05F8  2DFC               	goto	u2784
  8489  05F9                     u2785:	
  8490  05F9  1003               	clrc
  8491  05FA  0DA3               	rlf	??_displayDigit+3,f
  8492  05FB  0DA4               	rlf	??_displayDigit+4,f
  8493  05FC                     u2784:	
  8494  05FC  0BA2               	decfsz	??_displayDigit+2,f
  8495  05FD  2DF9               	goto	u2785
  8496  05FE  300A               	movlw	10
  8497  05FF  077B               	addwf	displayDigit@D1,w
  8498  0600  00A5               	movwf	??_displayDigit+5
  8499  0601  087C               	movf	displayDigit@D1+1,w
  8500  0602  1803               	skipnc
  8501  0603  3E01               	addlw	1
  8502  0604  00A6               	movwf	??_displayDigit+6
  8503  0605  0825               	movf	??_displayDigit+5,w
  8504  0606  0084               	movwf	4
  8505  0607  1783               	bsf	3,7
  8506  0608  1C26               	btfss	??_displayDigit+6,0
  8507  0609  1383               	bcf	3,7
  8508  060A  0800               	movf	0,w
  8509  060B  00A7               	movwf	??_displayDigit+7
  8510  060C  0A84               	incf	4,f
  8511  060D  0800               	movf	0,w
  8512  060E  00A8               	movwf	??_displayDigit+8
  8513  060F  0827               	movf	??_displayDigit+7,w
  8514  0610  0084               	movwf	4
  8515  0611  1783               	bsf	3,7
  8516  0612  1C28               	btfss	??_displayDigit+8,0
  8517  0613  1383               	bcf	3,7
  8518  0614  0823               	movf	??_displayDigit+3,w
  8519  0615  0480               	iorwf	0,f
  8520  0616  0A84               	incf	4,f
  8521  0617  0824               	movf	??_displayDigit+4,w
  8522  0618  0480               	iorwf	0,f
  8523                           
  8524                           ;lcd.c: 173: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  8525  0619  301A               	movlw	26
  8526  061A  077B               	addwf	displayDigit@D1,w
  8527  061B  00A0               	movwf	??_displayDigit
  8528  061C  087C               	movf	displayDigit@D1+1,w
  8529  061D  1803               	skipnc
  8530  061E  3E01               	addlw	1
  8531  061F  00A1               	movwf	??_displayDigit+1
  8532  0620  0820               	movf	??_displayDigit,w
  8533  0621  0084               	movwf	4
  8534  0622  1783               	bsf	3,7
  8535  0623  1C21               	btfss	??_displayDigit+1,0
  8536  0624  1383               	bcf	3,7
  8537  0625  0A00               	incf	0,w
  8538  0626  00A2               	movwf	??_displayDigit+2
  8539  0627  3001               	movlw	1
  8540  0628  00A3               	movwf	??_displayDigit+3
  8541  0629  3000               	movlw	0
  8542  062A  00A4               	movwf	??_displayDigit+4
  8543  062B  2E2F               	goto	u2794
  8544  062C                     u2795:	
  8545  062C  1003               	clrc
  8546  062D  0DA3               	rlf	??_displayDigit+3,f
  8547  062E  0DA4               	rlf	??_displayDigit+4,f
  8548  062F                     u2794:	
  8549  062F  0BA2               	decfsz	??_displayDigit+2,f
  8550  0630  2E2C               	goto	u2795
  8551  0631  300C               	movlw	12
  8552  0632  077B               	addwf	displayDigit@D1,w
  8553  0633  00A5               	movwf	??_displayDigit+5
  8554  0634  087C               	movf	displayDigit@D1+1,w
  8555  0635  1803               	skipnc
  8556  0636  3E01               	addlw	1
  8557  0637  00A6               	movwf	??_displayDigit+6
  8558  0638  0825               	movf	??_displayDigit+5,w
  8559  0639  0084               	movwf	4
  8560  063A  1783               	bsf	3,7
  8561  063B  1C26               	btfss	??_displayDigit+6,0
  8562  063C  1383               	bcf	3,7
  8563  063D  0800               	movf	0,w
  8564  063E  00A7               	movwf	??_displayDigit+7
  8565  063F  0A84               	incf	4,f
  8566  0640  0800               	movf	0,w
  8567  0641  00A8               	movwf	??_displayDigit+8
  8568  0642  0827               	movf	??_displayDigit+7,w
  8569  0643  0084               	movwf	4
  8570  0644  1783               	bsf	3,7
  8571  0645  1C28               	btfss	??_displayDigit+8,0
  8572  0646  1383               	bcf	3,7
  8573  0647  0823               	movf	??_displayDigit+3,w
  8574  0648  0480               	iorwf	0,f
  8575  0649  0A84               	incf	4,f
  8576  064A  0824               	movf	??_displayDigit+4,w
  8577  064B  0480               	iorwf	0,f
  8578                           
  8579                           ;lcd.c: 174: break;
  8580  064C  0008               	return
  8581  064D                     l1369:	
  8582                           ;lcd.c: 175: case 'C':
  8583                           
  8584                           
  8585                           ;lcd.c: 176: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  8586  064D  300E               	movlw	14
  8587  064E  077B               	addwf	displayDigit@D1,w
  8588  064F  1283               	bcf	3,5	;RP0=0, select bank0
  8589  0650  1303               	bcf	3,6	;RP1=0, select bank0
  8590  0651  00A0               	movwf	??_displayDigit
  8591  0652  087C               	movf	displayDigit@D1+1,w
  8592  0653  1803               	skipnc
  8593  0654  3E01               	addlw	1
  8594  0655  00A1               	movwf	??_displayDigit+1
  8595  0656  0820               	movf	??_displayDigit,w
  8596  0657  0084               	movwf	4
  8597  0658  1783               	bsf	3,7
  8598  0659  1C21               	btfss	??_displayDigit+1,0
  8599  065A  1383               	bcf	3,7
  8600  065B  0A00               	incf	0,w
  8601  065C  00A2               	movwf	??_displayDigit+2
  8602  065D  3001               	movlw	1
  8603  065E  00A3               	movwf	??_displayDigit+3
  8604  065F  3000               	movlw	0
  8605  0660  00A4               	movwf	??_displayDigit+4
  8606  0661  2E65               	goto	u2804
  8607  0662                     u2805:	
  8608  0662  1003               	clrc
  8609  0663  0DA3               	rlf	??_displayDigit+3,f
  8610  0664  0DA4               	rlf	??_displayDigit+4,f
  8611  0665                     u2804:	
  8612  0665  0BA2               	decfsz	??_displayDigit+2,f
  8613  0666  2E62               	goto	u2805
  8614  0667  087B               	movf	displayDigit@D1,w
  8615  0668  0084               	movwf	4
  8616  0669  1783               	bsf	3,7
  8617  066A  1C7C               	btfss	displayDigit@D1+1,0
  8618  066B  1383               	bcf	3,7
  8619  066C  0800               	movf	0,w
  8620  066D  00A5               	movwf	??_displayDigit+5
  8621  066E  0A84               	incf	4,f
  8622  066F  0800               	movf	0,w
  8623  0670  00A6               	movwf	??_displayDigit+6
  8624  0671  0825               	movf	??_displayDigit+5,w
  8625  0672  0084               	movwf	4
  8626  0673  1783               	bsf	3,7
  8627  0674  1C26               	btfss	??_displayDigit+6,0
  8628  0675  1383               	bcf	3,7
  8629  0676  0823               	movf	??_displayDigit+3,w
  8630  0677  0480               	iorwf	0,f
  8631  0678  0A84               	incf	4,f
  8632  0679  0824               	movf	??_displayDigit+4,w
  8633  067A  0480               	iorwf	0,f
  8634                           
  8635                           ;lcd.c: 177: ((*D1->sb) &= ~((1UL) << (D1->bits[1])));
  8636  067B  3010               	movlw	16
  8637  067C  077B               	addwf	displayDigit@D1,w
  8638  067D  00A0               	movwf	??_displayDigit
  8639  067E  087C               	movf	displayDigit@D1+1,w
  8640  067F  1803               	skipnc
  8641  0680  3E01               	addlw	1
  8642  0681  00A1               	movwf	??_displayDigit+1
  8643  0682  0820               	movf	??_displayDigit,w
  8644  0683  0084               	movwf	4
  8645  0684  1783               	bsf	3,7
  8646  0685  1C21               	btfss	??_displayDigit+1,0
  8647  0686  1383               	bcf	3,7
  8648  0687  0A00               	incf	0,w
  8649  0688  00A2               	movwf	??_displayDigit+2
  8650  0689  3001               	movlw	1
  8651  068A  00A3               	movwf	??_displayDigit+3
  8652  068B  3000               	movlw	0
  8653  068C  00A4               	movwf	??_displayDigit+4
  8654  068D  2E91               	goto	u2814
  8655  068E                     u2815:	
  8656  068E  1003               	clrc
  8657  068F  0DA3               	rlf	??_displayDigit+3,f
  8658  0690  0DA4               	rlf	??_displayDigit+4,f
  8659  0691                     u2814:	
  8660  0691  0BA2               	decfsz	??_displayDigit+2,f
  8661  0692  2E8E               	goto	u2815
  8662  0693  09A3               	comf	??_displayDigit+3,f
  8663  0694  09A4               	comf	??_displayDigit+4,f
  8664  0695  3002               	movlw	2
  8665  0696  077B               	addwf	displayDigit@D1,w
  8666  0697  00A5               	movwf	??_displayDigit+5
  8667  0698  087C               	movf	displayDigit@D1+1,w
  8668  0699  1803               	skipnc
  8669  069A  3E01               	addlw	1
  8670  069B  00A6               	movwf	??_displayDigit+6
  8671  069C  0825               	movf	??_displayDigit+5,w
  8672  069D  0084               	movwf	4
  8673  069E  1783               	bsf	3,7
  8674  069F  1C26               	btfss	??_displayDigit+6,0
  8675  06A0  1383               	bcf	3,7
  8676  06A1  0800               	movf	0,w
  8677  06A2  00A7               	movwf	??_displayDigit+7
  8678  06A3  0A84               	incf	4,f
  8679  06A4  0800               	movf	0,w
  8680  06A5  00A8               	movwf	??_displayDigit+8
  8681  06A6  0827               	movf	??_displayDigit+7,w
  8682  06A7  0084               	movwf	4
  8683  06A8  1783               	bsf	3,7
  8684  06A9  1C28               	btfss	??_displayDigit+8,0
  8685  06AA  1383               	bcf	3,7
  8686  06AB  0823               	movf	??_displayDigit+3,w
  8687  06AC  0580               	andwf	0,f
  8688  06AD  0A84               	incf	4,f
  8689  06AE  0824               	movf	??_displayDigit+4,w
  8690  06AF  0580               	andwf	0,f
  8691                           
  8692                           ;lcd.c: 178: ((*D1->sc) &= ~((1UL) << (D1->bits[2])));
  8693  06B0  3012               	movlw	18
  8694  06B1  077B               	addwf	displayDigit@D1,w
  8695  06B2  00A0               	movwf	??_displayDigit
  8696  06B3  087C               	movf	displayDigit@D1+1,w
  8697  06B4  1803               	skipnc
  8698  06B5  3E01               	addlw	1
  8699  06B6  00A1               	movwf	??_displayDigit+1
  8700  06B7  0820               	movf	??_displayDigit,w
  8701  06B8  0084               	movwf	4
  8702  06B9  1783               	bsf	3,7
  8703  06BA  1C21               	btfss	??_displayDigit+1,0
  8704  06BB  1383               	bcf	3,7
  8705  06BC  0A00               	incf	0,w
  8706  06BD  00A2               	movwf	??_displayDigit+2
  8707  06BE  3001               	movlw	1
  8708  06BF  00A3               	movwf	??_displayDigit+3
  8709  06C0  3000               	movlw	0
  8710  06C1  00A4               	movwf	??_displayDigit+4
  8711  06C2  2EC6               	goto	u2824
  8712  06C3                     u2825:	
  8713  06C3  1003               	clrc
  8714  06C4  0DA3               	rlf	??_displayDigit+3,f
  8715  06C5  0DA4               	rlf	??_displayDigit+4,f
  8716  06C6                     u2824:	
  8717  06C6  0BA2               	decfsz	??_displayDigit+2,f
  8718  06C7  2EC3               	goto	u2825
  8719  06C8  09A3               	comf	??_displayDigit+3,f
  8720  06C9  09A4               	comf	??_displayDigit+4,f
  8721  06CA  3004               	movlw	4
  8722  06CB  077B               	addwf	displayDigit@D1,w
  8723  06CC  00A5               	movwf	??_displayDigit+5
  8724  06CD  087C               	movf	displayDigit@D1+1,w
  8725  06CE  1803               	skipnc
  8726  06CF  3E01               	addlw	1
  8727  06D0  00A6               	movwf	??_displayDigit+6
  8728  06D1  0825               	movf	??_displayDigit+5,w
  8729  06D2  0084               	movwf	4
  8730  06D3  1783               	bsf	3,7
  8731  06D4  1C26               	btfss	??_displayDigit+6,0
  8732  06D5  1383               	bcf	3,7
  8733  06D6  0800               	movf	0,w
  8734  06D7  00A7               	movwf	??_displayDigit+7
  8735  06D8  0A84               	incf	4,f
  8736  06D9  0800               	movf	0,w
  8737  06DA  00A8               	movwf	??_displayDigit+8
  8738  06DB  0827               	movf	??_displayDigit+7,w
  8739  06DC  0084               	movwf	4
  8740  06DD  1783               	bsf	3,7
  8741  06DE  1C28               	btfss	??_displayDigit+8,0
  8742  06DF  1383               	bcf	3,7
  8743  06E0  0823               	movf	??_displayDigit+3,w
  8744  06E1  0580               	andwf	0,f
  8745  06E2  0A84               	incf	4,f
  8746  06E3  0824               	movf	??_displayDigit+4,w
  8747  06E4  0580               	andwf	0,f
  8748                           
  8749                           ;lcd.c: 179: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  8750  06E5  3014               	movlw	20
  8751  06E6  077B               	addwf	displayDigit@D1,w
  8752  06E7  00A0               	movwf	??_displayDigit
  8753  06E8  087C               	movf	displayDigit@D1+1,w
  8754  06E9  1803               	skipnc
  8755  06EA  3E01               	addlw	1
  8756  06EB  00A1               	movwf	??_displayDigit+1
  8757  06EC  0820               	movf	??_displayDigit,w
  8758  06ED  0084               	movwf	4
  8759  06EE  1783               	bsf	3,7
  8760  06EF  1C21               	btfss	??_displayDigit+1,0
  8761  06F0  1383               	bcf	3,7
  8762  06F1  0A00               	incf	0,w
  8763  06F2  00A2               	movwf	??_displayDigit+2
  8764  06F3  3001               	movlw	1
  8765  06F4  00A3               	movwf	??_displayDigit+3
  8766  06F5  3000               	movlw	0
  8767  06F6  00A4               	movwf	??_displayDigit+4
  8768  06F7  2EFB               	goto	u2834
  8769  06F8                     u2835:	
  8770  06F8  1003               	clrc
  8771  06F9  0DA3               	rlf	??_displayDigit+3,f
  8772  06FA  0DA4               	rlf	??_displayDigit+4,f
  8773  06FB                     u2834:	
  8774  06FB  0BA2               	decfsz	??_displayDigit+2,f
  8775  06FC  2EF8               	goto	u2835
  8776  06FD  3006               	movlw	6
  8777  06FE  077B               	addwf	displayDigit@D1,w
  8778  06FF  00A5               	movwf	??_displayDigit+5
  8779  0700  087C               	movf	displayDigit@D1+1,w
  8780  0701  1803               	skipnc
  8781  0702  3E01               	addlw	1
  8782  0703  00A6               	movwf	??_displayDigit+6
  8783  0704  0825               	movf	??_displayDigit+5,w
  8784  0705  0084               	movwf	4
  8785  0706  1783               	bsf	3,7
  8786  0707  1C26               	btfss	??_displayDigit+6,0
  8787  0708  1383               	bcf	3,7
  8788  0709  0800               	movf	0,w
  8789  070A  00A7               	movwf	??_displayDigit+7
  8790  070B  0A84               	incf	4,f
  8791  070C  0800               	movf	0,w
  8792  070D  00A8               	movwf	??_displayDigit+8
  8793  070E  0827               	movf	??_displayDigit+7,w
  8794  070F  0084               	movwf	4
  8795  0710  1783               	bsf	3,7
  8796  0711  1C28               	btfss	??_displayDigit+8,0
  8797  0712  1383               	bcf	3,7
  8798  0713  0823               	movf	??_displayDigit+3,w
  8799  0714  0480               	iorwf	0,f
  8800  0715  0A84               	incf	4,f
  8801  0716  0824               	movf	??_displayDigit+4,w
  8802  0717  0480               	iorwf	0,f
  8803                           
  8804                           ;lcd.c: 180: ((*D1->se) |= (1UL) << (D1->bits[4]));
  8805  0718  3016               	movlw	22
  8806  0719  077B               	addwf	displayDigit@D1,w
  8807  071A  00A0               	movwf	??_displayDigit
  8808  071B  087C               	movf	displayDigit@D1+1,w
  8809  071C  1803               	skipnc
  8810  071D  3E01               	addlw	1
  8811  071E  00A1               	movwf	??_displayDigit+1
  8812  071F  0820               	movf	??_displayDigit,w
  8813  0720  0084               	movwf	4
  8814  0721  1783               	bsf	3,7
  8815  0722  1C21               	btfss	??_displayDigit+1,0
  8816  0723  1383               	bcf	3,7
  8817  0724  0A00               	incf	0,w
  8818  0725  00A2               	movwf	??_displayDigit+2
  8819  0726  3001               	movlw	1
  8820  0727  00A3               	movwf	??_displayDigit+3
  8821  0728  3000               	movlw	0
  8822  0729  00A4               	movwf	??_displayDigit+4
  8823  072A  2F2E               	goto	u2844
  8824  072B                     u2845:	
  8825  072B  1003               	clrc
  8826  072C  0DA3               	rlf	??_displayDigit+3,f
  8827  072D  0DA4               	rlf	??_displayDigit+4,f
  8828  072E                     u2844:	
  8829  072E  0BA2               	decfsz	??_displayDigit+2,f
  8830  072F  2F2B               	goto	u2845
  8831  0730  3008               	movlw	8
  8832  0731  077B               	addwf	displayDigit@D1,w
  8833  0732  00A5               	movwf	??_displayDigit+5
  8834  0733  087C               	movf	displayDigit@D1+1,w
  8835  0734  1803               	skipnc
  8836  0735  3E01               	addlw	1
  8837  0736  00A6               	movwf	??_displayDigit+6
  8838  0737  0825               	movf	??_displayDigit+5,w
  8839  0738  0084               	movwf	4
  8840  0739  1783               	bsf	3,7
  8841  073A  1C26               	btfss	??_displayDigit+6,0
  8842  073B  1383               	bcf	3,7
  8843  073C  0800               	movf	0,w
  8844  073D  00A7               	movwf	??_displayDigit+7
  8845  073E  0A84               	incf	4,f
  8846  073F  0800               	movf	0,w
  8847  0740  00A8               	movwf	??_displayDigit+8
  8848  0741  0827               	movf	??_displayDigit+7,w
  8849  0742  0084               	movwf	4
  8850  0743  1783               	bsf	3,7
  8851  0744  1C28               	btfss	??_displayDigit+8,0
  8852  0745  1383               	bcf	3,7
  8853  0746  0823               	movf	??_displayDigit+3,w
  8854  0747  0480               	iorwf	0,f
  8855  0748  0A84               	incf	4,f
  8856  0749  0824               	movf	??_displayDigit+4,w
  8857  074A  0480               	iorwf	0,f
  8858                           
  8859                           ;lcd.c: 181: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  8860  074B  3018               	movlw	24
  8861  074C  077B               	addwf	displayDigit@D1,w
  8862  074D  00A0               	movwf	??_displayDigit
  8863  074E  087C               	movf	displayDigit@D1+1,w
  8864  074F  1803               	skipnc
  8865  0750  3E01               	addlw	1
  8866  0751  00A1               	movwf	??_displayDigit+1
  8867  0752  0820               	movf	??_displayDigit,w
  8868  0753  0084               	movwf	4
  8869  0754  1783               	bsf	3,7
  8870  0755  1C21               	btfss	??_displayDigit+1,0
  8871  0756  1383               	bcf	3,7
  8872  0757  0A00               	incf	0,w
  8873  0758  00A2               	movwf	??_displayDigit+2
  8874  0759  3001               	movlw	1
  8875  075A  00A3               	movwf	??_displayDigit+3
  8876  075B  3000               	movlw	0
  8877  075C  00A4               	movwf	??_displayDigit+4
  8878  075D  2F61               	goto	u2854
  8879  075E                     u2855:	
  8880  075E  1003               	clrc
  8881  075F  0DA3               	rlf	??_displayDigit+3,f
  8882  0760  0DA4               	rlf	??_displayDigit+4,f
  8883  0761                     u2854:	
  8884  0761  0BA2               	decfsz	??_displayDigit+2,f
  8885  0762  2F5E               	goto	u2855
  8886  0763  300A               	movlw	10
  8887  0764  077B               	addwf	displayDigit@D1,w
  8888  0765  00A5               	movwf	??_displayDigit+5
  8889  0766  087C               	movf	displayDigit@D1+1,w
  8890  0767  1803               	skipnc
  8891  0768  3E01               	addlw	1
  8892  0769  00A6               	movwf	??_displayDigit+6
  8893  076A  0825               	movf	??_displayDigit+5,w
  8894  076B  0084               	movwf	4
  8895  076C  1783               	bsf	3,7
  8896  076D  1C26               	btfss	??_displayDigit+6,0
  8897  076E  1383               	bcf	3,7
  8898  076F  0800               	movf	0,w
  8899  0770  00A7               	movwf	??_displayDigit+7
  8900  0771  0A84               	incf	4,f
  8901  0772  0800               	movf	0,w
  8902  0773  00A8               	movwf	??_displayDigit+8
  8903  0774  0827               	movf	??_displayDigit+7,w
  8904  0775  0084               	movwf	4
  8905  0776  1783               	bsf	3,7
  8906  0777  1C28               	btfss	??_displayDigit+8,0
  8907  0778  1383               	bcf	3,7
  8908  0779  0823               	movf	??_displayDigit+3,w
  8909  077A  0480               	iorwf	0,f
  8910  077B  0A84               	incf	4,f
  8911  077C  0824               	movf	??_displayDigit+4,w
  8912  077D  0480               	iorwf	0,f
  8913                           
  8914                           ;lcd.c: 182: ((*D1->sg) &= ~((1UL) << (D1->bits[6])));
  8915  077E  301A               	movlw	26
  8916  077F  077B               	addwf	displayDigit@D1,w
  8917  0780  00A0               	movwf	??_displayDigit
  8918  0781  087C               	movf	displayDigit@D1+1,w
  8919  0782  1803               	skipnc
  8920  0783  3E01               	addlw	1
  8921  0784  00A1               	movwf	??_displayDigit+1
  8922  0785  0820               	movf	??_displayDigit,w
  8923  0786  0084               	movwf	4
  8924  0787  1783               	bsf	3,7
  8925  0788  1C21               	btfss	??_displayDigit+1,0
  8926  0789  1383               	bcf	3,7
  8927  078A  0A00               	incf	0,w
  8928  078B  00A2               	movwf	??_displayDigit+2
  8929  078C  3001               	movlw	1
  8930  078D  00A3               	movwf	??_displayDigit+3
  8931  078E  3000               	movlw	0
  8932  078F  00A4               	movwf	??_displayDigit+4
  8933  0790  2F94               	goto	u2864
  8934  0791                     u2865:	
  8935  0791  1003               	clrc
  8936  0792  0DA3               	rlf	??_displayDigit+3,f
  8937  0793  0DA4               	rlf	??_displayDigit+4,f
  8938  0794                     u2864:	
  8939  0794  0BA2               	decfsz	??_displayDigit+2,f
  8940  0795  2F91               	goto	u2865
  8941  0796  09A3               	comf	??_displayDigit+3,f
  8942  0797  09A4               	comf	??_displayDigit+4,f
  8943  0798  300C               	movlw	12
  8944  0799  077B               	addwf	displayDigit@D1,w
  8945  079A  00A5               	movwf	??_displayDigit+5
  8946  079B  087C               	movf	displayDigit@D1+1,w
  8947  079C  1803               	skipnc
  8948  079D  3E01               	addlw	1
  8949  079E  00A6               	movwf	??_displayDigit+6
  8950  079F  0825               	movf	??_displayDigit+5,w
  8951  07A0  0084               	movwf	4
  8952  07A1  1783               	bsf	3,7
  8953  07A2  1C26               	btfss	??_displayDigit+6,0
  8954  07A3  1383               	bcf	3,7
  8955  07A4  0800               	movf	0,w
  8956  07A5  00A7               	movwf	??_displayDigit+7
  8957  07A6  0A84               	incf	4,f
  8958  07A7  0800               	movf	0,w
  8959  07A8  00A8               	movwf	??_displayDigit+8
  8960  07A9  0827               	movf	??_displayDigit+7,w
  8961  07AA  0084               	movwf	4
  8962  07AB  1783               	bsf	3,7
  8963  07AC  1C28               	btfss	??_displayDigit+8,0
  8964  07AD  1383               	bcf	3,7
  8965  07AE  0823               	movf	??_displayDigit+3,w
  8966  07AF  0580               	andwf	0,f
  8967  07B0  0A84               	incf	4,f
  8968  07B1  0824               	movf	??_displayDigit+4,w
  8969  07B2  0580               	andwf	0,f
  8970                           
  8971                           ;lcd.c: 184: }
  8972                           
  8973                           ;lcd.c: 183: break;
  8974  07B3  0008               	return
  8975  07B4                     l1373:	
  8976                           
  8977                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8978                           ; Switch size 1, requested type "space"
  8979                           ; Number of cases is 1, Range of values is 0 to 0
  8980                           ; switch strategies available:
  8981                           ; Name         Instructions Cycles
  8982                           ; simple_byte            4     3 (average)
  8983                           ; direct_byte           11     8 (fixed)
  8984                           ; jumptable            260     6 (fixed)
  8985                           ;	Chosen strategy is simple_byte
  8986  07B4  087A               	movf	displayDigit@digito+1,w
  8987  07B5  3A00               	xorlw	0	; case 0
  8988  07B6  1903               	skipnz
  8989  07B7  2FB9               	goto	l1921
  8990  07B8  2FDC               	goto	l166
  8991  07B9                     l1921:	
  8992                           
  8993                           ; Switch size 1, requested type "space"
  8994                           ; Number of cases is 11, Range of values is 0 to 67
  8995                           ; switch strategies available:
  8996                           ; Name         Instructions Cycles
  8997                           ; simple_byte           34    18 (average)
  8998                           ; direct_byte          212     8 (fixed)
  8999                           ; jumptable            260     6 (fixed)
  9000                           ;	Chosen strategy is simple_byte
  9001  07B9  0879               	movf	displayDigit@digito,w
  9002  07BA  3A00               	xorlw	0	; case 0
  9003  07BB  1903               	skipnz
  9004  07BC  2FDD               	goto	L1
  9005  07BD  3A01               	xorlw	1	; case 1
  9006  07BE  1903               	skipnz
  9007  07BF  2FE0               	goto	L3
  9008  07C0  3A03               	xorlw	3	; case 2
  9009  07C1  1903               	skipnz
  9010  07C2  2FE3               	goto	L5
  9011  07C3  3A01               	xorlw	1	; case 3
  9012  07C4  1903               	skipnz
  9013  07C5  2FE6               	goto	L7
  9014  07C6  3A07               	xorlw	7	; case 4
  9015  07C7  1903               	skipnz
  9016  07C8  2FE9               	goto	L9
  9017  07C9  3A01               	xorlw	1	; case 5
  9018  07CA  1903               	skipnz
  9019  07CB  2FEC               	goto	L11
  9020  07CC  3A03               	xorlw	3	; case 6
  9021  07CD  1903               	skipnz
  9022  07CE  28BD               	goto	l1361
  9023  07CF  3A01               	xorlw	1	; case 7
  9024  07D0  1903               	skipnz
  9025  07D1  2A20               	goto	l1363
  9026  07D2  3A0F               	xorlw	15	; case 8
  9027  07D3  1903               	skipnz
  9028  07D4  2B89               	goto	l1365
  9029  07D5  3A01               	xorlw	1	; case 9
  9030  07D6  1903               	skipnz
  9031  07D7  2CEA               	goto	l1367
  9032  07D8  3A4A               	xorlw	74	; case 67
  9033  07D9  1903               	skipnz
  9034  07DA  2E4D               	goto	l1369
  9035  07DB  2FDC               	goto	l166
  9036  07DC                     l166:	
  9037  07DC  0008               	return
  9038  07DD                     L1:	
  9039  07DD                     __end_of_displayDigit:	
  9040  07DD  160A  118A  2EF1   	ljmp	l1349
  9041  07E0                     L3:	
  9042  07E0                     L2:	
  9043  07E0  120A  158A  2D66   	ljmp	l1351
  9044  07E3                     L5:	
  9045  07E3                     L4:	
  9046  07E3  160A  118A  2DDD   	ljmp	l1353
  9047  07E6                     L7:	
  9048  07E6                     L6:	
  9049  07E6  120A  158A  2B01   	ljmp	l1355
  9050  07E9                     L9:	
  9051  07E9                     L8:	
  9052  07E9  120A  158A  2864   	ljmp	l1357
  9053  07EC                     L11:	
  9054  07EC                     L10:	
  9055  07EC  120A  158A  29CD   	ljmp	l1359


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         11
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     58      78
    BANK3            96     28      28
    BANK2            80      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 33
		 -> main@str(BANK0[33]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 0

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 33
		 -> main@str(BANK0[33]), 

    displayDigit@D1.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    displayDigit@D1.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    displayDigit@D1.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    displayDigit@D1.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    displayDigit@D1.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    displayDigit@D1.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    displayDigit@D1.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    displayDigit@D1	PTR struct . size(2) Largest target is 28
		 -> main@D3(BANK3[28]), main@D2(BANK1[28]), main@D1(BANK1[28]), 

    displayNumber@D1	PTR struct . size(1) Largest target is 28
		 -> main@D1(BANK1[28]), 

    displayNumber@D2	PTR struct . size(1) Largest target is 28
		 -> main@D2(BANK1[28]), 

    displayNumber@D3	PTR struct . size(1) Largest target is 28
		 -> main@D3(BANK3[28]), 

    LCD_mapping@D3.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D3.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D3.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D3.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    LCD_mapping@D3.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D3.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D3.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D3	PTR struct . size(1) Largest target is 28
		 -> main@D3(BANK3[28]), 

    LCD_mapping@D2.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D2.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D2.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D2.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    LCD_mapping@D2.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D2.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D2.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D2	PTR struct . size(1) Largest target is 28
		 -> main@D2(BANK1[28]), 

    LCD_mapping@D1.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D1.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D1.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D1.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    LCD_mapping@D1.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D1.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D1.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D1	PTR struct . size(1) Largest target is 28
		 -> main@D1(BANK1[28]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 33
		 -> main@str(BANK0[33]), 

    D3.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    D3.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    D3.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    D3.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    D3.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    D3.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    D3.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    D2.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    D2.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    D2.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    D2.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    D2.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    D2.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    D2.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    S20$sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    D1.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    S20$sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    D1.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    S20$se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    D1.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    S20$sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    D1.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    S20$sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    D1.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    S20$sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    D1.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    S20$sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    D1.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 


Critical Paths under _main in COMMON

    _utoa->___lwdiv
    _displayNumber->_displayDigit
    _displayDigit->___awdiv
    _UART_Write_Text->_UART_Write
    _UART_Init->___aldiv
    _PID->___awtoft
    _PID->___fttol
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_PID
    _displayNumber->_displayDigit
    _UART_Init->___aldiv
    _PID->___ftadd
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               125   125      0   16500
                                             41 BANK0     39    39      0
                                              0 BANK1     58    58      0
                                              0 BANK3     28    28      0
                           _LCD_init
                        _LCD_mapping
                                _PID
                           _PID_init
                          _UART_Init
                         _UART_Write
                    _UART_Write_Text
                      _displayNumber
                               _utoa
 ---------------------------------------------------------------------------------
 (1) _utoa                                                 9     5      4    1181
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _displayNumber                                        5     0      5    5138
                                              9 BANK0      5     0      5
                            ___awdiv
                            ___awmod
                       _displayDigit
 ---------------------------------------------------------------------------------
 (2) _displayDigit                                        13     9      4    3728
                                              9 COMMON     4     0      4
                                              0 BANK0      9     9      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     508
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     512
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      4     4      0     139
                                              1 COMMON     4     4      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     526
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _PID_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PID                                                 12     8      4    7619
                                             29 BANK0     12     8      4
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2312
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    2800
                                             16 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1918
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _LCD_mapping                                          5     3      2    1057
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
   _LCD_mapping
   _PID
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
   _PID_init
   _UART_Init
     ___aldiv
   _UART_Write
   _UART_Write_Text
     _UART_Write
   _displayNumber
     ___awdiv
     ___awmod
     _displayDigit
       ___awdiv (ARG)
   _utoa
     ___lwdiv
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50     50      50       4      100.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50     3A      4E       6       97.5%
BITBANK3            60      0       0       7        0.0%
BANK3               60     1C      1C       8       29.2%
BANK2               50      0       0       9        0.0%
ABS                  0      0      C8      10        0.0%
BITBANK2            50      0       0      11        0.0%
DATA                 0      0      C8      12        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sun Oct 22 21:26:13 2017

                       _D 00DD                         _I 00DF                         _P 00E1  
             __CFG_CP$OFF 0000              ___awdiv@sign 0076                        _kd 00E8  
                      _ki 00EB                        _kp 00E5             ?_displayDigit 0079  
            ___ftadd@exp1 003C              ___ftadd@exp2 003B              ___ftadd@sign 003A  
                     l350 1284                       l166 07DC                       l196 000A  
                     l463 1EFF                       l464 1F07                       l456 1EEA  
                     l562 1F76                       l547 11CB                       l487 157C  
                     _RC5 003D                       _RD7 0047                       _PR2 0092  
                     _PID 0BDD              __CFG_CPD$OFF 0000                       fsr0 0004  
                     indf 0000              ___awmod@sign 0076              __CFG_IESO$ON 0000  
          ?_displayNumber 0029                      ?_PID 003D                      l1321 1ECF  
                    l1331 1EF9                      l1323 1ED4                      l1315 1EBC  
                    l1411 12EA                      l1319 1EC3                      l1415 12F8  
                    l1407 12DD                      l1351 0D66                      l1329 1EEF  
                    l1433 0820                      l1361 00BD                      l1353 15DD  
                    l1523 1504                      l1611 137E                      l1451 084C  
                    l1443 0828                      l1427 0815                      l1363 0220  
                    l1355 0B01                      l1509 001D                      l1541 152D  
                    l1445 0836                      l1365 0389                      l1357 0864  
                    l1349 16F1                      l1373 07B4                      l1551 1553  
                    l1519 14FD                      l1623 13A6                      l1607 136E  
                    l1455 0857                      l1471 1018                      l1367 04EA  
                    l1359 09CD                      l1711 1E5A                      l1561 1578  
                    l1553 1557                      l1529 1513                      l1369 064D  
                    l1547 1542                      l1619 1396                      l1459 085F  
                    l1483 1025                      l1475 101F                      l1715 1E68  
                    l1565 158E                      l1549 154E                      l1397 12A5  
                    l1389 1295                      l1485 1033                      l1493 104C  
                    l1709 1E4C                      l1813 1F27                      l1559 156C  
                    l1671 11DC                      l1639 1171                      l1399 12B5  
                    l1719 1E73                      l1823 1F48                      l1569 15A0  
                    l1665 11C0                      l1657 11A3                      l1497 1054  
                    l1489 1041                      l1921 07B9                      l1579 15C3  
                    l1595 132F                      l1667 11CE                      l1659 11B3  
                    l1589 1319                      l1749 0D08                      l1693 1EA4  
                    l1685 1E80                      l1847 1E2A                      l1687 1E8E  
                    l1697 1EAF                      l1883 1462                      _BRGH 04C2  
                    _CREN 00C4                      u2015 1EE3                      u2104 1709  
                    u2105 1706                      u2114 1735                      u2035 1EF2  
                    u2115 1732                      u2204 0E12                      u2124 1768  
                    u3005 082B                      u2205 0E0F                      u2125 1765  
                    u2214 11E8                      u2134 179B                      u2215 11E5  
                    u2135 1798                      u2304 0AE3                      u2224 121D  
                    u2144 17CE                      u3025 0837                      u3105 1028  
                    u2305 0AE0                      u2225 121A                      u2145 17CB  
                    u2314 0B19                      u2234 1252                      u2154 0D13  
                    u2075 1F0E                      u3035 0843                      u2315 0B16  
                    u2235 124F                      u2155 0D10                      u2404 08DD  
                    u2324 0B45                      u2244 15F5                      u2164 0D46  
                    u3045 084D                      u3125 1039                      u2405 08DA  
                    u2325 0B42                      u2245 15F2                      u2165 0D43  
                    u2414 0910                      u2334 0B78                      u2254 1621  
                    u2174 0D7E                      u3135 1042                      u2415 090D  
                    u2335 0B75                      u2255 161E                      u2175 0D7B  
                    u2504 006C                      u2424 0945                      u2344 0BAB  
                    u2264 1654                      u2184 0DAC                      u2505 0069  
                    u2425 0942                      u2345 0BA8                      u2265 1651  
                    u2185 0DA9                      u2514 009F                      u2434 097C  
                    u2354 10D1                      u2274 1689                      u2194 0DDF  
                    u2515 009C                      u2435 0979                      u2355 10CE  
                    u2275 1686                      u2195 0DDC                      u2604 0264  
                    u2524 00D5                      u2444 09AF                      u2364 1106  
                    u2284 16BC                      u3325 1558                      u2605 0261  
                    u2525 00D2                      u2445 09AC                      u2365 1103  
                    u2285 16B9                      u2614 0297                      u2534 0101  
                    u2454 09E5                      u2374 113B                      u2294 0AAE  
                    u2615 0294                      u2535 00FE                      u2455 09E2  
                    u2375 1138                      u2295 0AAB                      u2704 0466  
                    u2624 02CA                      u2544 0136                      u2464 0A11  
                    u2384 087C                      u3265 152E                      u2705 0463  
                    u2625 02C7                      u2545 0133                      u2465 0A0E  
                    u2385 0879                      u2714 0499                      u2634 02FF  
                    u2554 0169                      u2474 0A46                      u2394 08AA  
                    u3355 156D                      u3435 133B                      u2715 0496  
                    u2635 02FC                      u2555 0166                      u2475 0A43  
                    u2395 08A7                      u2804 0665                      u2724 04CC  
                    u2644 0334                      u2564 019C                      u2484 0A79  
                    u3525 13A7                      u3445 134D                      u2805 0662  
                    u2725 04C9                      u2645 0331                      u2565 0199  
                    u2485 0A76                      u2814 0691                      u2734 0502  
                    u2654 0369                      u2574 01CF                      u2494 0037  
                    u3295 1543                      u3535 13AF                      u2815 068E  
                    u2735 04FF                      u2655 0366                      u2575 01CC  
                    u2495 0034                      u2824 06C6                      u2744 052E  
                    u2664 03A1                      u2584 0202                      u3625 11C2  
                    u2905 12A9                      u2825 06C3                      u2745 052B  
                    u2665 039E                      u2585 01FF                      u3705 1EA5  
                    u3810 1FD2                      u2834 06FB                      u2754 0561  
                    u2674 03CD                      u2594 0238                      u3475 137F  
                    u3811 1FD3                      u2835 06F8                      u2755 055E  
                    u2675 03CA                      u2595 0235                      u3812 1FD8  
                    u2844 072E                      u2764 0594                      u2684 0400  
                    u3485 1387                      u3565 1178                      u2925 12B7  
                    u3813 1FD9                      u3805 1FB8                      u2845 072B  
                    u2765 0591                      u2685 03FD                      u2854 0761  
                    u2774 05C7                      u2694 0433                      u2935 12CC  
                    u2855 075E                      u2775 05C4                      u2695 0430  
                    u3735 1E4F                      u2864 0794                      u2784 05FC  
                    u3904 1459                      u2945 12DE                      u2865 0791  
                    u2785 05F9                      u3665 1E83                      u3905 1457  
                    u2794 062F                      u1995 1EC8                      u3595 11A4  
                    u2795 062C                      u3755 1E60                      _RCIF 0065  
                    u3685 1E8F                      u3765 1E69                      u3917 14CC  
                    u3695 1E9B                      u3864 141B                      u3865 1419  
                    u3874 142F                      u3795 1F97                      u3875 142D  
                    u3884 143B                      u3885 1439                      u3894 1447  
                    u3895 1445                      _SPEN 00C7                      _TRMT 04C1  
                    _TXEN 04C5                      _SYNC 04C4              ?_LCD_mapping 0070  
           __CFG_FCMEN$ON 0000                      _main 13D4              ___ftpack@arg 0070  
            ___ftpack@exp 0073                      btemp 007E                      _utoa 1F20  
           __CFG_BOREN$ON 0000                      start 0000             __CFG_MCLRE$ON 0000  
            ___ftmul@cntr 002E              ___ftmul@sign 002F   __end_of_UART_Write_Text 1E46  
                   ??_PID 0041              ___fttol@exp1 007D              ___fttol@lval 0079  
          ??_displayDigit 0020          __end_of_LCD_init 1E0C           __end_of___aldiv 1301  
                   ?_main 0070           __end_of___awdiv 0864           __end_of___ftadd 15DD  
           __CFG_WDTE$OFF 0000           __end_of___awmod 1059                     _ANSEL 0091  
                   ?_utoa 0078           __end_of___ftmul 13D4           ___awdiv@divisor 0070  
                   _T1CON 0010           __end_of___fttol 11E5                     _T2CON 0012  
                   _LCDPS 0108           __end_of___lwdiv 1EB4           __end_of___lwmod 1E78  
         ___awdiv@counter 0075                     _RCREG 001A                     _TMR1H 000F  
                   _TMR1L 000E                     _SPBRG 0099                     _PORTD 0008  
                   _TRISA 0085                     _TRISC 0087                     _TRISD 0088  
                   _TXREG 0019          __end_of_PID_init 1E27               ?_UART_Write 0070  
      __size_of_UART_Init 0074             ___awtoft@sign 007D             ___ftpack@sign 0074  
            main@setpoint 006E                     utoa@c 0022                     utoa@v 0020  
                   status 0003                     wtemp0 007E           __initialization 07EF  
            __end_of_main 14D4              __end_of_utoa 1F8C                    ??_main 0049  
           ___fttol@sign1 0078                    ??_utoa 007C           ??_displayNumber 007D  
                  _ADCON0 001F                    _ADCON1 009F                    _ADRESH 001E  
                  _ADRESL 009E                    _CCPR2L 001B          ___awdiv@dividend 0072  
        __end_of___awtoft 0034          __end_of___ftpack 1F20                    _LCDCON 0107  
                  _LCDSE0 011C                    _LCDSE1 011D                    _LCDSE2 011E  
                  _T1SYNC 0082                    _INTCON 000B                    _OSCCON 008F  
                  _TMR1CS 0081                    _TMR1ON 0080                    _TRISC6 043E  
                  _TRISC7 043F            __CFG_PWRTE$OFF 0000         __end_of_UART_Init 2000  
     __size_of_UART_Write 000A                 ??___aldiv 0078                 ??___awdiv 0074  
               ??___ftadd 0036                 ??___awmod 0074          ?_UART_Write_Text 0070  
               ??___ftmul 0026                 ??___fttol 0074                 ??___lwdiv 0074  
               ??___lwmod 0074          ___awdiv@quotient 0077           ___awmod@divisor 0070  
                  main@D1 00A2                    main@D2 00BE                    main@D3 0190  
         ___awmod@counter 0075     ___ftmul@f3_as_product 002B      __end_of_displayDigit 07DD  
 __end_of__initialization 07FC                ___ftadd@f1 0030                ___ftadd@f2 0033  
               ?_LCD_init 0070      __size_of_LCD_mapping 01BA               PID@setpoint 003D  
              ___awtoft@c 0078                ___ftmul@f1 0020                ___ftmul@f2 0023  
              ___fttol@f1 0070            __pcstackCOMMON 0070                 ?_PID_init 0070  
              __pbssBANK1 00DA                ??_LCD_init 0070                   PID@read 003F  
              __pmaintext 13D4                ??_PID_init 0070                   _CCP2CON 001D  
               ?___awtoft 0078                 ?___ftpack 0070                   _PID$658 0044  
            ??_UART_Write 0070            displayDigit@D1 007B                   ___aldiv 1272  
              _last_error 00E3                   ___awdiv 080B                   ___ftadd 14D4  
                 ___awmod 100E        __end_of_UART_Write 0013                   ___ftmul 1301  
                 ___fttol 1159                   ___lwdiv 1E78                   ___lwmod 1E46  
               _LCDDATA10 011A                 _LCDDATA11 011B                ??___awtoft 007B  
              ??___ftpack 0075                   __ptext1 1F20                   __ptext2 1E46  
                 __ptext3 1E78                   __ptext4 1059                   __ptext5 16EE  
                 __ptext6 100E                   __ptext7 080B                   __ptext8 1E27  
                 __ptext9 0009              __size_of_PID 0133                   _pid_val 00DA  
        ___awmod@dividend 0072          ___aldiv@dividend 0074     __size_of_displayDigit F0EF  
                 main@str 004D      end_of_initialization 07FC          ___aldiv@quotient 0022  
                 psplit$0 E001E                   psplit$1 1E001F                   psplit$2 1F0020  
                 psplit$3 200021                   psplit$4 210022                   psplit$5 220023  
                 psplit$6 230024                   psplit$7 240025                   utoa@buf 0023  
                 utoa@val 0078                 _UART_Init 1F8C              _displayDigit 16EE  
          UART_Write@data 0070     __end_of_displayNumber 10CE        displayDigit@digito 0079  
              main@timer1 00A0         __size_of_LCD_init 0019               ___ftmul@exp 002A  
           LCD_mapping@D1 0074             LCD_mapping@D2 0070             LCD_mapping@D3 0071  
       __size_of_PID_init 001B                ?_UART_Init 0026  __size_of_UART_Write_Text 001F  
     start_initialization 07EF               __end_of_PID 0D10         pnum$text5_split_1 001E  
       pnum$text5_split_2 001F         pnum$text5_split_3 0020         pnum$text5_split_4 0021  
       pnum$text5_split_5 0022         pnum$text5_split_6 0023         pnum$text5_split_7 0024  
       pnum$text5_split_8 0025             ??_LCD_mapping 0072         __size_of___awtoft 0021  
       __size_of___ftpack 006C                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0             __pcstackBANK3 0190                  PID@error 0047  
               __pnvBANK1 00E5          ___lwdiv@dividend 0072       __end_of_LCD_mapping 1000  
                ?___aldiv 0070                  ?___awdiv 0070                  ?___ftadd 0030  
                ?___awmod 0070                  ?___ftmul 0020                  ?___fttol 0070  
                ?___lwdiv 0070                  ?___lwmod 0070               ??_UART_Init 002A  
        ___lwdiv@quotient 0075                  _LCDDATA0 0110                  _LCDDATA1 0111  
                _LCDDATA2 0112                  _LCDDATA3 0113                  _LCDDATA4 0114  
                _LCDDATA5 0115                  _LCDDATA6 0116                  _LCDDATA7 0117  
                _LCDDATA8 0118                  _LCDDATA9 0119                UART_Init@x 0079  
       ??_UART_Write_Text 0071           ___aldiv@divisor 0070           ___aldiv@counter 0020  
                _LCD_init 1DF3                  _GO_nDONE 00F9                  _PID_init 1E0C  
       UART_Init@baudrate 0026          displayNumber@num 0029               _LCD_mapping 0E46  
        __size_of___aldiv 008F          __size_of___awdiv 0059          __size_of___ftadd 0109  
        __size_of___awmod 004B          __size_of___ftmul 00D3          __size_of___fttol 008C  
        __size_of___lwdiv 003C          __size_of___lwmod 0032                  ___awtoft 0013  
                ___ftpack 1EB4           ___lwdiv@divisor 0070           ___lwdiv@counter 0077  
                __ptext10 1F8C                  __ptext11 1272                  __ptext20 1DF3  
                __ptext12 1E0C                  __ptext13 0BDD                  __ptext14 1159  
                __ptext15 1301                  __ptext16 14D4                  __ptext17 0013  
                __ptext18 1EB4                  __ptext19 0E46       UART_Write_Text@text 0074  
           __size_of_main 0100                 pnum$text5 000E             __size_of_utoa 006C  
  __size_of_displayNumber 0075           displayNumber@D1 002B           displayNumber@D2 002C  
         displayNumber@D3 002D          ___lwmod@dividend 0072                  utoa@base 007A  
         _UART_Write_Text 1E27           ___lwmod@divisor 0070           ___lwmod@counter 0075  
            ___aldiv@sign 0021                _UART_Write 0009             _displayNumber 1059  
      __CFG_FOSC$INTOSCIO 0000          UART_Write_Text@i 0072  
