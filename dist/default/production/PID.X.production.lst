

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sun Oct 22 16:53:23 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F917
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text5_split_1,local,class=CODE,merge=1,delta=2
    32                           	psect	text5_split_2,local,class=CODE,merge=1,delta=2
    33                           	psect	text5_split_3,local,class=CODE,merge=1,delta=2
    34                           	psect	text5_split_4,local,class=CODE,merge=1,delta=2
    35                           	psect	text5_split_5,local,class=CODE,merge=1,delta=2
    36                           	psect	text5_split_6,local,class=CODE,merge=1,delta=2
    37                           	psect	text5_split_7,local,class=CODE,merge=1,delta=2
    38                           	psect	text5_split_8,local,class=CODE,merge=1,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 1.43
    42                           ; Generated 25/07/2017 GMT
    43                           ; 
    44                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F917 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008F                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  0110                     	;# 
   147  0111                     	;# 
   148  0112                     	;# 
   149  0113                     	;# 
   150  0114                     	;# 
   151  0115                     	;# 
   152  0116                     	;# 
   153  0117                     	;# 
   154  0118                     	;# 
   155  0119                     	;# 
   156  011A                     	;# 
   157  011B                     	;# 
   158  011C                     	;# 
   159  011D                     	;# 
   160  011E                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000D                     	;# 
   177  000E                     	;# 
   178  000E                     	;# 
   179  000F                     	;# 
   180  0010                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0013                     	;# 
   184  0014                     	;# 
   185  0015                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0086                     	;# 
   201  0087                     	;# 
   202  0088                     	;# 
   203  0089                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  008F                     	;# 
   208  0090                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0093                     	;# 
   212  0094                     	;# 
   213  0095                     	;# 
   214  0095                     	;# 
   215  0096                     	;# 
   216  0096                     	;# 
   217  0097                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  009F                     	;# 
   224  0105                     	;# 
   225  0107                     	;# 
   226  0108                     	;# 
   227  0109                     	;# 
   228  010C                     	;# 
   229  010C                     	;# 
   230  010D                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  0110                     	;# 
   235  0111                     	;# 
   236  0112                     	;# 
   237  0113                     	;# 
   238  0114                     	;# 
   239  0115                     	;# 
   240  0116                     	;# 
   241  0117                     	;# 
   242  0118                     	;# 
   243  0119                     	;# 
   244  011A                     	;# 
   245  011B                     	;# 
   246  011C                     	;# 
   247  011D                     	;# 
   248  011E                     	;# 
   249  018C                     	;# 
   250  018D                     	;# 
   251  0000                     	;# 
   252  0001                     	;# 
   253  0002                     	;# 
   254  0003                     	;# 
   255  0004                     	;# 
   256  0005                     	;# 
   257  0006                     	;# 
   258  0007                     	;# 
   259  0008                     	;# 
   260  0009                     	;# 
   261  000A                     	;# 
   262  000B                     	;# 
   263  000C                     	;# 
   264  000D                     	;# 
   265  000E                     	;# 
   266  000E                     	;# 
   267  000F                     	;# 
   268  0010                     	;# 
   269  0011                     	;# 
   270  0012                     	;# 
   271  0013                     	;# 
   272  0014                     	;# 
   273  0015                     	;# 
   274  0015                     	;# 
   275  0016                     	;# 
   276  0017                     	;# 
   277  0018                     	;# 
   278  0019                     	;# 
   279  001A                     	;# 
   280  001B                     	;# 
   281  001B                     	;# 
   282  001C                     	;# 
   283  001D                     	;# 
   284  001E                     	;# 
   285  001F                     	;# 
   286  0081                     	;# 
   287  0085                     	;# 
   288  0086                     	;# 
   289  0087                     	;# 
   290  0088                     	;# 
   291  0089                     	;# 
   292  008C                     	;# 
   293  008D                     	;# 
   294  008E                     	;# 
   295  008F                     	;# 
   296  0090                     	;# 
   297  0091                     	;# 
   298  0092                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0095                     	;# 
   302  0095                     	;# 
   303  0096                     	;# 
   304  0096                     	;# 
   305  0097                     	;# 
   306  0098                     	;# 
   307  0099                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  009F                     	;# 
   312  0105                     	;# 
   313  0107                     	;# 
   314  0108                     	;# 
   315  0109                     	;# 
   316  010C                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010D                     	;# 
   320  010E                     	;# 
   321  010F                     	;# 
   322  0110                     	;# 
   323  0111                     	;# 
   324  0112                     	;# 
   325  0113                     	;# 
   326  0114                     	;# 
   327  0115                     	;# 
   328  0116                     	;# 
   329  0117                     	;# 
   330  0118                     	;# 
   331  0119                     	;# 
   332  011A                     	;# 
   333  011B                     	;# 
   334  011C                     	;# 
   335  011D                     	;# 
   336  011E                     	;# 
   337  018C                     	;# 
   338  018D                     	;# 
   339                           
   340                           	psect	idataBANK3
   341  0806                     __pidataBANK3:	
   342                           
   343                           ;initializer for main@F2788
   344  0806  3439               	retlw	57
   345  0807  3439               	retlw	57
   346  0808  3439               	retlw	57
   347  0809  3439               	retlw	57
   348  080A  3439               	retlw	57
   349  080B  3439               	retlw	57
   350  080C  3439               	retlw	57
   351  080D  3439               	retlw	57
   352  080E  3439               	retlw	57
   353  080F  3439               	retlw	57
   354  0810  3439               	retlw	57
   355  0811  3439               	retlw	57
   356  0812  3439               	retlw	57
   357  0813  3439               	retlw	57
   358  0814  3439               	retlw	57
   359  0815  3439               	retlw	57
   360  0816  3400               	retlw	0
   361  001E                     _ADRESH	set	30
   362  001F                     _ADCON0	set	31
   363  000E                     _TMR1L	set	14
   364  000F                     _TMR1H	set	15
   365  0008                     _PORTD	set	8
   366  0010                     _T1CON	set	16
   367  0012                     _T2CON	set	18
   368  001D                     _CCP2CON	set	29
   369  001B                     _CCPR2L	set	27
   370  000B                     _INTCON	set	11
   371  001A                     _RCREG	set	26
   372  0019                     _TXREG	set	25
   373  00F9                     _GO_nDONE	set	249
   374  0047                     _RD7	set	71
   375  0082                     _T1SYNC	set	130
   376  0081                     _TMR1CS	set	129
   377  0080                     _TMR1ON	set	128
   378  0065                     _RCIF	set	101
   379  00C4                     _CREN	set	196
   380  00C7                     _SPEN	set	199
   381  009E                     _ADRESL	set	158
   382  009F                     _ADCON1	set	159
   383  0091                     _ANSEL	set	145
   384  0087                     _TRISC	set	135
   385  009C                     _CMCON0	set	156
   386  0092                     _PR2	set	146
   387  008F                     _OSCCON	set	143
   388  0085                     _TRISA	set	133
   389  0088                     _TRISD	set	136
   390  0099                     _SPBRG	set	153
   391  04C1                     _TRMT	set	1217
   392  04C5                     _TXEN	set	1221
   393  043E                     _TRISC6	set	1086
   394  043F                     _TRISC7	set	1087
   395  04C4                     _SYNC	set	1220
   396  04C2                     _BRGH	set	1218
   397  0107                     _LCDCON	set	263
   398  0108                     _LCDPS	set	264
   399  011A                     _LCDDATA10	set	282
   400  011E                     _LCDSE2	set	286
   401  011D                     _LCDSE1	set	285
   402  011C                     _LCDSE0	set	284
   403  0114                     _LCDDATA4	set	276
   404  0117                     _LCDDATA7	set	279
   405  0111                     _LCDDATA1	set	273
   406  0113                     _LCDDATA3	set	275
   407  0116                     _LCDDATA6	set	278
   408  0119                     _LCDDATA9	set	281
   409  0110                     _LCDDATA0	set	272
   410  0115                     _LCDDATA5	set	277
   411  011B                     _LCDDATA11	set	283
   412  0118                     _LCDDATA8	set	280
   413  0112                     _LCDDATA2	set	274
   414                           
   415                           ; #config settings
   416  0000                     
   417                           	psect	cinit
   418  07F0                     start_initialization:	
   419  07F0                     __initialization:	
   420                           
   421                           ; Initialize objects allocated to BANK3
   422  07F0  1783               	bsf	3,7	;select IRP bank2
   423  07F1  30BD               	movlw	low (__pdataBANK3+17)
   424  07F2  00FD               	movwf	btemp+-1
   425  07F3  3008               	movlw	high __pidataBANK3
   426  07F4  00FE               	movwf	btemp
   427  07F5  3006               	movlw	low __pidataBANK3
   428  07F6  00FF               	movwf	btemp+1
   429  07F7  30AC               	movlw	low __pdataBANK3
   430  07F8  0084               	movwf	4
   431  07F9  160A  158A  263B   	fcall	init_ram0
   432  07FC                     end_of_initialization:	
   433                           ;End of C runtime variable initialization code
   434                           
   435  07FC                     __end_of__initialization:	
   436  07FC  0183               	clrf	3
   437  07FD  120A  158A  2DFA   	ljmp	_main	;jump to C main() function
   438                           
   439                           	psect	dataBANK3
   440  01AC                     __pdataBANK3:	
   441  01AC                     main@F2788:	
   442  01AC                     	ds	17
   443                           
   444                           	psect	inittext
   445  1E37                     init_fetch0:	
   446                           ;	Called with low address in FSR and high address in W
   447                           
   448  1E37  087E               	movf	126,w
   449  1E38  008A               	movwf	10
   450  1E39  087F               	movf	127,w
   451  1E3A  0082               	movwf	2
   452  1E3B                     init_ram0:	
   453                           ;Called with:
   454                           ;	high address of idata address in btemp 
   455                           ;	low address of idata address in btemp+1 
   456                           ;	low address of data in FSR
   457                           ;	high address + 1 of data in btemp-1
   458                           
   459  1E3B  2637  160A  158A   	fcall	init_fetch0
   460  1E3E  0080               	movwf	0
   461  1E3F  0A84               	incf	4,f
   462  1E40  0804               	movf	4,w
   463  1E41  067D               	xorwf	125,w
   464  1E42  1903               	btfsc	3,2
   465  1E43  3400               	retlw	0
   466  1E44  0AFF               	incf	127,f
   467  1E45  1903               	btfsc	3,2
   468  1E46  0AFE               	incf	126,f
   469  1E47  2E3B               	goto	init_ram0
   470                           
   471                           	psect	cstackBANK3
   472  0190                     __pcstackBANK3:	
   473  0190                     main@D3:	
   474                           
   475                           ; 28 bytes @ 0x0
   476  0190                     	ds	28
   477                           
   478                           	psect	cstackBANK1
   479  00A0                     __pcstackBANK1:	
   480  00A0                     main@P:	
   481                           
   482                           ; 2 bytes @ 0x0
   483  00A0                     	ds	2
   484  00A2                     main@D:	
   485                           
   486                           ; 2 bytes @ 0x2
   487  00A2                     	ds	2
   488  00A4                     main@PID_v:	
   489                           
   490                           ; 2 bytes @ 0x4
   491  00A4                     	ds	2
   492  00A6                     main@I:	
   493                           
   494                           ; 2 bytes @ 0x6
   495  00A6                     	ds	2
   496  00A8                     main@error:	
   497                           
   498                           ; 2 bytes @ 0x8
   499  00A8                     	ds	2
   500  00AA                     main@timer1:	
   501                           
   502                           ; 2 bytes @ 0xA
   503  00AA                     	ds	2
   504  00AC                     main@D1:	
   505                           
   506                           ; 28 bytes @ 0xC
   507  00AC                     	ds	28
   508  00C8                     main@D2:	
   509                           
   510                           ; 28 bytes @ 0x28
   511  00C8                     	ds	28
   512                           
   513                           	psect	cstackCOMMON
   514  0070                     __pcstackCOMMON:	
   515  0070                     ?_LCD_init:	
   516  0070                     ??_LCD_init:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_LCD_mapping:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_UART_Write:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ??_UART_Write:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_UART_Write_Text:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_main:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?___awdiv:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?___awmod:	
   538                           ; 2 bytes @ 0x0
   539                           
   540  0070                     ?___lwdiv:	
   541                           ; 2 bytes @ 0x0
   542                           
   543  0070                     ?___lwmod:	
   544                           ; 2 bytes @ 0x0
   545                           
   546  0070                     ?___ftpack:	
   547                           ; 2 bytes @ 0x0
   548                           
   549  0070                     ?___aldiv:	
   550                           ; 3 bytes @ 0x0
   551                           
   552  0070                     UART_Write@data:	
   553                           ; 4 bytes @ 0x0
   554                           
   555  0070                     LCD_mapping@D2:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ___awdiv@divisor:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ___awmod@divisor:	
   562                           ; 2 bytes @ 0x0
   563                           
   564  0070                     ___lwdiv@divisor:	
   565                           ; 2 bytes @ 0x0
   566                           
   567  0070                     ___lwmod@divisor:	
   568                           ; 2 bytes @ 0x0
   569                           
   570  0070                     ___ftpack@arg:	
   571                           ; 2 bytes @ 0x0
   572                           
   573  0070                     ___aldiv@divisor:	
   574                           ; 3 bytes @ 0x0
   575                           
   576                           
   577                           ; 4 bytes @ 0x0
   578  0070                     	ds	1
   579  0071                     ??_UART_Write_Text:	
   580  0071                     LCD_mapping@D3:	
   581                           ; 1 bytes @ 0x1
   582                           
   583                           
   584                           ; 1 bytes @ 0x1
   585  0071                     	ds	1
   586  0072                     ??_LCD_mapping:	
   587  0072                     UART_Write_Text@i:	
   588                           ; 1 bytes @ 0x2
   589                           
   590  0072                     ___awdiv@dividend:	
   591                           ; 2 bytes @ 0x2
   592                           
   593  0072                     ___awmod@dividend:	
   594                           ; 2 bytes @ 0x2
   595                           
   596  0072                     ___lwdiv@dividend:	
   597                           ; 2 bytes @ 0x2
   598                           
   599  0072                     ___lwmod@dividend:	
   600                           ; 2 bytes @ 0x2
   601                           
   602                           
   603                           ; 2 bytes @ 0x2
   604  0072                     	ds	1
   605  0073                     ___ftpack@exp:	
   606                           
   607                           ; 1 bytes @ 0x3
   608  0073                     	ds	1
   609  0074                     ??___awdiv:	
   610  0074                     ??___awmod:	
   611                           ; 1 bytes @ 0x4
   612                           
   613  0074                     ??___lwdiv:	
   614                           ; 1 bytes @ 0x4
   615                           
   616  0074                     ??___lwmod:	
   617                           ; 1 bytes @ 0x4
   618                           
   619  0074                     UART_Write_Text@text:	
   620                           ; 1 bytes @ 0x4
   621                           
   622  0074                     LCD_mapping@D1:	
   623                           ; 1 bytes @ 0x4
   624                           
   625  0074                     ___ftpack@sign:	
   626                           ; 1 bytes @ 0x4
   627                           
   628  0074                     ___aldiv@dividend:	
   629                           ; 1 bytes @ 0x4
   630                           
   631                           
   632                           ; 4 bytes @ 0x4
   633  0074                     	ds	1
   634  0075                     ??___ftpack:	
   635  0075                     ___awdiv@counter:	
   636                           ; 1 bytes @ 0x5
   637                           
   638  0075                     ___awmod@counter:	
   639                           ; 1 bytes @ 0x5
   640                           
   641  0075                     ___lwmod@counter:	
   642                           ; 1 bytes @ 0x5
   643                           
   644  0075                     ___lwdiv@quotient:	
   645                           ; 1 bytes @ 0x5
   646                           
   647                           
   648                           ; 2 bytes @ 0x5
   649  0075                     	ds	1
   650  0076                     ___awdiv@sign:	
   651  0076                     ___awmod@sign:	
   652                           ; 1 bytes @ 0x6
   653                           
   654                           
   655                           ; 1 bytes @ 0x6
   656  0076                     	ds	1
   657  0077                     ___lwdiv@counter:	
   658  0077                     ___awdiv@quotient:	
   659                           ; 1 bytes @ 0x7
   660                           
   661                           
   662                           ; 2 bytes @ 0x7
   663  0077                     	ds	1
   664  0078                     ?_utoa:	
   665  0078                     ??___aldiv:	
   666                           ; 1 bytes @ 0x8
   667                           
   668  0078                     ?___awtoft:	
   669                           ; 1 bytes @ 0x8
   670                           
   671  0078                     ___awtoft@c:	
   672                           ; 3 bytes @ 0x8
   673                           
   674  0078                     utoa@val:	
   675                           ; 2 bytes @ 0x8
   676                           
   677                           
   678                           ; 2 bytes @ 0x8
   679  0078                     	ds	1
   680  0079                     ?_displayDigit:	
   681  0079                     UART_Init@x:	
   682                           ; 1 bytes @ 0x9
   683                           
   684  0079                     displayDigit@digito:	
   685                           ; 2 bytes @ 0x9
   686                           
   687                           
   688                           ; 2 bytes @ 0x9
   689  0079                     	ds	1
   690  007A                     utoa@base:	
   691                           
   692                           ; 2 bytes @ 0xA
   693  007A                     	ds	1
   694  007B                     ??___awtoft:	
   695  007B                     displayDigit@D1:	
   696                           ; 1 bytes @ 0xB
   697                           
   698                           
   699                           ; 2 bytes @ 0xB
   700  007B                     	ds	1
   701  007C                     ??_utoa:	
   702                           
   703                           ; 1 bytes @ 0xC
   704  007C                     	ds	1
   705  007D                     ??_displayNumber:	
   706  007D                     ___awtoft@sign:	
   707                           ; 1 bytes @ 0xD
   708                           
   709                           
   710                           ; 1 bytes @ 0xD
   711  007D                     	ds	1
   712                           
   713                           	psect	cstackBANK0
   714  0020                     __pcstackBANK0:	
   715  0020                     ??_displayDigit:	
   716  0020                     ?___ftmul:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0020                     ___aldiv@counter:	
   720                           ; 3 bytes @ 0x0
   721                           
   722  0020                     utoa@v:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0020                     ___ftmul@f1:	
   726                           ; 2 bytes @ 0x0
   727                           
   728                           
   729                           ; 3 bytes @ 0x0
   730  0020                     	ds	1
   731  0021                     ___aldiv@sign:	
   732                           
   733                           ; 1 bytes @ 0x1
   734  0021                     	ds	1
   735  0022                     utoa@c:	
   736  0022                     ___aldiv@quotient:	
   737                           ; 1 bytes @ 0x2
   738                           
   739                           
   740                           ; 4 bytes @ 0x2
   741  0022                     	ds	1
   742  0023                     utoa@buf:	
   743  0023                     ___ftmul@f2:	
   744                           ; 1 bytes @ 0x3
   745                           
   746                           
   747                           ; 3 bytes @ 0x3
   748  0023                     	ds	3
   749  0026                     ?_UART_Init:	
   750  0026                     ??___ftmul:	
   751                           ; 1 bytes @ 0x6
   752                           
   753  0026                     UART_Init@baudrate:	
   754                           ; 1 bytes @ 0x6
   755                           
   756                           
   757                           ; 4 bytes @ 0x6
   758  0026                     	ds	3
   759  0029                     ?_displayNumber:	
   760  0029                     displayNumber@num:	
   761                           ; 1 bytes @ 0x9
   762                           
   763                           
   764                           ; 2 bytes @ 0x9
   765  0029                     	ds	1
   766  002A                     ??_UART_Init:	
   767  002A                     ___ftmul@exp:	
   768                           ; 1 bytes @ 0xA
   769                           
   770                           
   771                           ; 1 bytes @ 0xA
   772  002A                     	ds	1
   773  002B                     displayNumber@D1:	
   774  002B                     ___ftmul@f3_as_product:	
   775                           ; 1 bytes @ 0xB
   776                           
   777                           
   778                           ; 3 bytes @ 0xB
   779  002B                     	ds	1
   780  002C                     displayNumber@D2:	
   781                           
   782                           ; 1 bytes @ 0xC
   783  002C                     	ds	1
   784  002D                     displayNumber@D3:	
   785                           
   786                           ; 1 bytes @ 0xD
   787  002D                     	ds	1
   788  002E                     ___ftmul@cntr:	
   789                           
   790                           ; 1 bytes @ 0xE
   791  002E                     	ds	1
   792  002F                     ___ftmul@sign:	
   793                           
   794                           ; 1 bytes @ 0xF
   795  002F                     	ds	1
   796  0030                     ?___ftadd:	
   797  0030                     ___ftadd@f1:	
   798                           ; 3 bytes @ 0x10
   799                           
   800                           
   801                           ; 3 bytes @ 0x10
   802  0030                     	ds	3
   803  0033                     ___ftadd@f2:	
   804                           
   805                           ; 3 bytes @ 0x13
   806  0033                     	ds	3
   807  0036                     ??___ftadd:	
   808                           
   809                           ; 1 bytes @ 0x16
   810  0036                     	ds	4
   811  003A                     ___ftadd@sign:	
   812                           
   813                           ; 1 bytes @ 0x1A
   814  003A                     	ds	1
   815  003B                     ___ftadd@exp2:	
   816                           
   817                           ; 1 bytes @ 0x1B
   818  003B                     	ds	1
   819  003C                     ___ftadd@exp1:	
   820                           
   821                           ; 1 bytes @ 0x1C
   822  003C                     	ds	1
   823  003D                     ?___fttol:	
   824  003D                     ___fttol@f1:	
   825                           ; 4 bytes @ 0x1D
   826                           
   827                           
   828                           ; 3 bytes @ 0x1D
   829  003D                     	ds	4
   830  0041                     ??___fttol:	
   831                           
   832                           ; 1 bytes @ 0x21
   833  0041                     	ds	4
   834  0045                     ___fttol@sign1:	
   835                           
   836                           ; 1 bytes @ 0x25
   837  0045                     	ds	1
   838  0046                     ___fttol@lval:	
   839                           
   840                           ; 4 bytes @ 0x26
   841  0046                     	ds	4
   842  004A                     ___fttol@exp1:	
   843                           
   844                           ; 1 bytes @ 0x2A
   845  004A                     	ds	1
   846  004B                     ??_main:	
   847                           
   848                           ; 1 bytes @ 0x2B
   849  004B                     	ds	4
   850  004F                     main@str:	
   851                           
   852                           ; 17 bytes @ 0x2F
   853  004F                     	ds	17
   854  0060                     main@duty_cycle:	
   855                           
   856                           ; 1 bytes @ 0x40
   857  0060                     	ds	1
   858  0061                     main@ki:	
   859                           
   860                           ; 3 bytes @ 0x41
   861  0061                     	ds	3
   862  0064                     main@kd:	
   863                           
   864                           ; 3 bytes @ 0x44
   865  0064                     	ds	3
   866  0067                     main@kp:	
   867                           
   868                           ; 3 bytes @ 0x47
   869  0067                     	ds	3
   870  006A                     _main$656:	
   871                           
   872                           ; 3 bytes @ 0x4A
   873  006A                     	ds	3
   874  006D                     main@desejado:	
   875                           
   876                           ; 2 bytes @ 0x4D
   877  006D                     	ds	2
   878                           
   879                           	psect	maintext
   880  0DFA                     __pmaintext:	
   881 ;;
   882 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   883 ;;
   884 ;; *************** function _main *****************
   885 ;; Defined at:
   886 ;;		line 71 in file "main.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  D3             28    0[BANK3 ] struct .
   891 ;;  D2             28   40[BANK1 ] struct .
   892 ;;  D1             28   12[BANK1 ] struct .
   893 ;;  str            17   47[BANK0 ] unsigned char [17]
   894 ;;  kp              3   71[BANK0 ] float 
   895 ;;  kd              3   68[BANK0 ] float 
   896 ;;  ki              3   65[BANK0 ] float 
   897 ;;  timer1          2   10[BANK1 ] unsigned int 
   898 ;;  error           2    8[BANK1 ] int 
   899 ;;  I               2    6[BANK1 ] int 
   900 ;;  PID_v           2    4[BANK1 ] int 
   901 ;;  D               2    2[BANK1 ] int 
   902 ;;  P               2    0[BANK1 ] int 
   903 ;;  desejado        2   77[BANK0 ] int 
   904 ;;  duty_cycle      1   64[BANK0 ] unsigned char 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : B00/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   914 ;;      Params:         0       0       0       0       0
   915 ;;      Locals:         0      32      68      28       0
   916 ;;      Temps:          0       4       0       0       0
   917 ;;      Totals:         0      36      68      28       0
   918 ;;Total ram usage:      132 bytes
   919 ;; Hardware stack levels required when called:    2
   920 ;; This function calls:
   921 ;;		_LCD_init
   922 ;;		_LCD_mapping
   923 ;;		_UART_Init
   924 ;;		_UART_Write
   925 ;;		_UART_Write_Text
   926 ;;		___awtoft
   927 ;;		___ftadd
   928 ;;		___ftmul
   929 ;;		___fttol
   930 ;;		_displayNumber
   931 ;;		_utoa
   932 ;; This function is called by:
   933 ;;		Startup code after reset
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           
   938                           ;psect for function _main
   939  0DFA                     _main:	
   940                           
   941                           ;main.c: 72: MAPKEY D1, D2, D3;
   942                           ;main.c: 73: float ki, kd, kp;
   943                           ;main.c: 74: int desejado, error, P, I, D, PID_v;
   944                           ;main.c: 75: unsigned char duty_cycle =30;
   945                           
   946                           ;incstack = 0
   947                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   948  0DFA  301E               	movlw	30
   949  0DFB  1283               	bcf	3,5	;RP0=0, select bank0
   950  0DFC  1303               	bcf	3,6	;RP1=0, select bank0
   951  0DFD  00CB               	movwf	??_main
   952  0DFE  084B               	movf	??_main,w
   953  0DFF  00E0               	movwf	main@duty_cycle
   954                           
   955                           ;main.c: 76: unsigned int timer1 = 0;
   956  0E00  1683               	bsf	3,5	;RP0=1, select bank1
   957  0E01  1303               	bcf	3,6	;RP1=0, select bank1
   958  0E02  01AA               	clrf	main@timer1^(0+128)
   959  0E03  01AB               	clrf	(main@timer1+1)^(0+128)
   960                           
   961                           ;main.c: 77: char str [] = "9999999999999999";
   962  0E04  304F               	movlw	main@str& (0+255)
   963  0E05  0084               	movwf	4
   964  0E06  30AC               	movlw	low main@F2788
   965  0E07  1283               	bcf	3,5	;RP0=0, select bank0
   966  0E08  1303               	bcf	3,6	;RP1=0, select bank0
   967  0E09  00CB               	movwf	??_main
   968  0E0A  0804               	movf	4,w
   969  0E0B  00CC               	movwf	??_main+1
   970  0E0C  3011               	movlw	17
   971  0E0D  00CD               	movwf	??_main+2
   972  0E0E                     u3860:	
   973  0E0E  084B               	movf	??_main,w
   974  0E0F  0084               	movwf	4
   975  0E10  1783               	bsf	3,7	;select IRP bank3
   976  0E11  0800               	movf	0,w
   977  0E12  00CE               	movwf	??_main+3
   978  0E13  0ACB               	incf	??_main,f
   979  0E14  084C               	movf	??_main+1,w
   980  0E15  0084               	movwf	4
   981  0E16  1383               	bcf	3,7	;select IRP bank0
   982  0E17  084E               	movf	??_main+3,w
   983  0E18  0080               	movwf	0
   984  0E19  0ACC               	incf	??_main+1,f
   985  0E1A  0BCD               	decfsz	??_main+2,f
   986  0E1B  2E0E               	goto	u3860
   987                           
   988                           ;main.c: 80: LCD_init();
   989  0E1C  160A  158A  2648  120A  158A  	fcall	_LCD_init
   990                           
   991                           ;main.c: 81: LCD_mapping(&D1,&D2,&D3);
   992  0E21  30C8               	movlw	(low (main@D2| 0))& (0+255)
   993  0E22  1283               	bcf	3,5	;RP0=0, select bank0
   994  0E23  1303               	bcf	3,6	;RP1=0, select bank0
   995  0E24  00CB               	movwf	??_main
   996  0E25  084B               	movf	??_main,w
   997  0E26  00F0               	movwf	LCD_mapping@D2
   998  0E27  3090               	movlw	(low (main@D3| (0+256)))& (0+255)
   999  0E28  00CC               	movwf	??_main+1
  1000  0E29  084C               	movf	??_main+1,w
  1001  0E2A  00F1               	movwf	LCD_mapping@D3
  1002  0E2B  30AC               	movlw	(low (main@D1| 0))& (0+255)
  1003  0E2C  120A  158A  2440  120A  158A  	fcall	_LCD_mapping
  1004                           
  1005                           ;main.c: 82: UART_Init(9600);
  1006  0E31  3000               	movlw	0
  1007  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0E33  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0E34  00A9               	movwf	UART_Init@baudrate+3
  1010  0E35  3000               	movlw	0
  1011  0E36  00A8               	movwf	UART_Init@baudrate+2
  1012  0E37  3025               	movlw	37
  1013  0E38  00A7               	movwf	UART_Init@baudrate+1
  1014  0E39  3080               	movlw	128
  1015  0E3A  00A6               	movwf	UART_Init@baudrate
  1016  0E3B  160A  118A  205D  120A  158A  	fcall	_UART_Init
  1017                           
  1018                           ;main.c: 85: TRISD = 0x00;
  1019  0E40  1683               	bsf	3,5	;RP0=1, select bank1
  1020  0E41  1303               	bcf	3,6	;RP1=0, select bank1
  1021  0E42  0188               	clrf	8	;volatile
  1022                           
  1023                           ;main.c: 86: TRISA |= 0x01;
  1024  0E43  1405               	bsf	5,0	;volatile
  1025                           
  1026                           ;main.c: 87: OSCCON = 0x70;
  1027  0E44  3070               	movlw	112
  1028  0E45  008F               	movwf	15	;volatile
  1029                           
  1030                           ;main.c: 88: PR2 = 0x3F;
  1031  0E46  303F               	movlw	63
  1032  0E47  0092               	movwf	18	;volatile
  1033                           
  1034                           ;main.c: 89: CMCON0 = 0x07;
  1035  0E48  3007               	movlw	7
  1036  0E49  009C               	movwf	28	;volatile
  1037                           
  1038                           ;main.c: 90: INTCON = 0;
  1039  0E4A  018B               	clrf	11	;volatile
  1040                           
  1041                           ;main.c: 91: CCPR2L = 0;
  1042  0E4B  1283               	bcf	3,5	;RP0=0, select bank0
  1043  0E4C  1303               	bcf	3,6	;RP1=0, select bank0
  1044  0E4D  019B               	clrf	27	;volatile
  1045                           
  1046                           ;main.c: 92: CCP2CON = 0x0C;
  1047  0E4E  300C               	movlw	12
  1048  0E4F  009D               	movwf	29	;volatile
  1049                           
  1050                           ;main.c: 93: T2CON = 0x04;
  1051  0E50  3004               	movlw	4
  1052  0E51  0092               	movwf	18	;volatile
  1053                           
  1054                           ;main.c: 96: TRISC |= (1 << 5);
  1055  0E52  1683               	bsf	3,5	;RP0=1, select bank1
  1056  0E53  1303               	bcf	3,6	;RP1=0, select bank1
  1057  0E54  1687               	bsf	7,5	;volatile
  1058                           
  1059                           ;main.c: 99: T1CON |= (1 << TMR1ON) | (1 << TMR1CS) | (1 << T1SYNC);
  1060  0E55  3001               	movlw	1
  1061  0E56  1283               	bcf	3,5	;RP0=0, select bank0
  1062  0E57  1303               	bcf	3,6	;RP1=0, select bank0
  1063  0E58  00CB               	movwf	??_main
  1064  0E59  3000               	movlw	0
  1065  0E5A  1910               	btfsc	16,2	;volatile
  1066  0E5B  3001               	movlw	1
  1067  0E5C  3E01               	addlw	1
  1068  0E5D  2E60               	goto	u3874
  1069  0E5E                     u3875:	
  1070  0E5E  1003               	clrc
  1071  0E5F  0DCB               	rlf	??_main,f
  1072  0E60                     u3874:	
  1073  0E60  3EFF               	addlw	-1
  1074  0E61  1D03               	skipz
  1075  0E62  2E5E               	goto	u3875
  1076  0E63  3001               	movlw	1
  1077  0E64  00CC               	movwf	??_main+1
  1078  0E65  3000               	movlw	0
  1079  0E66  1890               	btfsc	16,1	;volatile
  1080  0E67  3001               	movlw	1
  1081  0E68  3E01               	addlw	1
  1082  0E69  2E6C               	goto	u3884
  1083  0E6A                     u3885:	
  1084  0E6A  1003               	clrc
  1085  0E6B  0DCC               	rlf	??_main+1,f
  1086  0E6C                     u3884:	
  1087  0E6C  3EFF               	addlw	-1
  1088  0E6D  1D03               	skipz
  1089  0E6E  2E6A               	goto	u3885
  1090  0E6F  3001               	movlw	1
  1091  0E70  00CD               	movwf	??_main+2
  1092  0E71  3000               	movlw	0
  1093  0E72  1810               	btfsc	16,0	;volatile
  1094  0E73  3001               	movlw	1
  1095  0E74  3E01               	addlw	1
  1096  0E75  2E78               	goto	u3894
  1097  0E76                     u3895:	
  1098  0E76  1003               	clrc
  1099  0E77  0DCD               	rlf	??_main+2,f
  1100  0E78                     u3894:	
  1101  0E78  3EFF               	addlw	-1
  1102  0E79  1D03               	skipz
  1103  0E7A  2E76               	goto	u3895
  1104  0E7B  084D               	movf	??_main+2,w
  1105  0E7C  044C               	iorwf	??_main+1,w
  1106  0E7D  044B               	iorwf	??_main,w
  1107  0E7E  00CE               	movwf	??_main+3
  1108  0E7F  084E               	movf	??_main+3,w
  1109  0E80  0490               	iorwf	16,f	;volatile
  1110                           
  1111                           ;main.c: 101: PORTD |= (1 << RD7);
  1112  0E81  3001               	movlw	1
  1113  0E82  00CB               	movwf	??_main
  1114  0E83  3000               	movlw	0
  1115  0E84  1B88               	btfsc	8,7	;volatile
  1116  0E85  3001               	movlw	1
  1117  0E86  3E01               	addlw	1
  1118  0E87  2E8A               	goto	u3904
  1119  0E88                     u3905:	
  1120  0E88  1003               	clrc
  1121  0E89  0DCB               	rlf	??_main,f
  1122  0E8A                     u3904:	
  1123  0E8A  3EFF               	addlw	-1
  1124  0E8B  1D03               	skipz
  1125  0E8C  2E88               	goto	u3905
  1126  0E8D  084B               	movf	??_main,w
  1127  0E8E  00CC               	movwf	??_main+1
  1128  0E8F  084C               	movf	??_main+1,w
  1129  0E90  0488               	iorwf	8,f	;volatile
  1130                           
  1131                           ;main.c: 103: TMR1H = 0;
  1132  0E91  018F               	clrf	15	;volatile
  1133                           
  1134                           ;main.c: 104: TMR1L = 0;
  1135  0E92  018E               	clrf	14	;volatile
  1136                           
  1137                           ;main.c: 106: CCPR2L = 0;
  1138  0E93  019B               	clrf	27	;volatile
  1139                           
  1140                           ;main.c: 109: kp = 0.001;
  1141  0E94  3012               	movlw	18
  1142  0E95  00E7               	movwf	main@kp
  1143  0E96  3083               	movlw	131
  1144  0E97  00E8               	movwf	main@kp+1
  1145  0E98  303A               	movlw	58
  1146  0E99  00E9               	movwf	main@kp+2
  1147                           
  1148                           ;main.c: 110: ki = 1;
  1149  0E9A  3000               	movlw	0
  1150  0E9B  00E1               	movwf	main@ki
  1151  0E9C  3080               	movlw	128
  1152  0E9D  00E2               	movwf	main@ki+1
  1153  0E9E  303F               	movlw	63
  1154  0E9F  00E3               	movwf	main@ki+2
  1155                           
  1156                           ;main.c: 111: kd = 1;
  1157  0EA0  3000               	movlw	0
  1158  0EA1  00E4               	movwf	main@kd
  1159  0EA2  3080               	movlw	128
  1160  0EA3  00E5               	movwf	main@kd+1
  1161  0EA4  303F               	movlw	63
  1162  0EA5  00E6               	movwf	main@kd+2
  1163                           
  1164                           ;main.c: 113: P = 0;
  1165  0EA6  1683               	bsf	3,5	;RP0=1, select bank1
  1166  0EA7  1303               	bcf	3,6	;RP1=0, select bank1
  1167  0EA8  01A0               	clrf	main@P^(0+128)
  1168  0EA9  01A1               	clrf	(main@P+1)^(0+128)
  1169                           
  1170                           ;main.c: 114: I = 0;
  1171  0EAA  01A6               	clrf	main@I^(0+128)
  1172  0EAB  01A7               	clrf	(main@I+1)^(0+128)
  1173                           
  1174                           ;main.c: 115: D = 0;
  1175  0EAC  01A2               	clrf	main@D^(0+128)
  1176  0EAD  01A3               	clrf	(main@D+1)^(0+128)
  1177                           
  1178                           ;main.c: 116: PID_v = 0;
  1179  0EAE  01A4               	clrf	main@PID_v^(0+128)
  1180  0EAF  01A5               	clrf	(main@PID_v+1)^(0+128)
  1181                           
  1182                           ;main.c: 118: desejado = 30;
  1183  0EB0  301E               	movlw	30
  1184  0EB1  1283               	bcf	3,5	;RP0=0, select bank0
  1185  0EB2  1303               	bcf	3,6	;RP1=0, select bank0
  1186  0EB3  00ED               	movwf	main@desejado
  1187  0EB4  3000               	movlw	0
  1188  0EB5  00EE               	movwf	main@desejado+1
  1189                           
  1190                           ;main.c: 119: CCPR2L = 0;
  1191  0EB6  019B               	clrf	27	;volatile
  1192  0EB7                     l1889:	
  1193                           ;main.c: 121: while(1) {
  1194                           
  1195                           
  1196                           ;main.c: 122: timer1 = (TMR1H << 8) + TMR1L;
  1197  0EB7  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0EB8  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0EB9  080F               	movf	15,w	;volatile
  1200  0EBA  1683               	bsf	3,5	;RP0=1, select bank1
  1201  0EBB  1303               	bcf	3,6	;RP1=0, select bank1
  1202  0EBC  00AB               	movwf	(main@timer1+1)^(0+128)
  1203  0EBD  1283               	bcf	3,5	;RP0=0, select bank0
  1204  0EBE  1303               	bcf	3,6	;RP1=0, select bank0
  1205  0EBF  080E               	movf	14,w	;volatile
  1206  0EC0  1683               	bsf	3,5	;RP0=1, select bank1
  1207  0EC1  1303               	bcf	3,6	;RP1=0, select bank1
  1208  0EC2  00AA               	movwf	main@timer1^(0+128)
  1209                           
  1210                           ;main.c: 124: displayNumber(timer1, &D1, &D2, &D3);
  1211  0EC3  082B               	movf	(main@timer1+1)^(0+128),w
  1212  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  1213  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  1214  0EC6  00AA               	movwf	displayNumber@num+1
  1215  0EC7  1683               	bsf	3,5	;RP0=1, select bank1
  1216  0EC8  1303               	bcf	3,6	;RP1=0, select bank1
  1217  0EC9  082A               	movf	main@timer1^(0+128),w
  1218  0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  1219  0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  1220  0ECC  00A9               	movwf	displayNumber@num
  1221  0ECD  30AC               	movlw	(low (main@D1| 0))& (0+255)
  1222  0ECE  00CB               	movwf	??_main
  1223  0ECF  084B               	movf	??_main,w
  1224  0ED0  00AB               	movwf	displayNumber@D1
  1225  0ED1  30C8               	movlw	(low (main@D2| 0))& (0+255)
  1226  0ED2  00CC               	movwf	??_main+1
  1227  0ED3  084C               	movf	??_main+1,w
  1228  0ED4  00AC               	movwf	displayNumber@D2
  1229  0ED5  3090               	movlw	(low (main@D3| (0+256)))& (0+255)
  1230  0ED6  00CD               	movwf	??_main+2
  1231  0ED7  084D               	movf	??_main+2,w
  1232  0ED8  00AD               	movwf	displayNumber@D3
  1233  0ED9  160A  118A  20D1  120A  158A  	fcall	_displayNumber
  1234                           
  1235                           ;main.c: 126: error = desejado - timer1;
  1236  0EDE  1683               	bsf	3,5	;RP0=1, select bank1
  1237  0EDF  1303               	bcf	3,6	;RP1=0, select bank1
  1238  0EE0  092A               	comf	main@timer1^(0+128),w
  1239  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  1240  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  1241  0EE3  00CB               	movwf	??_main
  1242  0EE4  1683               	bsf	3,5	;RP0=1, select bank1
  1243  0EE5  1303               	bcf	3,6	;RP1=0, select bank1
  1244  0EE6  092B               	comf	(main@timer1+1)^(0+128),w
  1245  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  1246  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  1247  0EE9  00CC               	movwf	??_main+1
  1248  0EEA  0ACB               	incf	??_main,f
  1249  0EEB  1903               	skipnz
  1250  0EEC  0ACC               	incf	??_main+1,f
  1251  0EED  086D               	movf	main@desejado,w
  1252  0EEE  074B               	addwf	??_main,w
  1253  0EEF  1683               	bsf	3,5	;RP0=1, select bank1
  1254  0EF0  1303               	bcf	3,6	;RP1=0, select bank1
  1255  0EF1  00A8               	movwf	main@error^(0+128)
  1256  0EF2  1283               	bcf	3,5	;RP0=0, select bank0
  1257  0EF3  1303               	bcf	3,6	;RP1=0, select bank0
  1258  0EF4  086E               	movf	main@desejado+1,w
  1259  0EF5  1803               	skipnc
  1260  0EF6  0A6E               	incf	main@desejado+1,w
  1261  0EF7  074C               	addwf	??_main+1,w
  1262  0EF8  1683               	bsf	3,5	;RP0=1, select bank1
  1263  0EF9  1303               	bcf	3,6	;RP1=0, select bank1
  1264  0EFA  00A9               	movwf	(main@error+1)^(0+128)
  1265                           
  1266                           ;main.c: 127: if (error) {
  1267  0EFB  0828               	movf	main@error^(0+128),w
  1268  0EFC  0429               	iorwf	(main@error+1)^(0+128),w
  1269  0EFD  1903               	btfsc	3,2
  1270  0EFE  2FB2               	goto	l1909
  1271                           
  1272                           ;main.c: 128: P = error;
  1273  0EFF  0829               	movf	(main@error+1)^(0+128),w
  1274  0F00  00A1               	movwf	(main@P+1)^(0+128)
  1275  0F01  0828               	movf	main@error^(0+128),w
  1276  0F02  00A0               	movwf	main@P^(0+128)
  1277                           
  1278                           ;main.c: 129: I = I + error;
  1279  0F03  0828               	movf	main@error^(0+128),w
  1280  0F04  0726               	addwf	main@I^(0+128),w
  1281  0F05  00A6               	movwf	main@I^(0+128)
  1282  0F06  0829               	movf	(main@error+1)^(0+128),w
  1283  0F07  1803               	skipnc
  1284  0F08  0A29               	incf	(main@error+1)^(0+128),w
  1285  0F09  0727               	addwf	(main@I+1)^(0+128),w
  1286  0F0A  00A7               	movwf	(main@I+1)^(0+128)
  1287                           
  1288                           ;main.c: 130: D = 0;
  1289  0F0B  01A2               	clrf	main@D^(0+128)
  1290  0F0C  01A3               	clrf	(main@D+1)^(0+128)
  1291                           
  1292                           ;main.c: 132: PID_v = kp * P + ki * I + kd*D;
  1293  0F0D  0821               	movf	(main@P+1)^(0+128),w
  1294  0F0E  00F9               	movwf	___awtoft@c+1
  1295  0F0F  0820               	movf	main@P^(0+128),w
  1296  0F10  00F8               	movwf	___awtoft@c
  1297  0F11  160A  158A  2680  120A  158A  	fcall	___awtoft
  1298  0F16  0878               	movf	?___awtoft,w
  1299  0F17  1283               	bcf	3,5	;RP0=0, select bank0
  1300  0F18  1303               	bcf	3,6	;RP1=0, select bank0
  1301  0F19  00A3               	movwf	___ftmul@f2
  1302  0F1A  0879               	movf	?___awtoft+1,w
  1303  0F1B  00A4               	movwf	___ftmul@f2+1
  1304  0F1C  087A               	movf	?___awtoft+2,w
  1305  0F1D  00A5               	movwf	___ftmul@f2+2
  1306  0F1E  0867               	movf	main@kp,w
  1307  0F1F  00A0               	movwf	___ftmul@f1
  1308  0F20  0868               	movf	main@kp+1,w
  1309  0F21  00A1               	movwf	___ftmul@f1+1
  1310  0F22  0869               	movf	main@kp+2,w
  1311  0F23  00A2               	movwf	___ftmul@f1+2
  1312  0F24  160A  118A  22EC  120A  158A  	fcall	___ftmul
  1313  0F29  1283               	bcf	3,5	;RP0=0, select bank0
  1314  0F2A  1303               	bcf	3,6	;RP1=0, select bank0
  1315  0F2B  0820               	movf	?___ftmul,w
  1316  0F2C  00B3               	movwf	___ftadd@f2
  1317  0F2D  0821               	movf	?___ftmul+1,w
  1318  0F2E  00B4               	movwf	___ftadd@f2+1
  1319  0F2F  0822               	movf	?___ftmul+2,w
  1320  0F30  00B5               	movwf	___ftadd@f2+2
  1321  0F31  1683               	bsf	3,5	;RP0=1, select bank1
  1322  0F32  1303               	bcf	3,6	;RP1=0, select bank1
  1323  0F33  0827               	movf	(main@I+1)^(0+128),w
  1324  0F34  00F9               	movwf	___awtoft@c+1
  1325  0F35  0826               	movf	main@I^(0+128),w
  1326  0F36  00F8               	movwf	___awtoft@c
  1327  0F37  160A  158A  2680  120A  158A  	fcall	___awtoft
  1328  0F3C  0878               	movf	?___awtoft,w
  1329  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  1330  0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  1331  0F3F  00A3               	movwf	___ftmul@f2
  1332  0F40  0879               	movf	?___awtoft+1,w
  1333  0F41  00A4               	movwf	___ftmul@f2+1
  1334  0F42  087A               	movf	?___awtoft+2,w
  1335  0F43  00A5               	movwf	___ftmul@f2+2
  1336  0F44  0861               	movf	main@ki,w
  1337  0F45  00A0               	movwf	___ftmul@f1
  1338  0F46  0862               	movf	main@ki+1,w
  1339  0F47  00A1               	movwf	___ftmul@f1+1
  1340  0F48  0863               	movf	main@ki+2,w
  1341  0F49  00A2               	movwf	___ftmul@f1+2
  1342  0F4A  160A  118A  22EC  120A  158A  	fcall	___ftmul
  1343  0F4F  1283               	bcf	3,5	;RP0=0, select bank0
  1344  0F50  1303               	bcf	3,6	;RP1=0, select bank0
  1345  0F51  0820               	movf	?___ftmul,w
  1346  0F52  00B0               	movwf	___ftadd@f1
  1347  0F53  0821               	movf	?___ftmul+1,w
  1348  0F54  00B1               	movwf	___ftadd@f1+1
  1349  0F55  0822               	movf	?___ftmul+2,w
  1350  0F56  00B2               	movwf	___ftadd@f1+2
  1351  0F57  160A  118A  23BF  120A  158A  	fcall	___ftadd
  1352  0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0F5D  1303               	bcf	3,6	;RP1=0, select bank0
  1354  0F5E  0830               	movf	?___ftadd,w
  1355  0F5F  00EA               	movwf	_main$656
  1356  0F60  0831               	movf	?___ftadd+1,w
  1357  0F61  00EB               	movwf	_main$656+1
  1358  0F62  0832               	movf	?___ftadd+2,w
  1359  0F63  00EC               	movwf	_main$656+2
  1360                           
  1361                           ;main.c: 132: PID_v = kp * P + ki * I + kd*D;
  1362  0F64  086A               	movf	_main$656,w
  1363  0F65  00B3               	movwf	___ftadd@f2
  1364  0F66  086B               	movf	_main$656+1,w
  1365  0F67  00B4               	movwf	___ftadd@f2+1
  1366  0F68  086C               	movf	_main$656+2,w
  1367  0F69  00B5               	movwf	___ftadd@f2+2
  1368  0F6A  1683               	bsf	3,5	;RP0=1, select bank1
  1369  0F6B  1303               	bcf	3,6	;RP1=0, select bank1
  1370  0F6C  0823               	movf	(main@D+1)^(0+128),w
  1371  0F6D  00F9               	movwf	___awtoft@c+1
  1372  0F6E  0822               	movf	main@D^(0+128),w
  1373  0F6F  00F8               	movwf	___awtoft@c
  1374  0F70  160A  158A  2680  120A  158A  	fcall	___awtoft
  1375  0F75  0878               	movf	?___awtoft,w
  1376  0F76  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0F77  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0F78  00A3               	movwf	___ftmul@f2
  1379  0F79  0879               	movf	?___awtoft+1,w
  1380  0F7A  00A4               	movwf	___ftmul@f2+1
  1381  0F7B  087A               	movf	?___awtoft+2,w
  1382  0F7C  00A5               	movwf	___ftmul@f2+2
  1383  0F7D  0864               	movf	main@kd,w
  1384  0F7E  00A0               	movwf	___ftmul@f1
  1385  0F7F  0865               	movf	main@kd+1,w
  1386  0F80  00A1               	movwf	___ftmul@f1+1
  1387  0F81  0866               	movf	main@kd+2,w
  1388  0F82  00A2               	movwf	___ftmul@f1+2
  1389  0F83  160A  118A  22EC  120A  158A  	fcall	___ftmul
  1390  0F88  1283               	bcf	3,5	;RP0=0, select bank0
  1391  0F89  1303               	bcf	3,6	;RP1=0, select bank0
  1392  0F8A  0820               	movf	?___ftmul,w
  1393  0F8B  00B0               	movwf	___ftadd@f1
  1394  0F8C  0821               	movf	?___ftmul+1,w
  1395  0F8D  00B1               	movwf	___ftadd@f1+1
  1396  0F8E  0822               	movf	?___ftmul+2,w
  1397  0F8F  00B2               	movwf	___ftadd@f1+2
  1398  0F90  160A  118A  23BF  120A  158A  	fcall	___ftadd
  1399  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  1400  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  1401  0F97  0830               	movf	?___ftadd,w
  1402  0F98  00BD               	movwf	___fttol@f1
  1403  0F99  0831               	movf	?___ftadd+1,w
  1404  0F9A  00BE               	movwf	___fttol@f1+1
  1405  0F9B  0832               	movf	?___ftadd+2,w
  1406  0F9C  00BF               	movwf	___fttol@f1+2
  1407  0F9D  160A  118A  225E  120A  158A  	fcall	___fttol
  1408  0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  1409  0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  1410  0FA4  083E               	movf	?___fttol+1,w
  1411  0FA5  1683               	bsf	3,5	;RP0=1, select bank1
  1412  0FA6  1303               	bcf	3,6	;RP1=0, select bank1
  1413  0FA7  00A5               	movwf	(main@PID_v+1)^(0+128)
  1414  0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  1415  0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  1416  0FAA  083D               	movf	?___fttol,w
  1417  0FAB  1683               	bsf	3,5	;RP0=1, select bank1
  1418  0FAC  1303               	bcf	3,6	;RP1=0, select bank1
  1419  0FAD  00A4               	movwf	main@PID_v^(0+128)
  1420                           
  1421                           ;main.c: 134: CCPR2L = PID_v;
  1422  0FAE  0824               	movf	main@PID_v^(0+128),w
  1423  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  1424  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  1425  0FB1  009B               	movwf	27	;volatile
  1426  0FB2                     l1909:	
  1427                           
  1428                           ;main.c: 135: }
  1429                           ;main.c: 136: utoa(str, CCPR2L, 10);
  1430  0FB2  1283               	bcf	3,5	;RP0=0, select bank0
  1431  0FB3  081B               	movf	27,w	;volatile
  1432  0FB4  00CB               	movwf	??_main
  1433  0FB5  01CC               	clrf	??_main+1
  1434  0FB6  084B               	movf	??_main,w
  1435  0FB7  00F8               	movwf	utoa@val
  1436  0FB8  084C               	movf	??_main+1,w
  1437  0FB9  00F9               	movwf	utoa@val+1
  1438  0FBA  300A               	movlw	10
  1439  0FBB  00FA               	movwf	utoa@base
  1440  0FBC  3000               	movlw	0
  1441  0FBD  00FB               	movwf	utoa@base+1
  1442  0FBE  304F               	movlw	(low (main@str| 0))& (0+255)
  1443  0FBF  160A  158A  2794  120A  158A  	fcall	_utoa
  1444                           
  1445                           ;main.c: 137: UART_Write_Text(str);
  1446  0FC4  304F               	movlw	(low (main@str| 0))& (0+255)
  1447  0FC5  160A  158A  2661  120A  158A  	fcall	_UART_Write_Text
  1448                           
  1449                           ;main.c: 138: UART_Write('\n');
  1450  0FCA  300A               	movlw	10
  1451  0FCB  160A  158A  262D  120A  158A  	fcall	_UART_Write
  1452                           
  1453                           ;main.c: 140: utoa(str, timer1, 10);
  1454  0FD0  1683               	bsf	3,5	;RP0=1, select bank1
  1455  0FD1  1303               	bcf	3,6	;RP1=0, select bank1
  1456  0FD2  082B               	movf	(main@timer1+1)^(0+128),w
  1457  0FD3  00F9               	movwf	utoa@val+1
  1458  0FD4  082A               	movf	main@timer1^(0+128),w
  1459  0FD5  00F8               	movwf	utoa@val
  1460  0FD6  300A               	movlw	10
  1461  0FD7  00FA               	movwf	utoa@base
  1462  0FD8  3000               	movlw	0
  1463  0FD9  00FB               	movwf	utoa@base+1
  1464  0FDA  304F               	movlw	(low (main@str| 0))& (0+255)
  1465  0FDB  160A  158A  2794  120A  158A  	fcall	_utoa
  1466                           
  1467                           ;main.c: 141: UART_Write_Text(str);
  1468  0FE0  304F               	movlw	(low (main@str| 0))& (0+255)
  1469  0FE1  160A  158A  2661  120A  158A  	fcall	_UART_Write_Text
  1470                           
  1471                           ;main.c: 142: UART_Write('\n');
  1472  0FE6  300A               	movlw	10
  1473  0FE7  160A  158A  262D  120A  158A  	fcall	_UART_Write
  1474                           
  1475                           ;main.c: 145: TMR1H = 0;
  1476  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  1477  0FED  1303               	bcf	3,6	;RP1=0, select bank0
  1478  0FEE  018F               	clrf	15	;volatile
  1479                           
  1480                           ;main.c: 146: TMR1L = 0;
  1481  0FEF  018E               	clrf	14	;volatile
  1482                           
  1483                           ;main.c: 148: _delay((unsigned long)((600)*(8000000/4000.0)));
  1484  0FF0  3007               	movlw	7
  1485  0FF1  1283               	bcf	3,5	;RP0=0, select bank0
  1486  0FF2  1303               	bcf	3,6	;RP1=0, select bank0
  1487  0FF3  00CD               	movwf	??_main+2
  1488  0FF4  3017               	movlw	23
  1489  0FF5  00CC               	movwf	??_main+1
  1490  0FF6  3069               	movlw	105
  1491  0FF7  00CB               	movwf	??_main
  1492  0FF8                     u3927:	
  1493  0FF8  0BCB               	decfsz	??_main,f
  1494  0FF9  2FF8               	goto	u3927
  1495  0FFA  0BCC               	decfsz	??_main+1,f
  1496  0FFB  2FF8               	goto	u3927
  1497  0FFC  0BCD               	decfsz	??_main+2,f
  1498  0FFD  2FF8               	goto	u3927
  1499  0FFE  2FFF               	nop2
  1500  0FFF  2EB7               	goto	l1889
  1501  1000                     __end_of_main:	
  1502                           ;main.c: 149: }
  1503                           ;main.c: 151: return;
  1504                           
  1505                           
  1506                           	psect	text1
  1507  1F94                     __ptext1:	
  1508 ;; *************** function _utoa *****************
  1509 ;; Defined at:
  1510 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\itoa.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  buf             1    wreg     PTR unsigned char 
  1513 ;;		 -> main@str(17), 
  1514 ;;  val             2    8[COMMON] unsigned int 
  1515 ;;  base            2   10[COMMON] int 
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  1518 ;;		 -> main@str(17), 
  1519 ;;  v               2    0[BANK0 ] unsigned int 
  1520 ;;  c               1    2[BANK0 ] unsigned char 
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  1    wreg      PTR unsigned char 
  1523 ;; Registers used:
  1524 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1530 ;;      Params:         4       0       0       0       0
  1531 ;;      Locals:         0       4       0       0       0
  1532 ;;      Temps:          1       0       0       0       0
  1533 ;;      Totals:         5       4       0       0       0
  1534 ;;Total ram usage:        9 bytes
  1535 ;; Hardware stack levels used:    1
  1536 ;; Hardware stack levels required when called:    1
  1537 ;; This function calls:
  1538 ;;		___lwdiv
  1539 ;;		___lwmod
  1540 ;; This function is called by:
  1541 ;;		_main
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           
  1546                           ;psect for function _utoa
  1547  1F94                     _utoa:	
  1548                           
  1549                           ;incstack = 0
  1550                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1551                           ;utoa@buf stored from wreg
  1552  1F94  1283               	bcf	3,5	;RP0=0, select bank0
  1553  1F95  1303               	bcf	3,6	;RP1=0, select bank0
  1554  1F96  00A3               	movwf	utoa@buf
  1555  1F97  0879               	movf	utoa@val+1,w
  1556  1F98  00A1               	movwf	utoa@v+1
  1557  1F99  0878               	movf	utoa@val,w
  1558  1F9A  00A0               	movwf	utoa@v
  1559  1F9B                     l1627:	
  1560  1F9B  087B               	movf	utoa@base+1,w
  1561  1F9C  00F1               	movwf	___lwdiv@divisor+1
  1562  1F9D  087A               	movf	utoa@base,w
  1563  1F9E  00F0               	movwf	___lwdiv@divisor
  1564  1F9F  0821               	movf	utoa@v+1,w
  1565  1FA0  00F3               	movwf	___lwdiv@dividend+1
  1566  1FA1  0820               	movf	utoa@v,w
  1567  1FA2  00F2               	movwf	___lwdiv@dividend
  1568  1FA3  160A  158A  26A1  160A  158A  	fcall	___lwdiv
  1569  1FA8  0871               	movf	?___lwdiv+1,w
  1570  1FA9  1283               	bcf	3,5	;RP0=0, select bank0
  1571  1FAA  1303               	bcf	3,6	;RP1=0, select bank0
  1572  1FAB  00A1               	movwf	utoa@v+1
  1573  1FAC  0870               	movf	?___lwdiv,w
  1574  1FAD  00A0               	movwf	utoa@v
  1575  1FAE  3001               	movlw	1
  1576  1FAF  00FC               	movwf	??_utoa
  1577  1FB0  087C               	movf	??_utoa,w
  1578  1FB1  07A3               	addwf	utoa@buf,f
  1579  1FB2  0820               	movf	utoa@v,w
  1580  1FB3  0421               	iorwf	utoa@v+1,w
  1581  1FB4  1D03               	btfss	3,2
  1582  1FB5  2F9B               	goto	l1627
  1583  1FB6  0823               	movf	utoa@buf,w
  1584  1FB7  0084               	movwf	4
  1585  1FB8  1383               	bcf	3,7	;select IRP bank0
  1586  1FB9  0180               	clrf	0
  1587  1FBA  3001               	movlw	1
  1588  1FBB  02A3               	subwf	utoa@buf,f
  1589  1FBC                     l1637:	
  1590  1FBC  087B               	movf	utoa@base+1,w
  1591  1FBD  00F1               	movwf	___lwmod@divisor+1
  1592  1FBE  087A               	movf	utoa@base,w
  1593  1FBF  00F0               	movwf	___lwmod@divisor
  1594  1FC0  0879               	movf	utoa@val+1,w
  1595  1FC1  00F3               	movwf	___lwmod@dividend+1
  1596  1FC2  0878               	movf	utoa@val,w
  1597  1FC3  00F2               	movwf	___lwmod@dividend
  1598  1FC4  120A  118A  2003  160A  158A  	fcall	___lwmod
  1599  1FC9  0870               	movf	?___lwmod,w
  1600  1FCA  00FC               	movwf	??_utoa
  1601  1FCB  087C               	movf	??_utoa,w
  1602  1FCC  1283               	bcf	3,5	;RP0=0, select bank0
  1603  1FCD  1303               	bcf	3,6	;RP1=0, select bank0
  1604  1FCE  00A2               	movwf	utoa@c
  1605  1FCF  087B               	movf	utoa@base+1,w
  1606  1FD0  00F1               	movwf	___lwdiv@divisor+1
  1607  1FD1  087A               	movf	utoa@base,w
  1608  1FD2  00F0               	movwf	___lwdiv@divisor
  1609  1FD3  0879               	movf	utoa@val+1,w
  1610  1FD4  00F3               	movwf	___lwdiv@dividend+1
  1611  1FD5  0878               	movf	utoa@val,w
  1612  1FD6  00F2               	movwf	___lwdiv@dividend
  1613  1FD7  160A  158A  26A1  160A  158A  	fcall	___lwdiv
  1614  1FDC  0871               	movf	?___lwdiv+1,w
  1615  1FDD  00F9               	movwf	utoa@val+1
  1616  1FDE  0870               	movf	?___lwdiv,w
  1617  1FDF  00F8               	movwf	utoa@val
  1618  1FE0  300A               	movlw	10
  1619  1FE1  1283               	bcf	3,5	;RP0=0, select bank0
  1620  1FE2  1303               	bcf	3,6	;RP1=0, select bank0
  1621  1FE3  0222               	subwf	utoa@c,w
  1622  1FE4  1C03               	skipc
  1623  1FE5  2FEA               	goto	l546
  1624  1FE6  3007               	movlw	7
  1625  1FE7  00FC               	movwf	??_utoa
  1626  1FE8  087C               	movf	??_utoa,w
  1627  1FE9  07A2               	addwf	utoa@c,f
  1628  1FEA                     l546:	
  1629  1FEA  3030               	movlw	48
  1630  1FEB  00FC               	movwf	??_utoa
  1631  1FEC  087C               	movf	??_utoa,w
  1632  1FED  07A2               	addwf	utoa@c,f
  1633  1FEE  0822               	movf	utoa@c,w
  1634  1FEF  00FC               	movwf	??_utoa
  1635  1FF0  0823               	movf	utoa@buf,w
  1636  1FF1  0084               	movwf	4
  1637  1FF2  087C               	movf	??_utoa,w
  1638  1FF3  1383               	bcf	3,7	;select IRP bank0
  1639  1FF4  0080               	movwf	0
  1640  1FF5  3001               	movlw	1
  1641  1FF6  02A3               	subwf	utoa@buf,f
  1642  1FF7  0878               	movf	utoa@val,w
  1643  1FF8  0479               	iorwf	utoa@val+1,w
  1644  1FF9  1D03               	btfss	3,2
  1645  1FFA  2FBC               	goto	l1637
  1646                           
  1647                           ;	Return value of _utoa is never used
  1648  1FFB  3001               	movlw	1
  1649  1FFC  00FC               	movwf	??_utoa
  1650  1FFD  087C               	movf	??_utoa,w
  1651  1FFE  07A3               	addwf	utoa@buf,f
  1652  1FFF  0008               	return
  1653  2000                     __end_of_utoa:	
  1654                           
  1655                           	psect	text2
  1656  0003                     __ptext2:	
  1657 ;; *************** function ___lwmod *****************
  1658 ;; Defined at:
  1659 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;  divisor         2    0[COMMON] unsigned int 
  1662 ;;  dividend        2    2[COMMON] unsigned int 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  counter         1    5[COMMON] unsigned char 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  2    0[COMMON] unsigned int 
  1667 ;; Registers used:
  1668 ;;		wreg, status,2, status,0
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1674 ;;      Params:         4       0       0       0       0
  1675 ;;      Locals:         1       0       0       0       0
  1676 ;;      Temps:          1       0       0       0       0
  1677 ;;      Totals:         6       0       0       0       0
  1678 ;;Total ram usage:        6 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; This function calls:
  1681 ;;		Nothing
  1682 ;; This function is called by:
  1683 ;;		_utoa
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           
  1688                           ;psect for function ___lwmod
  1689  0003                     ___lwmod:	
  1690                           
  1691                           ;incstack = 0
  1692                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1693  0003  0870               	movf	___lwmod@divisor,w
  1694  0004  0471               	iorwf	___lwmod@divisor+1,w
  1695  0005  1903               	btfsc	3,2
  1696  0006  2830               	goto	l1555
  1697  0007  01F5               	clrf	___lwmod@counter
  1698  0008  0AF5               	incf	___lwmod@counter,f
  1699  0009                     l1545:	
  1700  0009  1BF1               	btfsc	___lwmod@divisor+1,7
  1701  000A  2817               	goto	l1547
  1702  000B  3001               	movlw	1
  1703  000C                     u3255:	
  1704  000C  1003               	clrc
  1705  000D  0DF0               	rlf	___lwmod@divisor,f
  1706  000E  0DF1               	rlf	___lwmod@divisor+1,f
  1707  000F  3EFF               	addlw	-1
  1708  0010  1D03               	skipz
  1709  0011  280C               	goto	u3255
  1710  0012  3001               	movlw	1
  1711  0013  00F4               	movwf	??___lwmod
  1712  0014  0874               	movf	??___lwmod,w
  1713  0015  07F5               	addwf	___lwmod@counter,f
  1714  0016  2809               	goto	l1545
  1715  0017                     l1547:	
  1716  0017  0871               	movf	___lwmod@divisor+1,w
  1717  0018  0273               	subwf	___lwmod@dividend+1,w
  1718  0019  1D03               	skipz
  1719  001A  281D               	goto	u3275
  1720  001B  0870               	movf	___lwmod@divisor,w
  1721  001C  0272               	subwf	___lwmod@dividend,w
  1722  001D                     u3275:	
  1723  001D  1C03               	skipc
  1724  001E  2825               	goto	l1551
  1725  001F  0870               	movf	___lwmod@divisor,w
  1726  0020  02F2               	subwf	___lwmod@dividend,f
  1727  0021  0871               	movf	___lwmod@divisor+1,w
  1728  0022  1C03               	skipc
  1729  0023  03F3               	decf	___lwmod@dividend+1,f
  1730  0024  02F3               	subwf	___lwmod@dividend+1,f
  1731  0025                     l1551:	
  1732  0025  3001               	movlw	1
  1733  0026                     u3285:	
  1734  0026  1003               	clrc
  1735  0027  0CF1               	rrf	___lwmod@divisor+1,f
  1736  0028  0CF0               	rrf	___lwmod@divisor,f
  1737  0029  3EFF               	addlw	-1
  1738  002A  1D03               	skipz
  1739  002B  2826               	goto	u3285
  1740  002C  3001               	movlw	1
  1741  002D  02F5               	subwf	___lwmod@counter,f
  1742  002E  1D03               	btfss	3,2
  1743  002F  2817               	goto	l1547
  1744  0030                     l1555:	
  1745  0030  0873               	movf	___lwmod@dividend+1,w
  1746  0031  00F1               	movwf	?___lwmod+1
  1747  0032  0872               	movf	___lwmod@dividend,w
  1748  0033  00F0               	movwf	?___lwmod
  1749  0034  0008               	return
  1750  0035                     __end_of___lwmod:	
  1751                           
  1752                           	psect	text3
  1753  1EA1                     __ptext3:	
  1754 ;; *************** function ___lwdiv *****************
  1755 ;; Defined at:
  1756 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  divisor         2    0[COMMON] unsigned int 
  1759 ;;  dividend        2    2[COMMON] unsigned int 
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;  quotient        2    5[COMMON] unsigned int 
  1762 ;;  counter         1    7[COMMON] unsigned char 
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  2    0[COMMON] unsigned int 
  1765 ;; Registers used:
  1766 ;;		wreg, status,2, status,0
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1772 ;;      Params:         4       0       0       0       0
  1773 ;;      Locals:         3       0       0       0       0
  1774 ;;      Temps:          1       0       0       0       0
  1775 ;;      Totals:         8       0       0       0       0
  1776 ;;Total ram usage:        8 bytes
  1777 ;; Hardware stack levels used:    1
  1778 ;; This function calls:
  1779 ;;		Nothing
  1780 ;; This function is called by:
  1781 ;;		_utoa
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           
  1786                           ;psect for function ___lwdiv
  1787  1EA1                     ___lwdiv:	
  1788                           
  1789                           ;incstack = 0
  1790                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1791  1EA1  01F5               	clrf	___lwdiv@quotient
  1792  1EA2  01F6               	clrf	___lwdiv@quotient+1
  1793  1EA3  0870               	movf	___lwdiv@divisor,w
  1794  1EA4  0471               	iorwf	___lwdiv@divisor+1,w
  1795  1EA5  1903               	btfsc	3,2
  1796  1EA6  2ED8               	goto	l1533
  1797  1EA7  01F7               	clrf	___lwdiv@counter
  1798  1EA8  0AF7               	incf	___lwdiv@counter,f
  1799  1EA9                     l1521:	
  1800  1EA9  1BF1               	btfsc	___lwdiv@divisor+1,7
  1801  1EAA  2EB7               	goto	l1523
  1802  1EAB  3001               	movlw	1
  1803  1EAC                     u3185:	
  1804  1EAC  1003               	clrc
  1805  1EAD  0DF0               	rlf	___lwdiv@divisor,f
  1806  1EAE  0DF1               	rlf	___lwdiv@divisor+1,f
  1807  1EAF  3EFF               	addlw	-1
  1808  1EB0  1D03               	skipz
  1809  1EB1  2EAC               	goto	u3185
  1810  1EB2  3001               	movlw	1
  1811  1EB3  00F4               	movwf	??___lwdiv
  1812  1EB4  0874               	movf	??___lwdiv,w
  1813  1EB5  07F7               	addwf	___lwdiv@counter,f
  1814  1EB6  2EA9               	goto	l1521
  1815  1EB7                     l1523:	
  1816  1EB7  3001               	movlw	1
  1817  1EB8                     u3205:	
  1818  1EB8  1003               	clrc
  1819  1EB9  0DF5               	rlf	___lwdiv@quotient,f
  1820  1EBA  0DF6               	rlf	___lwdiv@quotient+1,f
  1821  1EBB  3EFF               	addlw	-1
  1822  1EBC  1D03               	skipz
  1823  1EBD  2EB8               	goto	u3205
  1824  1EBE  0871               	movf	___lwdiv@divisor+1,w
  1825  1EBF  0273               	subwf	___lwdiv@dividend+1,w
  1826  1EC0  1D03               	skipz
  1827  1EC1  2EC4               	goto	u3215
  1828  1EC2  0870               	movf	___lwdiv@divisor,w
  1829  1EC3  0272               	subwf	___lwdiv@dividend,w
  1830  1EC4                     u3215:	
  1831  1EC4  1C03               	skipc
  1832  1EC5  2ECD               	goto	l1529
  1833  1EC6  0870               	movf	___lwdiv@divisor,w
  1834  1EC7  02F2               	subwf	___lwdiv@dividend,f
  1835  1EC8  0871               	movf	___lwdiv@divisor+1,w
  1836  1EC9  1C03               	skipc
  1837  1ECA  03F3               	decf	___lwdiv@dividend+1,f
  1838  1ECB  02F3               	subwf	___lwdiv@dividend+1,f
  1839  1ECC  1475               	bsf	___lwdiv@quotient,0
  1840  1ECD                     l1529:	
  1841  1ECD  3001               	movlw	1
  1842  1ECE                     u3225:	
  1843  1ECE  1003               	clrc
  1844  1ECF  0CF1               	rrf	___lwdiv@divisor+1,f
  1845  1ED0  0CF0               	rrf	___lwdiv@divisor,f
  1846  1ED1  3EFF               	addlw	-1
  1847  1ED2  1D03               	skipz
  1848  1ED3  2ECE               	goto	u3225
  1849  1ED4  3001               	movlw	1
  1850  1ED5  02F7               	subwf	___lwdiv@counter,f
  1851  1ED6  1D03               	btfss	3,2
  1852  1ED7  2EB7               	goto	l1523
  1853  1ED8                     l1533:	
  1854  1ED8  0876               	movf	___lwdiv@quotient+1,w
  1855  1ED9  00F1               	movwf	?___lwdiv+1
  1856  1EDA  0875               	movf	___lwdiv@quotient,w
  1857  1EDB  00F0               	movwf	?___lwdiv
  1858  1EDC  0008               	return
  1859  1EDD                     __end_of___lwdiv:	
  1860                           
  1861                           	psect	text4
  1862  10D1                     __ptext4:	
  1863 ;; *************** function _displayNumber *****************
  1864 ;; Defined at:
  1865 ;;		line 69 in file "lcd.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  num             2    9[BANK0 ] int 
  1868 ;;  D1              1   11[BANK0 ] PTR struct .
  1869 ;;		 -> main@D1(28), 
  1870 ;;  D2              1   12[BANK0 ] PTR struct .
  1871 ;;		 -> main@D2(28), 
  1872 ;;  D3              1   13[BANK0 ] PTR struct .
  1873 ;;		 -> main@D3(28), 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;		None
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         0       5       0       0       0
  1886 ;;      Locals:         0       0       0       0       0
  1887 ;;      Temps:          0       0       0       0       0
  1888 ;;      Totals:         0       5       0       0       0
  1889 ;;Total ram usage:        5 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    1
  1892 ;; This function calls:
  1893 ;;		___awdiv
  1894 ;;		___awmod
  1895 ;;		_displayDigit
  1896 ;; This function is called by:
  1897 ;;		_main
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           
  1902                           ;psect for function _displayNumber
  1903  10D1                     _displayNumber:	
  1904                           
  1905                           ;lcd.c: 71: displayDigit(num/100, D3 );
  1906                           
  1907                           ;incstack = 0
  1908                           ; Regs used in _displayNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1909  10D1  3064               	movlw	100
  1910  10D2  00F0               	movwf	___awdiv@divisor
  1911  10D3  3000               	movlw	0
  1912  10D4  00F1               	movwf	___awdiv@divisor+1
  1913  10D5  1283               	bcf	3,5	;RP0=0, select bank0
  1914  10D6  1303               	bcf	3,6	;RP1=0, select bank0
  1915  10D7  082A               	movf	displayNumber@num+1,w
  1916  10D8  00F3               	movwf	___awdiv@dividend+1
  1917  10D9  0829               	movf	displayNumber@num,w
  1918  10DA  00F2               	movwf	___awdiv@dividend
  1919  10DB  160A  118A  2004  160A  118A  	fcall	___awdiv
  1920  10E0  0871               	movf	?___awdiv+1,w
  1921  10E1  00FA               	movwf	displayDigit@digito+1
  1922  10E2  0870               	movf	?___awdiv,w
  1923  10E3  00F9               	movwf	displayDigit@digito
  1924  10E4  1283               	bcf	3,5	;RP0=0, select bank0
  1925  10E5  1303               	bcf	3,6	;RP1=0, select bank0
  1926  10E6  082D               	movf	displayNumber@D3,w
  1927  10E7  00FB               	movwf	displayDigit@D1
  1928  10E8  3001               	movlw	1
  1929  10E9  00FC               	movwf	displayDigit@D1+1
  1930  10EA  160A  118A  25D9  160A  118A  	fcall	_displayDigit
  1931                           
  1932                           ;lcd.c: 72: num %=100;
  1933  10EF  3064               	movlw	100
  1934  10F0  00F0               	movwf	___awmod@divisor
  1935  10F1  3000               	movlw	0
  1936  10F2  00F1               	movwf	___awmod@divisor+1
  1937  10F3  1283               	bcf	3,5	;RP0=0, select bank0
  1938  10F4  1303               	bcf	3,6	;RP1=0, select bank0
  1939  10F5  082A               	movf	displayNumber@num+1,w
  1940  10F6  00F3               	movwf	___awmod@dividend+1
  1941  10F7  0829               	movf	displayNumber@num,w
  1942  10F8  00F2               	movwf	___awmod@dividend
  1943  10F9  160A  158A  26DD  160A  118A  	fcall	___awmod
  1944  10FE  0871               	movf	?___awmod+1,w
  1945  10FF  1283               	bcf	3,5	;RP0=0, select bank0
  1946  1100  1303               	bcf	3,6	;RP1=0, select bank0
  1947  1101  00AA               	movwf	displayNumber@num+1
  1948  1102  0870               	movf	?___awmod,w
  1949  1103  00A9               	movwf	displayNumber@num
  1950                           
  1951                           ;lcd.c: 74: displayDigit(num/10, D2);
  1952  1104  300A               	movlw	10
  1953  1105  00F0               	movwf	___awdiv@divisor
  1954  1106  3000               	movlw	0
  1955  1107  00F1               	movwf	___awdiv@divisor+1
  1956  1108  082A               	movf	displayNumber@num+1,w
  1957  1109  00F3               	movwf	___awdiv@dividend+1
  1958  110A  0829               	movf	displayNumber@num,w
  1959  110B  00F2               	movwf	___awdiv@dividend
  1960  110C  160A  118A  2004  160A  118A  	fcall	___awdiv
  1961  1111  0871               	movf	?___awdiv+1,w
  1962  1112  00FA               	movwf	displayDigit@digito+1
  1963  1113  0870               	movf	?___awdiv,w
  1964  1114  00F9               	movwf	displayDigit@digito
  1965  1115  1283               	bcf	3,5	;RP0=0, select bank0
  1966  1116  1303               	bcf	3,6	;RP1=0, select bank0
  1967  1117  082C               	movf	displayNumber@D2,w
  1968  1118  00FB               	movwf	displayDigit@D1
  1969  1119  3000               	movlw	0
  1970  111A  00FC               	movwf	displayDigit@D1+1
  1971  111B  160A  118A  25D9  160A  118A  	fcall	_displayDigit
  1972                           
  1973                           ;lcd.c: 75: num %=10;
  1974  1120  300A               	movlw	10
  1975  1121  00F0               	movwf	___awmod@divisor
  1976  1122  3000               	movlw	0
  1977  1123  00F1               	movwf	___awmod@divisor+1
  1978  1124  1283               	bcf	3,5	;RP0=0, select bank0
  1979  1125  1303               	bcf	3,6	;RP1=0, select bank0
  1980  1126  082A               	movf	displayNumber@num+1,w
  1981  1127  00F3               	movwf	___awmod@dividend+1
  1982  1128  0829               	movf	displayNumber@num,w
  1983  1129  00F2               	movwf	___awmod@dividend
  1984  112A  160A  158A  26DD  160A  118A  	fcall	___awmod
  1985  112F  0871               	movf	?___awmod+1,w
  1986  1130  1283               	bcf	3,5	;RP0=0, select bank0
  1987  1131  1303               	bcf	3,6	;RP1=0, select bank0
  1988  1132  00AA               	movwf	displayNumber@num+1
  1989  1133  0870               	movf	?___awmod,w
  1990  1134  00A9               	movwf	displayNumber@num
  1991                           
  1992                           ;lcd.c: 76: ((LCDDATA10) |= (1UL) << (3));
  1993  1135  1283               	bcf	3,5	;RP0=0, select bank2
  1994  1136  1703               	bsf	3,6	;RP1=1, select bank2
  1995  1137  159A               	bsf	26,3	;volatile
  1996                           
  1997                           ;lcd.c: 78: displayDigit(num, D1);
  1998  1138  1283               	bcf	3,5	;RP0=0, select bank0
  1999  1139  1303               	bcf	3,6	;RP1=0, select bank0
  2000  113A  082A               	movf	displayNumber@num+1,w
  2001  113B  00FA               	movwf	displayDigit@digito+1
  2002  113C  0829               	movf	displayNumber@num,w
  2003  113D  00F9               	movwf	displayDigit@digito
  2004  113E  082B               	movf	displayNumber@D1,w
  2005  113F  00FB               	movwf	displayDigit@D1
  2006  1140  3000               	movlw	0
  2007  1141  00FC               	movwf	displayDigit@D1+1
  2008  1142  160A  118A  25D9   	fcall	_displayDigit
  2009  1145  0008               	return
  2010  1146                     __end_of_displayNumber:	
  2011                           
  2012                           	psect	text5
  2013  15D9                     __ptext5:	
  2014 ;; *************** function _displayDigit *****************
  2015 ;; Defined at:
  2016 ;;		line 83 in file "lcd.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;  digito          2    9[COMMON] int 
  2019 ;;  D1              2   11[COMMON] PTR struct .
  2020 ;;		 -> main@D3(28), main@D2(28), main@D1(28), 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;		None
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      void 
  2025 ;; Registers used:
  2026 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2032 ;;      Params:         4       0       0       0       0
  2033 ;;      Locals:         0       0       0       0       0
  2034 ;;      Temps:          0       9       0       0       0
  2035 ;;      Totals:         4       9       0       0       0
  2036 ;;Total ram usage:       13 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; This function calls:
  2039 ;;		Nothing
  2040 ;; This function is called by:
  2041 ;;		_displayNumber
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           
  2046                           ;psect for function _displayDigit
  2047  15D9                     _displayDigit:	
  2048                           
  2049                           ;lcd.c: 84: switch(digito){
  2050                           
  2051                           ;incstack = 0
  2052                           ; Regs used in _displayDigit: [wreg-fsr0h+status,2+status,0]
  2053  15D9  120A  118A  2FB5   	goto	l1351
  2054  15DC                     l1327:	
  2055                           ;lcd.c: 85: case 0:
  2056                           
  2057                           
  2058                           ;lcd.c: 86: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  2059  15DC  300E               	movlw	14
  2060  15DD  077B               	addwf	displayDigit@D1,w
  2061  15DE  1283               	bcf	3,5	;RP0=0, select bank0
  2062  15DF  1303               	bcf	3,6	;RP1=0, select bank0
  2063  15E0  00A0               	movwf	??_displayDigit
  2064  15E1  087C               	movf	displayDigit@D1+1,w
  2065  15E2  1803               	skipnc
  2066  15E3  3E01               	addlw	1
  2067  15E4  00A1               	movwf	??_displayDigit+1
  2068  15E5  0820               	movf	??_displayDigit,w
  2069  15E6  0084               	movwf	4
  2070  15E7  1783               	bsf	3,7
  2071  15E8  1C21               	btfss	??_displayDigit+1,0
  2072  15E9  1383               	bcf	3,7
  2073  15EA  0A00               	incf	0,w
  2074  15EB  00A2               	movwf	??_displayDigit+2
  2075  15EC  3001               	movlw	1
  2076  15ED  00A3               	movwf	??_displayDigit+3
  2077  15EE  3000               	movlw	0
  2078  15EF  00A4               	movwf	??_displayDigit+4
  2079  15F0  2DF4               	goto	u1994
  2080  15F1                     u1995:	
  2081  15F1  1003               	clrc
  2082  15F2  0DA3               	rlf	??_displayDigit+3,f
  2083  15F3  0DA4               	rlf	??_displayDigit+4,f
  2084  15F4                     u1994:	
  2085  15F4  0BA2               	decfsz	??_displayDigit+2,f
  2086  15F5  2DF1               	goto	u1995
  2087  15F6  087B               	movf	displayDigit@D1,w
  2088  15F7  0084               	movwf	4
  2089  15F8  1783               	bsf	3,7
  2090  15F9  1C7C               	btfss	displayDigit@D1+1,0
  2091  15FA  1383               	bcf	3,7
  2092  15FB  0800               	movf	0,w
  2093  15FC  00A5               	movwf	??_displayDigit+5
  2094  15FD  0A84               	incf	4,f
  2095  15FE  0800               	movf	0,w
  2096  15FF  00A6               	movwf	??_displayDigit+6
  2097  1600  0825               	movf	??_displayDigit+5,w
  2098  1601  0084               	movwf	4
  2099  1602  1783               	bsf	3,7
  2100  1603  1C26               	btfss	??_displayDigit+6,0
  2101  1604  1383               	bcf	3,7
  2102  1605  0823               	movf	??_displayDigit+3,w
  2103  1606  0480               	iorwf	0,f
  2104  1607  0A84               	incf	4,f
  2105  1608  0824               	movf	??_displayDigit+4,w
  2106  1609  0480               	iorwf	0,f
  2107                           
  2108                           ;lcd.c: 87: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  2109  160A  3010               	movlw	16
  2110  160B  077B               	addwf	displayDigit@D1,w
  2111  160C  00A0               	movwf	??_displayDigit
  2112  160D  087C               	movf	displayDigit@D1+1,w
  2113  160E  1803               	skipnc
  2114  160F  3E01               	addlw	1
  2115  1610  00A1               	movwf	??_displayDigit+1
  2116  1611  0820               	movf	??_displayDigit,w
  2117  1612  0084               	movwf	4
  2118  1613  1783               	bsf	3,7
  2119  1614  1C21               	btfss	??_displayDigit+1,0
  2120  1615  1383               	bcf	3,7
  2121  1616  0A00               	incf	0,w
  2122  1617  00A2               	movwf	??_displayDigit+2
  2123  1618  3001               	movlw	1
  2124  1619  00A3               	movwf	??_displayDigit+3
  2125  161A  3000               	movlw	0
  2126  161B  00A4               	movwf	??_displayDigit+4
  2127  161C  2E20               	goto	u2004
  2128  161D                     u2005:	
  2129  161D  1003               	clrc
  2130  161E  0DA3               	rlf	??_displayDigit+3,f
  2131  161F  0DA4               	rlf	??_displayDigit+4,f
  2132  1620                     u2004:	
  2133  1620  0BA2               	decfsz	??_displayDigit+2,f
  2134  1621  2E1D               	goto	u2005
  2135  1622  3002               	movlw	2
  2136  1623  077B               	addwf	displayDigit@D1,w
  2137  1624  00A5               	movwf	??_displayDigit+5
  2138  1625  087C               	movf	displayDigit@D1+1,w
  2139  1626  1803               	skipnc
  2140  1627  3E01               	addlw	1
  2141  1628  00A6               	movwf	??_displayDigit+6
  2142  1629  0825               	movf	??_displayDigit+5,w
  2143  162A  0084               	movwf	4
  2144  162B  1783               	bsf	3,7
  2145  162C  1C26               	btfss	??_displayDigit+6,0
  2146  162D  1383               	bcf	3,7
  2147  162E  0800               	movf	0,w
  2148  162F  00A7               	movwf	??_displayDigit+7
  2149  1630  0A84               	incf	4,f
  2150  1631  0800               	movf	0,w
  2151  1632  00A8               	movwf	??_displayDigit+8
  2152  1633  0827               	movf	??_displayDigit+7,w
  2153  1634  0084               	movwf	4
  2154  1635  1783               	bsf	3,7
  2155  1636  1C28               	btfss	??_displayDigit+8,0
  2156  1637  1383               	bcf	3,7
  2157  1638  0823               	movf	??_displayDigit+3,w
  2158  1639  0480               	iorwf	0,f
  2159  163A  0A84               	incf	4,f
  2160  163B  0824               	movf	??_displayDigit+4,w
  2161  163C  0480               	iorwf	0,f
  2162                           
  2163                           ;lcd.c: 88: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  2164  163D  3012               	movlw	18
  2165  163E  077B               	addwf	displayDigit@D1,w
  2166  163F  00A0               	movwf	??_displayDigit
  2167  1640  087C               	movf	displayDigit@D1+1,w
  2168  1641  1803               	skipnc
  2169  1642  3E01               	addlw	1
  2170  1643  00A1               	movwf	??_displayDigit+1
  2171  1644  0820               	movf	??_displayDigit,w
  2172  1645  0084               	movwf	4
  2173  1646  1783               	bsf	3,7
  2174  1647  1C21               	btfss	??_displayDigit+1,0
  2175  1648  1383               	bcf	3,7
  2176  1649  0A00               	incf	0,w
  2177  164A  00A2               	movwf	??_displayDigit+2
  2178  164B  3001               	movlw	1
  2179  164C  00A3               	movwf	??_displayDigit+3
  2180  164D  3000               	movlw	0
  2181  164E  00A4               	movwf	??_displayDigit+4
  2182  164F  2E53               	goto	u2014
  2183  1650                     u2015:	
  2184  1650  1003               	clrc
  2185  1651  0DA3               	rlf	??_displayDigit+3,f
  2186  1652  0DA4               	rlf	??_displayDigit+4,f
  2187  1653                     u2014:	
  2188  1653  0BA2               	decfsz	??_displayDigit+2,f
  2189  1654  2E50               	goto	u2015
  2190  1655  3004               	movlw	4
  2191  1656  077B               	addwf	displayDigit@D1,w
  2192  1657  00A5               	movwf	??_displayDigit+5
  2193  1658  087C               	movf	displayDigit@D1+1,w
  2194  1659  1803               	skipnc
  2195  165A  3E01               	addlw	1
  2196  165B  00A6               	movwf	??_displayDigit+6
  2197  165C  0825               	movf	??_displayDigit+5,w
  2198  165D  0084               	movwf	4
  2199  165E  1783               	bsf	3,7
  2200  165F  1C26               	btfss	??_displayDigit+6,0
  2201  1660  1383               	bcf	3,7
  2202  1661  0800               	movf	0,w
  2203  1662  00A7               	movwf	??_displayDigit+7
  2204  1663  0A84               	incf	4,f
  2205  1664  0800               	movf	0,w
  2206  1665  00A8               	movwf	??_displayDigit+8
  2207  1666  0827               	movf	??_displayDigit+7,w
  2208  1667  0084               	movwf	4
  2209  1668  1783               	bsf	3,7
  2210  1669  1C28               	btfss	??_displayDigit+8,0
  2211  166A  1383               	bcf	3,7
  2212  166B  0823               	movf	??_displayDigit+3,w
  2213  166C  0480               	iorwf	0,f
  2214  166D  0A84               	incf	4,f
  2215  166E  0824               	movf	??_displayDigit+4,w
  2216  166F  0480               	iorwf	0,f
  2217                           
  2218                           ;lcd.c: 89: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  2219  1670  3014               	movlw	20
  2220  1671  077B               	addwf	displayDigit@D1,w
  2221  1672  00A0               	movwf	??_displayDigit
  2222  1673  087C               	movf	displayDigit@D1+1,w
  2223  1674  1803               	skipnc
  2224  1675  3E01               	addlw	1
  2225  1676  00A1               	movwf	??_displayDigit+1
  2226  1677  0820               	movf	??_displayDigit,w
  2227  1678  0084               	movwf	4
  2228  1679  1783               	bsf	3,7
  2229  167A  1C21               	btfss	??_displayDigit+1,0
  2230  167B  1383               	bcf	3,7
  2231  167C  0A00               	incf	0,w
  2232  167D  00A2               	movwf	??_displayDigit+2
  2233  167E  3001               	movlw	1
  2234  167F  00A3               	movwf	??_displayDigit+3
  2235  1680  3000               	movlw	0
  2236  1681  00A4               	movwf	??_displayDigit+4
  2237  1682  2E86               	goto	u2024
  2238  1683                     u2025:	
  2239  1683  1003               	clrc
  2240  1684  0DA3               	rlf	??_displayDigit+3,f
  2241  1685  0DA4               	rlf	??_displayDigit+4,f
  2242  1686                     u2024:	
  2243  1686  0BA2               	decfsz	??_displayDigit+2,f
  2244  1687  2E83               	goto	u2025
  2245  1688  3006               	movlw	6
  2246  1689  077B               	addwf	displayDigit@D1,w
  2247  168A  00A5               	movwf	??_displayDigit+5
  2248  168B  087C               	movf	displayDigit@D1+1,w
  2249  168C  1803               	skipnc
  2250  168D  3E01               	addlw	1
  2251  168E  00A6               	movwf	??_displayDigit+6
  2252  168F  0825               	movf	??_displayDigit+5,w
  2253  1690  0084               	movwf	4
  2254  1691  1783               	bsf	3,7
  2255  1692  1C26               	btfss	??_displayDigit+6,0
  2256  1693  1383               	bcf	3,7
  2257  1694  0800               	movf	0,w
  2258  1695  00A7               	movwf	??_displayDigit+7
  2259  1696  0A84               	incf	4,f
  2260  1697  0800               	movf	0,w
  2261  1698  00A8               	movwf	??_displayDigit+8
  2262  1699  0827               	movf	??_displayDigit+7,w
  2263  169A  0084               	movwf	4
  2264  169B  1783               	bsf	3,7
  2265  169C  1C28               	btfss	??_displayDigit+8,0
  2266  169D  1383               	bcf	3,7
  2267  169E  0823               	movf	??_displayDigit+3,w
  2268  169F  0480               	iorwf	0,f
  2269  16A0  0A84               	incf	4,f
  2270  16A1  0824               	movf	??_displayDigit+4,w
  2271  16A2  0480               	iorwf	0,f
  2272                           
  2273                           ;lcd.c: 90: ((*D1->se) |= (1UL) << (D1->bits[4]));
  2274  16A3  3016               	movlw	22
  2275  16A4  077B               	addwf	displayDigit@D1,w
  2276  16A5  00A0               	movwf	??_displayDigit
  2277  16A6  087C               	movf	displayDigit@D1+1,w
  2278  16A7  1803               	skipnc
  2279  16A8  3E01               	addlw	1
  2280  16A9  00A1               	movwf	??_displayDigit+1
  2281  16AA  0820               	movf	??_displayDigit,w
  2282  16AB  0084               	movwf	4
  2283  16AC  1783               	bsf	3,7
  2284  16AD  1C21               	btfss	??_displayDigit+1,0
  2285  16AE  1383               	bcf	3,7
  2286  16AF  0A00               	incf	0,w
  2287  16B0  00A2               	movwf	??_displayDigit+2
  2288  16B1  3001               	movlw	1
  2289  16B2  00A3               	movwf	??_displayDigit+3
  2290  16B3  3000               	movlw	0
  2291  16B4  00A4               	movwf	??_displayDigit+4
  2292  16B5  2EB9               	goto	u2034
  2293  16B6                     u2035:	
  2294  16B6  1003               	clrc
  2295  16B7  0DA3               	rlf	??_displayDigit+3,f
  2296  16B8  0DA4               	rlf	??_displayDigit+4,f
  2297  16B9                     u2034:	
  2298  16B9  0BA2               	decfsz	??_displayDigit+2,f
  2299  16BA  2EB6               	goto	u2035
  2300  16BB  3008               	movlw	8
  2301  16BC  077B               	addwf	displayDigit@D1,w
  2302  16BD  00A5               	movwf	??_displayDigit+5
  2303  16BE  087C               	movf	displayDigit@D1+1,w
  2304  16BF  1803               	skipnc
  2305  16C0  3E01               	addlw	1
  2306  16C1  00A6               	movwf	??_displayDigit+6
  2307  16C2  0825               	movf	??_displayDigit+5,w
  2308  16C3  0084               	movwf	4
  2309  16C4  1783               	bsf	3,7
  2310  16C5  1C26               	btfss	??_displayDigit+6,0
  2311  16C6  1383               	bcf	3,7
  2312  16C7  0800               	movf	0,w
  2313  16C8  00A7               	movwf	??_displayDigit+7
  2314  16C9  0A84               	incf	4,f
  2315  16CA  0800               	movf	0,w
  2316  16CB  00A8               	movwf	??_displayDigit+8
  2317  16CC  0827               	movf	??_displayDigit+7,w
  2318  16CD  0084               	movwf	4
  2319  16CE  1783               	bsf	3,7
  2320  16CF  1C28               	btfss	??_displayDigit+8,0
  2321  16D0  1383               	bcf	3,7
  2322  16D1  0823               	movf	??_displayDigit+3,w
  2323  16D2  0480               	iorwf	0,f
  2324  16D3  0A84               	incf	4,f
  2325  16D4  0824               	movf	??_displayDigit+4,w
  2326  16D5  0480               	iorwf	0,f
  2327                           
  2328                           ;lcd.c: 91: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  2329  16D6  3018               	movlw	24
  2330  16D7  077B               	addwf	displayDigit@D1,w
  2331  16D8  00A0               	movwf	??_displayDigit
  2332  16D9  087C               	movf	displayDigit@D1+1,w
  2333  16DA  1803               	skipnc
  2334  16DB  3E01               	addlw	1
  2335  16DC  00A1               	movwf	??_displayDigit+1
  2336  16DD  0820               	movf	??_displayDigit,w
  2337  16DE  0084               	movwf	4
  2338  16DF  1783               	bsf	3,7
  2339  16E0  1C21               	btfss	??_displayDigit+1,0
  2340  16E1  1383               	bcf	3,7
  2341  16E2  0A00               	incf	0,w
  2342  16E3  00A2               	movwf	??_displayDigit+2
  2343  16E4  3001               	movlw	1
  2344  16E5  00A3               	movwf	??_displayDigit+3
  2345  16E6  3000               	movlw	0
  2346  16E7  00A4               	movwf	??_displayDigit+4
  2347  16E8  120A  158A  2B0D   	goto	u2044
  2348                           
  2349                           	psect	text6
  2350  1EDD                     __ptext6:	
  2351 ;; *************** function ___awmod *****************
  2352 ;; Defined at:
  2353 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awmod.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  divisor         2    0[COMMON] int 
  2356 ;;  dividend        2    2[COMMON] int 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  sign            1    6[COMMON] unsigned char 
  2359 ;;  counter         1    5[COMMON] unsigned char 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  2    0[COMMON] int 
  2362 ;; Registers used:
  2363 ;;		wreg, status,2, status,0
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2369 ;;      Params:         4       0       0       0       0
  2370 ;;      Locals:         2       0       0       0       0
  2371 ;;      Temps:          1       0       0       0       0
  2372 ;;      Totals:         7       0       0       0       0
  2373 ;;Total ram usage:        7 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; This function calls:
  2376 ;;		Nothing
  2377 ;; This function is called by:
  2378 ;;		_displayNumber
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           
  2383                           ;psect for function ___awmod
  2384  1EDD                     ___awmod:	
  2385                           
  2386                           ;incstack = 0
  2387                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2388  1EDD  01F6               	clrf	___awmod@sign
  2389  1EDE  1FF3               	btfss	___awmod@dividend+1,7
  2390  1EDF  2EE7               	goto	l1481
  2391  1EE0  09F2               	comf	___awmod@dividend,f
  2392  1EE1  09F3               	comf	___awmod@dividend+1,f
  2393  1EE2  0AF2               	incf	___awmod@dividend,f
  2394  1EE3  1903               	skipnz
  2395  1EE4  0AF3               	incf	___awmod@dividend+1,f
  2396  1EE5  01F6               	clrf	___awmod@sign
  2397  1EE6  0AF6               	incf	___awmod@sign,f
  2398  1EE7                     l1481:	
  2399  1EE7  1FF1               	btfss	___awmod@divisor+1,7
  2400  1EE8  2EEE               	goto	l1485
  2401  1EE9  09F0               	comf	___awmod@divisor,f
  2402  1EEA  09F1               	comf	___awmod@divisor+1,f
  2403  1EEB  0AF0               	incf	___awmod@divisor,f
  2404  1EEC  1903               	skipnz
  2405  1EED  0AF1               	incf	___awmod@divisor+1,f
  2406  1EEE                     l1485:	
  2407  1EEE  0870               	movf	___awmod@divisor,w
  2408  1EEF  0471               	iorwf	___awmod@divisor+1,w
  2409  1EF0  1903               	btfsc	3,2
  2410  1EF1  2F1B               	goto	l1503
  2411  1EF2  01F5               	clrf	___awmod@counter
  2412  1EF3  0AF5               	incf	___awmod@counter,f
  2413  1EF4                     l1493:	
  2414  1EF4  1BF1               	btfsc	___awmod@divisor+1,7
  2415  1EF5  2F02               	goto	l1495
  2416  1EF6  3001               	movlw	1
  2417  1EF7                     u3115:	
  2418  1EF7  1003               	clrc
  2419  1EF8  0DF0               	rlf	___awmod@divisor,f
  2420  1EF9  0DF1               	rlf	___awmod@divisor+1,f
  2421  1EFA  3EFF               	addlw	-1
  2422  1EFB  1D03               	skipz
  2423  1EFC  2EF7               	goto	u3115
  2424  1EFD  3001               	movlw	1
  2425  1EFE  00F4               	movwf	??___awmod
  2426  1EFF  0874               	movf	??___awmod,w
  2427  1F00  07F5               	addwf	___awmod@counter,f
  2428  1F01  2EF4               	goto	l1493
  2429  1F02                     l1495:	
  2430  1F02  0871               	movf	___awmod@divisor+1,w
  2431  1F03  0273               	subwf	___awmod@dividend+1,w
  2432  1F04  1D03               	skipz
  2433  1F05  2F08               	goto	u3135
  2434  1F06  0870               	movf	___awmod@divisor,w
  2435  1F07  0272               	subwf	___awmod@dividend,w
  2436  1F08                     u3135:	
  2437  1F08  1C03               	skipc
  2438  1F09  2F10               	goto	l1499
  2439  1F0A  0870               	movf	___awmod@divisor,w
  2440  1F0B  02F2               	subwf	___awmod@dividend,f
  2441  1F0C  0871               	movf	___awmod@divisor+1,w
  2442  1F0D  1C03               	skipc
  2443  1F0E  03F3               	decf	___awmod@dividend+1,f
  2444  1F0F  02F3               	subwf	___awmod@dividend+1,f
  2445  1F10                     l1499:	
  2446  1F10  3001               	movlw	1
  2447  1F11                     u3145:	
  2448  1F11  1003               	clrc
  2449  1F12  0CF1               	rrf	___awmod@divisor+1,f
  2450  1F13  0CF0               	rrf	___awmod@divisor,f
  2451  1F14  3EFF               	addlw	-1
  2452  1F15  1D03               	skipz
  2453  1F16  2F11               	goto	u3145
  2454  1F17  3001               	movlw	1
  2455  1F18  02F5               	subwf	___awmod@counter,f
  2456  1F19  1D03               	btfss	3,2
  2457  1F1A  2F02               	goto	l1495
  2458  1F1B                     l1503:	
  2459  1F1B  0876               	movf	___awmod@sign,w
  2460  1F1C  1903               	btfsc	3,2
  2461  1F1D  2F23               	goto	l1507
  2462  1F1E  09F2               	comf	___awmod@dividend,f
  2463  1F1F  09F3               	comf	___awmod@dividend+1,f
  2464  1F20  0AF2               	incf	___awmod@dividend,f
  2465  1F21  1903               	skipnz
  2466  1F22  0AF3               	incf	___awmod@dividend+1,f
  2467  1F23                     l1507:	
  2468  1F23  0873               	movf	___awmod@dividend+1,w
  2469  1F24  00F1               	movwf	?___awmod+1
  2470  1F25  0872               	movf	___awmod@dividend,w
  2471  1F26  00F0               	movwf	?___awmod
  2472  1F27  0008               	return
  2473  1F28                     __end_of___awmod:	
  2474                           
  2475                           	psect	text7
  2476  1004                     __ptext7:	
  2477 ;; *************** function ___awdiv *****************
  2478 ;; Defined at:
  2479 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  divisor         2    0[COMMON] int 
  2482 ;;  dividend        2    2[COMMON] int 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  quotient        2    7[COMMON] int 
  2485 ;;  sign            1    6[COMMON] unsigned char 
  2486 ;;  counter         1    5[COMMON] unsigned char 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  2    0[COMMON] int 
  2489 ;; Registers used:
  2490 ;;		wreg, status,2, status,0
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2496 ;;      Params:         4       0       0       0       0
  2497 ;;      Locals:         4       0       0       0       0
  2498 ;;      Temps:          1       0       0       0       0
  2499 ;;      Totals:         9       0       0       0       0
  2500 ;;Total ram usage:        9 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_displayNumber
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           
  2510                           ;psect for function ___awdiv
  2511  1004                     ___awdiv:	
  2512                           
  2513                           ;incstack = 0
  2514                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2515  1004  01F6               	clrf	___awdiv@sign
  2516  1005  1FF1               	btfss	___awdiv@divisor+1,7
  2517  1006  280E               	goto	l1437
  2518  1007  09F0               	comf	___awdiv@divisor,f
  2519  1008  09F1               	comf	___awdiv@divisor+1,f
  2520  1009  0AF0               	incf	___awdiv@divisor,f
  2521  100A  1903               	skipnz
  2522  100B  0AF1               	incf	___awdiv@divisor+1,f
  2523  100C  01F6               	clrf	___awdiv@sign
  2524  100D  0AF6               	incf	___awdiv@sign,f
  2525  100E                     l1437:	
  2526  100E  1FF3               	btfss	___awdiv@dividend+1,7
  2527  100F  2819               	goto	l1443
  2528  1010  09F2               	comf	___awdiv@dividend,f
  2529  1011  09F3               	comf	___awdiv@dividend+1,f
  2530  1012  0AF2               	incf	___awdiv@dividend,f
  2531  1013  1903               	skipnz
  2532  1014  0AF3               	incf	___awdiv@dividend+1,f
  2533  1015  3001               	movlw	1
  2534  1016  00F4               	movwf	??___awdiv
  2535  1017  0874               	movf	??___awdiv,w
  2536  1018  06F6               	xorwf	___awdiv@sign,f
  2537  1019                     l1443:	
  2538  1019  01F7               	clrf	___awdiv@quotient
  2539  101A  01F8               	clrf	___awdiv@quotient+1
  2540  101B  0870               	movf	___awdiv@divisor,w
  2541  101C  0471               	iorwf	___awdiv@divisor+1,w
  2542  101D  1903               	btfsc	3,2
  2543  101E  2850               	goto	l1465
  2544  101F  01F5               	clrf	___awdiv@counter
  2545  1020  0AF5               	incf	___awdiv@counter,f
  2546  1021                     l1453:	
  2547  1021  1BF1               	btfsc	___awdiv@divisor+1,7
  2548  1022  282F               	goto	l1455
  2549  1023  3001               	movlw	1
  2550  1024                     u3015:	
  2551  1024  1003               	clrc
  2552  1025  0DF0               	rlf	___awdiv@divisor,f
  2553  1026  0DF1               	rlf	___awdiv@divisor+1,f
  2554  1027  3EFF               	addlw	-1
  2555  1028  1D03               	skipz
  2556  1029  2824               	goto	u3015
  2557  102A  3001               	movlw	1
  2558  102B  00F4               	movwf	??___awdiv
  2559  102C  0874               	movf	??___awdiv,w
  2560  102D  07F5               	addwf	___awdiv@counter,f
  2561  102E  2821               	goto	l1453
  2562  102F                     l1455:	
  2563  102F  3001               	movlw	1
  2564  1030                     u3035:	
  2565  1030  1003               	clrc
  2566  1031  0DF7               	rlf	___awdiv@quotient,f
  2567  1032  0DF8               	rlf	___awdiv@quotient+1,f
  2568  1033  3EFF               	addlw	-1
  2569  1034  1D03               	skipz
  2570  1035  2830               	goto	u3035
  2571  1036  0871               	movf	___awdiv@divisor+1,w
  2572  1037  0273               	subwf	___awdiv@dividend+1,w
  2573  1038  1D03               	skipz
  2574  1039  283C               	goto	u3045
  2575  103A  0870               	movf	___awdiv@divisor,w
  2576  103B  0272               	subwf	___awdiv@dividend,w
  2577  103C                     u3045:	
  2578  103C  1C03               	skipc
  2579  103D  2845               	goto	l1461
  2580  103E  0870               	movf	___awdiv@divisor,w
  2581  103F  02F2               	subwf	___awdiv@dividend,f
  2582  1040  0871               	movf	___awdiv@divisor+1,w
  2583  1041  1C03               	skipc
  2584  1042  03F3               	decf	___awdiv@dividend+1,f
  2585  1043  02F3               	subwf	___awdiv@dividend+1,f
  2586  1044  1477               	bsf	___awdiv@quotient,0
  2587  1045                     l1461:	
  2588  1045  3001               	movlw	1
  2589  1046                     u3055:	
  2590  1046  1003               	clrc
  2591  1047  0CF1               	rrf	___awdiv@divisor+1,f
  2592  1048  0CF0               	rrf	___awdiv@divisor,f
  2593  1049  3EFF               	addlw	-1
  2594  104A  1D03               	skipz
  2595  104B  2846               	goto	u3055
  2596  104C  3001               	movlw	1
  2597  104D  02F5               	subwf	___awdiv@counter,f
  2598  104E  1D03               	btfss	3,2
  2599  104F  282F               	goto	l1455
  2600  1050                     l1465:	
  2601  1050  0876               	movf	___awdiv@sign,w
  2602  1051  1903               	btfsc	3,2
  2603  1052  2858               	goto	l1469
  2604  1053  09F7               	comf	___awdiv@quotient,f
  2605  1054  09F8               	comf	___awdiv@quotient+1,f
  2606  1055  0AF7               	incf	___awdiv@quotient,f
  2607  1056  1903               	skipnz
  2608  1057  0AF8               	incf	___awdiv@quotient+1,f
  2609  1058                     l1469:	
  2610  1058  0878               	movf	___awdiv@quotient+1,w
  2611  1059  00F1               	movwf	?___awdiv+1
  2612  105A  0877               	movf	___awdiv@quotient,w
  2613  105B  00F0               	movwf	?___awdiv
  2614  105C  0008               	return
  2615  105D                     __end_of___awdiv:	
  2616                           
  2617                           	psect	text8
  2618  125E                     __ptext8:	
  2619 ;; *************** function ___fttol *****************
  2620 ;; Defined at:
  2621 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fttol.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;  f1              3   29[BANK0 ] float 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;  lval            4   38[BANK0 ] unsigned long 
  2626 ;;  exp1            1   42[BANK0 ] unsigned char 
  2627 ;;  sign1           1   37[BANK0 ] unsigned char 
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  4   29[BANK0 ] long 
  2630 ;; Registers used:
  2631 ;;		wreg, status,2, status,0
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2637 ;;      Params:         0       4       0       0       0
  2638 ;;      Locals:         0       6       0       0       0
  2639 ;;      Temps:          0       4       0       0       0
  2640 ;;      Totals:         0      14       0       0       0
  2641 ;;Total ram usage:       14 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; This function calls:
  2644 ;;		Nothing
  2645 ;; This function is called by:
  2646 ;;		_main
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           
  2651                           ;psect for function ___fttol
  2652  125E                     ___fttol:	
  2653                           
  2654                           ;incstack = 0
  2655                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2656  125E  1283               	bcf	3,5	;RP0=0, select bank0
  2657  125F  1303               	bcf	3,6	;RP1=0, select bank0
  2658  1260  083D               	movf	___fttol@f1,w
  2659  1261  00C1               	movwf	??___fttol
  2660  1262  083E               	movf	___fttol@f1+1,w
  2661  1263  00C2               	movwf	??___fttol+1
  2662  1264  083F               	movf	___fttol@f1+2,w
  2663  1265  00C3               	movwf	??___fttol+2
  2664  1266  1003               	clrc
  2665  1267  0D42               	rlf	??___fttol+1,w
  2666  1268  0D43               	rlf	??___fttol+2,w
  2667  1269  00C4               	movwf	??___fttol+3
  2668  126A  0844               	movf	??___fttol+3,w
  2669  126B  00CA               	movwf	___fttol@exp1
  2670  126C  084A               	movf	___fttol@exp1,w
  2671  126D  1D03               	btfss	3,2
  2672  126E  2A78               	goto	l1793
  2673  126F  3000               	movlw	0
  2674  1270  00C0               	movwf	?___fttol+3
  2675  1271  3000               	movlw	0
  2676  1272  00BF               	movwf	?___fttol+2
  2677  1273  3000               	movlw	0
  2678  1274  00BE               	movwf	?___fttol+1
  2679  1275  3000               	movlw	0
  2680  1276  00BD               	movwf	?___fttol
  2681  1277  0008               	return
  2682  1278                     l1793:	
  2683  1278  083D               	movf	___fttol@f1,w
  2684  1279  00C1               	movwf	??___fttol
  2685  127A  083E               	movf	___fttol@f1+1,w
  2686  127B  00C2               	movwf	??___fttol+1
  2687  127C  083F               	movf	___fttol@f1+2,w
  2688  127D  00C3               	movwf	??___fttol+2
  2689  127E  3017               	movlw	23
  2690  127F                     u3775:	
  2691  127F  1003               	clrc
  2692  1280  0CC3               	rrf	??___fttol+2,f
  2693  1281  0CC2               	rrf	??___fttol+1,f
  2694  1282  0CC1               	rrf	??___fttol,f
  2695  1283  3EFF               	addlw	-1
  2696  1284  1D03               	skipz
  2697  1285  2A7F               	goto	u3775
  2698  1286  0841               	movf	??___fttol,w
  2699  1287  00C4               	movwf	??___fttol+3
  2700  1288  0844               	movf	??___fttol+3,w
  2701  1289  00C5               	movwf	___fttol@sign1
  2702  128A  17BE               	bsf	___fttol@f1+1,7
  2703  128B  30FF               	movlw	255
  2704  128C  05BD               	andwf	___fttol@f1,f
  2705  128D  30FF               	movlw	255
  2706  128E  05BE               	andwf	___fttol@f1+1,f
  2707  128F  3000               	movlw	0
  2708  1290  05BF               	andwf	___fttol@f1+2,f
  2709  1291  083D               	movf	___fttol@f1,w
  2710  1292  00C6               	movwf	___fttol@lval
  2711  1293  083E               	movf	___fttol@f1+1,w
  2712  1294  00C7               	movwf	___fttol@lval+1
  2713  1295  083F               	movf	___fttol@f1+2,w
  2714  1296  00C8               	movwf	___fttol@lval+2
  2715  1297  01C9               	clrf	___fttol@lval+3
  2716  1298  308E               	movlw	142
  2717  1299  02CA               	subwf	___fttol@exp1,f
  2718  129A  1FCA               	btfss	___fttol@exp1,7
  2719  129B  2ABA               	goto	l1813
  2720  129C  084A               	movf	___fttol@exp1,w
  2721  129D  3A80               	xorlw	128
  2722  129E  3E8F               	addlw	143
  2723  129F  1803               	skipnc
  2724  12A0  2AAA               	goto	l1811
  2725  12A1  3000               	movlw	0
  2726  12A2  00C0               	movwf	?___fttol+3
  2727  12A3  3000               	movlw	0
  2728  12A4  00BF               	movwf	?___fttol+2
  2729  12A5  3000               	movlw	0
  2730  12A6  00BE               	movwf	?___fttol+1
  2731  12A7  3000               	movlw	0
  2732  12A8  00BD               	movwf	?___fttol
  2733  12A9  0008               	return
  2734  12AA                     l1811:	
  2735  12AA  3001               	movlw	1
  2736  12AB                     u3805:	
  2737  12AB  1003               	clrc
  2738  12AC  0CC9               	rrf	___fttol@lval+3,f
  2739  12AD  0CC8               	rrf	___fttol@lval+2,f
  2740  12AE  0CC7               	rrf	___fttol@lval+1,f
  2741  12AF  0CC6               	rrf	___fttol@lval,f
  2742  12B0  3EFF               	addlw	-1
  2743  12B1  1D03               	skipz
  2744  12B2  2AAB               	goto	u3805
  2745  12B3  3001               	movlw	1
  2746  12B4  00C1               	movwf	??___fttol
  2747  12B5  0841               	movf	??___fttol,w
  2748  12B6  07CA               	addwf	___fttol@exp1,f
  2749  12B7  1903               	btfsc	3,2
  2750  12B8  2AD5               	goto	l1821
  2751  12B9  2AAA               	goto	l1811
  2752  12BA                     l1813:	
  2753  12BA  3018               	movlw	24
  2754  12BB  024A               	subwf	___fttol@exp1,w
  2755  12BC  1C03               	skipc
  2756  12BD  2AD2               	goto	l531
  2757  12BE  3000               	movlw	0
  2758  12BF  00C0               	movwf	?___fttol+3
  2759  12C0  3000               	movlw	0
  2760  12C1  00BF               	movwf	?___fttol+2
  2761  12C2  3000               	movlw	0
  2762  12C3  00BE               	movwf	?___fttol+1
  2763  12C4  3000               	movlw	0
  2764  12C5  00BD               	movwf	?___fttol
  2765  12C6  0008               	return
  2766  12C7                     l1819:	
  2767  12C7  3001               	movlw	1
  2768  12C8  00C1               	movwf	??___fttol
  2769  12C9                     u3835:	
  2770  12C9  1003               	clrc
  2771  12CA  0DC6               	rlf	___fttol@lval,f
  2772  12CB  0DC7               	rlf	___fttol@lval+1,f
  2773  12CC  0DC8               	rlf	___fttol@lval+2,f
  2774  12CD  0DC9               	rlf	___fttol@lval+3,f
  2775  12CE  0BC1               	decfsz	??___fttol,f
  2776  12CF  2AC9               	goto	u3835
  2777  12D0  3001               	movlw	1
  2778  12D1  02CA               	subwf	___fttol@exp1,f
  2779  12D2                     l531:	
  2780  12D2  084A               	movf	___fttol@exp1,w
  2781  12D3  1D03               	btfss	3,2
  2782  12D4  2AC7               	goto	l1819
  2783  12D5                     l1821:	
  2784  12D5  0845               	movf	___fttol@sign1,w
  2785  12D6  1903               	btfsc	3,2
  2786  12D7  2AE3               	goto	l1825
  2787  12D8  09C6               	comf	___fttol@lval,f
  2788  12D9  09C7               	comf	___fttol@lval+1,f
  2789  12DA  09C8               	comf	___fttol@lval+2,f
  2790  12DB  09C9               	comf	___fttol@lval+3,f
  2791  12DC  0AC6               	incf	___fttol@lval,f
  2792  12DD  1903               	skipnz
  2793  12DE  0AC7               	incf	___fttol@lval+1,f
  2794  12DF  1903               	skipnz
  2795  12E0  0AC8               	incf	___fttol@lval+2,f
  2796  12E1  1903               	skipnz
  2797  12E2  0AC9               	incf	___fttol@lval+3,f
  2798  12E3                     l1825:	
  2799  12E3  0849               	movf	___fttol@lval+3,w
  2800  12E4  00C0               	movwf	?___fttol+3
  2801  12E5  0848               	movf	___fttol@lval+2,w
  2802  12E6  00BF               	movwf	?___fttol+2
  2803  12E7  0847               	movf	___fttol@lval+1,w
  2804  12E8  00BE               	movwf	?___fttol+1
  2805  12E9  0846               	movf	___fttol@lval,w
  2806  12EA  00BD               	movwf	?___fttol
  2807  12EB  0008               	return
  2808  12EC                     __end_of___fttol:	
  2809                           
  2810                           	psect	text9
  2811  12EC                     __ptext9:	
  2812 ;; *************** function ___ftmul *****************
  2813 ;; Defined at:
  2814 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  f1              3    0[BANK0 ] float 
  2817 ;;  f2              3    3[BANK0 ] float 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  2820 ;;  sign            1   15[BANK0 ] unsigned char 
  2821 ;;  cntr            1   14[BANK0 ] unsigned char 
  2822 ;;  exp             1   10[BANK0 ] unsigned char 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  3    0[BANK0 ] float 
  2825 ;; Registers used:
  2826 ;;		wreg, status,2, status,0, pclath, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2832 ;;      Params:         0       6       0       0       0
  2833 ;;      Locals:         0       6       0       0       0
  2834 ;;      Temps:          0       4       0       0       0
  2835 ;;      Totals:         0      16       0       0       0
  2836 ;;Total ram usage:       16 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    1
  2839 ;; This function calls:
  2840 ;;		___ftpack
  2841 ;; This function is called by:
  2842 ;;		_main
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           
  2847                           ;psect for function ___ftmul
  2848  12EC                     ___ftmul:	
  2849                           
  2850                           ;incstack = 0
  2851                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2852  12EC  1283               	bcf	3,5	;RP0=0, select bank0
  2853  12ED  1303               	bcf	3,6	;RP1=0, select bank0
  2854  12EE  0820               	movf	___ftmul@f1,w
  2855  12EF  00A6               	movwf	??___ftmul
  2856  12F0  0821               	movf	___ftmul@f1+1,w
  2857  12F1  00A7               	movwf	??___ftmul+1
  2858  12F2  0822               	movf	___ftmul@f1+2,w
  2859  12F3  00A8               	movwf	??___ftmul+2
  2860  12F4  1003               	clrc
  2861  12F5  0D27               	rlf	??___ftmul+1,w
  2862  12F6  0D28               	rlf	??___ftmul+2,w
  2863  12F7  00A9               	movwf	??___ftmul+3
  2864  12F8  0829               	movf	??___ftmul+3,w
  2865  12F9  00AA               	movwf	___ftmul@exp
  2866  12FA  082A               	movf	___ftmul@exp,w
  2867  12FB  1D03               	btfss	3,2
  2868  12FC  2B04               	goto	l1743
  2869  12FD  3000               	movlw	0
  2870  12FE  00A0               	movwf	?___ftmul
  2871  12FF  3000               	movlw	0
  2872  1300  00A1               	movwf	?___ftmul+1
  2873  1301  3000               	movlw	0
  2874  1302  00A2               	movwf	?___ftmul+2
  2875  1303  0008               	return
  2876  1304                     l1743:	
  2877  1304  0823               	movf	___ftmul@f2,w
  2878  1305  00A6               	movwf	??___ftmul
  2879  1306  0824               	movf	___ftmul@f2+1,w
  2880  1307  00A7               	movwf	??___ftmul+1
  2881  1308  0825               	movf	___ftmul@f2+2,w
  2882  1309  00A8               	movwf	??___ftmul+2
  2883  130A  1003               	clrc
  2884  130B  0D27               	rlf	??___ftmul+1,w
  2885  130C  0D28               	rlf	??___ftmul+2,w
  2886  130D  00A9               	movwf	??___ftmul+3
  2887  130E  0829               	movf	??___ftmul+3,w
  2888  130F  00AF               	movwf	___ftmul@sign
  2889  1310  082F               	movf	___ftmul@sign,w
  2890  1311  1D03               	btfss	3,2
  2891  1312  2B1A               	goto	l1749
  2892  1313  3000               	movlw	0
  2893  1314  00A0               	movwf	?___ftmul
  2894  1315  3000               	movlw	0
  2895  1316  00A1               	movwf	?___ftmul+1
  2896  1317  3000               	movlw	0
  2897  1318  00A2               	movwf	?___ftmul+2
  2898  1319  0008               	return
  2899  131A                     l1749:	
  2900  131A  082F               	movf	___ftmul@sign,w
  2901  131B  3E7B               	addlw	123
  2902  131C  00A6               	movwf	??___ftmul
  2903  131D  0826               	movf	??___ftmul,w
  2904  131E  07AA               	addwf	___ftmul@exp,f
  2905  131F  0820               	movf	___ftmul@f1,w
  2906  1320  00A6               	movwf	??___ftmul
  2907  1321  0821               	movf	___ftmul@f1+1,w
  2908  1322  00A7               	movwf	??___ftmul+1
  2909  1323  0822               	movf	___ftmul@f1+2,w
  2910  1324  00A8               	movwf	??___ftmul+2
  2911  1325  3010               	movlw	16
  2912  1326                     u3645:	
  2913  1326  1003               	clrc
  2914  1327  0CA8               	rrf	??___ftmul+2,f
  2915  1328  0CA7               	rrf	??___ftmul+1,f
  2916  1329  0CA6               	rrf	??___ftmul,f
  2917  132A  3EFF               	addlw	-1
  2918  132B  1D03               	skipz
  2919  132C  2B26               	goto	u3645
  2920  132D  0826               	movf	??___ftmul,w
  2921  132E  00A9               	movwf	??___ftmul+3
  2922  132F  0829               	movf	??___ftmul+3,w
  2923  1330  00AF               	movwf	___ftmul@sign
  2924  1331  0823               	movf	___ftmul@f2,w
  2925  1332  00A6               	movwf	??___ftmul
  2926  1333  0824               	movf	___ftmul@f2+1,w
  2927  1334  00A7               	movwf	??___ftmul+1
  2928  1335  0825               	movf	___ftmul@f2+2,w
  2929  1336  00A8               	movwf	??___ftmul+2
  2930  1337  3010               	movlw	16
  2931  1338                     u3655:	
  2932  1338  1003               	clrc
  2933  1339  0CA8               	rrf	??___ftmul+2,f
  2934  133A  0CA7               	rrf	??___ftmul+1,f
  2935  133B  0CA6               	rrf	??___ftmul,f
  2936  133C  3EFF               	addlw	-1
  2937  133D  1D03               	skipz
  2938  133E  2B38               	goto	u3655
  2939  133F  0826               	movf	??___ftmul,w
  2940  1340  00A9               	movwf	??___ftmul+3
  2941  1341  0829               	movf	??___ftmul+3,w
  2942  1342  06AF               	xorwf	___ftmul@sign,f
  2943  1343  3080               	movlw	128
  2944  1344  00A6               	movwf	??___ftmul
  2945  1345  0826               	movf	??___ftmul,w
  2946  1346  05AF               	andwf	___ftmul@sign,f
  2947  1347  17A1               	bsf	___ftmul@f1+1,7
  2948  1348  17A4               	bsf	___ftmul@f2+1,7
  2949  1349  30FF               	movlw	255
  2950  134A  05A3               	andwf	___ftmul@f2,f
  2951  134B  30FF               	movlw	255
  2952  134C  05A4               	andwf	___ftmul@f2+1,f
  2953  134D  3000               	movlw	0
  2954  134E  05A5               	andwf	___ftmul@f2+2,f
  2955  134F  3000               	movlw	0
  2956  1350  00AB               	movwf	___ftmul@f3_as_product
  2957  1351  3000               	movlw	0
  2958  1352  00AC               	movwf	___ftmul@f3_as_product+1
  2959  1353  3000               	movlw	0
  2960  1354  00AD               	movwf	___ftmul@f3_as_product+2
  2961  1355  3007               	movlw	7
  2962  1356  00A6               	movwf	??___ftmul
  2963  1357  0826               	movf	??___ftmul,w
  2964  1358  00AE               	movwf	___ftmul@cntr
  2965  1359                     l1761:	
  2966  1359  1C20               	btfss	___ftmul@f1,0
  2967  135A  2B69               	goto	l1765
  2968  135B  0823               	movf	___ftmul@f2,w
  2969  135C  07AB               	addwf	___ftmul@f3_as_product,f
  2970  135D  0824               	movf	___ftmul@f2+1,w
  2971  135E  1103               	clrz
  2972  135F  1803               	skipnc
  2973  1360  0A24               	incf	___ftmul@f2+1,w
  2974  1361  1D03               	btfss	3,2
  2975  1362  07AC               	addwf	___ftmul@f3_as_product+1,f
  2976  1363  0825               	movf	___ftmul@f2+2,w
  2977  1364  1103               	clrz
  2978  1365  1803               	skipnc
  2979  1366  0A25               	incf	___ftmul@f2+2,w
  2980  1367  1D03               	btfss	3,2
  2981  1368  07AD               	addwf	___ftmul@f3_as_product+2,f
  2982  1369                     l1765:	
  2983  1369  3001               	movlw	1
  2984  136A                     u3685:	
  2985  136A  1003               	clrc
  2986  136B  0CA2               	rrf	___ftmul@f1+2,f
  2987  136C  0CA1               	rrf	___ftmul@f1+1,f
  2988  136D  0CA0               	rrf	___ftmul@f1,f
  2989  136E  3EFF               	addlw	-1
  2990  136F  1D03               	skipz
  2991  1370  2B6A               	goto	u3685
  2992  1371  3001               	movlw	1
  2993  1372                     u3695:	
  2994  1372  1003               	clrc
  2995  1373  0DA3               	rlf	___ftmul@f2,f
  2996  1374  0DA4               	rlf	___ftmul@f2+1,f
  2997  1375  0DA5               	rlf	___ftmul@f2+2,f
  2998  1376  3EFF               	addlw	-1
  2999  1377  1D03               	skipz
  3000  1378  2B72               	goto	u3695
  3001  1379  3001               	movlw	1
  3002  137A  02AE               	subwf	___ftmul@cntr,f
  3003  137B  1D03               	btfss	3,2
  3004  137C  2B59               	goto	l1761
  3005  137D  3009               	movlw	9
  3006  137E  00A6               	movwf	??___ftmul
  3007  137F  0826               	movf	??___ftmul,w
  3008  1380  00AE               	movwf	___ftmul@cntr
  3009  1381                     l1773:	
  3010  1381  1C20               	btfss	___ftmul@f1,0
  3011  1382  2B91               	goto	l1777
  3012  1383  0823               	movf	___ftmul@f2,w
  3013  1384  07AB               	addwf	___ftmul@f3_as_product,f
  3014  1385  0824               	movf	___ftmul@f2+1,w
  3015  1386  1103               	clrz
  3016  1387  1803               	skipnc
  3017  1388  0A24               	incf	___ftmul@f2+1,w
  3018  1389  1D03               	btfss	3,2
  3019  138A  07AC               	addwf	___ftmul@f3_as_product+1,f
  3020  138B  0825               	movf	___ftmul@f2+2,w
  3021  138C  1103               	clrz
  3022  138D  1803               	skipnc
  3023  138E  0A25               	incf	___ftmul@f2+2,w
  3024  138F  1D03               	btfss	3,2
  3025  1390  07AD               	addwf	___ftmul@f3_as_product+2,f
  3026  1391                     l1777:	
  3027  1391  3001               	movlw	1
  3028  1392                     u3735:	
  3029  1392  1003               	clrc
  3030  1393  0CA2               	rrf	___ftmul@f1+2,f
  3031  1394  0CA1               	rrf	___ftmul@f1+1,f
  3032  1395  0CA0               	rrf	___ftmul@f1,f
  3033  1396  3EFF               	addlw	-1
  3034  1397  1D03               	skipz
  3035  1398  2B92               	goto	u3735
  3036  1399  3001               	movlw	1
  3037  139A                     u3745:	
  3038  139A  1003               	clrc
  3039  139B  0CAD               	rrf	___ftmul@f3_as_product+2,f
  3040  139C  0CAC               	rrf	___ftmul@f3_as_product+1,f
  3041  139D  0CAB               	rrf	___ftmul@f3_as_product,f
  3042  139E  3EFF               	addlw	-1
  3043  139F  1D03               	skipz
  3044  13A0  2B9A               	goto	u3745
  3045  13A1  3001               	movlw	1
  3046  13A2  02AE               	subwf	___ftmul@cntr,f
  3047  13A3  1D03               	btfss	3,2
  3048  13A4  2B81               	goto	l1773
  3049  13A5  082B               	movf	___ftmul@f3_as_product,w
  3050  13A6  00F0               	movwf	___ftpack@arg
  3051  13A7  082C               	movf	___ftmul@f3_as_product+1,w
  3052  13A8  00F1               	movwf	___ftpack@arg+1
  3053  13A9  082D               	movf	___ftmul@f3_as_product+2,w
  3054  13AA  00F2               	movwf	___ftpack@arg+2
  3055  13AB  082A               	movf	___ftmul@exp,w
  3056  13AC  00A6               	movwf	??___ftmul
  3057  13AD  0826               	movf	??___ftmul,w
  3058  13AE  00F3               	movwf	___ftpack@exp
  3059  13AF  082F               	movf	___ftmul@sign,w
  3060  13B0  00A7               	movwf	??___ftmul+1
  3061  13B1  0827               	movf	??___ftmul+1,w
  3062  13B2  00F4               	movwf	___ftpack@sign
  3063  13B3  160A  158A  2728   	fcall	___ftpack
  3064  13B6  0870               	movf	?___ftpack,w
  3065  13B7  1283               	bcf	3,5	;RP0=0, select bank0
  3066  13B8  1303               	bcf	3,6	;RP1=0, select bank0
  3067  13B9  00A0               	movwf	?___ftmul
  3068  13BA  0871               	movf	?___ftpack+1,w
  3069  13BB  00A1               	movwf	?___ftmul+1
  3070  13BC  0872               	movf	?___ftpack+2,w
  3071  13BD  00A2               	movwf	?___ftmul+2
  3072  13BE  0008               	return
  3073  13BF                     __end_of___ftmul:	
  3074                           
  3075                           	psect	text10
  3076  13BF                     __ptext10:	
  3077 ;; *************** function ___ftadd *****************
  3078 ;; Defined at:
  3079 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftadd.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  f1              3   16[BANK0 ] float 
  3082 ;;  f2              3   19[BANK0 ] float 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;  exp1            1   28[BANK0 ] unsigned char 
  3085 ;;  exp2            1   27[BANK0 ] unsigned char 
  3086 ;;  sign            1   26[BANK0 ] unsigned char 
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  3   16[BANK0 ] float 
  3089 ;; Registers used:
  3090 ;;		wreg, status,2, status,0, pclath, cstack
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3096 ;;      Params:         0       6       0       0       0
  3097 ;;      Locals:         0       3       0       0       0
  3098 ;;      Temps:          0       4       0       0       0
  3099 ;;      Totals:         0      13       0       0       0
  3100 ;;Total ram usage:       13 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:    1
  3103 ;; This function calls:
  3104 ;;		___ftpack
  3105 ;; This function is called by:
  3106 ;;		_main
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           
  3111                           ;psect for function ___ftadd
  3112  13BF                     ___ftadd:	
  3113                           
  3114                           ;incstack = 0
  3115                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3116  13BF  1283               	bcf	3,5	;RP0=0, select bank0
  3117  13C0  1303               	bcf	3,6	;RP1=0, select bank0
  3118  13C1  0830               	movf	___ftadd@f1,w
  3119  13C2  00B6               	movwf	??___ftadd
  3120  13C3  0831               	movf	___ftadd@f1+1,w
  3121  13C4  00B7               	movwf	??___ftadd+1
  3122  13C5  0832               	movf	___ftadd@f1+2,w
  3123  13C6  00B8               	movwf	??___ftadd+2
  3124  13C7  1003               	clrc
  3125  13C8  0D37               	rlf	??___ftadd+1,w
  3126  13C9  0D38               	rlf	??___ftadd+2,w
  3127  13CA  00B9               	movwf	??___ftadd+3
  3128  13CB  0839               	movf	??___ftadd+3,w
  3129  13CC  00BC               	movwf	___ftadd@exp1
  3130  13CD  0833               	movf	___ftadd@f2,w
  3131  13CE  00B6               	movwf	??___ftadd
  3132  13CF  0834               	movf	___ftadd@f2+1,w
  3133  13D0  00B7               	movwf	??___ftadd+1
  3134  13D1  0835               	movf	___ftadd@f2+2,w
  3135  13D2  00B8               	movwf	??___ftadd+2
  3136  13D3  1003               	clrc
  3137  13D4  0D37               	rlf	??___ftadd+1,w
  3138  13D5  0D38               	rlf	??___ftadd+2,w
  3139  13D6  00B9               	movwf	??___ftadd+3
  3140  13D7  0839               	movf	??___ftadd+3,w
  3141  13D8  00BB               	movwf	___ftadd@exp2
  3142  13D9  083C               	movf	___ftadd@exp1,w
  3143  13DA  1903               	btfsc	3,2
  3144  13DB  2BE8               	goto	l1673
  3145  13DC  083B               	movf	___ftadd@exp2,w
  3146  13DD  023C               	subwf	___ftadd@exp1,w
  3147  13DE  1803               	skipnc
  3148  13DF  2BEF               	goto	l1677
  3149  13E0  033C               	decf	___ftadd@exp1,w
  3150  13E1  3AFF               	xorlw	255
  3151  13E2  073B               	addwf	___ftadd@exp2,w
  3152  13E3  00B6               	movwf	??___ftadd
  3153  13E4  3019               	movlw	25
  3154  13E5  0236               	subwf	??___ftadd,w
  3155  13E6  1C03               	skipc
  3156  13E7  2BEF               	goto	l1677
  3157  13E8                     l1673:	
  3158  13E8  0833               	movf	___ftadd@f2,w
  3159  13E9  00B0               	movwf	?___ftadd
  3160  13EA  0834               	movf	___ftadd@f2+1,w
  3161  13EB  00B1               	movwf	?___ftadd+1
  3162  13EC  0835               	movf	___ftadd@f2+2,w
  3163  13ED  00B2               	movwf	?___ftadd+2
  3164  13EE  0008               	return
  3165  13EF                     l1677:	
  3166  13EF  083B               	movf	___ftadd@exp2,w
  3167  13F0  1903               	btfsc	3,2
  3168  13F1  0008               	return
  3169  13F2  083C               	movf	___ftadd@exp1,w
  3170  13F3  023B               	subwf	___ftadd@exp2,w
  3171  13F4  1803               	skipnc
  3172  13F5  2BFE               	goto	l1683
  3173  13F6  033B               	decf	___ftadd@exp2,w
  3174  13F7  3AFF               	xorlw	255
  3175  13F8  073C               	addwf	___ftadd@exp1,w
  3176  13F9  00B6               	movwf	??___ftadd
  3177  13FA  3019               	movlw	25
  3178  13FB  0236               	subwf	??___ftadd,w
  3179  13FC  1803               	btfsc	3,0
  3180  13FD  0008               	return
  3181  13FE                     l1683:	
  3182  13FE  3006               	movlw	6
  3183  13FF  00B6               	movwf	??___ftadd
  3184  1400  0836               	movf	??___ftadd,w
  3185  1401  00BA               	movwf	___ftadd@sign
  3186  1402  1BB2               	btfsc	___ftadd@f1+2,7
  3187  1403  17BA               	bsf	___ftadd@sign,7
  3188  1404  1BB5               	btfsc	___ftadd@f2+2,7
  3189  1405  173A               	bsf	___ftadd@sign,6
  3190  1406  17B1               	bsf	___ftadd@f1+1,7
  3191  1407  30FF               	movlw	255
  3192  1408  05B0               	andwf	___ftadd@f1,f
  3193  1409  30FF               	movlw	255
  3194  140A  05B1               	andwf	___ftadd@f1+1,f
  3195  140B  3000               	movlw	0
  3196  140C  05B2               	andwf	___ftadd@f1+2,f
  3197  140D  17B4               	bsf	___ftadd@f2+1,7
  3198  140E  30FF               	movlw	255
  3199  140F  05B3               	andwf	___ftadd@f2,f
  3200  1410  30FF               	movlw	255
  3201  1411  05B4               	andwf	___ftadd@f2+1,f
  3202  1412  3000               	movlw	0
  3203  1413  05B5               	andwf	___ftadd@f2+2,f
  3204  1414  083B               	movf	___ftadd@exp2,w
  3205  1415  023C               	subwf	___ftadd@exp1,w
  3206  1416  1803               	skipnc
  3207  1417  2C3E               	goto	l1705
  3208  1418                     l1695:	
  3209  1418  3001               	movlw	1
  3210  1419                     u3475:	
  3211  1419  1003               	clrc
  3212  141A  0DB3               	rlf	___ftadd@f2,f
  3213  141B  0DB4               	rlf	___ftadd@f2+1,f
  3214  141C  0DB5               	rlf	___ftadd@f2+2,f
  3215  141D  3EFF               	addlw	-1
  3216  141E  1D03               	skipz
  3217  141F  2C19               	goto	u3475
  3218  1420  3001               	movlw	1
  3219  1421  02BB               	subwf	___ftadd@exp2,f
  3220  1422  083B               	movf	___ftadd@exp2,w
  3221  1423  063C               	xorwf	___ftadd@exp1,w
  3222  1424  1903               	skipnz
  3223  1425  2C39               	goto	l1703
  3224  1426  3001               	movlw	1
  3225  1427  02BA               	subwf	___ftadd@sign,f
  3226  1428  083A               	movf	___ftadd@sign,w
  3227  1429  3907               	andlw	7
  3228  142A  1903               	btfsc	3,2
  3229  142B  2C39               	goto	l1703
  3230  142C  2C18               	goto	l1695
  3231  142D                     l1701:	
  3232  142D  3001               	movlw	1
  3233  142E                     u3505:	
  3234  142E  1003               	clrc
  3235  142F  0CB2               	rrf	___ftadd@f1+2,f
  3236  1430  0CB1               	rrf	___ftadd@f1+1,f
  3237  1431  0CB0               	rrf	___ftadd@f1,f
  3238  1432  3EFF               	addlw	-1
  3239  1433  1D03               	skipz
  3240  1434  2C2E               	goto	u3505
  3241  1435  3001               	movlw	1
  3242  1436  00B6               	movwf	??___ftadd
  3243  1437  0836               	movf	??___ftadd,w
  3244  1438  07BC               	addwf	___ftadd@exp1,f
  3245  1439                     l1703:	
  3246  1439  083C               	movf	___ftadd@exp1,w
  3247  143A  063B               	xorwf	___ftadd@exp2,w
  3248  143B  1903               	btfsc	3,2
  3249  143C  2C67               	goto	l471
  3250  143D  2C2D               	goto	l1701
  3251  143E                     l1705:	
  3252  143E  083C               	movf	___ftadd@exp1,w
  3253  143F  023B               	subwf	___ftadd@exp2,w
  3254  1440  1803               	skipnc
  3255  1441  2C67               	goto	l471
  3256  1442                     l1707:	
  3257  1442  3001               	movlw	1
  3258  1443                     u3535:	
  3259  1443  1003               	clrc
  3260  1444  0DB0               	rlf	___ftadd@f1,f
  3261  1445  0DB1               	rlf	___ftadd@f1+1,f
  3262  1446  0DB2               	rlf	___ftadd@f1+2,f
  3263  1447  3EFF               	addlw	-1
  3264  1448  1D03               	skipz
  3265  1449  2C43               	goto	u3535
  3266  144A  3001               	movlw	1
  3267  144B  02BC               	subwf	___ftadd@exp1,f
  3268  144C  083B               	movf	___ftadd@exp2,w
  3269  144D  063C               	xorwf	___ftadd@exp1,w
  3270  144E  1903               	skipnz
  3271  144F  2C63               	goto	l1715
  3272  1450  3001               	movlw	1
  3273  1451  02BA               	subwf	___ftadd@sign,f
  3274  1452  083A               	movf	___ftadd@sign,w
  3275  1453  3907               	andlw	7
  3276  1454  1903               	btfsc	3,2
  3277  1455  2C63               	goto	l1715
  3278  1456  2C42               	goto	l1707
  3279  1457                     l1713:	
  3280  1457  3001               	movlw	1
  3281  1458                     u3565:	
  3282  1458  1003               	clrc
  3283  1459  0CB5               	rrf	___ftadd@f2+2,f
  3284  145A  0CB4               	rrf	___ftadd@f2+1,f
  3285  145B  0CB3               	rrf	___ftadd@f2,f
  3286  145C  3EFF               	addlw	-1
  3287  145D  1D03               	skipz
  3288  145E  2C58               	goto	u3565
  3289  145F  3001               	movlw	1
  3290  1460  00B6               	movwf	??___ftadd
  3291  1461  0836               	movf	??___ftadd,w
  3292  1462  07BB               	addwf	___ftadd@exp2,f
  3293  1463                     l1715:	
  3294  1463  083C               	movf	___ftadd@exp1,w
  3295  1464  063B               	xorwf	___ftadd@exp2,w
  3296  1465  1D03               	skipz
  3297  1466  2C57               	goto	l1713
  3298  1467                     l471:	
  3299  1467  1FBA               	btfss	___ftadd@sign,7
  3300  1468  2C79               	goto	l1719
  3301  1469  30FF               	movlw	255
  3302  146A  06B0               	xorwf	___ftadd@f1,f
  3303  146B  30FF               	movlw	255
  3304  146C  06B1               	xorwf	___ftadd@f1+1,f
  3305  146D  30FF               	movlw	255
  3306  146E  06B2               	xorwf	___ftadd@f1+2,f
  3307  146F  3001               	movlw	1
  3308  1470  07B0               	addwf	___ftadd@f1,f
  3309  1471  3000               	movlw	0
  3310  1472  1803               	skipnc
  3311  1473  3001               	movlw	1
  3312  1474  07B1               	addwf	___ftadd@f1+1,f
  3313  1475  3000               	movlw	0
  3314  1476  1803               	skipnc
  3315  1477  3001               	movlw	1
  3316  1478  07B2               	addwf	___ftadd@f1+2,f
  3317  1479                     l1719:	
  3318  1479  1F3A               	btfss	___ftadd@sign,6
  3319  147A  2C8B               	goto	l1723
  3320  147B  30FF               	movlw	255
  3321  147C  06B3               	xorwf	___ftadd@f2,f
  3322  147D  30FF               	movlw	255
  3323  147E  06B4               	xorwf	___ftadd@f2+1,f
  3324  147F  30FF               	movlw	255
  3325  1480  06B5               	xorwf	___ftadd@f2+2,f
  3326  1481  3001               	movlw	1
  3327  1482  07B3               	addwf	___ftadd@f2,f
  3328  1483  3000               	movlw	0
  3329  1484  1803               	skipnc
  3330  1485  3001               	movlw	1
  3331  1486  07B4               	addwf	___ftadd@f2+1,f
  3332  1487  3000               	movlw	0
  3333  1488  1803               	skipnc
  3334  1489  3001               	movlw	1
  3335  148A  07B5               	addwf	___ftadd@f2+2,f
  3336  148B                     l1723:	
  3337  148B  01BA               	clrf	___ftadd@sign
  3338  148C  0830               	movf	___ftadd@f1,w
  3339  148D  07B3               	addwf	___ftadd@f2,f
  3340  148E  0831               	movf	___ftadd@f1+1,w
  3341  148F  1103               	clrz
  3342  1490  1803               	skipnc
  3343  1491  0A31               	incf	___ftadd@f1+1,w
  3344  1492  1D03               	btfss	3,2
  3345  1493  07B4               	addwf	___ftadd@f2+1,f
  3346  1494  0832               	movf	___ftadd@f1+2,w
  3347  1495  1103               	clrz
  3348  1496  1803               	skipnc
  3349  1497  0A32               	incf	___ftadd@f1+2,w
  3350  1498  1D03               	btfss	3,2
  3351  1499  07B5               	addwf	___ftadd@f2+2,f
  3352  149A  1FB5               	btfss	___ftadd@f2+2,7
  3353  149B  2CAE               	goto	l1733
  3354  149C  30FF               	movlw	255
  3355  149D  06B3               	xorwf	___ftadd@f2,f
  3356  149E  30FF               	movlw	255
  3357  149F  06B4               	xorwf	___ftadd@f2+1,f
  3358  14A0  30FF               	movlw	255
  3359  14A1  06B5               	xorwf	___ftadd@f2+2,f
  3360  14A2  3001               	movlw	1
  3361  14A3  07B3               	addwf	___ftadd@f2,f
  3362  14A4  3000               	movlw	0
  3363  14A5  1803               	skipnc
  3364  14A6  3001               	movlw	1
  3365  14A7  07B4               	addwf	___ftadd@f2+1,f
  3366  14A8  3000               	movlw	0
  3367  14A9  1803               	skipnc
  3368  14AA  3001               	movlw	1
  3369  14AB  07B5               	addwf	___ftadd@f2+2,f
  3370  14AC  01BA               	clrf	___ftadd@sign
  3371  14AD  0ABA               	incf	___ftadd@sign,f
  3372  14AE                     l1733:	
  3373  14AE  0833               	movf	___ftadd@f2,w
  3374  14AF  00F0               	movwf	___ftpack@arg
  3375  14B0  0834               	movf	___ftadd@f2+1,w
  3376  14B1  00F1               	movwf	___ftpack@arg+1
  3377  14B2  0835               	movf	___ftadd@f2+2,w
  3378  14B3  00F2               	movwf	___ftpack@arg+2
  3379  14B4  083C               	movf	___ftadd@exp1,w
  3380  14B5  00B6               	movwf	??___ftadd
  3381  14B6  0836               	movf	??___ftadd,w
  3382  14B7  00F3               	movwf	___ftpack@exp
  3383  14B8  083A               	movf	___ftadd@sign,w
  3384  14B9  00B7               	movwf	??___ftadd+1
  3385  14BA  0837               	movf	??___ftadd+1,w
  3386  14BB  00F4               	movwf	___ftpack@sign
  3387  14BC  160A  158A  2728   	fcall	___ftpack
  3388  14BF  0870               	movf	?___ftpack,w
  3389  14C0  1283               	bcf	3,5	;RP0=0, select bank0
  3390  14C1  1303               	bcf	3,6	;RP1=0, select bank0
  3391  14C2  00B0               	movwf	?___ftadd
  3392  14C3  0871               	movf	?___ftpack+1,w
  3393  14C4  00B1               	movwf	?___ftadd+1
  3394  14C5  0872               	movf	?___ftpack+2,w
  3395  14C6  00B2               	movwf	?___ftadd+2
  3396  14C7  0008               	return
  3397  14C8                     __end_of___ftadd:	
  3398                           
  3399                           	psect	text11
  3400  1E80                     __ptext11:	
  3401 ;; *************** function ___awtoft *****************
  3402 ;; Defined at:
  3403 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awtoft.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;  c               2    8[COMMON] int 
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;  sign            1   13[COMMON] unsigned char 
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  3    8[COMMON] float 
  3410 ;; Registers used:
  3411 ;;		wreg, status,2, status,0, pclath, cstack
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3417 ;;      Params:         3       0       0       0       0
  3418 ;;      Locals:         1       0       0       0       0
  3419 ;;      Temps:          2       0       0       0       0
  3420 ;;      Totals:         6       0       0       0       0
  3421 ;;Total ram usage:        6 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; Hardware stack levels required when called:    1
  3424 ;; This function calls:
  3425 ;;		___ftpack
  3426 ;; This function is called by:
  3427 ;;		_main
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431                           
  3432                           ;psect for function ___awtoft
  3433  1E80                     ___awtoft:	
  3434                           
  3435                           ;incstack = 0
  3436                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3437  1E80  01FD               	clrf	___awtoft@sign
  3438  1E81  1FF9               	btfss	___awtoft@c+1,7
  3439  1E82  2E8A               	goto	l1663
  3440  1E83  09F8               	comf	___awtoft@c,f
  3441  1E84  09F9               	comf	___awtoft@c+1,f
  3442  1E85  0AF8               	incf	___awtoft@c,f
  3443  1E86  1903               	skipnz
  3444  1E87  0AF9               	incf	___awtoft@c+1,f
  3445  1E88  01FD               	clrf	___awtoft@sign
  3446  1E89  0AFD               	incf	___awtoft@sign,f
  3447  1E8A                     l1663:	
  3448  1E8A  0878               	movf	___awtoft@c,w
  3449  1E8B  00F0               	movwf	___ftpack@arg
  3450  1E8C  0879               	movf	___awtoft@c+1,w
  3451  1E8D  00F1               	movwf	___ftpack@arg+1
  3452  1E8E  01F2               	clrf	___ftpack@arg+2
  3453  1E8F  308E               	movlw	142
  3454  1E90  00FB               	movwf	??___awtoft
  3455  1E91  087B               	movf	??___awtoft,w
  3456  1E92  00F3               	movwf	___ftpack@exp
  3457  1E93  087D               	movf	___awtoft@sign,w
  3458  1E94  00FC               	movwf	??___awtoft+1
  3459  1E95  087C               	movf	??___awtoft+1,w
  3460  1E96  00F4               	movwf	___ftpack@sign
  3461  1E97  160A  158A  2728   	fcall	___ftpack
  3462  1E9A  0870               	movf	?___ftpack,w
  3463  1E9B  00F8               	movwf	?___awtoft
  3464  1E9C  0871               	movf	?___ftpack+1,w
  3465  1E9D  00F9               	movwf	?___awtoft+1
  3466  1E9E  0872               	movf	?___ftpack+2,w
  3467  1E9F  00FA               	movwf	?___awtoft+2
  3468  1EA0  0008               	return
  3469  1EA1                     __end_of___awtoft:	
  3470                           
  3471                           	psect	text12
  3472  1F28                     __ptext12:	
  3473 ;; *************** function ___ftpack *****************
  3474 ;; Defined at:
  3475 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;  arg             3    0[COMMON] unsigned um
  3478 ;;  exp             1    3[COMMON] unsigned char 
  3479 ;;  sign            1    4[COMMON] unsigned char 
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;		None
  3482 ;; Return value:  Size  Location     Type
  3483 ;;                  3    0[COMMON] float 
  3484 ;; Registers used:
  3485 ;;		wreg, status,2, status,0
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3491 ;;      Params:         5       0       0       0       0
  3492 ;;      Locals:         0       0       0       0       0
  3493 ;;      Temps:          3       0       0       0       0
  3494 ;;      Totals:         8       0       0       0       0
  3495 ;;Total ram usage:        8 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; This function calls:
  3498 ;;		Nothing
  3499 ;; This function is called by:
  3500 ;;		___awtoft
  3501 ;;		___ftadd
  3502 ;;		___ftmul
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506                           
  3507                           ;psect for function ___ftpack
  3508  1F28                     ___ftpack:	
  3509                           
  3510                           ;incstack = 0
  3511                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3512  1F28  0873               	movf	___ftpack@exp,w
  3513  1F29  1903               	btfsc	3,2
  3514  1F2A  2F30               	goto	l1361
  3515  1F2B  0872               	movf	___ftpack@arg+2,w
  3516  1F2C  0471               	iorwf	___ftpack@arg+1,w
  3517  1F2D  0470               	iorwf	___ftpack@arg,w
  3518  1F2E  1D03               	skipz
  3519  1F2F  2F43               	goto	l1367
  3520  1F30                     l1361:	
  3521  1F30  3000               	movlw	0
  3522  1F31  00F0               	movwf	?___ftpack
  3523  1F32  3000               	movlw	0
  3524  1F33  00F1               	movwf	?___ftpack+1
  3525  1F34  3000               	movlw	0
  3526  1F35  00F2               	movwf	?___ftpack+2
  3527  1F36  0008               	return
  3528  1F37                     l1365:	
  3529  1F37  3001               	movlw	1
  3530  1F38  00F5               	movwf	??___ftpack
  3531  1F39  0875               	movf	??___ftpack,w
  3532  1F3A  07F3               	addwf	___ftpack@exp,f
  3533  1F3B  3001               	movlw	1
  3534  1F3C                     u2785:	
  3535  1F3C  1003               	clrc
  3536  1F3D  0CF2               	rrf	___ftpack@arg+2,f
  3537  1F3E  0CF1               	rrf	___ftpack@arg+1,f
  3538  1F3F  0CF0               	rrf	___ftpack@arg,f
  3539  1F40  3EFF               	addlw	-1
  3540  1F41  1D03               	skipz
  3541  1F42  2F3C               	goto	u2785
  3542  1F43                     l1367:	
  3543  1F43  30FE               	movlw	254
  3544  1F44  0572               	andwf	___ftpack@arg+2,w
  3545  1F45  1903               	btfsc	3,2
  3546  1F46  2F5E               	goto	l440
  3547  1F47  2F37               	goto	l1365
  3548  1F48                     l1369:	
  3549  1F48  3001               	movlw	1
  3550  1F49  00F5               	movwf	??___ftpack
  3551  1F4A  0875               	movf	??___ftpack,w
  3552  1F4B  07F3               	addwf	___ftpack@exp,f
  3553  1F4C  3001               	movlw	1
  3554  1F4D  07F0               	addwf	___ftpack@arg,f
  3555  1F4E  3000               	movlw	0
  3556  1F4F  1803               	skipnc
  3557  1F50  3001               	movlw	1
  3558  1F51  07F1               	addwf	___ftpack@arg+1,f
  3559  1F52  3000               	movlw	0
  3560  1F53  1803               	skipnc
  3561  1F54  3001               	movlw	1
  3562  1F55  07F2               	addwf	___ftpack@arg+2,f
  3563  1F56  3001               	movlw	1
  3564  1F57                     u2805:	
  3565  1F57  1003               	clrc
  3566  1F58  0CF2               	rrf	___ftpack@arg+2,f
  3567  1F59  0CF1               	rrf	___ftpack@arg+1,f
  3568  1F5A  0CF0               	rrf	___ftpack@arg,f
  3569  1F5B  3EFF               	addlw	-1
  3570  1F5C  1D03               	skipz
  3571  1F5D  2F57               	goto	u2805
  3572  1F5E                     l440:	
  3573  1F5E  30FF               	movlw	255
  3574  1F5F  0572               	andwf	___ftpack@arg+2,w
  3575  1F60  1903               	btfsc	3,2
  3576  1F61  2F6D               	goto	l1377
  3577  1F62  2F48               	goto	l1369
  3578  1F63                     l1375:	
  3579  1F63  3001               	movlw	1
  3580  1F64  02F3               	subwf	___ftpack@exp,f
  3581  1F65  3001               	movlw	1
  3582  1F66                     u2825:	
  3583  1F66  1003               	clrc
  3584  1F67  0DF0               	rlf	___ftpack@arg,f
  3585  1F68  0DF1               	rlf	___ftpack@arg+1,f
  3586  1F69  0DF2               	rlf	___ftpack@arg+2,f
  3587  1F6A  3EFF               	addlw	-1
  3588  1F6B  1D03               	skipz
  3589  1F6C  2F66               	goto	u2825
  3590  1F6D                     l1377:	
  3591  1F6D  1BF1               	btfsc	___ftpack@arg+1,7
  3592  1F6E  2F73               	goto	l447
  3593  1F6F  3002               	movlw	2
  3594  1F70  0273               	subwf	___ftpack@exp,w
  3595  1F71  1803               	skipnc
  3596  1F72  2F63               	goto	l1375
  3597  1F73                     l447:	
  3598  1F73  1873               	btfsc	___ftpack@exp,0
  3599  1F74  2F7B               	goto	l448
  3600  1F75  30FF               	movlw	255
  3601  1F76  05F0               	andwf	___ftpack@arg,f
  3602  1F77  307F               	movlw	127
  3603  1F78  05F1               	andwf	___ftpack@arg+1,f
  3604  1F79  30FF               	movlw	255
  3605  1F7A  05F2               	andwf	___ftpack@arg+2,f
  3606  1F7B                     l448:	
  3607  1F7B  1003               	clrc
  3608  1F7C  0CF3               	rrf	___ftpack@exp,f
  3609  1F7D  0873               	movf	___ftpack@exp,w
  3610  1F7E  00F5               	movwf	??___ftpack
  3611  1F7F  01F6               	clrf	??___ftpack+1
  3612  1F80  01F7               	clrf	??___ftpack+2
  3613  1F81  3010               	movlw	16
  3614  1F82                     u2865:	
  3615  1F82  1003               	clrc
  3616  1F83  0DF5               	rlf	??___ftpack,f
  3617  1F84  0DF6               	rlf	??___ftpack+1,f
  3618  1F85  0DF7               	rlf	??___ftpack+2,f
  3619  1F86  3EFF               	addlw	-1
  3620  1F87  1D03               	skipz
  3621  1F88  2F82               	goto	u2865
  3622  1F89  0875               	movf	??___ftpack,w
  3623  1F8A  04F0               	iorwf	___ftpack@arg,f
  3624  1F8B  0876               	movf	??___ftpack+1,w
  3625  1F8C  04F1               	iorwf	___ftpack@arg+1,f
  3626  1F8D  0877               	movf	??___ftpack+2,w
  3627  1F8E  04F2               	iorwf	___ftpack@arg+2,f
  3628  1F8F  0874               	movf	___ftpack@sign,w
  3629  1F90  1903               	btfsc	3,2
  3630  1F91  0008               	return
  3631  1F92  17F2               	bsf	___ftpack@arg+2,7
  3632  1F93  0008               	return
  3633  1F94                     __end_of___ftpack:	
  3634                           
  3635                           	psect	text13
  3636  1E61                     __ptext13:	
  3637 ;; *************** function _UART_Write_Text *****************
  3638 ;; Defined at:
  3639 ;;		line 65 in file "main.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;  text            1    wreg     PTR unsigned char 
  3642 ;;		 -> main@str(17), 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  text            1    4[COMMON] PTR unsigned char 
  3645 ;;		 -> main@str(17), 
  3646 ;;  i               2    2[COMMON] int 
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  1    wreg      void 
  3649 ;; Registers used:
  3650 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3656 ;;      Params:         0       0       0       0       0
  3657 ;;      Locals:         3       0       0       0       0
  3658 ;;      Temps:          1       0       0       0       0
  3659 ;;      Totals:         4       0       0       0       0
  3660 ;;Total ram usage:        4 bytes
  3661 ;; Hardware stack levels used:    1
  3662 ;; Hardware stack levels required when called:    1
  3663 ;; This function calls:
  3664 ;;		_UART_Write
  3665 ;; This function is called by:
  3666 ;;		_main
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           
  3671                           ;psect for function _UART_Write_Text
  3672  1E61                     _UART_Write_Text:	
  3673                           
  3674                           ;incstack = 0
  3675                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3676                           ;UART_Write_Text@text stored from wreg
  3677  1E61  00F4               	movwf	UART_Write_Text@text
  3678                           
  3679                           ;main.c: 66: int i;
  3680                           ;main.c: 67: for (i = 0; text[i] != '\0'; i++)
  3681  1E62  01F2               	clrf	UART_Write_Text@i
  3682  1E63  01F3               	clrf	UART_Write_Text@i+1
  3683  1E64                     l1585:	
  3684  1E64  0872               	movf	UART_Write_Text@i,w
  3685  1E65  0774               	addwf	UART_Write_Text@text,w
  3686  1E66  00F1               	movwf	??_UART_Write_Text
  3687  1E67  0871               	movf	??_UART_Write_Text,w
  3688  1E68  0084               	movwf	4
  3689  1E69  1383               	bcf	3,7	;select IRP bank0
  3690  1E6A  0800               	movf	0,w
  3691  1E6B  1903               	btfsc	3,2
  3692  1E6C  0008               	return
  3693                           
  3694                           ;main.c: 68: UART_Write(text[i]);
  3695  1E6D  0872               	movf	UART_Write_Text@i,w
  3696  1E6E  0774               	addwf	UART_Write_Text@text,w
  3697  1E6F  00F1               	movwf	??_UART_Write_Text
  3698  1E70  0871               	movf	??_UART_Write_Text,w
  3699  1E71  0084               	movwf	4
  3700  1E72  1383               	bcf	3,7	;select IRP bank0
  3701  1E73  0800               	movf	0,w
  3702  1E74  160A  158A  262D  160A  158A  	fcall	_UART_Write
  3703  1E79  3001               	movlw	1
  3704  1E7A  07F2               	addwf	UART_Write_Text@i,f
  3705  1E7B  1803               	skipnc
  3706  1E7C  0AF3               	incf	UART_Write_Text@i+1,f
  3707  1E7D  3000               	movlw	0
  3708  1E7E  07F3               	addwf	UART_Write_Text@i+1,f
  3709  1E7F  2E64               	goto	l1585
  3710  1E80                     __end_of_UART_Write_Text:	
  3711                           
  3712                           	psect	text14
  3713  1E2D                     __ptext14:	
  3714 ;; *************** function _UART_Write *****************
  3715 ;; Defined at:
  3716 ;;		line 45 in file "main.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;  data            1    wreg     unsigned char 
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  data            1    0[COMMON] unsigned char 
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      void 
  3723 ;; Registers used:
  3724 ;;		wreg
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3730 ;;      Params:         0       0       0       0       0
  3731 ;;      Locals:         1       0       0       0       0
  3732 ;;      Temps:          0       0       0       0       0
  3733 ;;      Totals:         1       0       0       0       0
  3734 ;;Total ram usage:        1 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; This function calls:
  3737 ;;		Nothing
  3738 ;; This function is called by:
  3739 ;;		_UART_Write_Text
  3740 ;;		_main
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           
  3745                           ;psect for function _UART_Write
  3746  1E2D                     _UART_Write:	
  3747                           
  3748                           ;incstack = 0
  3749                           ; Regs used in _UART_Write: [wreg]
  3750                           ;UART_Write@data stored from wreg
  3751  1E2D  00F0               	movwf	UART_Write@data
  3752  1E2E                     l76:	
  3753                           ;main.c: 46: while (!TRMT);
  3754                           
  3755  1E2E  1683               	bsf	3,5	;RP0=1, select bank1
  3756  1E2F  1303               	bcf	3,6	;RP1=0, select bank1
  3757  1E30  1C98               	btfss	24,1	;volatile
  3758  1E31  2E2E               	goto	l76
  3759                           
  3760                           ;main.c: 47: TXREG = data;
  3761  1E32  0870               	movf	UART_Write@data,w
  3762  1E33  1283               	bcf	3,5	;RP0=0, select bank0
  3763  1E34  1303               	bcf	3,6	;RP1=0, select bank0
  3764  1E35  0099               	movwf	25	;volatile
  3765  1E36  0008               	return
  3766  1E37                     __end_of_UART_Write:	
  3767                           
  3768                           	psect	text15
  3769  105D                     __ptext15:	
  3770 ;; *************** function _UART_Init *****************
  3771 ;; Defined at:
  3772 ;;		line 29 in file "main.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;  baudrate        4    6[BANK0 ] const long 
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;  x               2    9[COMMON] unsigned int 
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  1    wreg      unsigned char 
  3779 ;; Registers used:
  3780 ;;		wreg, status,2, status,0, pclath, cstack
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3786 ;;      Params:         0       4       0       0       0
  3787 ;;      Locals:         2       0       0       0       0
  3788 ;;      Temps:          0      12       0       0       0
  3789 ;;      Totals:         2      16       0       0       0
  3790 ;;Total ram usage:       18 bytes
  3791 ;; Hardware stack levels used:    1
  3792 ;; Hardware stack levels required when called:    1
  3793 ;; This function calls:
  3794 ;;		___aldiv
  3795 ;; This function is called by:
  3796 ;;		_main
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           
  3801                           ;psect for function _UART_Init
  3802  105D                     _UART_Init:	
  3803                           
  3804                           ;main.c: 30: unsigned int x;
  3805                           ;main.c: 32: x = (8000000 - baudrate * 16) / (baudrate * 16);
  3806                           
  3807                           ;incstack = 0
  3808                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3809  105D  1283               	bcf	3,5	;RP0=0, select bank0
  3810  105E  1303               	bcf	3,6	;RP1=0, select bank0
  3811  105F  0826               	movf	UART_Init@baudrate,w
  3812  1060  00AA               	movwf	??_UART_Init
  3813  1061  0827               	movf	UART_Init@baudrate+1,w
  3814  1062  00AB               	movwf	??_UART_Init+1
  3815  1063  0828               	movf	UART_Init@baudrate+2,w
  3816  1064  00AC               	movwf	??_UART_Init+2
  3817  1065  0829               	movf	UART_Init@baudrate+3,w
  3818  1066  00AD               	movwf	??_UART_Init+3
  3819  1067  3004               	movlw	4
  3820  1068                     u3305:	
  3821  1068  1003               	clrc
  3822  1069  0DAA               	rlf	??_UART_Init,f
  3823  106A  0DAB               	rlf	??_UART_Init+1,f
  3824  106B  0DAC               	rlf	??_UART_Init+2,f
  3825  106C  0DAD               	rlf	??_UART_Init+3,f
  3826  106D  3EFF               	addlw	-1
  3827  106E  1D03               	skipz
  3828  106F  2868               	goto	u3305
  3829  1070  082D               	movf	??_UART_Init+3,w
  3830  1071  00F3               	movwf	___aldiv@divisor+3
  3831  1072  082C               	movf	??_UART_Init+2,w
  3832  1073  00F2               	movwf	___aldiv@divisor+2
  3833  1074  082B               	movf	??_UART_Init+1,w
  3834  1075  00F1               	movwf	___aldiv@divisor+1
  3835  1076  082A               	movf	??_UART_Init,w
  3836  1077  00F0               	movwf	___aldiv@divisor
  3837  1078  3000               	movlw	0
  3838  1079  00AE               	movwf	??_UART_Init+4
  3839  107A  3012               	movlw	18
  3840  107B  00AF               	movwf	??_UART_Init+5
  3841  107C  307A               	movlw	122
  3842  107D  00B0               	movwf	??_UART_Init+6
  3843  107E  3000               	movlw	0
  3844  107F  00B1               	movwf	??_UART_Init+7
  3845  1080  0826               	movf	UART_Init@baudrate,w
  3846  1081  00B2               	movwf	??_UART_Init+8
  3847  1082  0827               	movf	UART_Init@baudrate+1,w
  3848  1083  00B3               	movwf	??_UART_Init+9
  3849  1084  0828               	movf	UART_Init@baudrate+2,w
  3850  1085  00B4               	movwf	??_UART_Init+10
  3851  1086  0829               	movf	UART_Init@baudrate+3,w
  3852  1087  00B5               	movwf	??_UART_Init+11
  3853  1088  3004               	movlw	4
  3854  1089                     u3315:	
  3855  1089  1003               	clrc
  3856  108A  0DB2               	rlf	??_UART_Init+8,f
  3857  108B  0DB3               	rlf	??_UART_Init+9,f
  3858  108C  0DB4               	rlf	??_UART_Init+10,f
  3859  108D  0DB5               	rlf	??_UART_Init+11,f
  3860  108E  3EFF               	addlw	-1
  3861  108F  1D03               	skipz
  3862  1090  2889               	goto	u3315
  3863  1091  09B2               	comf	??_UART_Init+8,f
  3864  1092  09B3               	comf	??_UART_Init+9,f
  3865  1093  09B4               	comf	??_UART_Init+10,f
  3866  1094  09B5               	comf	??_UART_Init+11,f
  3867  1095  0AB2               	incf	??_UART_Init+8,f
  3868  1096  1903               	skipnz
  3869  1097  0AB3               	incf	??_UART_Init+9,f
  3870  1098  1903               	skipnz
  3871  1099  0AB4               	incf	??_UART_Init+10,f
  3872  109A  1903               	skipnz
  3873  109B  0AB5               	incf	??_UART_Init+11,f
  3874  109C  0832               	movf	??_UART_Init+8,w
  3875  109D  07AE               	addwf	??_UART_Init+4,f
  3876  109E  0833               	movf	??_UART_Init+9,w
  3877  109F  1803               	skipnc
  3878  10A0  0F33               	incfsz	??_UART_Init+9,w
  3879  10A1  28A3               	goto	u3320
  3880  10A2  28A4               	goto	u3321
  3881  10A3                     u3320:	
  3882  10A3  07AF               	addwf	??_UART_Init+5,f
  3883  10A4                     u3321:	
  3884  10A4  0834               	movf	??_UART_Init+10,w
  3885  10A5  1803               	skipnc
  3886  10A6  0F34               	incfsz	??_UART_Init+10,w
  3887  10A7  28A9               	goto	u3322
  3888  10A8  28AA               	goto	u3323
  3889  10A9                     u3322:	
  3890  10A9  07B0               	addwf	??_UART_Init+6,f
  3891  10AA                     u3323:	
  3892  10AA  0835               	movf	??_UART_Init+11,w
  3893  10AB  1803               	skipnc
  3894  10AC  0A35               	incf	??_UART_Init+11,w
  3895  10AD  07B1               	addwf	??_UART_Init+7,f
  3896  10AE  0831               	movf	??_UART_Init+7,w
  3897  10AF  00F7               	movwf	___aldiv@dividend+3
  3898  10B0  0830               	movf	??_UART_Init+6,w
  3899  10B1  00F6               	movwf	___aldiv@dividend+2
  3900  10B2  082F               	movf	??_UART_Init+5,w
  3901  10B3  00F5               	movwf	___aldiv@dividend+1
  3902  10B4  082E               	movf	??_UART_Init+4,w
  3903  10B5  00F4               	movwf	___aldiv@dividend
  3904  10B6  120A  158A  2017   	fcall	___aldiv
  3905  10B9  0871               	movf	?___aldiv+1,w
  3906  10BA  00FA               	movwf	UART_Init@x+1
  3907  10BB  0870               	movf	?___aldiv,w
  3908  10BC  00F9               	movwf	UART_Init@x
  3909                           
  3910                           ;main.c: 33: BRGH = 1;
  3911  10BD  1683               	bsf	3,5	;RP0=1, select bank1
  3912  10BE  1303               	bcf	3,6	;RP1=0, select bank1
  3913  10BF  1518               	bsf	24,2	;volatile
  3914                           
  3915                           ;main.c: 35: SPBRG = x;
  3916  10C0  0879               	movf	UART_Init@x,w
  3917  10C1  0099               	movwf	25	;volatile
  3918                           
  3919                           ;main.c: 36: SYNC = 0;
  3920  10C2  1218               	bcf	24,4	;volatile
  3921                           
  3922                           ;main.c: 37: SPEN = 1;
  3923  10C3  1283               	bcf	3,5	;RP0=0, select bank0
  3924  10C4  1303               	bcf	3,6	;RP1=0, select bank0
  3925  10C5  1798               	bsf	24,7	;volatile
  3926                           
  3927                           ;main.c: 38: TRISC7 = 1;
  3928  10C6  1683               	bsf	3,5	;RP0=1, select bank1
  3929  10C7  1303               	bcf	3,6	;RP1=0, select bank1
  3930  10C8  1787               	bsf	7,7	;volatile
  3931                           
  3932                           ;main.c: 39: TRISC6 = 1;
  3933  10C9  1707               	bsf	7,6	;volatile
  3934                           
  3935                           ;main.c: 40: CREN = 1;
  3936  10CA  1283               	bcf	3,5	;RP0=0, select bank0
  3937  10CB  1303               	bcf	3,6	;RP1=0, select bank0
  3938  10CC  1618               	bsf	24,4	;volatile
  3939                           
  3940                           ;main.c: 41: TXEN = 1;
  3941  10CD  1683               	bsf	3,5	;RP0=1, select bank1
  3942  10CE  1303               	bcf	3,6	;RP1=0, select bank1
  3943  10CF  1698               	bsf	24,5	;volatile
  3944  10D0  0008               	return
  3945  10D1                     __end_of_UART_Init:	
  3946                           ;main.c: 42: return 1;
  3947                           ;	Return value of _UART_Init is never used
  3948                           
  3949                           
  3950                           	psect	text16
  3951  0817                     __ptext16:	
  3952 ;; *************** function ___aldiv *****************
  3953 ;; Defined at:
  3954 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\aldiv.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  divisor         4    0[COMMON] long 
  3957 ;;  dividend        4    4[COMMON] long 
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;  quotient        4    2[BANK0 ] long 
  3960 ;;  sign            1    1[BANK0 ] unsigned char 
  3961 ;;  counter         1    0[BANK0 ] unsigned char 
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  4    0[COMMON] long 
  3964 ;; Registers used:
  3965 ;;		wreg, status,2, status,0
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3971 ;;      Params:         8       0       0       0       0
  3972 ;;      Locals:         0       6       0       0       0
  3973 ;;      Temps:          1       0       0       0       0
  3974 ;;      Totals:         9       6       0       0       0
  3975 ;;Total ram usage:       15 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; This function calls:
  3978 ;;		Nothing
  3979 ;; This function is called by:
  3980 ;;		_UART_Init
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           
  3985                           ;psect for function ___aldiv
  3986  0817                     ___aldiv:	
  3987                           
  3988                           ;incstack = 0
  3989                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3990  0817  1283               	bcf	3,5	;RP0=0, select bank0
  3991  0818  1303               	bcf	3,6	;RP1=0, select bank0
  3992  0819  01A1               	clrf	___aldiv@sign
  3993  081A  1FF3               	btfss	___aldiv@divisor+3,7
  3994  081B  2829               	goto	l334
  3995  081C  09F0               	comf	___aldiv@divisor,f
  3996  081D  09F1               	comf	___aldiv@divisor+1,f
  3997  081E  09F2               	comf	___aldiv@divisor+2,f
  3998  081F  09F3               	comf	___aldiv@divisor+3,f
  3999  0820  0AF0               	incf	___aldiv@divisor,f
  4000  0821  1903               	skipnz
  4001  0822  0AF1               	incf	___aldiv@divisor+1,f
  4002  0823  1903               	skipnz
  4003  0824  0AF2               	incf	___aldiv@divisor+2,f
  4004  0825  1903               	skipnz
  4005  0826  0AF3               	incf	___aldiv@divisor+3,f
  4006  0827  01A1               	clrf	___aldiv@sign
  4007  0828  0AA1               	incf	___aldiv@sign,f
  4008  0829                     l334:	
  4009  0829  1FF7               	btfss	___aldiv@dividend+3,7
  4010  082A  283A               	goto	l1399
  4011  082B  09F4               	comf	___aldiv@dividend,f
  4012  082C  09F5               	comf	___aldiv@dividend+1,f
  4013  082D  09F6               	comf	___aldiv@dividend+2,f
  4014  082E  09F7               	comf	___aldiv@dividend+3,f
  4015  082F  0AF4               	incf	___aldiv@dividend,f
  4016  0830  1903               	skipnz
  4017  0831  0AF5               	incf	___aldiv@dividend+1,f
  4018  0832  1903               	skipnz
  4019  0833  0AF6               	incf	___aldiv@dividend+2,f
  4020  0834  1903               	skipnz
  4021  0835  0AF7               	incf	___aldiv@dividend+3,f
  4022  0836  3001               	movlw	1
  4023  0837  00F8               	movwf	??___aldiv
  4024  0838  0878               	movf	??___aldiv,w
  4025  0839  06A1               	xorwf	___aldiv@sign,f
  4026  083A                     l1399:	
  4027  083A  3000               	movlw	0
  4028  083B  00A5               	movwf	___aldiv@quotient+3
  4029  083C  3000               	movlw	0
  4030  083D  00A4               	movwf	___aldiv@quotient+2
  4031  083E  3000               	movlw	0
  4032  083F  00A3               	movwf	___aldiv@quotient+1
  4033  0840  3000               	movlw	0
  4034  0841  00A2               	movwf	___aldiv@quotient
  4035  0842  0873               	movf	___aldiv@divisor+3,w
  4036  0843  0472               	iorwf	___aldiv@divisor+2,w
  4037  0844  0471               	iorwf	___aldiv@divisor+1,w
  4038  0845  0470               	iorwf	___aldiv@divisor,w
  4039  0846  1903               	skipnz
  4040  0847  288F               	goto	l1421
  4041  0848  01A0               	clrf	___aldiv@counter
  4042  0849  0AA0               	incf	___aldiv@counter,f
  4043  084A                     l1407:	
  4044  084A  1BF3               	btfsc	___aldiv@divisor+3,7
  4045  084B  285A               	goto	l1409
  4046  084C  3001               	movlw	1
  4047  084D  00F8               	movwf	??___aldiv
  4048  084E                     u2915:	
  4049  084E  1003               	clrc
  4050  084F  0DF0               	rlf	___aldiv@divisor,f
  4051  0850  0DF1               	rlf	___aldiv@divisor+1,f
  4052  0851  0DF2               	rlf	___aldiv@divisor+2,f
  4053  0852  0DF3               	rlf	___aldiv@divisor+3,f
  4054  0853  0BF8               	decfsz	??___aldiv,f
  4055  0854  284E               	goto	u2915
  4056  0855  3001               	movlw	1
  4057  0856  00F8               	movwf	??___aldiv
  4058  0857  0878               	movf	??___aldiv,w
  4059  0858  07A0               	addwf	___aldiv@counter,f
  4060  0859  284A               	goto	l1407
  4061  085A                     l1409:	
  4062  085A  3001               	movlw	1
  4063  085B  00F8               	movwf	??___aldiv
  4064  085C                     u2935:	
  4065  085C  1003               	clrc
  4066  085D  0DA2               	rlf	___aldiv@quotient,f
  4067  085E  0DA3               	rlf	___aldiv@quotient+1,f
  4068  085F  0DA4               	rlf	___aldiv@quotient+2,f
  4069  0860  0DA5               	rlf	___aldiv@quotient+3,f
  4070  0861  0BF8               	decfsz	??___aldiv,f
  4071  0862  285C               	goto	u2935
  4072  0863  0873               	movf	___aldiv@divisor+3,w
  4073  0864  0277               	subwf	___aldiv@dividend+3,w
  4074  0865  1D03               	skipz
  4075  0866  2871               	goto	u2945
  4076  0867  0872               	movf	___aldiv@divisor+2,w
  4077  0868  0276               	subwf	___aldiv@dividend+2,w
  4078  0869  1D03               	skipz
  4079  086A  2871               	goto	u2945
  4080  086B  0871               	movf	___aldiv@divisor+1,w
  4081  086C  0275               	subwf	___aldiv@dividend+1,w
  4082  086D  1D03               	skipz
  4083  086E  2871               	goto	u2945
  4084  086F  0870               	movf	___aldiv@divisor,w
  4085  0870  0274               	subwf	___aldiv@dividend,w
  4086  0871                     u2945:	
  4087  0871  1C03               	skipc
  4088  0872  2882               	goto	l1417
  4089  0873  0870               	movf	___aldiv@divisor,w
  4090  0874  02F4               	subwf	___aldiv@dividend,f
  4091  0875  0871               	movf	___aldiv@divisor+1,w
  4092  0876  1C03               	skipc
  4093  0877  0F71               	incfsz	___aldiv@divisor+1,w
  4094  0878  02F5               	subwf	___aldiv@dividend+1,f
  4095  0879  0872               	movf	___aldiv@divisor+2,w
  4096  087A  1C03               	skipc
  4097  087B  0F72               	incfsz	___aldiv@divisor+2,w
  4098  087C  02F6               	subwf	___aldiv@dividend+2,f
  4099  087D  0873               	movf	___aldiv@divisor+3,w
  4100  087E  1C03               	skipc
  4101  087F  0F73               	incfsz	___aldiv@divisor+3,w
  4102  0880  02F7               	subwf	___aldiv@dividend+3,f
  4103  0881  1422               	bsf	___aldiv@quotient,0
  4104  0882                     l1417:	
  4105  0882  3001               	movlw	1
  4106  0883                     u2955:	
  4107  0883  1003               	clrc
  4108  0884  0CF3               	rrf	___aldiv@divisor+3,f
  4109  0885  0CF2               	rrf	___aldiv@divisor+2,f
  4110  0886  0CF1               	rrf	___aldiv@divisor+1,f
  4111  0887  0CF0               	rrf	___aldiv@divisor,f
  4112  0888  3EFF               	addlw	-1
  4113  0889  1D03               	skipz
  4114  088A  2883               	goto	u2955
  4115  088B  3001               	movlw	1
  4116  088C  02A0               	subwf	___aldiv@counter,f
  4117  088D  1D03               	btfss	3,2
  4118  088E  285A               	goto	l1409
  4119  088F                     l1421:	
  4120  088F  0821               	movf	___aldiv@sign,w
  4121  0890  1903               	btfsc	3,2
  4122  0891  289D               	goto	l1425
  4123  0892  09A2               	comf	___aldiv@quotient,f
  4124  0893  09A3               	comf	___aldiv@quotient+1,f
  4125  0894  09A4               	comf	___aldiv@quotient+2,f
  4126  0895  09A5               	comf	___aldiv@quotient+3,f
  4127  0896  0AA2               	incf	___aldiv@quotient,f
  4128  0897  1903               	skipnz
  4129  0898  0AA3               	incf	___aldiv@quotient+1,f
  4130  0899  1903               	skipnz
  4131  089A  0AA4               	incf	___aldiv@quotient+2,f
  4132  089B  1903               	skipnz
  4133  089C  0AA5               	incf	___aldiv@quotient+3,f
  4134  089D                     l1425:	
  4135  089D  0825               	movf	___aldiv@quotient+3,w
  4136  089E  00F3               	movwf	?___aldiv+3
  4137  089F  0824               	movf	___aldiv@quotient+2,w
  4138  08A0  00F2               	movwf	?___aldiv+2
  4139  08A1  0823               	movf	___aldiv@quotient+1,w
  4140  08A2  00F1               	movwf	?___aldiv+1
  4141  08A3  0822               	movf	___aldiv@quotient,w
  4142  08A4  00F0               	movwf	?___aldiv
  4143  08A5  0008               	return
  4144  08A6                     __end_of___aldiv:	
  4145                           
  4146                           	psect	text17
  4147  0C40                     __ptext17:	
  4148 ;; *************** function _LCD_mapping *****************
  4149 ;; Defined at:
  4150 ;;		line 9 in file "lcd.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;  D1              1    wreg     PTR struct .
  4153 ;;		 -> main@D1(28), 
  4154 ;;  D2              1    0[COMMON] PTR struct .
  4155 ;;		 -> main@D2(28), 
  4156 ;;  D3              1    1[COMMON] PTR struct .
  4157 ;;		 -> main@D3(28), 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;  D1              1    4[COMMON] PTR struct .
  4160 ;;		 -> main@D1(28), 
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      void 
  4163 ;; Registers used:
  4164 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4170 ;;      Params:         2       0       0       0       0
  4171 ;;      Locals:         1       0       0       0       0
  4172 ;;      Temps:          2       0       0       0       0
  4173 ;;      Totals:         5       0       0       0       0
  4174 ;;Total ram usage:        5 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_main
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           
  4184                           ;psect for function _LCD_mapping
  4185  0C40                     _LCD_mapping:	
  4186                           
  4187                           ;incstack = 0
  4188                           ; Regs used in _LCD_mapping: [wreg-fsr0h+status,2+status,0]
  4189                           ;LCD_mapping@D1 stored from wreg
  4190  0C40  00F4               	movwf	LCD_mapping@D1
  4191                           
  4192                           ;lcd.c: 11: D1->sa = &LCDDATA2; D1->bits[0] =6 ;
  4193  0C41  3012               	movlw	18
  4194  0C42  00F2               	movwf	??_LCD_mapping
  4195  0C43  3001               	movlw	1
  4196  0C44  00F3               	movwf	??_LCD_mapping+1
  4197  0C45  0874               	movf	LCD_mapping@D1,w
  4198  0C46  0084               	movwf	4
  4199  0C47  0872               	movf	??_LCD_mapping,w
  4200  0C48  1383               	bcf	3,7	;select IRP bank0
  4201  0C49  0080               	movwf	0
  4202  0C4A  0873               	movf	??_LCD_mapping+1,w
  4203  0C4B  0A84               	incf	4,f
  4204  0C4C  0080               	movwf	0
  4205  0C4D  0384               	decf	4,f
  4206  0C4E  0874               	movf	LCD_mapping@D1,w
  4207  0C4F  3E0E               	addlw	14
  4208  0C50  0084               	movwf	4
  4209  0C51  3006               	movlw	6
  4210  0C52  0080               	movwf	0
  4211  0C53  0A84               	incf	4,f
  4212  0C54  3000               	movlw	0
  4213  0C55  0080               	movwf	0
  4214                           
  4215                           ;lcd.c: 12: D1->sb = &LCDDATA2; D1->bits[1] =7 ;
  4216  0C56  3012               	movlw	18
  4217  0C57  00F2               	movwf	??_LCD_mapping
  4218  0C58  3001               	movlw	1
  4219  0C59  00F3               	movwf	??_LCD_mapping+1
  4220  0C5A  0874               	movf	LCD_mapping@D1,w
  4221  0C5B  3E02               	addlw	2
  4222  0C5C  0084               	movwf	4
  4223  0C5D  0872               	movf	??_LCD_mapping,w
  4224  0C5E  0080               	movwf	0
  4225  0C5F  0873               	movf	??_LCD_mapping+1,w
  4226  0C60  0A84               	incf	4,f
  4227  0C61  0080               	movwf	0
  4228  0C62  0384               	decf	4,f
  4229  0C63  0874               	movf	LCD_mapping@D1,w
  4230  0C64  3E10               	addlw	16
  4231  0C65  0084               	movwf	4
  4232  0C66  3007               	movlw	7
  4233  0C67  0080               	movwf	0
  4234  0C68  0A84               	incf	4,f
  4235  0C69  3000               	movlw	0
  4236  0C6A  0080               	movwf	0
  4237                           
  4238                           ;lcd.c: 13: D1->sc = &LCDDATA8; D1->bits[2] =7 ;
  4239  0C6B  3018               	movlw	24
  4240  0C6C  00F2               	movwf	??_LCD_mapping
  4241  0C6D  3001               	movlw	1
  4242  0C6E  00F3               	movwf	??_LCD_mapping+1
  4243  0C6F  0874               	movf	LCD_mapping@D1,w
  4244  0C70  3E04               	addlw	4
  4245  0C71  0084               	movwf	4
  4246  0C72  0872               	movf	??_LCD_mapping,w
  4247  0C73  0080               	movwf	0
  4248  0C74  0873               	movf	??_LCD_mapping+1,w
  4249  0C75  0A84               	incf	4,f
  4250  0C76  0080               	movwf	0
  4251  0C77  0384               	decf	4,f
  4252  0C78  0874               	movf	LCD_mapping@D1,w
  4253  0C79  3E12               	addlw	18
  4254  0C7A  0084               	movwf	4
  4255  0C7B  3007               	movlw	7
  4256  0C7C  0080               	movwf	0
  4257  0C7D  0A84               	incf	4,f
  4258  0C7E  3000               	movlw	0
  4259  0C7F  0080               	movwf	0
  4260                           
  4261                           ;lcd.c: 14: D1->sd = &LCDDATA11; D1->bits[3] =6 ;
  4262  0C80  301B               	movlw	27
  4263  0C81  00F2               	movwf	??_LCD_mapping
  4264  0C82  3001               	movlw	1
  4265  0C83  00F3               	movwf	??_LCD_mapping+1
  4266  0C84  0874               	movf	LCD_mapping@D1,w
  4267  0C85  3E06               	addlw	6
  4268  0C86  0084               	movwf	4
  4269  0C87  0872               	movf	??_LCD_mapping,w
  4270  0C88  0080               	movwf	0
  4271  0C89  0873               	movf	??_LCD_mapping+1,w
  4272  0C8A  0A84               	incf	4,f
  4273  0C8B  0080               	movwf	0
  4274  0C8C  0384               	decf	4,f
  4275  0C8D  0874               	movf	LCD_mapping@D1,w
  4276  0C8E  3E14               	addlw	20
  4277  0C8F  0084               	movwf	4
  4278  0C90  3006               	movlw	6
  4279  0C91  0080               	movwf	0
  4280  0C92  0A84               	incf	4,f
  4281  0C93  3000               	movlw	0
  4282  0C94  0080               	movwf	0
  4283                           
  4284                           ;lcd.c: 15: D1->se = &LCDDATA8; D1->bits[4] =6 ;
  4285  0C95  3018               	movlw	24
  4286  0C96  00F2               	movwf	??_LCD_mapping
  4287  0C97  3001               	movlw	1
  4288  0C98  00F3               	movwf	??_LCD_mapping+1
  4289  0C99  0874               	movf	LCD_mapping@D1,w
  4290  0C9A  3E08               	addlw	8
  4291  0C9B  0084               	movwf	4
  4292  0C9C  0872               	movf	??_LCD_mapping,w
  4293  0C9D  0080               	movwf	0
  4294  0C9E  0873               	movf	??_LCD_mapping+1,w
  4295  0C9F  0A84               	incf	4,f
  4296  0CA0  0080               	movwf	0
  4297  0CA1  0384               	decf	4,f
  4298  0CA2  0874               	movf	LCD_mapping@D1,w
  4299  0CA3  3E16               	addlw	22
  4300  0CA4  0084               	movwf	4
  4301  0CA5  3006               	movlw	6
  4302  0CA6  0080               	movwf	0
  4303  0CA7  0A84               	incf	4,f
  4304  0CA8  3000               	movlw	0
  4305  0CA9  0080               	movwf	0
  4306                           
  4307                           ;lcd.c: 16: D1->sf = &LCDDATA5; D1->bits[5] =6 ;
  4308  0CAA  3015               	movlw	21
  4309  0CAB  00F2               	movwf	??_LCD_mapping
  4310  0CAC  3001               	movlw	1
  4311  0CAD  00F3               	movwf	??_LCD_mapping+1
  4312  0CAE  0874               	movf	LCD_mapping@D1,w
  4313  0CAF  3E0A               	addlw	10
  4314  0CB0  0084               	movwf	4
  4315  0CB1  0872               	movf	??_LCD_mapping,w
  4316  0CB2  0080               	movwf	0
  4317  0CB3  0873               	movf	??_LCD_mapping+1,w
  4318  0CB4  0A84               	incf	4,f
  4319  0CB5  0080               	movwf	0
  4320  0CB6  0384               	decf	4,f
  4321  0CB7  0874               	movf	LCD_mapping@D1,w
  4322  0CB8  3E18               	addlw	24
  4323  0CB9  0084               	movwf	4
  4324  0CBA  3006               	movlw	6
  4325  0CBB  0080               	movwf	0
  4326  0CBC  0A84               	incf	4,f
  4327  0CBD  3000               	movlw	0
  4328  0CBE  0080               	movwf	0
  4329                           
  4330                           ;lcd.c: 17: D1->sg = &LCDDATA5; D1->bits[6] =7 ;
  4331  0CBF  3015               	movlw	21
  4332  0CC0  00F2               	movwf	??_LCD_mapping
  4333  0CC1  3001               	movlw	1
  4334  0CC2  00F3               	movwf	??_LCD_mapping+1
  4335  0CC3  0874               	movf	LCD_mapping@D1,w
  4336  0CC4  3E0C               	addlw	12
  4337  0CC5  0084               	movwf	4
  4338  0CC6  0872               	movf	??_LCD_mapping,w
  4339  0CC7  0080               	movwf	0
  4340  0CC8  0873               	movf	??_LCD_mapping+1,w
  4341  0CC9  0A84               	incf	4,f
  4342  0CCA  0080               	movwf	0
  4343  0CCB  0384               	decf	4,f
  4344  0CCC  0874               	movf	LCD_mapping@D1,w
  4345  0CCD  3E1A               	addlw	26
  4346  0CCE  0084               	movwf	4
  4347  0CCF  3007               	movlw	7
  4348  0CD0  0080               	movwf	0
  4349  0CD1  0A84               	incf	4,f
  4350  0CD2  3000               	movlw	0
  4351  0CD3  0080               	movwf	0
  4352                           
  4353                           ;lcd.c: 20: D2->sa = &LCDDATA0; D2->bits[0] =6 ;
  4354  0CD4  3010               	movlw	16
  4355  0CD5  00F2               	movwf	??_LCD_mapping
  4356  0CD6  3001               	movlw	1
  4357  0CD7  00F3               	movwf	??_LCD_mapping+1
  4358  0CD8  0870               	movf	LCD_mapping@D2,w
  4359  0CD9  0084               	movwf	4
  4360  0CDA  0872               	movf	??_LCD_mapping,w
  4361  0CDB  0080               	movwf	0
  4362  0CDC  0873               	movf	??_LCD_mapping+1,w
  4363  0CDD  0A84               	incf	4,f
  4364  0CDE  0080               	movwf	0
  4365  0CDF  0384               	decf	4,f
  4366  0CE0  0870               	movf	LCD_mapping@D2,w
  4367  0CE1  3E0E               	addlw	14
  4368  0CE2  0084               	movwf	4
  4369  0CE3  3006               	movlw	6
  4370  0CE4  0080               	movwf	0
  4371  0CE5  0A84               	incf	4,f
  4372  0CE6  3000               	movlw	0
  4373  0CE7  0080               	movwf	0
  4374                           
  4375                           ;lcd.c: 21: D2->sb = &LCDDATA2; D2->bits[1] =5 ;
  4376  0CE8  3012               	movlw	18
  4377  0CE9  00F2               	movwf	??_LCD_mapping
  4378  0CEA  3001               	movlw	1
  4379  0CEB  00F3               	movwf	??_LCD_mapping+1
  4380  0CEC  0870               	movf	LCD_mapping@D2,w
  4381  0CED  3E02               	addlw	2
  4382  0CEE  0084               	movwf	4
  4383  0CEF  0872               	movf	??_LCD_mapping,w
  4384  0CF0  0080               	movwf	0
  4385  0CF1  0873               	movf	??_LCD_mapping+1,w
  4386  0CF2  0A84               	incf	4,f
  4387  0CF3  0080               	movwf	0
  4388  0CF4  0384               	decf	4,f
  4389  0CF5  0870               	movf	LCD_mapping@D2,w
  4390  0CF6  3E10               	addlw	16
  4391  0CF7  0084               	movwf	4
  4392  0CF8  3005               	movlw	5
  4393  0CF9  0080               	movwf	0
  4394  0CFA  0A84               	incf	4,f
  4395  0CFB  3000               	movlw	0
  4396  0CFC  0080               	movwf	0
  4397                           
  4398                           ;lcd.c: 22: D2->sc = &LCDDATA8; D2->bits[2] =5 ;
  4399  0CFD  3018               	movlw	24
  4400  0CFE  00F2               	movwf	??_LCD_mapping
  4401  0CFF  3001               	movlw	1
  4402  0D00  00F3               	movwf	??_LCD_mapping+1
  4403  0D01  0870               	movf	LCD_mapping@D2,w
  4404  0D02  3E04               	addlw	4
  4405  0D03  0084               	movwf	4
  4406  0D04  0872               	movf	??_LCD_mapping,w
  4407  0D05  0080               	movwf	0
  4408  0D06  0873               	movf	??_LCD_mapping+1,w
  4409  0D07  0A84               	incf	4,f
  4410  0D08  0080               	movwf	0
  4411  0D09  0384               	decf	4,f
  4412  0D0A  0870               	movf	LCD_mapping@D2,w
  4413  0D0B  3E12               	addlw	18
  4414  0D0C  0084               	movwf	4
  4415  0D0D  3005               	movlw	5
  4416  0D0E  0080               	movwf	0
  4417  0D0F  0A84               	incf	4,f
  4418  0D10  3000               	movlw	0
  4419  0D11  0080               	movwf	0
  4420                           
  4421                           ;lcd.c: 23: D2->sd = &LCDDATA9; D2->bits[3] =6 ;
  4422  0D12  3019               	movlw	25
  4423  0D13  00F2               	movwf	??_LCD_mapping
  4424  0D14  3001               	movlw	1
  4425  0D15  00F3               	movwf	??_LCD_mapping+1
  4426  0D16  0870               	movf	LCD_mapping@D2,w
  4427  0D17  3E06               	addlw	6
  4428  0D18  0084               	movwf	4
  4429  0D19  0872               	movf	??_LCD_mapping,w
  4430  0D1A  0080               	movwf	0
  4431  0D1B  0873               	movf	??_LCD_mapping+1,w
  4432  0D1C  0A84               	incf	4,f
  4433  0D1D  0080               	movwf	0
  4434  0D1E  0384               	decf	4,f
  4435  0D1F  0870               	movf	LCD_mapping@D2,w
  4436  0D20  3E14               	addlw	20
  4437  0D21  0084               	movwf	4
  4438  0D22  3006               	movlw	6
  4439  0D23  0080               	movwf	0
  4440  0D24  0A84               	incf	4,f
  4441  0D25  3000               	movlw	0
  4442  0D26  0080               	movwf	0
  4443                           
  4444                           ;lcd.c: 24: D2->se = &LCDDATA6; D2->bits[4] =6 ;
  4445  0D27  3016               	movlw	22
  4446  0D28  00F2               	movwf	??_LCD_mapping
  4447  0D29  3001               	movlw	1
  4448  0D2A  00F3               	movwf	??_LCD_mapping+1
  4449  0D2B  0870               	movf	LCD_mapping@D2,w
  4450  0D2C  3E08               	addlw	8
  4451  0D2D  0084               	movwf	4
  4452  0D2E  0872               	movf	??_LCD_mapping,w
  4453  0D2F  0080               	movwf	0
  4454  0D30  0873               	movf	??_LCD_mapping+1,w
  4455  0D31  0A84               	incf	4,f
  4456  0D32  0080               	movwf	0
  4457  0D33  0384               	decf	4,f
  4458  0D34  0870               	movf	LCD_mapping@D2,w
  4459  0D35  3E16               	addlw	22
  4460  0D36  0084               	movwf	4
  4461  0D37  3006               	movlw	6
  4462  0D38  0080               	movwf	0
  4463  0D39  0A84               	incf	4,f
  4464  0D3A  3000               	movlw	0
  4465  0D3B  0080               	movwf	0
  4466                           
  4467                           ;lcd.c: 25: D2->sf = &LCDDATA3; D2->bits[5] =6 ;
  4468  0D3C  3013               	movlw	19
  4469  0D3D  00F2               	movwf	??_LCD_mapping
  4470  0D3E  3001               	movlw	1
  4471  0D3F  00F3               	movwf	??_LCD_mapping+1
  4472  0D40  0870               	movf	LCD_mapping@D2,w
  4473  0D41  3E0A               	addlw	10
  4474  0D42  0084               	movwf	4
  4475  0D43  0872               	movf	??_LCD_mapping,w
  4476  0D44  0080               	movwf	0
  4477  0D45  0873               	movf	??_LCD_mapping+1,w
  4478  0D46  0A84               	incf	4,f
  4479  0D47  0080               	movwf	0
  4480  0D48  0384               	decf	4,f
  4481  0D49  0870               	movf	LCD_mapping@D2,w
  4482  0D4A  3E18               	addlw	24
  4483  0D4B  0084               	movwf	4
  4484  0D4C  3006               	movlw	6
  4485  0D4D  0080               	movwf	0
  4486  0D4E  0A84               	incf	4,f
  4487  0D4F  3000               	movlw	0
  4488  0D50  0080               	movwf	0
  4489                           
  4490                           ;lcd.c: 26: D2->sg = &LCDDATA5; D2->bits[6] =5 ;
  4491  0D51  3015               	movlw	21
  4492  0D52  00F2               	movwf	??_LCD_mapping
  4493  0D53  3001               	movlw	1
  4494  0D54  00F3               	movwf	??_LCD_mapping+1
  4495  0D55  0870               	movf	LCD_mapping@D2,w
  4496  0D56  3E0C               	addlw	12
  4497  0D57  0084               	movwf	4
  4498  0D58  0872               	movf	??_LCD_mapping,w
  4499  0D59  0080               	movwf	0
  4500  0D5A  0873               	movf	??_LCD_mapping+1,w
  4501  0D5B  0A84               	incf	4,f
  4502  0D5C  0080               	movwf	0
  4503  0D5D  0384               	decf	4,f
  4504  0D5E  0870               	movf	LCD_mapping@D2,w
  4505  0D5F  3E1A               	addlw	26
  4506  0D60  0084               	movwf	4
  4507  0D61  3005               	movlw	5
  4508  0D62  0080               	movwf	0
  4509  0D63  0A84               	incf	4,f
  4510  0D64  3000               	movlw	0
  4511  0D65  0080               	movwf	0
  4512                           
  4513                           ;lcd.c: 29: D3->sa = &LCDDATA0; D3->bits[0] =3 ;
  4514  0D66  3010               	movlw	16
  4515  0D67  00F2               	movwf	??_LCD_mapping
  4516  0D68  3001               	movlw	1
  4517  0D69  00F3               	movwf	??_LCD_mapping+1
  4518  0D6A  0871               	movf	LCD_mapping@D3,w
  4519  0D6B  0084               	movwf	4
  4520  0D6C  0872               	movf	??_LCD_mapping,w
  4521  0D6D  1783               	bsf	3,7	;select IRP bank2
  4522  0D6E  0080               	movwf	0
  4523  0D6F  0873               	movf	??_LCD_mapping+1,w
  4524  0D70  0A84               	incf	4,f
  4525  0D71  0080               	movwf	0
  4526  0D72  0384               	decf	4,f
  4527  0D73  0871               	movf	LCD_mapping@D3,w
  4528  0D74  3E0E               	addlw	14
  4529  0D75  0084               	movwf	4
  4530  0D76  3003               	movlw	3
  4531  0D77  0080               	movwf	0
  4532  0D78  0A84               	incf	4,f
  4533  0D79  3000               	movlw	0
  4534  0D7A  0080               	movwf	0
  4535                           
  4536                           ;lcd.c: 30: D3->sb = &LCDDATA1; D3->bits[1] =3 ;
  4537  0D7B  3011               	movlw	17
  4538  0D7C  00F2               	movwf	??_LCD_mapping
  4539  0D7D  3001               	movlw	1
  4540  0D7E  00F3               	movwf	??_LCD_mapping+1
  4541  0D7F  0871               	movf	LCD_mapping@D3,w
  4542  0D80  3E02               	addlw	2
  4543  0D81  0084               	movwf	4
  4544  0D82  0872               	movf	??_LCD_mapping,w
  4545  0D83  0080               	movwf	0
  4546  0D84  0873               	movf	??_LCD_mapping+1,w
  4547  0D85  0A84               	incf	4,f
  4548  0D86  0080               	movwf	0
  4549  0D87  0384               	decf	4,f
  4550  0D88  0871               	movf	LCD_mapping@D3,w
  4551  0D89  3E10               	addlw	16
  4552  0D8A  0084               	movwf	4
  4553  0D8B  3003               	movlw	3
  4554  0D8C  0080               	movwf	0
  4555  0D8D  0A84               	incf	4,f
  4556  0D8E  3000               	movlw	0
  4557  0D8F  0080               	movwf	0
  4558                           
  4559                           ;lcd.c: 31: D3->sc = &LCDDATA7; D3->bits[2] =3 ;
  4560  0D90  3017               	movlw	23
  4561  0D91  00F2               	movwf	??_LCD_mapping
  4562  0D92  3001               	movlw	1
  4563  0D93  00F3               	movwf	??_LCD_mapping+1
  4564  0D94  0871               	movf	LCD_mapping@D3,w
  4565  0D95  3E04               	addlw	4
  4566  0D96  0084               	movwf	4
  4567  0D97  0872               	movf	??_LCD_mapping,w
  4568  0D98  0080               	movwf	0
  4569  0D99  0873               	movf	??_LCD_mapping+1,w
  4570  0D9A  0A84               	incf	4,f
  4571  0D9B  0080               	movwf	0
  4572  0D9C  0384               	decf	4,f
  4573  0D9D  0871               	movf	LCD_mapping@D3,w
  4574  0D9E  3E12               	addlw	18
  4575  0D9F  0084               	movwf	4
  4576  0DA0  3003               	movlw	3
  4577  0DA1  0080               	movwf	0
  4578  0DA2  0A84               	incf	4,f
  4579  0DA3  3000               	movlw	0
  4580  0DA4  0080               	movwf	0
  4581                           
  4582                           ;lcd.c: 32: D3->sd = &LCDDATA9; D3->bits[3] =3 ;
  4583  0DA5  3019               	movlw	25
  4584  0DA6  00F2               	movwf	??_LCD_mapping
  4585  0DA7  3001               	movlw	1
  4586  0DA8  00F3               	movwf	??_LCD_mapping+1
  4587  0DA9  0871               	movf	LCD_mapping@D3,w
  4588  0DAA  3E06               	addlw	6
  4589  0DAB  0084               	movwf	4
  4590  0DAC  0872               	movf	??_LCD_mapping,w
  4591  0DAD  0080               	movwf	0
  4592  0DAE  0873               	movf	??_LCD_mapping+1,w
  4593  0DAF  0A84               	incf	4,f
  4594  0DB0  0080               	movwf	0
  4595  0DB1  0384               	decf	4,f
  4596  0DB2  0871               	movf	LCD_mapping@D3,w
  4597  0DB3  3E14               	addlw	20
  4598  0DB4  0084               	movwf	4
  4599  0DB5  3003               	movlw	3
  4600  0DB6  0080               	movwf	0
  4601  0DB7  0A84               	incf	4,f
  4602  0DB8  3000               	movlw	0
  4603  0DB9  0080               	movwf	0
  4604                           
  4605                           ;lcd.c: 33: D3->se = &LCDDATA6; D3->bits[4] =3 ;
  4606  0DBA  3016               	movlw	22
  4607  0DBB  00F2               	movwf	??_LCD_mapping
  4608  0DBC  3001               	movlw	1
  4609  0DBD  00F3               	movwf	??_LCD_mapping+1
  4610  0DBE  0871               	movf	LCD_mapping@D3,w
  4611  0DBF  3E08               	addlw	8
  4612  0DC0  0084               	movwf	4
  4613  0DC1  0872               	movf	??_LCD_mapping,w
  4614  0DC2  0080               	movwf	0
  4615  0DC3  0873               	movf	??_LCD_mapping+1,w
  4616  0DC4  0A84               	incf	4,f
  4617  0DC5  0080               	movwf	0
  4618  0DC6  0384               	decf	4,f
  4619  0DC7  0871               	movf	LCD_mapping@D3,w
  4620  0DC8  3E16               	addlw	22
  4621  0DC9  0084               	movwf	4
  4622  0DCA  3003               	movlw	3
  4623  0DCB  0080               	movwf	0
  4624  0DCC  0A84               	incf	4,f
  4625  0DCD  3000               	movlw	0
  4626  0DCE  0080               	movwf	0
  4627                           
  4628                           ;lcd.c: 34: D3->sf = &LCDDATA3; D3->bits[5] =3 ;
  4629  0DCF  3013               	movlw	19
  4630  0DD0  00F2               	movwf	??_LCD_mapping
  4631  0DD1  3001               	movlw	1
  4632  0DD2  00F3               	movwf	??_LCD_mapping+1
  4633  0DD3  0871               	movf	LCD_mapping@D3,w
  4634  0DD4  3E0A               	addlw	10
  4635  0DD5  0084               	movwf	4
  4636  0DD6  0872               	movf	??_LCD_mapping,w
  4637  0DD7  0080               	movwf	0
  4638  0DD8  0873               	movf	??_LCD_mapping+1,w
  4639  0DD9  0A84               	incf	4,f
  4640  0DDA  0080               	movwf	0
  4641  0DDB  0384               	decf	4,f
  4642  0DDC  0871               	movf	LCD_mapping@D3,w
  4643  0DDD  3E18               	addlw	24
  4644  0DDE  0084               	movwf	4
  4645  0DDF  3003               	movlw	3
  4646  0DE0  0080               	movwf	0
  4647  0DE1  0A84               	incf	4,f
  4648  0DE2  3000               	movlw	0
  4649  0DE3  0080               	movwf	0
  4650                           
  4651                           ;lcd.c: 35: D3->sg = &LCDDATA4; D3->bits[6] =3 ;
  4652  0DE4  3014               	movlw	20
  4653  0DE5  00F2               	movwf	??_LCD_mapping
  4654  0DE6  3001               	movlw	1
  4655  0DE7  00F3               	movwf	??_LCD_mapping+1
  4656  0DE8  0871               	movf	LCD_mapping@D3,w
  4657  0DE9  3E0C               	addlw	12
  4658  0DEA  0084               	movwf	4
  4659  0DEB  0872               	movf	??_LCD_mapping,w
  4660  0DEC  0080               	movwf	0
  4661  0DED  0873               	movf	??_LCD_mapping+1,w
  4662  0DEE  0A84               	incf	4,f
  4663  0DEF  0080               	movwf	0
  4664  0DF0  0384               	decf	4,f
  4665  0DF1  0871               	movf	LCD_mapping@D3,w
  4666  0DF2  3E1A               	addlw	26
  4667  0DF3  0084               	movwf	4
  4668  0DF4  3003               	movlw	3
  4669  0DF5  0080               	movwf	0
  4670  0DF6  0A84               	incf	4,f
  4671  0DF7  3000               	movlw	0
  4672  0DF8  0080               	movwf	0
  4673  0DF9  0008               	return
  4674  0DFA                     __end_of_LCD_mapping:	
  4675                           
  4676                           	psect	text18
  4677  1E48                     __ptext18:	
  4678 ;; *************** function _LCD_init *****************
  4679 ;; Defined at:
  4680 ;;		line 38 in file "lcd.c"
  4681 ;; Parameters:    Size  Location     Type
  4682 ;;		None
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;		None
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  1    wreg      void 
  4687 ;; Registers used:
  4688 ;;		wreg, status,2
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/0
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4694 ;;      Params:         0       0       0       0       0
  4695 ;;      Locals:         0       0       0       0       0
  4696 ;;      Temps:          0       0       0       0       0
  4697 ;;      Totals:         0       0       0       0       0
  4698 ;;Total ram usage:        0 bytes
  4699 ;; Hardware stack levels used:    1
  4700 ;; This function calls:
  4701 ;;		Nothing
  4702 ;; This function is called by:
  4703 ;;		_main
  4704 ;; This function uses a non-reentrant model
  4705 ;;
  4706                           
  4707                           
  4708                           ;psect for function _LCD_init
  4709  1E48                     _LCD_init:	
  4710                           
  4711                           ;lcd.c: 40: LCDSE0 = 0x4F;
  4712                           
  4713                           ;incstack = 0
  4714                           ; Regs used in _LCD_init: [wreg+status,2]
  4715  1E48  304F               	movlw	79
  4716  1E49  1283               	bcf	3,5	;RP0=0, select bank2
  4717  1E4A  1703               	bsf	3,6	;RP1=1, select bank2
  4718  1E4B  009C               	movwf	28	;volatile
  4719                           
  4720                           ;lcd.c: 41: LCDSE1 = 0x08;
  4721  1E4C  3008               	movlw	8
  4722  1E4D  009D               	movwf	29	;volatile
  4723                           
  4724                           ;lcd.c: 42: LCDSE2 = 0xE1;
  4725  1E4E  30E1               	movlw	225
  4726  1E4F  009E               	movwf	30	;volatile
  4727                           
  4728                           ;lcd.c: 45: ((LCDDATA0) &= 0x00);
  4729  1E50  0190               	clrf	16	;volatile
  4730                           
  4731                           ;lcd.c: 46: ((LCDDATA1) &= 0x00);
  4732  1E51  0191               	clrf	17	;volatile
  4733                           
  4734                           ;lcd.c: 47: ((LCDDATA2) &= 0x00);
  4735  1E52  0192               	clrf	18	;volatile
  4736                           
  4737                           ;lcd.c: 48: ((LCDDATA3) &= 0x00);
  4738  1E53  0193               	clrf	19	;volatile
  4739                           
  4740                           ;lcd.c: 49: ((LCDDATA4) &= 0x00);
  4741  1E54  0194               	clrf	20	;volatile
  4742                           
  4743                           ;lcd.c: 50: ((LCDDATA5) &= 0x00);
  4744  1E55  0195               	clrf	21	;volatile
  4745                           
  4746                           ;lcd.c: 51: ((LCDDATA6) &= 0x00);
  4747  1E56  0196               	clrf	22	;volatile
  4748                           
  4749                           ;lcd.c: 52: ((LCDDATA7) &= 0x00);
  4750  1E57  0197               	clrf	23	;volatile
  4751                           
  4752                           ;lcd.c: 53: ((LCDDATA8) &= 0x00);
  4753  1E58  0198               	clrf	24	;volatile
  4754                           
  4755                           ;lcd.c: 54: ((LCDDATA9) &= 0x00);
  4756  1E59  0199               	clrf	25	;volatile
  4757                           
  4758                           ;lcd.c: 55: ((LCDDATA10) &= 0x00);
  4759  1E5A  019A               	clrf	26	;volatile
  4760                           
  4761                           ;lcd.c: 56: ((LCDDATA11) &= 0x00);
  4762  1E5B  019B               	clrf	27	;volatile
  4763                           
  4764                           ;lcd.c: 60: LCDPS = 0x20;
  4765  1E5C  3020               	movlw	32
  4766  1E5D  0088               	movwf	8	;volatile
  4767                           
  4768                           ;lcd.c: 64: LCDCON = 0x93;
  4769  1E5E  3093               	movlw	147
  4770  1E5F  0087               	movwf	7	;volatile
  4771  1E60  0008               	return
  4772  1E61                     __end_of_LCD_init:	
  4773  007E                     btemp	set	126	;btemp
  4774  007E                     wtemp0	set	126
  4775                           
  4776                           	psect	text5_split_1
  4777  0B0A                     u2045:	
  4778  0B0A  1003               	clrc
  4779  0B0B  0DA3               	rlf	??_displayDigit+3,f
  4780  0B0C  0DA4               	rlf	??_displayDigit+4,f
  4781  0B0D                     u2044:	
  4782  0B0D  0BA2               	decfsz	??_displayDigit+2,f
  4783  0B0E  2B0A               	goto	u2045
  4784  0B0F  300A               	movlw	10
  4785  0B10  077B               	addwf	displayDigit@D1,w
  4786  0B11  00A5               	movwf	??_displayDigit+5
  4787  0B12  087C               	movf	displayDigit@D1+1,w
  4788  0B13  1803               	skipnc
  4789  0B14  3E01               	addlw	1
  4790  0B15  00A6               	movwf	??_displayDigit+6
  4791  0B16  0825               	movf	??_displayDigit+5,w
  4792  0B17  0084               	movwf	4
  4793  0B18  1783               	bsf	3,7
  4794  0B19  1C26               	btfss	??_displayDigit+6,0
  4795  0B1A  1383               	bcf	3,7
  4796  0B1B  0800               	movf	0,w
  4797  0B1C  00A7               	movwf	??_displayDigit+7
  4798  0B1D  0A84               	incf	4,f
  4799  0B1E  0800               	movf	0,w
  4800  0B1F  00A8               	movwf	??_displayDigit+8
  4801  0B20  0827               	movf	??_displayDigit+7,w
  4802  0B21  0084               	movwf	4
  4803  0B22  1783               	bsf	3,7
  4804  0B23  1C28               	btfss	??_displayDigit+8,0
  4805  0B24  1383               	bcf	3,7
  4806  0B25  0823               	movf	??_displayDigit+3,w
  4807  0B26  0480               	iorwf	0,f
  4808  0B27  0A84               	incf	4,f
  4809  0B28  0824               	movf	??_displayDigit+4,w
  4810  0B29  0480               	iorwf	0,f
  4811                           
  4812                           ;lcd.c: 92: ((*D1->sg) &= ~((1UL) << (D1->bits[6])));
  4813  0B2A  301A               	movlw	26
  4814  0B2B  077B               	addwf	displayDigit@D1,w
  4815  0B2C  00A0               	movwf	??_displayDigit
  4816  0B2D  087C               	movf	displayDigit@D1+1,w
  4817  0B2E  1803               	skipnc
  4818  0B2F  3E01               	addlw	1
  4819  0B30  00A1               	movwf	??_displayDigit+1
  4820  0B31  0820               	movf	??_displayDigit,w
  4821  0B32  0084               	movwf	4
  4822  0B33  1783               	bsf	3,7
  4823  0B34  1C21               	btfss	??_displayDigit+1,0
  4824  0B35  1383               	bcf	3,7
  4825  0B36  0A00               	incf	0,w
  4826  0B37  00A2               	movwf	??_displayDigit+2
  4827  0B38  3001               	movlw	1
  4828  0B39  00A3               	movwf	??_displayDigit+3
  4829  0B3A  3000               	movlw	0
  4830  0B3B  00A4               	movwf	??_displayDigit+4
  4831  0B3C  2B40               	goto	u2054
  4832  0B3D                     u2055:	
  4833  0B3D  1003               	clrc
  4834  0B3E  0DA3               	rlf	??_displayDigit+3,f
  4835  0B3F  0DA4               	rlf	??_displayDigit+4,f
  4836  0B40                     u2054:	
  4837  0B40  0BA2               	decfsz	??_displayDigit+2,f
  4838  0B41  2B3D               	goto	u2055
  4839  0B42  09A3               	comf	??_displayDigit+3,f
  4840  0B43  09A4               	comf	??_displayDigit+4,f
  4841  0B44  300C               	movlw	12
  4842  0B45  077B               	addwf	displayDigit@D1,w
  4843  0B46  00A5               	movwf	??_displayDigit+5
  4844  0B47  087C               	movf	displayDigit@D1+1,w
  4845  0B48  1803               	skipnc
  4846  0B49  3E01               	addlw	1
  4847  0B4A  00A6               	movwf	??_displayDigit+6
  4848  0B4B  0825               	movf	??_displayDigit+5,w
  4849  0B4C  0084               	movwf	4
  4850  0B4D  1783               	bsf	3,7
  4851  0B4E  1C26               	btfss	??_displayDigit+6,0
  4852  0B4F  1383               	bcf	3,7
  4853  0B50  0800               	movf	0,w
  4854  0B51  00A7               	movwf	??_displayDigit+7
  4855  0B52  0A84               	incf	4,f
  4856  0B53  0800               	movf	0,w
  4857  0B54  00A8               	movwf	??_displayDigit+8
  4858  0B55  0827               	movf	??_displayDigit+7,w
  4859  0B56  0084               	movwf	4
  4860  0B57  1783               	bsf	3,7
  4861  0B58  1C28               	btfss	??_displayDigit+8,0
  4862  0B59  1383               	bcf	3,7
  4863  0B5A  0823               	movf	??_displayDigit+3,w
  4864  0B5B  0580               	andwf	0,f
  4865  0B5C  0A84               	incf	4,f
  4866  0B5D  0824               	movf	??_displayDigit+4,w
  4867  0B5E  0580               	andwf	0,f
  4868                           
  4869                           ;lcd.c: 93: break;
  4870  0B5F  0008               	return
  4871  0B60                     l1329:	
  4872                           ;lcd.c: 94: case 1:
  4873                           
  4874                           
  4875                           ;lcd.c: 95: ((*D1->sa) &= ~((1UL) << (D1->bits[0])));
  4876  0B60  300E               	movlw	14
  4877  0B61  077B               	addwf	displayDigit@D1,w
  4878  0B62  1283               	bcf	3,5	;RP0=0, select bank0
  4879  0B63  1303               	bcf	3,6	;RP1=0, select bank0
  4880  0B64  00A0               	movwf	??_displayDigit
  4881  0B65  087C               	movf	displayDigit@D1+1,w
  4882  0B66  1803               	skipnc
  4883  0B67  3E01               	addlw	1
  4884  0B68  00A1               	movwf	??_displayDigit+1
  4885  0B69  0820               	movf	??_displayDigit,w
  4886  0B6A  0084               	movwf	4
  4887  0B6B  1783               	bsf	3,7
  4888  0B6C  1C21               	btfss	??_displayDigit+1,0
  4889  0B6D  1383               	bcf	3,7
  4890  0B6E  0A00               	incf	0,w
  4891  0B6F  00A2               	movwf	??_displayDigit+2
  4892  0B70  3001               	movlw	1
  4893  0B71  00A3               	movwf	??_displayDigit+3
  4894  0B72  3000               	movlw	0
  4895  0B73  00A4               	movwf	??_displayDigit+4
  4896  0B74  2B78               	goto	u2064
  4897  0B75                     u2065:	
  4898  0B75  1003               	clrc
  4899  0B76  0DA3               	rlf	??_displayDigit+3,f
  4900  0B77  0DA4               	rlf	??_displayDigit+4,f
  4901  0B78                     u2064:	
  4902  0B78  0BA2               	decfsz	??_displayDigit+2,f
  4903  0B79  2B75               	goto	u2065
  4904  0B7A  09A3               	comf	??_displayDigit+3,f
  4905  0B7B  09A4               	comf	??_displayDigit+4,f
  4906  0B7C  087B               	movf	displayDigit@D1,w
  4907  0B7D  0084               	movwf	4
  4908  0B7E  1783               	bsf	3,7
  4909  0B7F  1C7C               	btfss	displayDigit@D1+1,0
  4910  0B80  1383               	bcf	3,7
  4911  0B81  0800               	movf	0,w
  4912  0B82  00A5               	movwf	??_displayDigit+5
  4913  0B83  0A84               	incf	4,f
  4914  0B84  0800               	movf	0,w
  4915  0B85  00A6               	movwf	??_displayDigit+6
  4916  0B86  0825               	movf	??_displayDigit+5,w
  4917  0B87  0084               	movwf	4
  4918  0B88  1783               	bsf	3,7
  4919  0B89  1C26               	btfss	??_displayDigit+6,0
  4920  0B8A  1383               	bcf	3,7
  4921  0B8B  0823               	movf	??_displayDigit+3,w
  4922  0B8C  0580               	andwf	0,f
  4923  0B8D  0A84               	incf	4,f
  4924  0B8E  0824               	movf	??_displayDigit+4,w
  4925  0B8F  0580               	andwf	0,f
  4926                           
  4927                           ;lcd.c: 96: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  4928  0B90  3010               	movlw	16
  4929  0B91  077B               	addwf	displayDigit@D1,w
  4930  0B92  00A0               	movwf	??_displayDigit
  4931  0B93  087C               	movf	displayDigit@D1+1,w
  4932  0B94  1803               	skipnc
  4933  0B95  3E01               	addlw	1
  4934  0B96  00A1               	movwf	??_displayDigit+1
  4935  0B97  0820               	movf	??_displayDigit,w
  4936  0B98  0084               	movwf	4
  4937  0B99  1783               	bsf	3,7
  4938  0B9A  1C21               	btfss	??_displayDigit+1,0
  4939  0B9B  1383               	bcf	3,7
  4940  0B9C  0A00               	incf	0,w
  4941  0B9D  00A2               	movwf	??_displayDigit+2
  4942  0B9E  3001               	movlw	1
  4943  0B9F  00A3               	movwf	??_displayDigit+3
  4944  0BA0  3000               	movlw	0
  4945  0BA1  00A4               	movwf	??_displayDigit+4
  4946  0BA2  2BA6               	goto	u2074
  4947  0BA3                     u2075:	
  4948  0BA3  1003               	clrc
  4949  0BA4  0DA3               	rlf	??_displayDigit+3,f
  4950  0BA5  0DA4               	rlf	??_displayDigit+4,f
  4951  0BA6                     u2074:	
  4952  0BA6  0BA2               	decfsz	??_displayDigit+2,f
  4953  0BA7  2BA3               	goto	u2075
  4954  0BA8  3002               	movlw	2
  4955  0BA9  077B               	addwf	displayDigit@D1,w
  4956  0BAA  00A5               	movwf	??_displayDigit+5
  4957  0BAB  087C               	movf	displayDigit@D1+1,w
  4958  0BAC  1803               	skipnc
  4959  0BAD  3E01               	addlw	1
  4960  0BAE  00A6               	movwf	??_displayDigit+6
  4961  0BAF  0825               	movf	??_displayDigit+5,w
  4962  0BB0  0084               	movwf	4
  4963  0BB1  1783               	bsf	3,7
  4964  0BB2  1C26               	btfss	??_displayDigit+6,0
  4965  0BB3  1383               	bcf	3,7
  4966  0BB4  0800               	movf	0,w
  4967  0BB5  00A7               	movwf	??_displayDigit+7
  4968  0BB6  0A84               	incf	4,f
  4969  0BB7  0800               	movf	0,w
  4970  0BB8  00A8               	movwf	??_displayDigit+8
  4971  0BB9  0827               	movf	??_displayDigit+7,w
  4972  0BBA  0084               	movwf	4
  4973  0BBB  1783               	bsf	3,7
  4974  0BBC  1C28               	btfss	??_displayDigit+8,0
  4975  0BBD  1383               	bcf	3,7
  4976  0BBE  0823               	movf	??_displayDigit+3,w
  4977  0BBF  0480               	iorwf	0,f
  4978  0BC0  0A84               	incf	4,f
  4979  0BC1  0824               	movf	??_displayDigit+4,w
  4980  0BC2  0480               	iorwf	0,f
  4981                           
  4982                           ;lcd.c: 97: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  4983  0BC3  3012               	movlw	18
  4984  0BC4  077B               	addwf	displayDigit@D1,w
  4985  0BC5  00A0               	movwf	??_displayDigit
  4986  0BC6  087C               	movf	displayDigit@D1+1,w
  4987  0BC7  1803               	skipnc
  4988  0BC8  3E01               	addlw	1
  4989  0BC9  00A1               	movwf	??_displayDigit+1
  4990  0BCA  0820               	movf	??_displayDigit,w
  4991  0BCB  0084               	movwf	4
  4992  0BCC  1783               	bsf	3,7
  4993  0BCD  1C21               	btfss	??_displayDigit+1,0
  4994  0BCE  1383               	bcf	3,7
  4995  0BCF  0A00               	incf	0,w
  4996  0BD0  00A2               	movwf	??_displayDigit+2
  4997  0BD1  3001               	movlw	1
  4998  0BD2  00A3               	movwf	??_displayDigit+3
  4999  0BD3  3000               	movlw	0
  5000  0BD4  00A4               	movwf	??_displayDigit+4
  5001  0BD5  2BD9               	goto	u2084
  5002  0BD6                     u2085:	
  5003  0BD6  1003               	clrc
  5004  0BD7  0DA3               	rlf	??_displayDigit+3,f
  5005  0BD8  0DA4               	rlf	??_displayDigit+4,f
  5006  0BD9                     u2084:	
  5007  0BD9  0BA2               	decfsz	??_displayDigit+2,f
  5008  0BDA  2BD6               	goto	u2085
  5009  0BDB  3004               	movlw	4
  5010  0BDC  077B               	addwf	displayDigit@D1,w
  5011  0BDD  00A5               	movwf	??_displayDigit+5
  5012  0BDE  087C               	movf	displayDigit@D1+1,w
  5013  0BDF  1803               	skipnc
  5014  0BE0  3E01               	addlw	1
  5015  0BE1  00A6               	movwf	??_displayDigit+6
  5016  0BE2  0825               	movf	??_displayDigit+5,w
  5017  0BE3  0084               	movwf	4
  5018  0BE4  1783               	bsf	3,7
  5019  0BE5  1C26               	btfss	??_displayDigit+6,0
  5020  0BE6  1383               	bcf	3,7
  5021  0BE7  0800               	movf	0,w
  5022  0BE8  00A7               	movwf	??_displayDigit+7
  5023  0BE9  0A84               	incf	4,f
  5024  0BEA  0800               	movf	0,w
  5025  0BEB  00A8               	movwf	??_displayDigit+8
  5026  0BEC  0827               	movf	??_displayDigit+7,w
  5027  0BED  0084               	movwf	4
  5028  0BEE  1783               	bsf	3,7
  5029  0BEF  1C28               	btfss	??_displayDigit+8,0
  5030  0BF0  1383               	bcf	3,7
  5031  0BF1  0823               	movf	??_displayDigit+3,w
  5032  0BF2  0480               	iorwf	0,f
  5033  0BF3  0A84               	incf	4,f
  5034  0BF4  0824               	movf	??_displayDigit+4,w
  5035  0BF5  0480               	iorwf	0,f
  5036                           
  5037                           ;lcd.c: 98: ((*D1->sd) &= ~((1UL) << (D1->bits[3])));
  5038  0BF6  3014               	movlw	20
  5039  0BF7  077B               	addwf	displayDigit@D1,w
  5040  0BF8  00A0               	movwf	??_displayDigit
  5041  0BF9  087C               	movf	displayDigit@D1+1,w
  5042  0BFA  1803               	skipnc
  5043  0BFB  3E01               	addlw	1
  5044  0BFC  00A1               	movwf	??_displayDigit+1
  5045  0BFD  0820               	movf	??_displayDigit,w
  5046  0BFE  0084               	movwf	4
  5047  0BFF  1783               	bsf	3,7
  5048  0C00  1C21               	btfss	??_displayDigit+1,0
  5049  0C01  1383               	bcf	3,7
  5050  0C02  0A00               	incf	0,w
  5051  0C03  00A2               	movwf	??_displayDigit+2
  5052  0C04  3001               	movlw	1
  5053  0C05  00A3               	movwf	??_displayDigit+3
  5054  0C06  3000               	movlw	0
  5055  0C07  00A4               	movwf	??_displayDigit+4
  5056  0C08  2C0C               	goto	u2094
  5057  0C09                     u2095:	
  5058  0C09  1003               	clrc
  5059  0C0A  0DA3               	rlf	??_displayDigit+3,f
  5060  0C0B  0DA4               	rlf	??_displayDigit+4,f
  5061  0C0C                     u2094:	
  5062  0C0C  0BA2               	decfsz	??_displayDigit+2,f
  5063  0C0D  2C09               	goto	u2095
  5064  0C0E  09A3               	comf	??_displayDigit+3,f
  5065  0C0F  09A4               	comf	??_displayDigit+4,f
  5066  0C10  3006               	movlw	6
  5067  0C11  077B               	addwf	displayDigit@D1,w
  5068  0C12  00A5               	movwf	??_displayDigit+5
  5069  0C13  087C               	movf	displayDigit@D1+1,w
  5070  0C14  1803               	skipnc
  5071  0C15  3E01               	addlw	1
  5072  0C16  00A6               	movwf	??_displayDigit+6
  5073  0C17  0825               	movf	??_displayDigit+5,w
  5074  0C18  0084               	movwf	4
  5075  0C19  1783               	bsf	3,7
  5076  0C1A  1C26               	btfss	??_displayDigit+6,0
  5077  0C1B  1383               	bcf	3,7
  5078  0C1C  0800               	movf	0,w
  5079  0C1D  00A7               	movwf	??_displayDigit+7
  5080  0C1E  0A84               	incf	4,f
  5081  0C1F  0800               	movf	0,w
  5082  0C20  00A8               	movwf	??_displayDigit+8
  5083  0C21  0827               	movf	??_displayDigit+7,w
  5084  0C22  0084               	movwf	4
  5085  0C23  1783               	bsf	3,7
  5086  0C24  1C28               	btfss	??_displayDigit+8,0
  5087  0C25  1383               	bcf	3,7
  5088  0C26  0823               	movf	??_displayDigit+3,w
  5089  0C27  0580               	andwf	0,f
  5090  0C28  0A84               	incf	4,f
  5091  0C29  0824               	movf	??_displayDigit+4,w
  5092  0C2A  0580               	andwf	0,f
  5093                           
  5094                           ;lcd.c: 99: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  5095  0C2B  3016               	movlw	22
  5096  0C2C  077B               	addwf	displayDigit@D1,w
  5097  0C2D  00A0               	movwf	??_displayDigit
  5098  0C2E  087C               	movf	displayDigit@D1+1,w
  5099  0C2F  1803               	skipnc
  5100  0C30  3E01               	addlw	1
  5101  0C31  00A1               	movwf	??_displayDigit+1
  5102  0C32  0820               	movf	??_displayDigit,w
  5103  0C33  0084               	movwf	4
  5104  0C34  1783               	bsf	3,7
  5105  0C35  1C21               	btfss	??_displayDigit+1,0
  5106  0C36  1383               	bcf	3,7
  5107  0C37  0A00               	incf	0,w
  5108  0C38  00A2               	movwf	??_displayDigit+2
  5109  0C39  3001               	movlw	1
  5110  0C3A  00A3               	movwf	??_displayDigit+3
  5111  0C3B  3000               	movlw	0
  5112  0C3C  00A4               	movwf	??_displayDigit+4
  5113  0C3D  160A  118A  29D4   	goto	u2104
  5114                           
  5115                           	psect	text5_split_2
  5116  11D1                     u2105:	
  5117  11D1  1003               	clrc
  5118  11D2  0DA3               	rlf	??_displayDigit+3,f
  5119  11D3  0DA4               	rlf	??_displayDigit+4,f
  5120  11D4                     u2104:	
  5121  11D4  0BA2               	decfsz	??_displayDigit+2,f
  5122  11D5  29D1               	goto	u2105
  5123  11D6  09A3               	comf	??_displayDigit+3,f
  5124  11D7  09A4               	comf	??_displayDigit+4,f
  5125  11D8  3008               	movlw	8
  5126  11D9  077B               	addwf	displayDigit@D1,w
  5127  11DA  00A5               	movwf	??_displayDigit+5
  5128  11DB  087C               	movf	displayDigit@D1+1,w
  5129  11DC  1803               	skipnc
  5130  11DD  3E01               	addlw	1
  5131  11DE  00A6               	movwf	??_displayDigit+6
  5132  11DF  0825               	movf	??_displayDigit+5,w
  5133  11E0  0084               	movwf	4
  5134  11E1  1783               	bsf	3,7
  5135  11E2  1C26               	btfss	??_displayDigit+6,0
  5136  11E3  1383               	bcf	3,7
  5137  11E4  0800               	movf	0,w
  5138  11E5  00A7               	movwf	??_displayDigit+7
  5139  11E6  0A84               	incf	4,f
  5140  11E7  0800               	movf	0,w
  5141  11E8  00A8               	movwf	??_displayDigit+8
  5142  11E9  0827               	movf	??_displayDigit+7,w
  5143  11EA  0084               	movwf	4
  5144  11EB  1783               	bsf	3,7
  5145  11EC  1C28               	btfss	??_displayDigit+8,0
  5146  11ED  1383               	bcf	3,7
  5147  11EE  0823               	movf	??_displayDigit+3,w
  5148  11EF  0580               	andwf	0,f
  5149  11F0  0A84               	incf	4,f
  5150  11F1  0824               	movf	??_displayDigit+4,w
  5151  11F2  0580               	andwf	0,f
  5152                           
  5153                           ;lcd.c: 100: ((*D1->sf) &= ~((1UL) << (D1->bits[5])));
  5154  11F3  3018               	movlw	24
  5155  11F4  077B               	addwf	displayDigit@D1,w
  5156  11F5  00A0               	movwf	??_displayDigit
  5157  11F6  087C               	movf	displayDigit@D1+1,w
  5158  11F7  1803               	skipnc
  5159  11F8  3E01               	addlw	1
  5160  11F9  00A1               	movwf	??_displayDigit+1
  5161  11FA  0820               	movf	??_displayDigit,w
  5162  11FB  0084               	movwf	4
  5163  11FC  1783               	bsf	3,7
  5164  11FD  1C21               	btfss	??_displayDigit+1,0
  5165  11FE  1383               	bcf	3,7
  5166  11FF  0A00               	incf	0,w
  5167  1200  00A2               	movwf	??_displayDigit+2
  5168  1201  3001               	movlw	1
  5169  1202  00A3               	movwf	??_displayDigit+3
  5170  1203  3000               	movlw	0
  5171  1204  00A4               	movwf	??_displayDigit+4
  5172  1205  2A09               	goto	u2114
  5173  1206                     u2115:	
  5174  1206  1003               	clrc
  5175  1207  0DA3               	rlf	??_displayDigit+3,f
  5176  1208  0DA4               	rlf	??_displayDigit+4,f
  5177  1209                     u2114:	
  5178  1209  0BA2               	decfsz	??_displayDigit+2,f
  5179  120A  2A06               	goto	u2115
  5180  120B  09A3               	comf	??_displayDigit+3,f
  5181  120C  09A4               	comf	??_displayDigit+4,f
  5182  120D  300A               	movlw	10
  5183  120E  077B               	addwf	displayDigit@D1,w
  5184  120F  00A5               	movwf	??_displayDigit+5
  5185  1210  087C               	movf	displayDigit@D1+1,w
  5186  1211  1803               	skipnc
  5187  1212  3E01               	addlw	1
  5188  1213  00A6               	movwf	??_displayDigit+6
  5189  1214  0825               	movf	??_displayDigit+5,w
  5190  1215  0084               	movwf	4
  5191  1216  1783               	bsf	3,7
  5192  1217  1C26               	btfss	??_displayDigit+6,0
  5193  1218  1383               	bcf	3,7
  5194  1219  0800               	movf	0,w
  5195  121A  00A7               	movwf	??_displayDigit+7
  5196  121B  0A84               	incf	4,f
  5197  121C  0800               	movf	0,w
  5198  121D  00A8               	movwf	??_displayDigit+8
  5199  121E  0827               	movf	??_displayDigit+7,w
  5200  121F  0084               	movwf	4
  5201  1220  1783               	bsf	3,7
  5202  1221  1C28               	btfss	??_displayDigit+8,0
  5203  1222  1383               	bcf	3,7
  5204  1223  0823               	movf	??_displayDigit+3,w
  5205  1224  0580               	andwf	0,f
  5206  1225  0A84               	incf	4,f
  5207  1226  0824               	movf	??_displayDigit+4,w
  5208  1227  0580               	andwf	0,f
  5209                           
  5210                           ;lcd.c: 101: ((*D1->sg) &= ~((1UL) << (D1->bits[6])));
  5211  1228  301A               	movlw	26
  5212  1229  077B               	addwf	displayDigit@D1,w
  5213  122A  00A0               	movwf	??_displayDigit
  5214  122B  087C               	movf	displayDigit@D1+1,w
  5215  122C  1803               	skipnc
  5216  122D  3E01               	addlw	1
  5217  122E  00A1               	movwf	??_displayDigit+1
  5218  122F  0820               	movf	??_displayDigit,w
  5219  1230  0084               	movwf	4
  5220  1231  1783               	bsf	3,7
  5221  1232  1C21               	btfss	??_displayDigit+1,0
  5222  1233  1383               	bcf	3,7
  5223  1234  0A00               	incf	0,w
  5224  1235  00A2               	movwf	??_displayDigit+2
  5225  1236  3001               	movlw	1
  5226  1237  00A3               	movwf	??_displayDigit+3
  5227  1238  3000               	movlw	0
  5228  1239  00A4               	movwf	??_displayDigit+4
  5229  123A  2A3E               	goto	u2124
  5230  123B                     u2125:	
  5231  123B  1003               	clrc
  5232  123C  0DA3               	rlf	??_displayDigit+3,f
  5233  123D  0DA4               	rlf	??_displayDigit+4,f
  5234  123E                     u2124:	
  5235  123E  0BA2               	decfsz	??_displayDigit+2,f
  5236  123F  2A3B               	goto	u2125
  5237  1240  09A3               	comf	??_displayDigit+3,f
  5238  1241  09A4               	comf	??_displayDigit+4,f
  5239  1242  300C               	movlw	12
  5240  1243  077B               	addwf	displayDigit@D1,w
  5241  1244  00A5               	movwf	??_displayDigit+5
  5242  1245  087C               	movf	displayDigit@D1+1,w
  5243  1246  1803               	skipnc
  5244  1247  3E01               	addlw	1
  5245  1248  00A6               	movwf	??_displayDigit+6
  5246  1249  0825               	movf	??_displayDigit+5,w
  5247  124A  0084               	movwf	4
  5248  124B  1783               	bsf	3,7
  5249  124C  1C26               	btfss	??_displayDigit+6,0
  5250  124D  1383               	bcf	3,7
  5251  124E  0800               	movf	0,w
  5252  124F  00A7               	movwf	??_displayDigit+7
  5253  1250  0A84               	incf	4,f
  5254  1251  0800               	movf	0,w
  5255  1252  00A8               	movwf	??_displayDigit+8
  5256  1253  0827               	movf	??_displayDigit+7,w
  5257  1254  0084               	movwf	4
  5258  1255  1783               	bsf	3,7
  5259  1256  1C28               	btfss	??_displayDigit+8,0
  5260  1257  1383               	bcf	3,7
  5261  1258  0823               	movf	??_displayDigit+3,w
  5262  1259  0580               	andwf	0,f
  5263  125A  0A84               	incf	4,f
  5264  125B  0824               	movf	??_displayDigit+4,w
  5265  125C  0580               	andwf	0,f
  5266                           
  5267                           ;lcd.c: 102: break;
  5268  125D  0008               	return
  5269                           
  5270                           	psect	text5_split_3
  5271  14C8                     l1331:	
  5272                           ;lcd.c: 103: case 2:
  5273                           
  5274                           
  5275                           ;lcd.c: 104: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  5276  14C8  300E               	movlw	14
  5277  14C9  077B               	addwf	displayDigit@D1,w
  5278  14CA  1283               	bcf	3,5	;RP0=0, select bank0
  5279  14CB  1303               	bcf	3,6	;RP1=0, select bank0
  5280  14CC  00A0               	movwf	??_displayDigit
  5281  14CD  087C               	movf	displayDigit@D1+1,w
  5282  14CE  1803               	skipnc
  5283  14CF  3E01               	addlw	1
  5284  14D0  00A1               	movwf	??_displayDigit+1
  5285  14D1  0820               	movf	??_displayDigit,w
  5286  14D2  0084               	movwf	4
  5287  14D3  1783               	bsf	3,7
  5288  14D4  1C21               	btfss	??_displayDigit+1,0
  5289  14D5  1383               	bcf	3,7
  5290  14D6  0A00               	incf	0,w
  5291  14D7  00A2               	movwf	??_displayDigit+2
  5292  14D8  3001               	movlw	1
  5293  14D9  00A3               	movwf	??_displayDigit+3
  5294  14DA  3000               	movlw	0
  5295  14DB  00A4               	movwf	??_displayDigit+4
  5296  14DC  2CE0               	goto	u2134
  5297  14DD                     u2135:	
  5298  14DD  1003               	clrc
  5299  14DE  0DA3               	rlf	??_displayDigit+3,f
  5300  14DF  0DA4               	rlf	??_displayDigit+4,f
  5301  14E0                     u2134:	
  5302  14E0  0BA2               	decfsz	??_displayDigit+2,f
  5303  14E1  2CDD               	goto	u2135
  5304  14E2  087B               	movf	displayDigit@D1,w
  5305  14E3  0084               	movwf	4
  5306  14E4  1783               	bsf	3,7
  5307  14E5  1C7C               	btfss	displayDigit@D1+1,0
  5308  14E6  1383               	bcf	3,7
  5309  14E7  0800               	movf	0,w
  5310  14E8  00A5               	movwf	??_displayDigit+5
  5311  14E9  0A84               	incf	4,f
  5312  14EA  0800               	movf	0,w
  5313  14EB  00A6               	movwf	??_displayDigit+6
  5314  14EC  0825               	movf	??_displayDigit+5,w
  5315  14ED  0084               	movwf	4
  5316  14EE  1783               	bsf	3,7
  5317  14EF  1C26               	btfss	??_displayDigit+6,0
  5318  14F0  1383               	bcf	3,7
  5319  14F1  0823               	movf	??_displayDigit+3,w
  5320  14F2  0480               	iorwf	0,f
  5321  14F3  0A84               	incf	4,f
  5322  14F4  0824               	movf	??_displayDigit+4,w
  5323  14F5  0480               	iorwf	0,f
  5324                           
  5325                           ;lcd.c: 105: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  5326  14F6  3010               	movlw	16
  5327  14F7  077B               	addwf	displayDigit@D1,w
  5328  14F8  00A0               	movwf	??_displayDigit
  5329  14F9  087C               	movf	displayDigit@D1+1,w
  5330  14FA  1803               	skipnc
  5331  14FB  3E01               	addlw	1
  5332  14FC  00A1               	movwf	??_displayDigit+1
  5333  14FD  0820               	movf	??_displayDigit,w
  5334  14FE  0084               	movwf	4
  5335  14FF  1783               	bsf	3,7
  5336  1500  1C21               	btfss	??_displayDigit+1,0
  5337  1501  1383               	bcf	3,7
  5338  1502  0A00               	incf	0,w
  5339  1503  00A2               	movwf	??_displayDigit+2
  5340  1504  3001               	movlw	1
  5341  1505  00A3               	movwf	??_displayDigit+3
  5342  1506  3000               	movlw	0
  5343  1507  00A4               	movwf	??_displayDigit+4
  5344  1508  2D0C               	goto	u2144
  5345  1509                     u2145:	
  5346  1509  1003               	clrc
  5347  150A  0DA3               	rlf	??_displayDigit+3,f
  5348  150B  0DA4               	rlf	??_displayDigit+4,f
  5349  150C                     u2144:	
  5350  150C  0BA2               	decfsz	??_displayDigit+2,f
  5351  150D  2D09               	goto	u2145
  5352  150E  3002               	movlw	2
  5353  150F  077B               	addwf	displayDigit@D1,w
  5354  1510  00A5               	movwf	??_displayDigit+5
  5355  1511  087C               	movf	displayDigit@D1+1,w
  5356  1512  1803               	skipnc
  5357  1513  3E01               	addlw	1
  5358  1514  00A6               	movwf	??_displayDigit+6
  5359  1515  0825               	movf	??_displayDigit+5,w
  5360  1516  0084               	movwf	4
  5361  1517  1783               	bsf	3,7
  5362  1518  1C26               	btfss	??_displayDigit+6,0
  5363  1519  1383               	bcf	3,7
  5364  151A  0800               	movf	0,w
  5365  151B  00A7               	movwf	??_displayDigit+7
  5366  151C  0A84               	incf	4,f
  5367  151D  0800               	movf	0,w
  5368  151E  00A8               	movwf	??_displayDigit+8
  5369  151F  0827               	movf	??_displayDigit+7,w
  5370  1520  0084               	movwf	4
  5371  1521  1783               	bsf	3,7
  5372  1522  1C28               	btfss	??_displayDigit+8,0
  5373  1523  1383               	bcf	3,7
  5374  1524  0823               	movf	??_displayDigit+3,w
  5375  1525  0480               	iorwf	0,f
  5376  1526  0A84               	incf	4,f
  5377  1527  0824               	movf	??_displayDigit+4,w
  5378  1528  0480               	iorwf	0,f
  5379                           
  5380                           ;lcd.c: 106: ((*D1->sc) &= ~((1UL) << (D1->bits[2])));
  5381  1529  3012               	movlw	18
  5382  152A  077B               	addwf	displayDigit@D1,w
  5383  152B  00A0               	movwf	??_displayDigit
  5384  152C  087C               	movf	displayDigit@D1+1,w
  5385  152D  1803               	skipnc
  5386  152E  3E01               	addlw	1
  5387  152F  00A1               	movwf	??_displayDigit+1
  5388  1530  0820               	movf	??_displayDigit,w
  5389  1531  0084               	movwf	4
  5390  1532  1783               	bsf	3,7
  5391  1533  1C21               	btfss	??_displayDigit+1,0
  5392  1534  1383               	bcf	3,7
  5393  1535  0A00               	incf	0,w
  5394  1536  00A2               	movwf	??_displayDigit+2
  5395  1537  3001               	movlw	1
  5396  1538  00A3               	movwf	??_displayDigit+3
  5397  1539  3000               	movlw	0
  5398  153A  00A4               	movwf	??_displayDigit+4
  5399  153B  2D3F               	goto	u2154
  5400  153C                     u2155:	
  5401  153C  1003               	clrc
  5402  153D  0DA3               	rlf	??_displayDigit+3,f
  5403  153E  0DA4               	rlf	??_displayDigit+4,f
  5404  153F                     u2154:	
  5405  153F  0BA2               	decfsz	??_displayDigit+2,f
  5406  1540  2D3C               	goto	u2155
  5407  1541  09A3               	comf	??_displayDigit+3,f
  5408  1542  09A4               	comf	??_displayDigit+4,f
  5409  1543  3004               	movlw	4
  5410  1544  077B               	addwf	displayDigit@D1,w
  5411  1545  00A5               	movwf	??_displayDigit+5
  5412  1546  087C               	movf	displayDigit@D1+1,w
  5413  1547  1803               	skipnc
  5414  1548  3E01               	addlw	1
  5415  1549  00A6               	movwf	??_displayDigit+6
  5416  154A  0825               	movf	??_displayDigit+5,w
  5417  154B  0084               	movwf	4
  5418  154C  1783               	bsf	3,7
  5419  154D  1C26               	btfss	??_displayDigit+6,0
  5420  154E  1383               	bcf	3,7
  5421  154F  0800               	movf	0,w
  5422  1550  00A7               	movwf	??_displayDigit+7
  5423  1551  0A84               	incf	4,f
  5424  1552  0800               	movf	0,w
  5425  1553  00A8               	movwf	??_displayDigit+8
  5426  1554  0827               	movf	??_displayDigit+7,w
  5427  1555  0084               	movwf	4
  5428  1556  1783               	bsf	3,7
  5429  1557  1C28               	btfss	??_displayDigit+8,0
  5430  1558  1383               	bcf	3,7
  5431  1559  0823               	movf	??_displayDigit+3,w
  5432  155A  0580               	andwf	0,f
  5433  155B  0A84               	incf	4,f
  5434  155C  0824               	movf	??_displayDigit+4,w
  5435  155D  0580               	andwf	0,f
  5436                           
  5437                           ;lcd.c: 107: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  5438  155E  3014               	movlw	20
  5439  155F  077B               	addwf	displayDigit@D1,w
  5440  1560  00A0               	movwf	??_displayDigit
  5441  1561  087C               	movf	displayDigit@D1+1,w
  5442  1562  1803               	skipnc
  5443  1563  3E01               	addlw	1
  5444  1564  00A1               	movwf	??_displayDigit+1
  5445  1565  0820               	movf	??_displayDigit,w
  5446  1566  0084               	movwf	4
  5447  1567  1783               	bsf	3,7
  5448  1568  1C21               	btfss	??_displayDigit+1,0
  5449  1569  1383               	bcf	3,7
  5450  156A  0A00               	incf	0,w
  5451  156B  00A2               	movwf	??_displayDigit+2
  5452  156C  3001               	movlw	1
  5453  156D  00A3               	movwf	??_displayDigit+3
  5454  156E  3000               	movlw	0
  5455  156F  00A4               	movwf	??_displayDigit+4
  5456  1570  2D74               	goto	u2164
  5457  1571                     u2165:	
  5458  1571  1003               	clrc
  5459  1572  0DA3               	rlf	??_displayDigit+3,f
  5460  1573  0DA4               	rlf	??_displayDigit+4,f
  5461  1574                     u2164:	
  5462  1574  0BA2               	decfsz	??_displayDigit+2,f
  5463  1575  2D71               	goto	u2165
  5464  1576  3006               	movlw	6
  5465  1577  077B               	addwf	displayDigit@D1,w
  5466  1578  00A5               	movwf	??_displayDigit+5
  5467  1579  087C               	movf	displayDigit@D1+1,w
  5468  157A  1803               	skipnc
  5469  157B  3E01               	addlw	1
  5470  157C  00A6               	movwf	??_displayDigit+6
  5471  157D  0825               	movf	??_displayDigit+5,w
  5472  157E  0084               	movwf	4
  5473  157F  1783               	bsf	3,7
  5474  1580  1C26               	btfss	??_displayDigit+6,0
  5475  1581  1383               	bcf	3,7
  5476  1582  0800               	movf	0,w
  5477  1583  00A7               	movwf	??_displayDigit+7
  5478  1584  0A84               	incf	4,f
  5479  1585  0800               	movf	0,w
  5480  1586  00A8               	movwf	??_displayDigit+8
  5481  1587  0827               	movf	??_displayDigit+7,w
  5482  1588  0084               	movwf	4
  5483  1589  1783               	bsf	3,7
  5484  158A  1C28               	btfss	??_displayDigit+8,0
  5485  158B  1383               	bcf	3,7
  5486  158C  0823               	movf	??_displayDigit+3,w
  5487  158D  0480               	iorwf	0,f
  5488  158E  0A84               	incf	4,f
  5489  158F  0824               	movf	??_displayDigit+4,w
  5490  1590  0480               	iorwf	0,f
  5491                           
  5492                           ;lcd.c: 108: ((*D1->se) |= (1UL) << (D1->bits[4]));
  5493  1591  3016               	movlw	22
  5494  1592  077B               	addwf	displayDigit@D1,w
  5495  1593  00A0               	movwf	??_displayDigit
  5496  1594  087C               	movf	displayDigit@D1+1,w
  5497  1595  1803               	skipnc
  5498  1596  3E01               	addlw	1
  5499  1597  00A1               	movwf	??_displayDigit+1
  5500  1598  0820               	movf	??_displayDigit,w
  5501  1599  0084               	movwf	4
  5502  159A  1783               	bsf	3,7
  5503  159B  1C21               	btfss	??_displayDigit+1,0
  5504  159C  1383               	bcf	3,7
  5505  159D  0A00               	incf	0,w
  5506  159E  00A2               	movwf	??_displayDigit+2
  5507  159F  3001               	movlw	1
  5508  15A0  00A3               	movwf	??_displayDigit+3
  5509  15A1  3000               	movlw	0
  5510  15A2  00A4               	movwf	??_displayDigit+4
  5511  15A3  2DA7               	goto	u2174
  5512  15A4                     u2175:	
  5513  15A4  1003               	clrc
  5514  15A5  0DA3               	rlf	??_displayDigit+3,f
  5515  15A6  0DA4               	rlf	??_displayDigit+4,f
  5516  15A7                     u2174:	
  5517  15A7  0BA2               	decfsz	??_displayDigit+2,f
  5518  15A8  2DA4               	goto	u2175
  5519  15A9  3008               	movlw	8
  5520  15AA  077B               	addwf	displayDigit@D1,w
  5521  15AB  00A5               	movwf	??_displayDigit+5
  5522  15AC  087C               	movf	displayDigit@D1+1,w
  5523  15AD  1803               	skipnc
  5524  15AE  3E01               	addlw	1
  5525  15AF  00A6               	movwf	??_displayDigit+6
  5526  15B0  0825               	movf	??_displayDigit+5,w
  5527  15B1  0084               	movwf	4
  5528  15B2  1783               	bsf	3,7
  5529  15B3  1C26               	btfss	??_displayDigit+6,0
  5530  15B4  1383               	bcf	3,7
  5531  15B5  0800               	movf	0,w
  5532  15B6  00A7               	movwf	??_displayDigit+7
  5533  15B7  0A84               	incf	4,f
  5534  15B8  0800               	movf	0,w
  5535  15B9  00A8               	movwf	??_displayDigit+8
  5536  15BA  0827               	movf	??_displayDigit+7,w
  5537  15BB  0084               	movwf	4
  5538  15BC  1783               	bsf	3,7
  5539  15BD  1C28               	btfss	??_displayDigit+8,0
  5540  15BE  1383               	bcf	3,7
  5541  15BF  0823               	movf	??_displayDigit+3,w
  5542  15C0  0480               	iorwf	0,f
  5543  15C1  0A84               	incf	4,f
  5544  15C2  0824               	movf	??_displayDigit+4,w
  5545  15C3  0480               	iorwf	0,f
  5546                           
  5547                           ;lcd.c: 109: ((*D1->sf) &= ~((1UL) << (D1->bits[5])));
  5548  15C4  3018               	movlw	24
  5549  15C5  077B               	addwf	displayDigit@D1,w
  5550  15C6  00A0               	movwf	??_displayDigit
  5551  15C7  087C               	movf	displayDigit@D1+1,w
  5552  15C8  1803               	skipnc
  5553  15C9  3E01               	addlw	1
  5554  15CA  00A1               	movwf	??_displayDigit+1
  5555  15CB  0820               	movf	??_displayDigit,w
  5556  15CC  0084               	movwf	4
  5557  15CD  1783               	bsf	3,7
  5558  15CE  1C21               	btfss	??_displayDigit+1,0
  5559  15CF  1383               	bcf	3,7
  5560  15D0  0A00               	incf	0,w
  5561  15D1  00A2               	movwf	??_displayDigit+2
  5562  15D2  3001               	movlw	1
  5563  15D3  00A3               	movwf	??_displayDigit+3
  5564  15D4  3000               	movlw	0
  5565  15D5  00A4               	movwf	??_displayDigit+4
  5566  15D6  120A  158A  29DB   	goto	u2184
  5567                           
  5568                           	psect	text5_split_4
  5569  09D8                     u2185:	
  5570  09D8  1003               	clrc
  5571  09D9  0DA3               	rlf	??_displayDigit+3,f
  5572  09DA  0DA4               	rlf	??_displayDigit+4,f
  5573  09DB                     u2184:	
  5574  09DB  0BA2               	decfsz	??_displayDigit+2,f
  5575  09DC  29D8               	goto	u2185
  5576  09DD  09A3               	comf	??_displayDigit+3,f
  5577  09DE  09A4               	comf	??_displayDigit+4,f
  5578  09DF  300A               	movlw	10
  5579  09E0  077B               	addwf	displayDigit@D1,w
  5580  09E1  00A5               	movwf	??_displayDigit+5
  5581  09E2  087C               	movf	displayDigit@D1+1,w
  5582  09E3  1803               	skipnc
  5583  09E4  3E01               	addlw	1
  5584  09E5  00A6               	movwf	??_displayDigit+6
  5585  09E6  0825               	movf	??_displayDigit+5,w
  5586  09E7  0084               	movwf	4
  5587  09E8  1783               	bsf	3,7
  5588  09E9  1C26               	btfss	??_displayDigit+6,0
  5589  09EA  1383               	bcf	3,7
  5590  09EB  0800               	movf	0,w
  5591  09EC  00A7               	movwf	??_displayDigit+7
  5592  09ED  0A84               	incf	4,f
  5593  09EE  0800               	movf	0,w
  5594  09EF  00A8               	movwf	??_displayDigit+8
  5595  09F0  0827               	movf	??_displayDigit+7,w
  5596  09F1  0084               	movwf	4
  5597  09F2  1783               	bsf	3,7
  5598  09F3  1C28               	btfss	??_displayDigit+8,0
  5599  09F4  1383               	bcf	3,7
  5600  09F5  0823               	movf	??_displayDigit+3,w
  5601  09F6  0580               	andwf	0,f
  5602  09F7  0A84               	incf	4,f
  5603  09F8  0824               	movf	??_displayDigit+4,w
  5604  09F9  0580               	andwf	0,f
  5605                           
  5606                           ;lcd.c: 110: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  5607  09FA  301A               	movlw	26
  5608  09FB  077B               	addwf	displayDigit@D1,w
  5609  09FC  00A0               	movwf	??_displayDigit
  5610  09FD  087C               	movf	displayDigit@D1+1,w
  5611  09FE  1803               	skipnc
  5612  09FF  3E01               	addlw	1
  5613  0A00  00A1               	movwf	??_displayDigit+1
  5614  0A01  0820               	movf	??_displayDigit,w
  5615  0A02  0084               	movwf	4
  5616  0A03  1783               	bsf	3,7
  5617  0A04  1C21               	btfss	??_displayDigit+1,0
  5618  0A05  1383               	bcf	3,7
  5619  0A06  0A00               	incf	0,w
  5620  0A07  00A2               	movwf	??_displayDigit+2
  5621  0A08  3001               	movlw	1
  5622  0A09  00A3               	movwf	??_displayDigit+3
  5623  0A0A  3000               	movlw	0
  5624  0A0B  00A4               	movwf	??_displayDigit+4
  5625  0A0C  2A10               	goto	u2194
  5626  0A0D                     u2195:	
  5627  0A0D  1003               	clrc
  5628  0A0E  0DA3               	rlf	??_displayDigit+3,f
  5629  0A0F  0DA4               	rlf	??_displayDigit+4,f
  5630  0A10                     u2194:	
  5631  0A10  0BA2               	decfsz	??_displayDigit+2,f
  5632  0A11  2A0D               	goto	u2195
  5633  0A12  300C               	movlw	12
  5634  0A13  077B               	addwf	displayDigit@D1,w
  5635  0A14  00A5               	movwf	??_displayDigit+5
  5636  0A15  087C               	movf	displayDigit@D1+1,w
  5637  0A16  1803               	skipnc
  5638  0A17  3E01               	addlw	1
  5639  0A18  00A6               	movwf	??_displayDigit+6
  5640  0A19  0825               	movf	??_displayDigit+5,w
  5641  0A1A  0084               	movwf	4
  5642  0A1B  1783               	bsf	3,7
  5643  0A1C  1C26               	btfss	??_displayDigit+6,0
  5644  0A1D  1383               	bcf	3,7
  5645  0A1E  0800               	movf	0,w
  5646  0A1F  00A7               	movwf	??_displayDigit+7
  5647  0A20  0A84               	incf	4,f
  5648  0A21  0800               	movf	0,w
  5649  0A22  00A8               	movwf	??_displayDigit+8
  5650  0A23  0827               	movf	??_displayDigit+7,w
  5651  0A24  0084               	movwf	4
  5652  0A25  1783               	bsf	3,7
  5653  0A26  1C28               	btfss	??_displayDigit+8,0
  5654  0A27  1383               	bcf	3,7
  5655  0A28  0823               	movf	??_displayDigit+3,w
  5656  0A29  0480               	iorwf	0,f
  5657  0A2A  0A84               	incf	4,f
  5658  0A2B  0824               	movf	??_displayDigit+4,w
  5659  0A2C  0480               	iorwf	0,f
  5660                           
  5661                           ;lcd.c: 111: break;
  5662  0A2D  0008               	return
  5663  0A2E                     l1333:	
  5664                           ;lcd.c: 112: case 3:
  5665                           
  5666                           
  5667                           ;lcd.c: 113: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  5668  0A2E  300E               	movlw	14
  5669  0A2F  077B               	addwf	displayDigit@D1,w
  5670  0A30  1283               	bcf	3,5	;RP0=0, select bank0
  5671  0A31  1303               	bcf	3,6	;RP1=0, select bank0
  5672  0A32  00A0               	movwf	??_displayDigit
  5673  0A33  087C               	movf	displayDigit@D1+1,w
  5674  0A34  1803               	skipnc
  5675  0A35  3E01               	addlw	1
  5676  0A36  00A1               	movwf	??_displayDigit+1
  5677  0A37  0820               	movf	??_displayDigit,w
  5678  0A38  0084               	movwf	4
  5679  0A39  1783               	bsf	3,7
  5680  0A3A  1C21               	btfss	??_displayDigit+1,0
  5681  0A3B  1383               	bcf	3,7
  5682  0A3C  0A00               	incf	0,w
  5683  0A3D  00A2               	movwf	??_displayDigit+2
  5684  0A3E  3001               	movlw	1
  5685  0A3F  00A3               	movwf	??_displayDigit+3
  5686  0A40  3000               	movlw	0
  5687  0A41  00A4               	movwf	??_displayDigit+4
  5688  0A42  2A46               	goto	u2204
  5689  0A43                     u2205:	
  5690  0A43  1003               	clrc
  5691  0A44  0DA3               	rlf	??_displayDigit+3,f
  5692  0A45  0DA4               	rlf	??_displayDigit+4,f
  5693  0A46                     u2204:	
  5694  0A46  0BA2               	decfsz	??_displayDigit+2,f
  5695  0A47  2A43               	goto	u2205
  5696  0A48  087B               	movf	displayDigit@D1,w
  5697  0A49  0084               	movwf	4
  5698  0A4A  1783               	bsf	3,7
  5699  0A4B  1C7C               	btfss	displayDigit@D1+1,0
  5700  0A4C  1383               	bcf	3,7
  5701  0A4D  0800               	movf	0,w
  5702  0A4E  00A5               	movwf	??_displayDigit+5
  5703  0A4F  0A84               	incf	4,f
  5704  0A50  0800               	movf	0,w
  5705  0A51  00A6               	movwf	??_displayDigit+6
  5706  0A52  0825               	movf	??_displayDigit+5,w
  5707  0A53  0084               	movwf	4
  5708  0A54  1783               	bsf	3,7
  5709  0A55  1C26               	btfss	??_displayDigit+6,0
  5710  0A56  1383               	bcf	3,7
  5711  0A57  0823               	movf	??_displayDigit+3,w
  5712  0A58  0480               	iorwf	0,f
  5713  0A59  0A84               	incf	4,f
  5714  0A5A  0824               	movf	??_displayDigit+4,w
  5715  0A5B  0480               	iorwf	0,f
  5716                           
  5717                           ;lcd.c: 114: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  5718  0A5C  3010               	movlw	16
  5719  0A5D  077B               	addwf	displayDigit@D1,w
  5720  0A5E  00A0               	movwf	??_displayDigit
  5721  0A5F  087C               	movf	displayDigit@D1+1,w
  5722  0A60  1803               	skipnc
  5723  0A61  3E01               	addlw	1
  5724  0A62  00A1               	movwf	??_displayDigit+1
  5725  0A63  0820               	movf	??_displayDigit,w
  5726  0A64  0084               	movwf	4
  5727  0A65  1783               	bsf	3,7
  5728  0A66  1C21               	btfss	??_displayDigit+1,0
  5729  0A67  1383               	bcf	3,7
  5730  0A68  0A00               	incf	0,w
  5731  0A69  00A2               	movwf	??_displayDigit+2
  5732  0A6A  3001               	movlw	1
  5733  0A6B  00A3               	movwf	??_displayDigit+3
  5734  0A6C  3000               	movlw	0
  5735  0A6D  00A4               	movwf	??_displayDigit+4
  5736  0A6E  2A72               	goto	u2214
  5737  0A6F                     u2215:	
  5738  0A6F  1003               	clrc
  5739  0A70  0DA3               	rlf	??_displayDigit+3,f
  5740  0A71  0DA4               	rlf	??_displayDigit+4,f
  5741  0A72                     u2214:	
  5742  0A72  0BA2               	decfsz	??_displayDigit+2,f
  5743  0A73  2A6F               	goto	u2215
  5744  0A74  3002               	movlw	2
  5745  0A75  077B               	addwf	displayDigit@D1,w
  5746  0A76  00A5               	movwf	??_displayDigit+5
  5747  0A77  087C               	movf	displayDigit@D1+1,w
  5748  0A78  1803               	skipnc
  5749  0A79  3E01               	addlw	1
  5750  0A7A  00A6               	movwf	??_displayDigit+6
  5751  0A7B  0825               	movf	??_displayDigit+5,w
  5752  0A7C  0084               	movwf	4
  5753  0A7D  1783               	bsf	3,7
  5754  0A7E  1C26               	btfss	??_displayDigit+6,0
  5755  0A7F  1383               	bcf	3,7
  5756  0A80  0800               	movf	0,w
  5757  0A81  00A7               	movwf	??_displayDigit+7
  5758  0A82  0A84               	incf	4,f
  5759  0A83  0800               	movf	0,w
  5760  0A84  00A8               	movwf	??_displayDigit+8
  5761  0A85  0827               	movf	??_displayDigit+7,w
  5762  0A86  0084               	movwf	4
  5763  0A87  1783               	bsf	3,7
  5764  0A88  1C28               	btfss	??_displayDigit+8,0
  5765  0A89  1383               	bcf	3,7
  5766  0A8A  0823               	movf	??_displayDigit+3,w
  5767  0A8B  0480               	iorwf	0,f
  5768  0A8C  0A84               	incf	4,f
  5769  0A8D  0824               	movf	??_displayDigit+4,w
  5770  0A8E  0480               	iorwf	0,f
  5771                           
  5772                           ;lcd.c: 115: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  5773  0A8F  3012               	movlw	18
  5774  0A90  077B               	addwf	displayDigit@D1,w
  5775  0A91  00A0               	movwf	??_displayDigit
  5776  0A92  087C               	movf	displayDigit@D1+1,w
  5777  0A93  1803               	skipnc
  5778  0A94  3E01               	addlw	1
  5779  0A95  00A1               	movwf	??_displayDigit+1
  5780  0A96  0820               	movf	??_displayDigit,w
  5781  0A97  0084               	movwf	4
  5782  0A98  1783               	bsf	3,7
  5783  0A99  1C21               	btfss	??_displayDigit+1,0
  5784  0A9A  1383               	bcf	3,7
  5785  0A9B  0A00               	incf	0,w
  5786  0A9C  00A2               	movwf	??_displayDigit+2
  5787  0A9D  3001               	movlw	1
  5788  0A9E  00A3               	movwf	??_displayDigit+3
  5789  0A9F  3000               	movlw	0
  5790  0AA0  00A4               	movwf	??_displayDigit+4
  5791  0AA1  2AA5               	goto	u2224
  5792  0AA2                     u2225:	
  5793  0AA2  1003               	clrc
  5794  0AA3  0DA3               	rlf	??_displayDigit+3,f
  5795  0AA4  0DA4               	rlf	??_displayDigit+4,f
  5796  0AA5                     u2224:	
  5797  0AA5  0BA2               	decfsz	??_displayDigit+2,f
  5798  0AA6  2AA2               	goto	u2225
  5799  0AA7  3004               	movlw	4
  5800  0AA8  077B               	addwf	displayDigit@D1,w
  5801  0AA9  00A5               	movwf	??_displayDigit+5
  5802  0AAA  087C               	movf	displayDigit@D1+1,w
  5803  0AAB  1803               	skipnc
  5804  0AAC  3E01               	addlw	1
  5805  0AAD  00A6               	movwf	??_displayDigit+6
  5806  0AAE  0825               	movf	??_displayDigit+5,w
  5807  0AAF  0084               	movwf	4
  5808  0AB0  1783               	bsf	3,7
  5809  0AB1  1C26               	btfss	??_displayDigit+6,0
  5810  0AB2  1383               	bcf	3,7
  5811  0AB3  0800               	movf	0,w
  5812  0AB4  00A7               	movwf	??_displayDigit+7
  5813  0AB5  0A84               	incf	4,f
  5814  0AB6  0800               	movf	0,w
  5815  0AB7  00A8               	movwf	??_displayDigit+8
  5816  0AB8  0827               	movf	??_displayDigit+7,w
  5817  0AB9  0084               	movwf	4
  5818  0ABA  1783               	bsf	3,7
  5819  0ABB  1C28               	btfss	??_displayDigit+8,0
  5820  0ABC  1383               	bcf	3,7
  5821  0ABD  0823               	movf	??_displayDigit+3,w
  5822  0ABE  0480               	iorwf	0,f
  5823  0ABF  0A84               	incf	4,f
  5824  0AC0  0824               	movf	??_displayDigit+4,w
  5825  0AC1  0480               	iorwf	0,f
  5826                           
  5827                           ;lcd.c: 116: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  5828  0AC2  3014               	movlw	20
  5829  0AC3  077B               	addwf	displayDigit@D1,w
  5830  0AC4  00A0               	movwf	??_displayDigit
  5831  0AC5  087C               	movf	displayDigit@D1+1,w
  5832  0AC6  1803               	skipnc
  5833  0AC7  3E01               	addlw	1
  5834  0AC8  00A1               	movwf	??_displayDigit+1
  5835  0AC9  0820               	movf	??_displayDigit,w
  5836  0ACA  0084               	movwf	4
  5837  0ACB  1783               	bsf	3,7
  5838  0ACC  1C21               	btfss	??_displayDigit+1,0
  5839  0ACD  1383               	bcf	3,7
  5840  0ACE  0A00               	incf	0,w
  5841  0ACF  00A2               	movwf	??_displayDigit+2
  5842  0AD0  3001               	movlw	1
  5843  0AD1  00A3               	movwf	??_displayDigit+3
  5844  0AD2  3000               	movlw	0
  5845  0AD3  00A4               	movwf	??_displayDigit+4
  5846  0AD4  2AD8               	goto	u2234
  5847  0AD5                     u2235:	
  5848  0AD5  1003               	clrc
  5849  0AD6  0DA3               	rlf	??_displayDigit+3,f
  5850  0AD7  0DA4               	rlf	??_displayDigit+4,f
  5851  0AD8                     u2234:	
  5852  0AD8  0BA2               	decfsz	??_displayDigit+2,f
  5853  0AD9  2AD5               	goto	u2235
  5854  0ADA  3006               	movlw	6
  5855  0ADB  077B               	addwf	displayDigit@D1,w
  5856  0ADC  00A5               	movwf	??_displayDigit+5
  5857  0ADD  087C               	movf	displayDigit@D1+1,w
  5858  0ADE  1803               	skipnc
  5859  0ADF  3E01               	addlw	1
  5860  0AE0  00A6               	movwf	??_displayDigit+6
  5861  0AE1  0825               	movf	??_displayDigit+5,w
  5862  0AE2  0084               	movwf	4
  5863  0AE3  1783               	bsf	3,7
  5864  0AE4  1C26               	btfss	??_displayDigit+6,0
  5865  0AE5  1383               	bcf	3,7
  5866  0AE6  0800               	movf	0,w
  5867  0AE7  00A7               	movwf	??_displayDigit+7
  5868  0AE8  0A84               	incf	4,f
  5869  0AE9  0800               	movf	0,w
  5870  0AEA  00A8               	movwf	??_displayDigit+8
  5871  0AEB  0827               	movf	??_displayDigit+7,w
  5872  0AEC  0084               	movwf	4
  5873  0AED  1783               	bsf	3,7
  5874  0AEE  1C28               	btfss	??_displayDigit+8,0
  5875  0AEF  1383               	bcf	3,7
  5876  0AF0  0823               	movf	??_displayDigit+3,w
  5877  0AF1  0480               	iorwf	0,f
  5878  0AF2  0A84               	incf	4,f
  5879  0AF3  0824               	movf	??_displayDigit+4,w
  5880  0AF4  0480               	iorwf	0,f
  5881                           
  5882                           ;lcd.c: 117: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  5883  0AF5  3016               	movlw	22
  5884  0AF6  077B               	addwf	displayDigit@D1,w
  5885  0AF7  00A0               	movwf	??_displayDigit
  5886  0AF8  087C               	movf	displayDigit@D1+1,w
  5887  0AF9  1803               	skipnc
  5888  0AFA  3E01               	addlw	1
  5889  0AFB  00A1               	movwf	??_displayDigit+1
  5890  0AFC  0820               	movf	??_displayDigit,w
  5891  0AFD  0084               	movwf	4
  5892  0AFE  1783               	bsf	3,7
  5893  0AFF  1C21               	btfss	??_displayDigit+1,0
  5894  0B00  1383               	bcf	3,7
  5895  0B01  0A00               	incf	0,w
  5896  0B02  00A2               	movwf	??_displayDigit+2
  5897  0B03  3001               	movlw	1
  5898  0B04  00A3               	movwf	??_displayDigit+3
  5899  0B05  3000               	movlw	0
  5900  0B06  00A4               	movwf	??_displayDigit+4
  5901  0B07  160A  118A  2949   	goto	u2244
  5902                           
  5903                           	psect	text5_split_5
  5904  1146                     u2245:	
  5905  1146  1003               	clrc
  5906  1147  0DA3               	rlf	??_displayDigit+3,f
  5907  1148  0DA4               	rlf	??_displayDigit+4,f
  5908  1149                     u2244:	
  5909  1149  0BA2               	decfsz	??_displayDigit+2,f
  5910  114A  2946               	goto	u2245
  5911  114B  09A3               	comf	??_displayDigit+3,f
  5912  114C  09A4               	comf	??_displayDigit+4,f
  5913  114D  3008               	movlw	8
  5914  114E  077B               	addwf	displayDigit@D1,w
  5915  114F  00A5               	movwf	??_displayDigit+5
  5916  1150  087C               	movf	displayDigit@D1+1,w
  5917  1151  1803               	skipnc
  5918  1152  3E01               	addlw	1
  5919  1153  00A6               	movwf	??_displayDigit+6
  5920  1154  0825               	movf	??_displayDigit+5,w
  5921  1155  0084               	movwf	4
  5922  1156  1783               	bsf	3,7
  5923  1157  1C26               	btfss	??_displayDigit+6,0
  5924  1158  1383               	bcf	3,7
  5925  1159  0800               	movf	0,w
  5926  115A  00A7               	movwf	??_displayDigit+7
  5927  115B  0A84               	incf	4,f
  5928  115C  0800               	movf	0,w
  5929  115D  00A8               	movwf	??_displayDigit+8
  5930  115E  0827               	movf	??_displayDigit+7,w
  5931  115F  0084               	movwf	4
  5932  1160  1783               	bsf	3,7
  5933  1161  1C28               	btfss	??_displayDigit+8,0
  5934  1162  1383               	bcf	3,7
  5935  1163  0823               	movf	??_displayDigit+3,w
  5936  1164  0580               	andwf	0,f
  5937  1165  0A84               	incf	4,f
  5938  1166  0824               	movf	??_displayDigit+4,w
  5939  1167  0580               	andwf	0,f
  5940                           
  5941                           ;lcd.c: 118: ((*D1->sf) &= ~((1UL) << (D1->bits[5])));
  5942  1168  3018               	movlw	24
  5943  1169  077B               	addwf	displayDigit@D1,w
  5944  116A  00A0               	movwf	??_displayDigit
  5945  116B  087C               	movf	displayDigit@D1+1,w
  5946  116C  1803               	skipnc
  5947  116D  3E01               	addlw	1
  5948  116E  00A1               	movwf	??_displayDigit+1
  5949  116F  0820               	movf	??_displayDigit,w
  5950  1170  0084               	movwf	4
  5951  1171  1783               	bsf	3,7
  5952  1172  1C21               	btfss	??_displayDigit+1,0
  5953  1173  1383               	bcf	3,7
  5954  1174  0A00               	incf	0,w
  5955  1175  00A2               	movwf	??_displayDigit+2
  5956  1176  3001               	movlw	1
  5957  1177  00A3               	movwf	??_displayDigit+3
  5958  1178  3000               	movlw	0
  5959  1179  00A4               	movwf	??_displayDigit+4
  5960  117A  297E               	goto	u2254
  5961  117B                     u2255:	
  5962  117B  1003               	clrc
  5963  117C  0DA3               	rlf	??_displayDigit+3,f
  5964  117D  0DA4               	rlf	??_displayDigit+4,f
  5965  117E                     u2254:	
  5966  117E  0BA2               	decfsz	??_displayDigit+2,f
  5967  117F  297B               	goto	u2255
  5968  1180  09A3               	comf	??_displayDigit+3,f
  5969  1181  09A4               	comf	??_displayDigit+4,f
  5970  1182  300A               	movlw	10
  5971  1183  077B               	addwf	displayDigit@D1,w
  5972  1184  00A5               	movwf	??_displayDigit+5
  5973  1185  087C               	movf	displayDigit@D1+1,w
  5974  1186  1803               	skipnc
  5975  1187  3E01               	addlw	1
  5976  1188  00A6               	movwf	??_displayDigit+6
  5977  1189  0825               	movf	??_displayDigit+5,w
  5978  118A  0084               	movwf	4
  5979  118B  1783               	bsf	3,7
  5980  118C  1C26               	btfss	??_displayDigit+6,0
  5981  118D  1383               	bcf	3,7
  5982  118E  0800               	movf	0,w
  5983  118F  00A7               	movwf	??_displayDigit+7
  5984  1190  0A84               	incf	4,f
  5985  1191  0800               	movf	0,w
  5986  1192  00A8               	movwf	??_displayDigit+8
  5987  1193  0827               	movf	??_displayDigit+7,w
  5988  1194  0084               	movwf	4
  5989  1195  1783               	bsf	3,7
  5990  1196  1C28               	btfss	??_displayDigit+8,0
  5991  1197  1383               	bcf	3,7
  5992  1198  0823               	movf	??_displayDigit+3,w
  5993  1199  0580               	andwf	0,f
  5994  119A  0A84               	incf	4,f
  5995  119B  0824               	movf	??_displayDigit+4,w
  5996  119C  0580               	andwf	0,f
  5997                           
  5998                           ;lcd.c: 119: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  5999  119D  301A               	movlw	26
  6000  119E  077B               	addwf	displayDigit@D1,w
  6001  119F  00A0               	movwf	??_displayDigit
  6002  11A0  087C               	movf	displayDigit@D1+1,w
  6003  11A1  1803               	skipnc
  6004  11A2  3E01               	addlw	1
  6005  11A3  00A1               	movwf	??_displayDigit+1
  6006  11A4  0820               	movf	??_displayDigit,w
  6007  11A5  0084               	movwf	4
  6008  11A6  1783               	bsf	3,7
  6009  11A7  1C21               	btfss	??_displayDigit+1,0
  6010  11A8  1383               	bcf	3,7
  6011  11A9  0A00               	incf	0,w
  6012  11AA  00A2               	movwf	??_displayDigit+2
  6013  11AB  3001               	movlw	1
  6014  11AC  00A3               	movwf	??_displayDigit+3
  6015  11AD  3000               	movlw	0
  6016  11AE  00A4               	movwf	??_displayDigit+4
  6017  11AF  29B3               	goto	u2264
  6018  11B0                     u2265:	
  6019  11B0  1003               	clrc
  6020  11B1  0DA3               	rlf	??_displayDigit+3,f
  6021  11B2  0DA4               	rlf	??_displayDigit+4,f
  6022  11B3                     u2264:	
  6023  11B3  0BA2               	decfsz	??_displayDigit+2,f
  6024  11B4  29B0               	goto	u2265
  6025  11B5  300C               	movlw	12
  6026  11B6  077B               	addwf	displayDigit@D1,w
  6027  11B7  00A5               	movwf	??_displayDigit+5
  6028  11B8  087C               	movf	displayDigit@D1+1,w
  6029  11B9  1803               	skipnc
  6030  11BA  3E01               	addlw	1
  6031  11BB  00A6               	movwf	??_displayDigit+6
  6032  11BC  0825               	movf	??_displayDigit+5,w
  6033  11BD  0084               	movwf	4
  6034  11BE  1783               	bsf	3,7
  6035  11BF  1C26               	btfss	??_displayDigit+6,0
  6036  11C0  1383               	bcf	3,7
  6037  11C1  0800               	movf	0,w
  6038  11C2  00A7               	movwf	??_displayDigit+7
  6039  11C3  0A84               	incf	4,f
  6040  11C4  0800               	movf	0,w
  6041  11C5  00A8               	movwf	??_displayDigit+8
  6042  11C6  0827               	movf	??_displayDigit+7,w
  6043  11C7  0084               	movwf	4
  6044  11C8  1783               	bsf	3,7
  6045  11C9  1C28               	btfss	??_displayDigit+8,0
  6046  11CA  1383               	bcf	3,7
  6047  11CB  0823               	movf	??_displayDigit+3,w
  6048  11CC  0480               	iorwf	0,f
  6049  11CD  0A84               	incf	4,f
  6050  11CE  0824               	movf	??_displayDigit+4,w
  6051  11CF  0480               	iorwf	0,f
  6052                           
  6053                           ;lcd.c: 120: break;
  6054  11D0  0008               	return
  6055                           
  6056                           	psect	text5_split_6
  6057  16EB                     l1335:	
  6058                           ;lcd.c: 121: case 4:
  6059                           
  6060                           
  6061                           ;lcd.c: 122: ((*D1->sa) &= ~((1UL) << (D1->bits[0])));
  6062  16EB  300E               	movlw	14
  6063  16EC  077B               	addwf	displayDigit@D1,w
  6064  16ED  1283               	bcf	3,5	;RP0=0, select bank0
  6065  16EE  1303               	bcf	3,6	;RP1=0, select bank0
  6066  16EF  00A0               	movwf	??_displayDigit
  6067  16F0  087C               	movf	displayDigit@D1+1,w
  6068  16F1  1803               	skipnc
  6069  16F2  3E01               	addlw	1
  6070  16F3  00A1               	movwf	??_displayDigit+1
  6071  16F4  0820               	movf	??_displayDigit,w
  6072  16F5  0084               	movwf	4
  6073  16F6  1783               	bsf	3,7
  6074  16F7  1C21               	btfss	??_displayDigit+1,0
  6075  16F8  1383               	bcf	3,7
  6076  16F9  0A00               	incf	0,w
  6077  16FA  00A2               	movwf	??_displayDigit+2
  6078  16FB  3001               	movlw	1
  6079  16FC  00A3               	movwf	??_displayDigit+3
  6080  16FD  3000               	movlw	0
  6081  16FE  00A4               	movwf	??_displayDigit+4
  6082  16FF  2F03               	goto	u2274
  6083  1700                     u2275:	
  6084  1700  1003               	clrc
  6085  1701  0DA3               	rlf	??_displayDigit+3,f
  6086  1702  0DA4               	rlf	??_displayDigit+4,f
  6087  1703                     u2274:	
  6088  1703  0BA2               	decfsz	??_displayDigit+2,f
  6089  1704  2F00               	goto	u2275
  6090  1705  09A3               	comf	??_displayDigit+3,f
  6091  1706  09A4               	comf	??_displayDigit+4,f
  6092  1707  087B               	movf	displayDigit@D1,w
  6093  1708  0084               	movwf	4
  6094  1709  1783               	bsf	3,7
  6095  170A  1C7C               	btfss	displayDigit@D1+1,0
  6096  170B  1383               	bcf	3,7
  6097  170C  0800               	movf	0,w
  6098  170D  00A5               	movwf	??_displayDigit+5
  6099  170E  0A84               	incf	4,f
  6100  170F  0800               	movf	0,w
  6101  1710  00A6               	movwf	??_displayDigit+6
  6102  1711  0825               	movf	??_displayDigit+5,w
  6103  1712  0084               	movwf	4
  6104  1713  1783               	bsf	3,7
  6105  1714  1C26               	btfss	??_displayDigit+6,0
  6106  1715  1383               	bcf	3,7
  6107  1716  0823               	movf	??_displayDigit+3,w
  6108  1717  0580               	andwf	0,f
  6109  1718  0A84               	incf	4,f
  6110  1719  0824               	movf	??_displayDigit+4,w
  6111  171A  0580               	andwf	0,f
  6112                           
  6113                           ;lcd.c: 123: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  6114  171B  3010               	movlw	16
  6115  171C  077B               	addwf	displayDigit@D1,w
  6116  171D  00A0               	movwf	??_displayDigit
  6117  171E  087C               	movf	displayDigit@D1+1,w
  6118  171F  1803               	skipnc
  6119  1720  3E01               	addlw	1
  6120  1721  00A1               	movwf	??_displayDigit+1
  6121  1722  0820               	movf	??_displayDigit,w
  6122  1723  0084               	movwf	4
  6123  1724  1783               	bsf	3,7
  6124  1725  1C21               	btfss	??_displayDigit+1,0
  6125  1726  1383               	bcf	3,7
  6126  1727  0A00               	incf	0,w
  6127  1728  00A2               	movwf	??_displayDigit+2
  6128  1729  3001               	movlw	1
  6129  172A  00A3               	movwf	??_displayDigit+3
  6130  172B  3000               	movlw	0
  6131  172C  00A4               	movwf	??_displayDigit+4
  6132  172D  2F31               	goto	u2284
  6133  172E                     u2285:	
  6134  172E  1003               	clrc
  6135  172F  0DA3               	rlf	??_displayDigit+3,f
  6136  1730  0DA4               	rlf	??_displayDigit+4,f
  6137  1731                     u2284:	
  6138  1731  0BA2               	decfsz	??_displayDigit+2,f
  6139  1732  2F2E               	goto	u2285
  6140  1733  3002               	movlw	2
  6141  1734  077B               	addwf	displayDigit@D1,w
  6142  1735  00A5               	movwf	??_displayDigit+5
  6143  1736  087C               	movf	displayDigit@D1+1,w
  6144  1737  1803               	skipnc
  6145  1738  3E01               	addlw	1
  6146  1739  00A6               	movwf	??_displayDigit+6
  6147  173A  0825               	movf	??_displayDigit+5,w
  6148  173B  0084               	movwf	4
  6149  173C  1783               	bsf	3,7
  6150  173D  1C26               	btfss	??_displayDigit+6,0
  6151  173E  1383               	bcf	3,7
  6152  173F  0800               	movf	0,w
  6153  1740  00A7               	movwf	??_displayDigit+7
  6154  1741  0A84               	incf	4,f
  6155  1742  0800               	movf	0,w
  6156  1743  00A8               	movwf	??_displayDigit+8
  6157  1744  0827               	movf	??_displayDigit+7,w
  6158  1745  0084               	movwf	4
  6159  1746  1783               	bsf	3,7
  6160  1747  1C28               	btfss	??_displayDigit+8,0
  6161  1748  1383               	bcf	3,7
  6162  1749  0823               	movf	??_displayDigit+3,w
  6163  174A  0480               	iorwf	0,f
  6164  174B  0A84               	incf	4,f
  6165  174C  0824               	movf	??_displayDigit+4,w
  6166  174D  0480               	iorwf	0,f
  6167                           
  6168                           ;lcd.c: 124: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  6169  174E  3012               	movlw	18
  6170  174F  077B               	addwf	displayDigit@D1,w
  6171  1750  00A0               	movwf	??_displayDigit
  6172  1751  087C               	movf	displayDigit@D1+1,w
  6173  1752  1803               	skipnc
  6174  1753  3E01               	addlw	1
  6175  1754  00A1               	movwf	??_displayDigit+1
  6176  1755  0820               	movf	??_displayDigit,w
  6177  1756  0084               	movwf	4
  6178  1757  1783               	bsf	3,7
  6179  1758  1C21               	btfss	??_displayDigit+1,0
  6180  1759  1383               	bcf	3,7
  6181  175A  0A00               	incf	0,w
  6182  175B  00A2               	movwf	??_displayDigit+2
  6183  175C  3001               	movlw	1
  6184  175D  00A3               	movwf	??_displayDigit+3
  6185  175E  3000               	movlw	0
  6186  175F  00A4               	movwf	??_displayDigit+4
  6187  1760  2F64               	goto	u2294
  6188  1761                     u2295:	
  6189  1761  1003               	clrc
  6190  1762  0DA3               	rlf	??_displayDigit+3,f
  6191  1763  0DA4               	rlf	??_displayDigit+4,f
  6192  1764                     u2294:	
  6193  1764  0BA2               	decfsz	??_displayDigit+2,f
  6194  1765  2F61               	goto	u2295
  6195  1766  3004               	movlw	4
  6196  1767  077B               	addwf	displayDigit@D1,w
  6197  1768  00A5               	movwf	??_displayDigit+5
  6198  1769  087C               	movf	displayDigit@D1+1,w
  6199  176A  1803               	skipnc
  6200  176B  3E01               	addlw	1
  6201  176C  00A6               	movwf	??_displayDigit+6
  6202  176D  0825               	movf	??_displayDigit+5,w
  6203  176E  0084               	movwf	4
  6204  176F  1783               	bsf	3,7
  6205  1770  1C26               	btfss	??_displayDigit+6,0
  6206  1771  1383               	bcf	3,7
  6207  1772  0800               	movf	0,w
  6208  1773  00A7               	movwf	??_displayDigit+7
  6209  1774  0A84               	incf	4,f
  6210  1775  0800               	movf	0,w
  6211  1776  00A8               	movwf	??_displayDigit+8
  6212  1777  0827               	movf	??_displayDigit+7,w
  6213  1778  0084               	movwf	4
  6214  1779  1783               	bsf	3,7
  6215  177A  1C28               	btfss	??_displayDigit+8,0
  6216  177B  1383               	bcf	3,7
  6217  177C  0823               	movf	??_displayDigit+3,w
  6218  177D  0480               	iorwf	0,f
  6219  177E  0A84               	incf	4,f
  6220  177F  0824               	movf	??_displayDigit+4,w
  6221  1780  0480               	iorwf	0,f
  6222                           
  6223                           ;lcd.c: 125: ((*D1->sd) &= ~((1UL) << (D1->bits[3])));
  6224  1781  3014               	movlw	20
  6225  1782  077B               	addwf	displayDigit@D1,w
  6226  1783  00A0               	movwf	??_displayDigit
  6227  1784  087C               	movf	displayDigit@D1+1,w
  6228  1785  1803               	skipnc
  6229  1786  3E01               	addlw	1
  6230  1787  00A1               	movwf	??_displayDigit+1
  6231  1788  0820               	movf	??_displayDigit,w
  6232  1789  0084               	movwf	4
  6233  178A  1783               	bsf	3,7
  6234  178B  1C21               	btfss	??_displayDigit+1,0
  6235  178C  1383               	bcf	3,7
  6236  178D  0A00               	incf	0,w
  6237  178E  00A2               	movwf	??_displayDigit+2
  6238  178F  3001               	movlw	1
  6239  1790  00A3               	movwf	??_displayDigit+3
  6240  1791  3000               	movlw	0
  6241  1792  00A4               	movwf	??_displayDigit+4
  6242  1793  2F97               	goto	u2304
  6243  1794                     u2305:	
  6244  1794  1003               	clrc
  6245  1795  0DA3               	rlf	??_displayDigit+3,f
  6246  1796  0DA4               	rlf	??_displayDigit+4,f
  6247  1797                     u2304:	
  6248  1797  0BA2               	decfsz	??_displayDigit+2,f
  6249  1798  2F94               	goto	u2305
  6250  1799  09A3               	comf	??_displayDigit+3,f
  6251  179A  09A4               	comf	??_displayDigit+4,f
  6252  179B  3006               	movlw	6
  6253  179C  077B               	addwf	displayDigit@D1,w
  6254  179D  00A5               	movwf	??_displayDigit+5
  6255  179E  087C               	movf	displayDigit@D1+1,w
  6256  179F  1803               	skipnc
  6257  17A0  3E01               	addlw	1
  6258  17A1  00A6               	movwf	??_displayDigit+6
  6259  17A2  0825               	movf	??_displayDigit+5,w
  6260  17A3  0084               	movwf	4
  6261  17A4  1783               	bsf	3,7
  6262  17A5  1C26               	btfss	??_displayDigit+6,0
  6263  17A6  1383               	bcf	3,7
  6264  17A7  0800               	movf	0,w
  6265  17A8  00A7               	movwf	??_displayDigit+7
  6266  17A9  0A84               	incf	4,f
  6267  17AA  0800               	movf	0,w
  6268  17AB  00A8               	movwf	??_displayDigit+8
  6269  17AC  0827               	movf	??_displayDigit+7,w
  6270  17AD  0084               	movwf	4
  6271  17AE  1783               	bsf	3,7
  6272  17AF  1C28               	btfss	??_displayDigit+8,0
  6273  17B0  1383               	bcf	3,7
  6274  17B1  0823               	movf	??_displayDigit+3,w
  6275  17B2  0580               	andwf	0,f
  6276  17B3  0A84               	incf	4,f
  6277  17B4  0824               	movf	??_displayDigit+4,w
  6278  17B5  0580               	andwf	0,f
  6279                           
  6280                           ;lcd.c: 126: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  6281  17B6  3016               	movlw	22
  6282  17B7  077B               	addwf	displayDigit@D1,w
  6283  17B8  00A0               	movwf	??_displayDigit
  6284  17B9  087C               	movf	displayDigit@D1+1,w
  6285  17BA  1803               	skipnc
  6286  17BB  3E01               	addlw	1
  6287  17BC  00A1               	movwf	??_displayDigit+1
  6288  17BD  0820               	movf	??_displayDigit,w
  6289  17BE  0084               	movwf	4
  6290  17BF  1783               	bsf	3,7
  6291  17C0  1C21               	btfss	??_displayDigit+1,0
  6292  17C1  1383               	bcf	3,7
  6293  17C2  0A00               	incf	0,w
  6294  17C3  00A2               	movwf	??_displayDigit+2
  6295  17C4  3001               	movlw	1
  6296  17C5  00A3               	movwf	??_displayDigit+3
  6297  17C6  3000               	movlw	0
  6298  17C7  00A4               	movwf	??_displayDigit+4
  6299  17C8  2FCC               	goto	u2314
  6300  17C9                     u2315:	
  6301  17C9  1003               	clrc
  6302  17CA  0DA3               	rlf	??_displayDigit+3,f
  6303  17CB  0DA4               	rlf	??_displayDigit+4,f
  6304  17CC                     u2314:	
  6305  17CC  0BA2               	decfsz	??_displayDigit+2,f
  6306  17CD  2FC9               	goto	u2315
  6307  17CE  09A3               	comf	??_displayDigit+3,f
  6308  17CF  09A4               	comf	??_displayDigit+4,f
  6309  17D0  3008               	movlw	8
  6310  17D1  077B               	addwf	displayDigit@D1,w
  6311  17D2  00A5               	movwf	??_displayDigit+5
  6312  17D3  087C               	movf	displayDigit@D1+1,w
  6313  17D4  1803               	skipnc
  6314  17D5  3E01               	addlw	1
  6315  17D6  00A6               	movwf	??_displayDigit+6
  6316  17D7  0825               	movf	??_displayDigit+5,w
  6317  17D8  0084               	movwf	4
  6318  17D9  1783               	bsf	3,7
  6319  17DA  1C26               	btfss	??_displayDigit+6,0
  6320  17DB  1383               	bcf	3,7
  6321  17DC  0800               	movf	0,w
  6322  17DD  00A7               	movwf	??_displayDigit+7
  6323  17DE  0A84               	incf	4,f
  6324  17DF  0800               	movf	0,w
  6325  17E0  00A8               	movwf	??_displayDigit+8
  6326  17E1  0827               	movf	??_displayDigit+7,w
  6327  17E2  0084               	movwf	4
  6328  17E3  1783               	bsf	3,7
  6329  17E4  1C28               	btfss	??_displayDigit+8,0
  6330  17E5  1383               	bcf	3,7
  6331  17E6  0823               	movf	??_displayDigit+3,w
  6332  17E7  0580               	andwf	0,f
  6333  17E8  0A84               	incf	4,f
  6334  17E9  0824               	movf	??_displayDigit+4,w
  6335  17EA  0580               	andwf	0,f
  6336                           
  6337                           ;lcd.c: 127: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  6338  17EB  3018               	movlw	24
  6339  17EC  077B               	addwf	displayDigit@D1,w
  6340  17ED  00A0               	movwf	??_displayDigit
  6341  17EE  087C               	movf	displayDigit@D1+1,w
  6342  17EF  1803               	skipnc
  6343  17F0  3E01               	addlw	1
  6344  17F1  00A1               	movwf	??_displayDigit+1
  6345  17F2  0820               	movf	??_displayDigit,w
  6346  17F3  0084               	movwf	4
  6347  17F4  1783               	bsf	3,7
  6348  17F5  1C21               	btfss	??_displayDigit+1,0
  6349  17F6  1383               	bcf	3,7
  6350  17F7  0A00               	incf	0,w
  6351  17F8  00A2               	movwf	??_displayDigit+2
  6352  17F9  3001               	movlw	1
  6353  17FA  00A3               	movwf	??_displayDigit+3
  6354  17FB  3000               	movlw	0
  6355  17FC  00A4               	movwf	??_displayDigit+4
  6356  17FD  120A  158A  28A9   	goto	u2324
  6357                           
  6358                           	psect	text5_split_7
  6359  08A6                     u2325:	
  6360  08A6  1003               	clrc
  6361  08A7  0DA3               	rlf	??_displayDigit+3,f
  6362  08A8  0DA4               	rlf	??_displayDigit+4,f
  6363  08A9                     u2324:	
  6364  08A9  0BA2               	decfsz	??_displayDigit+2,f
  6365  08AA  28A6               	goto	u2325
  6366  08AB  300A               	movlw	10
  6367  08AC  077B               	addwf	displayDigit@D1,w
  6368  08AD  00A5               	movwf	??_displayDigit+5
  6369  08AE  087C               	movf	displayDigit@D1+1,w
  6370  08AF  1803               	skipnc
  6371  08B0  3E01               	addlw	1
  6372  08B1  00A6               	movwf	??_displayDigit+6
  6373  08B2  0825               	movf	??_displayDigit+5,w
  6374  08B3  0084               	movwf	4
  6375  08B4  1783               	bsf	3,7
  6376  08B5  1C26               	btfss	??_displayDigit+6,0
  6377  08B6  1383               	bcf	3,7
  6378  08B7  0800               	movf	0,w
  6379  08B8  00A7               	movwf	??_displayDigit+7
  6380  08B9  0A84               	incf	4,f
  6381  08BA  0800               	movf	0,w
  6382  08BB  00A8               	movwf	??_displayDigit+8
  6383  08BC  0827               	movf	??_displayDigit+7,w
  6384  08BD  0084               	movwf	4
  6385  08BE  1783               	bsf	3,7
  6386  08BF  1C28               	btfss	??_displayDigit+8,0
  6387  08C0  1383               	bcf	3,7
  6388  08C1  0823               	movf	??_displayDigit+3,w
  6389  08C2  0480               	iorwf	0,f
  6390  08C3  0A84               	incf	4,f
  6391  08C4  0824               	movf	??_displayDigit+4,w
  6392  08C5  0480               	iorwf	0,f
  6393                           
  6394                           ;lcd.c: 128: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  6395  08C6  301A               	movlw	26
  6396  08C7  077B               	addwf	displayDigit@D1,w
  6397  08C8  00A0               	movwf	??_displayDigit
  6398  08C9  087C               	movf	displayDigit@D1+1,w
  6399  08CA  1803               	skipnc
  6400  08CB  3E01               	addlw	1
  6401  08CC  00A1               	movwf	??_displayDigit+1
  6402  08CD  0820               	movf	??_displayDigit,w
  6403  08CE  0084               	movwf	4
  6404  08CF  1783               	bsf	3,7
  6405  08D0  1C21               	btfss	??_displayDigit+1,0
  6406  08D1  1383               	bcf	3,7
  6407  08D2  0A00               	incf	0,w
  6408  08D3  00A2               	movwf	??_displayDigit+2
  6409  08D4  3001               	movlw	1
  6410  08D5  00A3               	movwf	??_displayDigit+3
  6411  08D6  3000               	movlw	0
  6412  08D7  00A4               	movwf	??_displayDigit+4
  6413  08D8  28DC               	goto	u2334
  6414  08D9                     u2335:	
  6415  08D9  1003               	clrc
  6416  08DA  0DA3               	rlf	??_displayDigit+3,f
  6417  08DB  0DA4               	rlf	??_displayDigit+4,f
  6418  08DC                     u2334:	
  6419  08DC  0BA2               	decfsz	??_displayDigit+2,f
  6420  08DD  28D9               	goto	u2335
  6421  08DE  300C               	movlw	12
  6422  08DF  077B               	addwf	displayDigit@D1,w
  6423  08E0  00A5               	movwf	??_displayDigit+5
  6424  08E1  087C               	movf	displayDigit@D1+1,w
  6425  08E2  1803               	skipnc
  6426  08E3  3E01               	addlw	1
  6427  08E4  00A6               	movwf	??_displayDigit+6
  6428  08E5  0825               	movf	??_displayDigit+5,w
  6429  08E6  0084               	movwf	4
  6430  08E7  1783               	bsf	3,7
  6431  08E8  1C26               	btfss	??_displayDigit+6,0
  6432  08E9  1383               	bcf	3,7
  6433  08EA  0800               	movf	0,w
  6434  08EB  00A7               	movwf	??_displayDigit+7
  6435  08EC  0A84               	incf	4,f
  6436  08ED  0800               	movf	0,w
  6437  08EE  00A8               	movwf	??_displayDigit+8
  6438  08EF  0827               	movf	??_displayDigit+7,w
  6439  08F0  0084               	movwf	4
  6440  08F1  1783               	bsf	3,7
  6441  08F2  1C28               	btfss	??_displayDigit+8,0
  6442  08F3  1383               	bcf	3,7
  6443  08F4  0823               	movf	??_displayDigit+3,w
  6444  08F5  0480               	iorwf	0,f
  6445  08F6  0A84               	incf	4,f
  6446  08F7  0824               	movf	??_displayDigit+4,w
  6447  08F8  0480               	iorwf	0,f
  6448                           
  6449                           ;lcd.c: 129: break;
  6450  08F9  0008               	return
  6451  08FA                     l1337:	
  6452                           ;lcd.c: 130: case 5:
  6453                           
  6454                           
  6455                           ;lcd.c: 131: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  6456  08FA  300E               	movlw	14
  6457  08FB  077B               	addwf	displayDigit@D1,w
  6458  08FC  1283               	bcf	3,5	;RP0=0, select bank0
  6459  08FD  1303               	bcf	3,6	;RP1=0, select bank0
  6460  08FE  00A0               	movwf	??_displayDigit
  6461  08FF  087C               	movf	displayDigit@D1+1,w
  6462  0900  1803               	skipnc
  6463  0901  3E01               	addlw	1
  6464  0902  00A1               	movwf	??_displayDigit+1
  6465  0903  0820               	movf	??_displayDigit,w
  6466  0904  0084               	movwf	4
  6467  0905  1783               	bsf	3,7
  6468  0906  1C21               	btfss	??_displayDigit+1,0
  6469  0907  1383               	bcf	3,7
  6470  0908  0A00               	incf	0,w
  6471  0909  00A2               	movwf	??_displayDigit+2
  6472  090A  3001               	movlw	1
  6473  090B  00A3               	movwf	??_displayDigit+3
  6474  090C  3000               	movlw	0
  6475  090D  00A4               	movwf	??_displayDigit+4
  6476  090E  2912               	goto	u2344
  6477  090F                     u2345:	
  6478  090F  1003               	clrc
  6479  0910  0DA3               	rlf	??_displayDigit+3,f
  6480  0911  0DA4               	rlf	??_displayDigit+4,f
  6481  0912                     u2344:	
  6482  0912  0BA2               	decfsz	??_displayDigit+2,f
  6483  0913  290F               	goto	u2345
  6484  0914  087B               	movf	displayDigit@D1,w
  6485  0915  0084               	movwf	4
  6486  0916  1783               	bsf	3,7
  6487  0917  1C7C               	btfss	displayDigit@D1+1,0
  6488  0918  1383               	bcf	3,7
  6489  0919  0800               	movf	0,w
  6490  091A  00A5               	movwf	??_displayDigit+5
  6491  091B  0A84               	incf	4,f
  6492  091C  0800               	movf	0,w
  6493  091D  00A6               	movwf	??_displayDigit+6
  6494  091E  0825               	movf	??_displayDigit+5,w
  6495  091F  0084               	movwf	4
  6496  0920  1783               	bsf	3,7
  6497  0921  1C26               	btfss	??_displayDigit+6,0
  6498  0922  1383               	bcf	3,7
  6499  0923  0823               	movf	??_displayDigit+3,w
  6500  0924  0480               	iorwf	0,f
  6501  0925  0A84               	incf	4,f
  6502  0926  0824               	movf	??_displayDigit+4,w
  6503  0927  0480               	iorwf	0,f
  6504                           
  6505                           ;lcd.c: 132: ((*D1->sb) &= ~((1UL) << (D1->bits[1])));
  6506  0928  3010               	movlw	16
  6507  0929  077B               	addwf	displayDigit@D1,w
  6508  092A  00A0               	movwf	??_displayDigit
  6509  092B  087C               	movf	displayDigit@D1+1,w
  6510  092C  1803               	skipnc
  6511  092D  3E01               	addlw	1
  6512  092E  00A1               	movwf	??_displayDigit+1
  6513  092F  0820               	movf	??_displayDigit,w
  6514  0930  0084               	movwf	4
  6515  0931  1783               	bsf	3,7
  6516  0932  1C21               	btfss	??_displayDigit+1,0
  6517  0933  1383               	bcf	3,7
  6518  0934  0A00               	incf	0,w
  6519  0935  00A2               	movwf	??_displayDigit+2
  6520  0936  3001               	movlw	1
  6521  0937  00A3               	movwf	??_displayDigit+3
  6522  0938  3000               	movlw	0
  6523  0939  00A4               	movwf	??_displayDigit+4
  6524  093A  293E               	goto	u2354
  6525  093B                     u2355:	
  6526  093B  1003               	clrc
  6527  093C  0DA3               	rlf	??_displayDigit+3,f
  6528  093D  0DA4               	rlf	??_displayDigit+4,f
  6529  093E                     u2354:	
  6530  093E  0BA2               	decfsz	??_displayDigit+2,f
  6531  093F  293B               	goto	u2355
  6532  0940  09A3               	comf	??_displayDigit+3,f
  6533  0941  09A4               	comf	??_displayDigit+4,f
  6534  0942  3002               	movlw	2
  6535  0943  077B               	addwf	displayDigit@D1,w
  6536  0944  00A5               	movwf	??_displayDigit+5
  6537  0945  087C               	movf	displayDigit@D1+1,w
  6538  0946  1803               	skipnc
  6539  0947  3E01               	addlw	1
  6540  0948  00A6               	movwf	??_displayDigit+6
  6541  0949  0825               	movf	??_displayDigit+5,w
  6542  094A  0084               	movwf	4
  6543  094B  1783               	bsf	3,7
  6544  094C  1C26               	btfss	??_displayDigit+6,0
  6545  094D  1383               	bcf	3,7
  6546  094E  0800               	movf	0,w
  6547  094F  00A7               	movwf	??_displayDigit+7
  6548  0950  0A84               	incf	4,f
  6549  0951  0800               	movf	0,w
  6550  0952  00A8               	movwf	??_displayDigit+8
  6551  0953  0827               	movf	??_displayDigit+7,w
  6552  0954  0084               	movwf	4
  6553  0955  1783               	bsf	3,7
  6554  0956  1C28               	btfss	??_displayDigit+8,0
  6555  0957  1383               	bcf	3,7
  6556  0958  0823               	movf	??_displayDigit+3,w
  6557  0959  0580               	andwf	0,f
  6558  095A  0A84               	incf	4,f
  6559  095B  0824               	movf	??_displayDigit+4,w
  6560  095C  0580               	andwf	0,f
  6561                           
  6562                           ;lcd.c: 133: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  6563  095D  3012               	movlw	18
  6564  095E  077B               	addwf	displayDigit@D1,w
  6565  095F  00A0               	movwf	??_displayDigit
  6566  0960  087C               	movf	displayDigit@D1+1,w
  6567  0961  1803               	skipnc
  6568  0962  3E01               	addlw	1
  6569  0963  00A1               	movwf	??_displayDigit+1
  6570  0964  0820               	movf	??_displayDigit,w
  6571  0965  0084               	movwf	4
  6572  0966  1783               	bsf	3,7
  6573  0967  1C21               	btfss	??_displayDigit+1,0
  6574  0968  1383               	bcf	3,7
  6575  0969  0A00               	incf	0,w
  6576  096A  00A2               	movwf	??_displayDigit+2
  6577  096B  3001               	movlw	1
  6578  096C  00A3               	movwf	??_displayDigit+3
  6579  096D  3000               	movlw	0
  6580  096E  00A4               	movwf	??_displayDigit+4
  6581  096F  2973               	goto	u2364
  6582  0970                     u2365:	
  6583  0970  1003               	clrc
  6584  0971  0DA3               	rlf	??_displayDigit+3,f
  6585  0972  0DA4               	rlf	??_displayDigit+4,f
  6586  0973                     u2364:	
  6587  0973  0BA2               	decfsz	??_displayDigit+2,f
  6588  0974  2970               	goto	u2365
  6589  0975  3004               	movlw	4
  6590  0976  077B               	addwf	displayDigit@D1,w
  6591  0977  00A5               	movwf	??_displayDigit+5
  6592  0978  087C               	movf	displayDigit@D1+1,w
  6593  0979  1803               	skipnc
  6594  097A  3E01               	addlw	1
  6595  097B  00A6               	movwf	??_displayDigit+6
  6596  097C  0825               	movf	??_displayDigit+5,w
  6597  097D  0084               	movwf	4
  6598  097E  1783               	bsf	3,7
  6599  097F  1C26               	btfss	??_displayDigit+6,0
  6600  0980  1383               	bcf	3,7
  6601  0981  0800               	movf	0,w
  6602  0982  00A7               	movwf	??_displayDigit+7
  6603  0983  0A84               	incf	4,f
  6604  0984  0800               	movf	0,w
  6605  0985  00A8               	movwf	??_displayDigit+8
  6606  0986  0827               	movf	??_displayDigit+7,w
  6607  0987  0084               	movwf	4
  6608  0988  1783               	bsf	3,7
  6609  0989  1C28               	btfss	??_displayDigit+8,0
  6610  098A  1383               	bcf	3,7
  6611  098B  0823               	movf	??_displayDigit+3,w
  6612  098C  0480               	iorwf	0,f
  6613  098D  0A84               	incf	4,f
  6614  098E  0824               	movf	??_displayDigit+4,w
  6615  098F  0480               	iorwf	0,f
  6616                           
  6617                           ;lcd.c: 134: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  6618  0990  3014               	movlw	20
  6619  0991  077B               	addwf	displayDigit@D1,w
  6620  0992  00A0               	movwf	??_displayDigit
  6621  0993  087C               	movf	displayDigit@D1+1,w
  6622  0994  1803               	skipnc
  6623  0995  3E01               	addlw	1
  6624  0996  00A1               	movwf	??_displayDigit+1
  6625  0997  0820               	movf	??_displayDigit,w
  6626  0998  0084               	movwf	4
  6627  0999  1783               	bsf	3,7
  6628  099A  1C21               	btfss	??_displayDigit+1,0
  6629  099B  1383               	bcf	3,7
  6630  099C  0A00               	incf	0,w
  6631  099D  00A2               	movwf	??_displayDigit+2
  6632  099E  3001               	movlw	1
  6633  099F  00A3               	movwf	??_displayDigit+3
  6634  09A0  3000               	movlw	0
  6635  09A1  00A4               	movwf	??_displayDigit+4
  6636  09A2  29A6               	goto	u2374
  6637  09A3                     u2375:	
  6638  09A3  1003               	clrc
  6639  09A4  0DA3               	rlf	??_displayDigit+3,f
  6640  09A5  0DA4               	rlf	??_displayDigit+4,f
  6641  09A6                     u2374:	
  6642  09A6  0BA2               	decfsz	??_displayDigit+2,f
  6643  09A7  29A3               	goto	u2375
  6644  09A8  3006               	movlw	6
  6645  09A9  077B               	addwf	displayDigit@D1,w
  6646  09AA  00A5               	movwf	??_displayDigit+5
  6647  09AB  087C               	movf	displayDigit@D1+1,w
  6648  09AC  1803               	skipnc
  6649  09AD  3E01               	addlw	1
  6650  09AE  00A6               	movwf	??_displayDigit+6
  6651  09AF  0825               	movf	??_displayDigit+5,w
  6652  09B0  0084               	movwf	4
  6653  09B1  1783               	bsf	3,7
  6654  09B2  1C26               	btfss	??_displayDigit+6,0
  6655  09B3  1383               	bcf	3,7
  6656  09B4  0800               	movf	0,w
  6657  09B5  00A7               	movwf	??_displayDigit+7
  6658  09B6  0A84               	incf	4,f
  6659  09B7  0800               	movf	0,w
  6660  09B8  00A8               	movwf	??_displayDigit+8
  6661  09B9  0827               	movf	??_displayDigit+7,w
  6662  09BA  0084               	movwf	4
  6663  09BB  1783               	bsf	3,7
  6664  09BC  1C28               	btfss	??_displayDigit+8,0
  6665  09BD  1383               	bcf	3,7
  6666  09BE  0823               	movf	??_displayDigit+3,w
  6667  09BF  0480               	iorwf	0,f
  6668  09C0  0A84               	incf	4,f
  6669  09C1  0824               	movf	??_displayDigit+4,w
  6670  09C2  0480               	iorwf	0,f
  6671                           
  6672                           ;lcd.c: 135: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  6673  09C3  3016               	movlw	22
  6674  09C4  077B               	addwf	displayDigit@D1,w
  6675  09C5  00A0               	movwf	??_displayDigit
  6676  09C6  087C               	movf	displayDigit@D1+1,w
  6677  09C7  1803               	skipnc
  6678  09C8  3E01               	addlw	1
  6679  09C9  00A1               	movwf	??_displayDigit+1
  6680  09CA  0820               	movf	??_displayDigit,w
  6681  09CB  0084               	movwf	4
  6682  09CC  1783               	bsf	3,7
  6683  09CD  1C21               	btfss	??_displayDigit+1,0
  6684  09CE  1383               	bcf	3,7
  6685  09CF  0A00               	incf	0,w
  6686  09D0  00A2               	movwf	??_displayDigit+2
  6687  09D1  3001               	movlw	1
  6688  09D2  00A3               	movwf	??_displayDigit+3
  6689  09D3  3000               	movlw	0
  6690  09D4  00A4               	movwf	??_displayDigit+4
  6691  09D5  120A  118A  2838   	goto	u2384
  6692                           
  6693                           	psect	text5_split_8
  6694  0035                     u2385:	
  6695  0035  1003               	clrc
  6696  0036  0DA3               	rlf	??_displayDigit+3,f
  6697  0037  0DA4               	rlf	??_displayDigit+4,f
  6698  0038                     u2384:	
  6699  0038  0BA2               	decfsz	??_displayDigit+2,f
  6700  0039  2835               	goto	u2385
  6701  003A  09A3               	comf	??_displayDigit+3,f
  6702  003B  09A4               	comf	??_displayDigit+4,f
  6703  003C  3008               	movlw	8
  6704  003D  077B               	addwf	displayDigit@D1,w
  6705  003E  00A5               	movwf	??_displayDigit+5
  6706  003F  087C               	movf	displayDigit@D1+1,w
  6707  0040  1803               	skipnc
  6708  0041  3E01               	addlw	1
  6709  0042  00A6               	movwf	??_displayDigit+6
  6710  0043  0825               	movf	??_displayDigit+5,w
  6711  0044  0084               	movwf	4
  6712  0045  1783               	bsf	3,7
  6713  0046  1C26               	btfss	??_displayDigit+6,0
  6714  0047  1383               	bcf	3,7
  6715  0048  0800               	movf	0,w
  6716  0049  00A7               	movwf	??_displayDigit+7
  6717  004A  0A84               	incf	4,f
  6718  004B  0800               	movf	0,w
  6719  004C  00A8               	movwf	??_displayDigit+8
  6720  004D  0827               	movf	??_displayDigit+7,w
  6721  004E  0084               	movwf	4
  6722  004F  1783               	bsf	3,7
  6723  0050  1C28               	btfss	??_displayDigit+8,0
  6724  0051  1383               	bcf	3,7
  6725  0052  0823               	movf	??_displayDigit+3,w
  6726  0053  0580               	andwf	0,f
  6727  0054  0A84               	incf	4,f
  6728  0055  0824               	movf	??_displayDigit+4,w
  6729  0056  0580               	andwf	0,f
  6730                           
  6731                           ;lcd.c: 136: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  6732  0057  3018               	movlw	24
  6733  0058  077B               	addwf	displayDigit@D1,w
  6734  0059  00A0               	movwf	??_displayDigit
  6735  005A  087C               	movf	displayDigit@D1+1,w
  6736  005B  1803               	skipnc
  6737  005C  3E01               	addlw	1
  6738  005D  00A1               	movwf	??_displayDigit+1
  6739  005E  0820               	movf	??_displayDigit,w
  6740  005F  0084               	movwf	4
  6741  0060  1783               	bsf	3,7
  6742  0061  1C21               	btfss	??_displayDigit+1,0
  6743  0062  1383               	bcf	3,7
  6744  0063  0A00               	incf	0,w
  6745  0064  00A2               	movwf	??_displayDigit+2
  6746  0065  3001               	movlw	1
  6747  0066  00A3               	movwf	??_displayDigit+3
  6748  0067  3000               	movlw	0
  6749  0068  00A4               	movwf	??_displayDigit+4
  6750  0069  286D               	goto	u2394
  6751  006A                     u2395:	
  6752  006A  1003               	clrc
  6753  006B  0DA3               	rlf	??_displayDigit+3,f
  6754  006C  0DA4               	rlf	??_displayDigit+4,f
  6755  006D                     u2394:	
  6756  006D  0BA2               	decfsz	??_displayDigit+2,f
  6757  006E  286A               	goto	u2395
  6758  006F  300A               	movlw	10
  6759  0070  077B               	addwf	displayDigit@D1,w
  6760  0071  00A5               	movwf	??_displayDigit+5
  6761  0072  087C               	movf	displayDigit@D1+1,w
  6762  0073  1803               	skipnc
  6763  0074  3E01               	addlw	1
  6764  0075  00A6               	movwf	??_displayDigit+6
  6765  0076  0825               	movf	??_displayDigit+5,w
  6766  0077  0084               	movwf	4
  6767  0078  1783               	bsf	3,7
  6768  0079  1C26               	btfss	??_displayDigit+6,0
  6769  007A  1383               	bcf	3,7
  6770  007B  0800               	movf	0,w
  6771  007C  00A7               	movwf	??_displayDigit+7
  6772  007D  0A84               	incf	4,f
  6773  007E  0800               	movf	0,w
  6774  007F  00A8               	movwf	??_displayDigit+8
  6775  0080  0827               	movf	??_displayDigit+7,w
  6776  0081  0084               	movwf	4
  6777  0082  1783               	bsf	3,7
  6778  0083  1C28               	btfss	??_displayDigit+8,0
  6779  0084  1383               	bcf	3,7
  6780  0085  0823               	movf	??_displayDigit+3,w
  6781  0086  0480               	iorwf	0,f
  6782  0087  0A84               	incf	4,f
  6783  0088  0824               	movf	??_displayDigit+4,w
  6784  0089  0480               	iorwf	0,f
  6785                           
  6786                           ;lcd.c: 137: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  6787  008A  301A               	movlw	26
  6788  008B  077B               	addwf	displayDigit@D1,w
  6789  008C  00A0               	movwf	??_displayDigit
  6790  008D  087C               	movf	displayDigit@D1+1,w
  6791  008E  1803               	skipnc
  6792  008F  3E01               	addlw	1
  6793  0090  00A1               	movwf	??_displayDigit+1
  6794  0091  0820               	movf	??_displayDigit,w
  6795  0092  0084               	movwf	4
  6796  0093  1783               	bsf	3,7
  6797  0094  1C21               	btfss	??_displayDigit+1,0
  6798  0095  1383               	bcf	3,7
  6799  0096  0A00               	incf	0,w
  6800  0097  00A2               	movwf	??_displayDigit+2
  6801  0098  3001               	movlw	1
  6802  0099  00A3               	movwf	??_displayDigit+3
  6803  009A  3000               	movlw	0
  6804  009B  00A4               	movwf	??_displayDigit+4
  6805  009C  28A0               	goto	u2404
  6806  009D                     u2405:	
  6807  009D  1003               	clrc
  6808  009E  0DA3               	rlf	??_displayDigit+3,f
  6809  009F  0DA4               	rlf	??_displayDigit+4,f
  6810  00A0                     u2404:	
  6811  00A0  0BA2               	decfsz	??_displayDigit+2,f
  6812  00A1  289D               	goto	u2405
  6813  00A2  300C               	movlw	12
  6814  00A3  077B               	addwf	displayDigit@D1,w
  6815  00A4  00A5               	movwf	??_displayDigit+5
  6816  00A5  087C               	movf	displayDigit@D1+1,w
  6817  00A6  1803               	skipnc
  6818  00A7  3E01               	addlw	1
  6819  00A8  00A6               	movwf	??_displayDigit+6
  6820  00A9  0825               	movf	??_displayDigit+5,w
  6821  00AA  0084               	movwf	4
  6822  00AB  1783               	bsf	3,7
  6823  00AC  1C26               	btfss	??_displayDigit+6,0
  6824  00AD  1383               	bcf	3,7
  6825  00AE  0800               	movf	0,w
  6826  00AF  00A7               	movwf	??_displayDigit+7
  6827  00B0  0A84               	incf	4,f
  6828  00B1  0800               	movf	0,w
  6829  00B2  00A8               	movwf	??_displayDigit+8
  6830  00B3  0827               	movf	??_displayDigit+7,w
  6831  00B4  0084               	movwf	4
  6832  00B5  1783               	bsf	3,7
  6833  00B6  1C28               	btfss	??_displayDigit+8,0
  6834  00B7  1383               	bcf	3,7
  6835  00B8  0823               	movf	??_displayDigit+3,w
  6836  00B9  0480               	iorwf	0,f
  6837  00BA  0A84               	incf	4,f
  6838  00BB  0824               	movf	??_displayDigit+4,w
  6839  00BC  0480               	iorwf	0,f
  6840                           
  6841                           ;lcd.c: 138: break;
  6842  00BD  0008               	return
  6843  00BE                     l1339:	
  6844                           ;lcd.c: 139: case 6:
  6845                           
  6846                           
  6847                           ;lcd.c: 140: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  6848  00BE  300E               	movlw	14
  6849  00BF  077B               	addwf	displayDigit@D1,w
  6850  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  6851  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  6852  00C2  00A0               	movwf	??_displayDigit
  6853  00C3  087C               	movf	displayDigit@D1+1,w
  6854  00C4  1803               	skipnc
  6855  00C5  3E01               	addlw	1
  6856  00C6  00A1               	movwf	??_displayDigit+1
  6857  00C7  0820               	movf	??_displayDigit,w
  6858  00C8  0084               	movwf	4
  6859  00C9  1783               	bsf	3,7
  6860  00CA  1C21               	btfss	??_displayDigit+1,0
  6861  00CB  1383               	bcf	3,7
  6862  00CC  0A00               	incf	0,w
  6863  00CD  00A2               	movwf	??_displayDigit+2
  6864  00CE  3001               	movlw	1
  6865  00CF  00A3               	movwf	??_displayDigit+3
  6866  00D0  3000               	movlw	0
  6867  00D1  00A4               	movwf	??_displayDigit+4
  6868  00D2  28D6               	goto	u2414
  6869  00D3                     u2415:	
  6870  00D3  1003               	clrc
  6871  00D4  0DA3               	rlf	??_displayDigit+3,f
  6872  00D5  0DA4               	rlf	??_displayDigit+4,f
  6873  00D6                     u2414:	
  6874  00D6  0BA2               	decfsz	??_displayDigit+2,f
  6875  00D7  28D3               	goto	u2415
  6876  00D8  087B               	movf	displayDigit@D1,w
  6877  00D9  0084               	movwf	4
  6878  00DA  1783               	bsf	3,7
  6879  00DB  1C7C               	btfss	displayDigit@D1+1,0
  6880  00DC  1383               	bcf	3,7
  6881  00DD  0800               	movf	0,w
  6882  00DE  00A5               	movwf	??_displayDigit+5
  6883  00DF  0A84               	incf	4,f
  6884  00E0  0800               	movf	0,w
  6885  00E1  00A6               	movwf	??_displayDigit+6
  6886  00E2  0825               	movf	??_displayDigit+5,w
  6887  00E3  0084               	movwf	4
  6888  00E4  1783               	bsf	3,7
  6889  00E5  1C26               	btfss	??_displayDigit+6,0
  6890  00E6  1383               	bcf	3,7
  6891  00E7  0823               	movf	??_displayDigit+3,w
  6892  00E8  0480               	iorwf	0,f
  6893  00E9  0A84               	incf	4,f
  6894  00EA  0824               	movf	??_displayDigit+4,w
  6895  00EB  0480               	iorwf	0,f
  6896                           
  6897                           ;lcd.c: 141: ((*D1->sb) &= ~((1UL) << (D1->bits[1])));
  6898  00EC  3010               	movlw	16
  6899  00ED  077B               	addwf	displayDigit@D1,w
  6900  00EE  00A0               	movwf	??_displayDigit
  6901  00EF  087C               	movf	displayDigit@D1+1,w
  6902  00F0  1803               	skipnc
  6903  00F1  3E01               	addlw	1
  6904  00F2  00A1               	movwf	??_displayDigit+1
  6905  00F3  0820               	movf	??_displayDigit,w
  6906  00F4  0084               	movwf	4
  6907  00F5  1783               	bsf	3,7
  6908  00F6  1C21               	btfss	??_displayDigit+1,0
  6909  00F7  1383               	bcf	3,7
  6910  00F8  0A00               	incf	0,w
  6911  00F9  00A2               	movwf	??_displayDigit+2
  6912  00FA  3001               	movlw	1
  6913  00FB  00A3               	movwf	??_displayDigit+3
  6914  00FC  3000               	movlw	0
  6915  00FD  00A4               	movwf	??_displayDigit+4
  6916  00FE  2902               	goto	u2424
  6917  00FF                     u2425:	
  6918  00FF  1003               	clrc
  6919  0100  0DA3               	rlf	??_displayDigit+3,f
  6920  0101  0DA4               	rlf	??_displayDigit+4,f
  6921  0102                     u2424:	
  6922  0102  0BA2               	decfsz	??_displayDigit+2,f
  6923  0103  28FF               	goto	u2425
  6924  0104  09A3               	comf	??_displayDigit+3,f
  6925  0105  09A4               	comf	??_displayDigit+4,f
  6926  0106  3002               	movlw	2
  6927  0107  077B               	addwf	displayDigit@D1,w
  6928  0108  00A5               	movwf	??_displayDigit+5
  6929  0109  087C               	movf	displayDigit@D1+1,w
  6930  010A  1803               	skipnc
  6931  010B  3E01               	addlw	1
  6932  010C  00A6               	movwf	??_displayDigit+6
  6933  010D  0825               	movf	??_displayDigit+5,w
  6934  010E  0084               	movwf	4
  6935  010F  1783               	bsf	3,7
  6936  0110  1C26               	btfss	??_displayDigit+6,0
  6937  0111  1383               	bcf	3,7
  6938  0112  0800               	movf	0,w
  6939  0113  00A7               	movwf	??_displayDigit+7
  6940  0114  0A84               	incf	4,f
  6941  0115  0800               	movf	0,w
  6942  0116  00A8               	movwf	??_displayDigit+8
  6943  0117  0827               	movf	??_displayDigit+7,w
  6944  0118  0084               	movwf	4
  6945  0119  1783               	bsf	3,7
  6946  011A  1C28               	btfss	??_displayDigit+8,0
  6947  011B  1383               	bcf	3,7
  6948  011C  0823               	movf	??_displayDigit+3,w
  6949  011D  0580               	andwf	0,f
  6950  011E  0A84               	incf	4,f
  6951  011F  0824               	movf	??_displayDigit+4,w
  6952  0120  0580               	andwf	0,f
  6953                           
  6954                           ;lcd.c: 142: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  6955  0121  3012               	movlw	18
  6956  0122  077B               	addwf	displayDigit@D1,w
  6957  0123  00A0               	movwf	??_displayDigit
  6958  0124  087C               	movf	displayDigit@D1+1,w
  6959  0125  1803               	skipnc
  6960  0126  3E01               	addlw	1
  6961  0127  00A1               	movwf	??_displayDigit+1
  6962  0128  0820               	movf	??_displayDigit,w
  6963  0129  0084               	movwf	4
  6964  012A  1783               	bsf	3,7
  6965  012B  1C21               	btfss	??_displayDigit+1,0
  6966  012C  1383               	bcf	3,7
  6967  012D  0A00               	incf	0,w
  6968  012E  00A2               	movwf	??_displayDigit+2
  6969  012F  3001               	movlw	1
  6970  0130  00A3               	movwf	??_displayDigit+3
  6971  0131  3000               	movlw	0
  6972  0132  00A4               	movwf	??_displayDigit+4
  6973  0133  2937               	goto	u2434
  6974  0134                     u2435:	
  6975  0134  1003               	clrc
  6976  0135  0DA3               	rlf	??_displayDigit+3,f
  6977  0136  0DA4               	rlf	??_displayDigit+4,f
  6978  0137                     u2434:	
  6979  0137  0BA2               	decfsz	??_displayDigit+2,f
  6980  0138  2934               	goto	u2435
  6981  0139  3004               	movlw	4
  6982  013A  077B               	addwf	displayDigit@D1,w
  6983  013B  00A5               	movwf	??_displayDigit+5
  6984  013C  087C               	movf	displayDigit@D1+1,w
  6985  013D  1803               	skipnc
  6986  013E  3E01               	addlw	1
  6987  013F  00A6               	movwf	??_displayDigit+6
  6988  0140  0825               	movf	??_displayDigit+5,w
  6989  0141  0084               	movwf	4
  6990  0142  1783               	bsf	3,7
  6991  0143  1C26               	btfss	??_displayDigit+6,0
  6992  0144  1383               	bcf	3,7
  6993  0145  0800               	movf	0,w
  6994  0146  00A7               	movwf	??_displayDigit+7
  6995  0147  0A84               	incf	4,f
  6996  0148  0800               	movf	0,w
  6997  0149  00A8               	movwf	??_displayDigit+8
  6998  014A  0827               	movf	??_displayDigit+7,w
  6999  014B  0084               	movwf	4
  7000  014C  1783               	bsf	3,7
  7001  014D  1C28               	btfss	??_displayDigit+8,0
  7002  014E  1383               	bcf	3,7
  7003  014F  0823               	movf	??_displayDigit+3,w
  7004  0150  0480               	iorwf	0,f
  7005  0151  0A84               	incf	4,f
  7006  0152  0824               	movf	??_displayDigit+4,w
  7007  0153  0480               	iorwf	0,f
  7008                           
  7009                           ;lcd.c: 143: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  7010  0154  3014               	movlw	20
  7011  0155  077B               	addwf	displayDigit@D1,w
  7012  0156  00A0               	movwf	??_displayDigit
  7013  0157  087C               	movf	displayDigit@D1+1,w
  7014  0158  1803               	skipnc
  7015  0159  3E01               	addlw	1
  7016  015A  00A1               	movwf	??_displayDigit+1
  7017  015B  0820               	movf	??_displayDigit,w
  7018  015C  0084               	movwf	4
  7019  015D  1783               	bsf	3,7
  7020  015E  1C21               	btfss	??_displayDigit+1,0
  7021  015F  1383               	bcf	3,7
  7022  0160  0A00               	incf	0,w
  7023  0161  00A2               	movwf	??_displayDigit+2
  7024  0162  3001               	movlw	1
  7025  0163  00A3               	movwf	??_displayDigit+3
  7026  0164  3000               	movlw	0
  7027  0165  00A4               	movwf	??_displayDigit+4
  7028  0166  296A               	goto	u2444
  7029  0167                     u2445:	
  7030  0167  1003               	clrc
  7031  0168  0DA3               	rlf	??_displayDigit+3,f
  7032  0169  0DA4               	rlf	??_displayDigit+4,f
  7033  016A                     u2444:	
  7034  016A  0BA2               	decfsz	??_displayDigit+2,f
  7035  016B  2967               	goto	u2445
  7036  016C  3006               	movlw	6
  7037  016D  077B               	addwf	displayDigit@D1,w
  7038  016E  00A5               	movwf	??_displayDigit+5
  7039  016F  087C               	movf	displayDigit@D1+1,w
  7040  0170  1803               	skipnc
  7041  0171  3E01               	addlw	1
  7042  0172  00A6               	movwf	??_displayDigit+6
  7043  0173  0825               	movf	??_displayDigit+5,w
  7044  0174  0084               	movwf	4
  7045  0175  1783               	bsf	3,7
  7046  0176  1C26               	btfss	??_displayDigit+6,0
  7047  0177  1383               	bcf	3,7
  7048  0178  0800               	movf	0,w
  7049  0179  00A7               	movwf	??_displayDigit+7
  7050  017A  0A84               	incf	4,f
  7051  017B  0800               	movf	0,w
  7052  017C  00A8               	movwf	??_displayDigit+8
  7053  017D  0827               	movf	??_displayDigit+7,w
  7054  017E  0084               	movwf	4
  7055  017F  1783               	bsf	3,7
  7056  0180  1C28               	btfss	??_displayDigit+8,0
  7057  0181  1383               	bcf	3,7
  7058  0182  0823               	movf	??_displayDigit+3,w
  7059  0183  0480               	iorwf	0,f
  7060  0184  0A84               	incf	4,f
  7061  0185  0824               	movf	??_displayDigit+4,w
  7062  0186  0480               	iorwf	0,f
  7063                           
  7064                           ;lcd.c: 144: ((*D1->se) |= (1UL) << (D1->bits[4]));
  7065  0187  3016               	movlw	22
  7066  0188  077B               	addwf	displayDigit@D1,w
  7067  0189  00A0               	movwf	??_displayDigit
  7068  018A  087C               	movf	displayDigit@D1+1,w
  7069  018B  1803               	skipnc
  7070  018C  3E01               	addlw	1
  7071  018D  00A1               	movwf	??_displayDigit+1
  7072  018E  0820               	movf	??_displayDigit,w
  7073  018F  0084               	movwf	4
  7074  0190  1783               	bsf	3,7
  7075  0191  1C21               	btfss	??_displayDigit+1,0
  7076  0192  1383               	bcf	3,7
  7077  0193  0A00               	incf	0,w
  7078  0194  00A2               	movwf	??_displayDigit+2
  7079  0195  3001               	movlw	1
  7080  0196  00A3               	movwf	??_displayDigit+3
  7081  0197  3000               	movlw	0
  7082  0198  00A4               	movwf	??_displayDigit+4
  7083  0199  299D               	goto	u2454
  7084  019A                     u2455:	
  7085  019A  1003               	clrc
  7086  019B  0DA3               	rlf	??_displayDigit+3,f
  7087  019C  0DA4               	rlf	??_displayDigit+4,f
  7088  019D                     u2454:	
  7089  019D  0BA2               	decfsz	??_displayDigit+2,f
  7090  019E  299A               	goto	u2455
  7091  019F  3008               	movlw	8
  7092  01A0  077B               	addwf	displayDigit@D1,w
  7093  01A1  00A5               	movwf	??_displayDigit+5
  7094  01A2  087C               	movf	displayDigit@D1+1,w
  7095  01A3  1803               	skipnc
  7096  01A4  3E01               	addlw	1
  7097  01A5  00A6               	movwf	??_displayDigit+6
  7098  01A6  0825               	movf	??_displayDigit+5,w
  7099  01A7  0084               	movwf	4
  7100  01A8  1783               	bsf	3,7
  7101  01A9  1C26               	btfss	??_displayDigit+6,0
  7102  01AA  1383               	bcf	3,7
  7103  01AB  0800               	movf	0,w
  7104  01AC  00A7               	movwf	??_displayDigit+7
  7105  01AD  0A84               	incf	4,f
  7106  01AE  0800               	movf	0,w
  7107  01AF  00A8               	movwf	??_displayDigit+8
  7108  01B0  0827               	movf	??_displayDigit+7,w
  7109  01B1  0084               	movwf	4
  7110  01B2  1783               	bsf	3,7
  7111  01B3  1C28               	btfss	??_displayDigit+8,0
  7112  01B4  1383               	bcf	3,7
  7113  01B5  0823               	movf	??_displayDigit+3,w
  7114  01B6  0480               	iorwf	0,f
  7115  01B7  0A84               	incf	4,f
  7116  01B8  0824               	movf	??_displayDigit+4,w
  7117  01B9  0480               	iorwf	0,f
  7118                           
  7119                           ;lcd.c: 145: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  7120  01BA  3018               	movlw	24
  7121  01BB  077B               	addwf	displayDigit@D1,w
  7122  01BC  00A0               	movwf	??_displayDigit
  7123  01BD  087C               	movf	displayDigit@D1+1,w
  7124  01BE  1803               	skipnc
  7125  01BF  3E01               	addlw	1
  7126  01C0  00A1               	movwf	??_displayDigit+1
  7127  01C1  0820               	movf	??_displayDigit,w
  7128  01C2  0084               	movwf	4
  7129  01C3  1783               	bsf	3,7
  7130  01C4  1C21               	btfss	??_displayDigit+1,0
  7131  01C5  1383               	bcf	3,7
  7132  01C6  0A00               	incf	0,w
  7133  01C7  00A2               	movwf	??_displayDigit+2
  7134  01C8  3001               	movlw	1
  7135  01C9  00A3               	movwf	??_displayDigit+3
  7136  01CA  3000               	movlw	0
  7137  01CB  00A4               	movwf	??_displayDigit+4
  7138  01CC  29D0               	goto	u2464
  7139  01CD                     u2465:	
  7140  01CD  1003               	clrc
  7141  01CE  0DA3               	rlf	??_displayDigit+3,f
  7142  01CF  0DA4               	rlf	??_displayDigit+4,f
  7143  01D0                     u2464:	
  7144  01D0  0BA2               	decfsz	??_displayDigit+2,f
  7145  01D1  29CD               	goto	u2465
  7146  01D2  300A               	movlw	10
  7147  01D3  077B               	addwf	displayDigit@D1,w
  7148  01D4  00A5               	movwf	??_displayDigit+5
  7149  01D5  087C               	movf	displayDigit@D1+1,w
  7150  01D6  1803               	skipnc
  7151  01D7  3E01               	addlw	1
  7152  01D8  00A6               	movwf	??_displayDigit+6
  7153  01D9  0825               	movf	??_displayDigit+5,w
  7154  01DA  0084               	movwf	4
  7155  01DB  1783               	bsf	3,7
  7156  01DC  1C26               	btfss	??_displayDigit+6,0
  7157  01DD  1383               	bcf	3,7
  7158  01DE  0800               	movf	0,w
  7159  01DF  00A7               	movwf	??_displayDigit+7
  7160  01E0  0A84               	incf	4,f
  7161  01E1  0800               	movf	0,w
  7162  01E2  00A8               	movwf	??_displayDigit+8
  7163  01E3  0827               	movf	??_displayDigit+7,w
  7164  01E4  0084               	movwf	4
  7165  01E5  1783               	bsf	3,7
  7166  01E6  1C28               	btfss	??_displayDigit+8,0
  7167  01E7  1383               	bcf	3,7
  7168  01E8  0823               	movf	??_displayDigit+3,w
  7169  01E9  0480               	iorwf	0,f
  7170  01EA  0A84               	incf	4,f
  7171  01EB  0824               	movf	??_displayDigit+4,w
  7172  01EC  0480               	iorwf	0,f
  7173                           
  7174                           ;lcd.c: 146: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  7175  01ED  301A               	movlw	26
  7176  01EE  077B               	addwf	displayDigit@D1,w
  7177  01EF  00A0               	movwf	??_displayDigit
  7178  01F0  087C               	movf	displayDigit@D1+1,w
  7179  01F1  1803               	skipnc
  7180  01F2  3E01               	addlw	1
  7181  01F3  00A1               	movwf	??_displayDigit+1
  7182  01F4  0820               	movf	??_displayDigit,w
  7183  01F5  0084               	movwf	4
  7184  01F6  1783               	bsf	3,7
  7185  01F7  1C21               	btfss	??_displayDigit+1,0
  7186  01F8  1383               	bcf	3,7
  7187  01F9  0A00               	incf	0,w
  7188  01FA  00A2               	movwf	??_displayDigit+2
  7189  01FB  3001               	movlw	1
  7190  01FC  00A3               	movwf	??_displayDigit+3
  7191  01FD  3000               	movlw	0
  7192  01FE  00A4               	movwf	??_displayDigit+4
  7193  01FF  2A03               	goto	u2474
  7194  0200                     u2475:	
  7195  0200  1003               	clrc
  7196  0201  0DA3               	rlf	??_displayDigit+3,f
  7197  0202  0DA4               	rlf	??_displayDigit+4,f
  7198  0203                     u2474:	
  7199  0203  0BA2               	decfsz	??_displayDigit+2,f
  7200  0204  2A00               	goto	u2475
  7201  0205  300C               	movlw	12
  7202  0206  077B               	addwf	displayDigit@D1,w
  7203  0207  00A5               	movwf	??_displayDigit+5
  7204  0208  087C               	movf	displayDigit@D1+1,w
  7205  0209  1803               	skipnc
  7206  020A  3E01               	addlw	1
  7207  020B  00A6               	movwf	??_displayDigit+6
  7208  020C  0825               	movf	??_displayDigit+5,w
  7209  020D  0084               	movwf	4
  7210  020E  1783               	bsf	3,7
  7211  020F  1C26               	btfss	??_displayDigit+6,0
  7212  0210  1383               	bcf	3,7
  7213  0211  0800               	movf	0,w
  7214  0212  00A7               	movwf	??_displayDigit+7
  7215  0213  0A84               	incf	4,f
  7216  0214  0800               	movf	0,w
  7217  0215  00A8               	movwf	??_displayDigit+8
  7218  0216  0827               	movf	??_displayDigit+7,w
  7219  0217  0084               	movwf	4
  7220  0218  1783               	bsf	3,7
  7221  0219  1C28               	btfss	??_displayDigit+8,0
  7222  021A  1383               	bcf	3,7
  7223  021B  0823               	movf	??_displayDigit+3,w
  7224  021C  0480               	iorwf	0,f
  7225  021D  0A84               	incf	4,f
  7226  021E  0824               	movf	??_displayDigit+4,w
  7227  021F  0480               	iorwf	0,f
  7228                           
  7229                           ;lcd.c: 147: break;
  7230  0220  0008               	return
  7231  0221                     l1341:	
  7232                           ;lcd.c: 148: case 7:
  7233                           
  7234                           
  7235                           ;lcd.c: 149: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  7236  0221  300E               	movlw	14
  7237  0222  077B               	addwf	displayDigit@D1,w
  7238  0223  1283               	bcf	3,5	;RP0=0, select bank0
  7239  0224  1303               	bcf	3,6	;RP1=0, select bank0
  7240  0225  00A0               	movwf	??_displayDigit
  7241  0226  087C               	movf	displayDigit@D1+1,w
  7242  0227  1803               	skipnc
  7243  0228  3E01               	addlw	1
  7244  0229  00A1               	movwf	??_displayDigit+1
  7245  022A  0820               	movf	??_displayDigit,w
  7246  022B  0084               	movwf	4
  7247  022C  1783               	bsf	3,7
  7248  022D  1C21               	btfss	??_displayDigit+1,0
  7249  022E  1383               	bcf	3,7
  7250  022F  0A00               	incf	0,w
  7251  0230  00A2               	movwf	??_displayDigit+2
  7252  0231  3001               	movlw	1
  7253  0232  00A3               	movwf	??_displayDigit+3
  7254  0233  3000               	movlw	0
  7255  0234  00A4               	movwf	??_displayDigit+4
  7256  0235  2A39               	goto	u2484
  7257  0236                     u2485:	
  7258  0236  1003               	clrc
  7259  0237  0DA3               	rlf	??_displayDigit+3,f
  7260  0238  0DA4               	rlf	??_displayDigit+4,f
  7261  0239                     u2484:	
  7262  0239  0BA2               	decfsz	??_displayDigit+2,f
  7263  023A  2A36               	goto	u2485
  7264  023B  087B               	movf	displayDigit@D1,w
  7265  023C  0084               	movwf	4
  7266  023D  1783               	bsf	3,7
  7267  023E  1C7C               	btfss	displayDigit@D1+1,0
  7268  023F  1383               	bcf	3,7
  7269  0240  0800               	movf	0,w
  7270  0241  00A5               	movwf	??_displayDigit+5
  7271  0242  0A84               	incf	4,f
  7272  0243  0800               	movf	0,w
  7273  0244  00A6               	movwf	??_displayDigit+6
  7274  0245  0825               	movf	??_displayDigit+5,w
  7275  0246  0084               	movwf	4
  7276  0247  1783               	bsf	3,7
  7277  0248  1C26               	btfss	??_displayDigit+6,0
  7278  0249  1383               	bcf	3,7
  7279  024A  0823               	movf	??_displayDigit+3,w
  7280  024B  0480               	iorwf	0,f
  7281  024C  0A84               	incf	4,f
  7282  024D  0824               	movf	??_displayDigit+4,w
  7283  024E  0480               	iorwf	0,f
  7284                           
  7285                           ;lcd.c: 150: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  7286  024F  3010               	movlw	16
  7287  0250  077B               	addwf	displayDigit@D1,w
  7288  0251  00A0               	movwf	??_displayDigit
  7289  0252  087C               	movf	displayDigit@D1+1,w
  7290  0253  1803               	skipnc
  7291  0254  3E01               	addlw	1
  7292  0255  00A1               	movwf	??_displayDigit+1
  7293  0256  0820               	movf	??_displayDigit,w
  7294  0257  0084               	movwf	4
  7295  0258  1783               	bsf	3,7
  7296  0259  1C21               	btfss	??_displayDigit+1,0
  7297  025A  1383               	bcf	3,7
  7298  025B  0A00               	incf	0,w
  7299  025C  00A2               	movwf	??_displayDigit+2
  7300  025D  3001               	movlw	1
  7301  025E  00A3               	movwf	??_displayDigit+3
  7302  025F  3000               	movlw	0
  7303  0260  00A4               	movwf	??_displayDigit+4
  7304  0261  2A65               	goto	u2494
  7305  0262                     u2495:	
  7306  0262  1003               	clrc
  7307  0263  0DA3               	rlf	??_displayDigit+3,f
  7308  0264  0DA4               	rlf	??_displayDigit+4,f
  7309  0265                     u2494:	
  7310  0265  0BA2               	decfsz	??_displayDigit+2,f
  7311  0266  2A62               	goto	u2495
  7312  0267  3002               	movlw	2
  7313  0268  077B               	addwf	displayDigit@D1,w
  7314  0269  00A5               	movwf	??_displayDigit+5
  7315  026A  087C               	movf	displayDigit@D1+1,w
  7316  026B  1803               	skipnc
  7317  026C  3E01               	addlw	1
  7318  026D  00A6               	movwf	??_displayDigit+6
  7319  026E  0825               	movf	??_displayDigit+5,w
  7320  026F  0084               	movwf	4
  7321  0270  1783               	bsf	3,7
  7322  0271  1C26               	btfss	??_displayDigit+6,0
  7323  0272  1383               	bcf	3,7
  7324  0273  0800               	movf	0,w
  7325  0274  00A7               	movwf	??_displayDigit+7
  7326  0275  0A84               	incf	4,f
  7327  0276  0800               	movf	0,w
  7328  0277  00A8               	movwf	??_displayDigit+8
  7329  0278  0827               	movf	??_displayDigit+7,w
  7330  0279  0084               	movwf	4
  7331  027A  1783               	bsf	3,7
  7332  027B  1C28               	btfss	??_displayDigit+8,0
  7333  027C  1383               	bcf	3,7
  7334  027D  0823               	movf	??_displayDigit+3,w
  7335  027E  0480               	iorwf	0,f
  7336  027F  0A84               	incf	4,f
  7337  0280  0824               	movf	??_displayDigit+4,w
  7338  0281  0480               	iorwf	0,f
  7339                           
  7340                           ;lcd.c: 151: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  7341  0282  3012               	movlw	18
  7342  0283  077B               	addwf	displayDigit@D1,w
  7343  0284  00A0               	movwf	??_displayDigit
  7344  0285  087C               	movf	displayDigit@D1+1,w
  7345  0286  1803               	skipnc
  7346  0287  3E01               	addlw	1
  7347  0288  00A1               	movwf	??_displayDigit+1
  7348  0289  0820               	movf	??_displayDigit,w
  7349  028A  0084               	movwf	4
  7350  028B  1783               	bsf	3,7
  7351  028C  1C21               	btfss	??_displayDigit+1,0
  7352  028D  1383               	bcf	3,7
  7353  028E  0A00               	incf	0,w
  7354  028F  00A2               	movwf	??_displayDigit+2
  7355  0290  3001               	movlw	1
  7356  0291  00A3               	movwf	??_displayDigit+3
  7357  0292  3000               	movlw	0
  7358  0293  00A4               	movwf	??_displayDigit+4
  7359  0294  2A98               	goto	u2504
  7360  0295                     u2505:	
  7361  0295  1003               	clrc
  7362  0296  0DA3               	rlf	??_displayDigit+3,f
  7363  0297  0DA4               	rlf	??_displayDigit+4,f
  7364  0298                     u2504:	
  7365  0298  0BA2               	decfsz	??_displayDigit+2,f
  7366  0299  2A95               	goto	u2505
  7367  029A  3004               	movlw	4
  7368  029B  077B               	addwf	displayDigit@D1,w
  7369  029C  00A5               	movwf	??_displayDigit+5
  7370  029D  087C               	movf	displayDigit@D1+1,w
  7371  029E  1803               	skipnc
  7372  029F  3E01               	addlw	1
  7373  02A0  00A6               	movwf	??_displayDigit+6
  7374  02A1  0825               	movf	??_displayDigit+5,w
  7375  02A2  0084               	movwf	4
  7376  02A3  1783               	bsf	3,7
  7377  02A4  1C26               	btfss	??_displayDigit+6,0
  7378  02A5  1383               	bcf	3,7
  7379  02A6  0800               	movf	0,w
  7380  02A7  00A7               	movwf	??_displayDigit+7
  7381  02A8  0A84               	incf	4,f
  7382  02A9  0800               	movf	0,w
  7383  02AA  00A8               	movwf	??_displayDigit+8
  7384  02AB  0827               	movf	??_displayDigit+7,w
  7385  02AC  0084               	movwf	4
  7386  02AD  1783               	bsf	3,7
  7387  02AE  1C28               	btfss	??_displayDigit+8,0
  7388  02AF  1383               	bcf	3,7
  7389  02B0  0823               	movf	??_displayDigit+3,w
  7390  02B1  0480               	iorwf	0,f
  7391  02B2  0A84               	incf	4,f
  7392  02B3  0824               	movf	??_displayDigit+4,w
  7393  02B4  0480               	iorwf	0,f
  7394                           
  7395                           ;lcd.c: 152: ((*D1->sd) &= ~((1UL) << (D1->bits[3])));
  7396  02B5  3014               	movlw	20
  7397  02B6  077B               	addwf	displayDigit@D1,w
  7398  02B7  00A0               	movwf	??_displayDigit
  7399  02B8  087C               	movf	displayDigit@D1+1,w
  7400  02B9  1803               	skipnc
  7401  02BA  3E01               	addlw	1
  7402  02BB  00A1               	movwf	??_displayDigit+1
  7403  02BC  0820               	movf	??_displayDigit,w
  7404  02BD  0084               	movwf	4
  7405  02BE  1783               	bsf	3,7
  7406  02BF  1C21               	btfss	??_displayDigit+1,0
  7407  02C0  1383               	bcf	3,7
  7408  02C1  0A00               	incf	0,w
  7409  02C2  00A2               	movwf	??_displayDigit+2
  7410  02C3  3001               	movlw	1
  7411  02C4  00A3               	movwf	??_displayDigit+3
  7412  02C5  3000               	movlw	0
  7413  02C6  00A4               	movwf	??_displayDigit+4
  7414  02C7  2ACB               	goto	u2514
  7415  02C8                     u2515:	
  7416  02C8  1003               	clrc
  7417  02C9  0DA3               	rlf	??_displayDigit+3,f
  7418  02CA  0DA4               	rlf	??_displayDigit+4,f
  7419  02CB                     u2514:	
  7420  02CB  0BA2               	decfsz	??_displayDigit+2,f
  7421  02CC  2AC8               	goto	u2515
  7422  02CD  09A3               	comf	??_displayDigit+3,f
  7423  02CE  09A4               	comf	??_displayDigit+4,f
  7424  02CF  3006               	movlw	6
  7425  02D0  077B               	addwf	displayDigit@D1,w
  7426  02D1  00A5               	movwf	??_displayDigit+5
  7427  02D2  087C               	movf	displayDigit@D1+1,w
  7428  02D3  1803               	skipnc
  7429  02D4  3E01               	addlw	1
  7430  02D5  00A6               	movwf	??_displayDigit+6
  7431  02D6  0825               	movf	??_displayDigit+5,w
  7432  02D7  0084               	movwf	4
  7433  02D8  1783               	bsf	3,7
  7434  02D9  1C26               	btfss	??_displayDigit+6,0
  7435  02DA  1383               	bcf	3,7
  7436  02DB  0800               	movf	0,w
  7437  02DC  00A7               	movwf	??_displayDigit+7
  7438  02DD  0A84               	incf	4,f
  7439  02DE  0800               	movf	0,w
  7440  02DF  00A8               	movwf	??_displayDigit+8
  7441  02E0  0827               	movf	??_displayDigit+7,w
  7442  02E1  0084               	movwf	4
  7443  02E2  1783               	bsf	3,7
  7444  02E3  1C28               	btfss	??_displayDigit+8,0
  7445  02E4  1383               	bcf	3,7
  7446  02E5  0823               	movf	??_displayDigit+3,w
  7447  02E6  0580               	andwf	0,f
  7448  02E7  0A84               	incf	4,f
  7449  02E8  0824               	movf	??_displayDigit+4,w
  7450  02E9  0580               	andwf	0,f
  7451                           
  7452                           ;lcd.c: 153: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  7453  02EA  3016               	movlw	22
  7454  02EB  077B               	addwf	displayDigit@D1,w
  7455  02EC  00A0               	movwf	??_displayDigit
  7456  02ED  087C               	movf	displayDigit@D1+1,w
  7457  02EE  1803               	skipnc
  7458  02EF  3E01               	addlw	1
  7459  02F0  00A1               	movwf	??_displayDigit+1
  7460  02F1  0820               	movf	??_displayDigit,w
  7461  02F2  0084               	movwf	4
  7462  02F3  1783               	bsf	3,7
  7463  02F4  1C21               	btfss	??_displayDigit+1,0
  7464  02F5  1383               	bcf	3,7
  7465  02F6  0A00               	incf	0,w
  7466  02F7  00A2               	movwf	??_displayDigit+2
  7467  02F8  3001               	movlw	1
  7468  02F9  00A3               	movwf	??_displayDigit+3
  7469  02FA  3000               	movlw	0
  7470  02FB  00A4               	movwf	??_displayDigit+4
  7471  02FC  2B00               	goto	u2524
  7472  02FD                     u2525:	
  7473  02FD  1003               	clrc
  7474  02FE  0DA3               	rlf	??_displayDigit+3,f
  7475  02FF  0DA4               	rlf	??_displayDigit+4,f
  7476  0300                     u2524:	
  7477  0300  0BA2               	decfsz	??_displayDigit+2,f
  7478  0301  2AFD               	goto	u2525
  7479  0302  09A3               	comf	??_displayDigit+3,f
  7480  0303  09A4               	comf	??_displayDigit+4,f
  7481  0304  3008               	movlw	8
  7482  0305  077B               	addwf	displayDigit@D1,w
  7483  0306  00A5               	movwf	??_displayDigit+5
  7484  0307  087C               	movf	displayDigit@D1+1,w
  7485  0308  1803               	skipnc
  7486  0309  3E01               	addlw	1
  7487  030A  00A6               	movwf	??_displayDigit+6
  7488  030B  0825               	movf	??_displayDigit+5,w
  7489  030C  0084               	movwf	4
  7490  030D  1783               	bsf	3,7
  7491  030E  1C26               	btfss	??_displayDigit+6,0
  7492  030F  1383               	bcf	3,7
  7493  0310  0800               	movf	0,w
  7494  0311  00A7               	movwf	??_displayDigit+7
  7495  0312  0A84               	incf	4,f
  7496  0313  0800               	movf	0,w
  7497  0314  00A8               	movwf	??_displayDigit+8
  7498  0315  0827               	movf	??_displayDigit+7,w
  7499  0316  0084               	movwf	4
  7500  0317  1783               	bsf	3,7
  7501  0318  1C28               	btfss	??_displayDigit+8,0
  7502  0319  1383               	bcf	3,7
  7503  031A  0823               	movf	??_displayDigit+3,w
  7504  031B  0580               	andwf	0,f
  7505  031C  0A84               	incf	4,f
  7506  031D  0824               	movf	??_displayDigit+4,w
  7507  031E  0580               	andwf	0,f
  7508                           
  7509                           ;lcd.c: 154: ((*D1->sf) &= ~((1UL) << (D1->bits[5])));
  7510  031F  3018               	movlw	24
  7511  0320  077B               	addwf	displayDigit@D1,w
  7512  0321  00A0               	movwf	??_displayDigit
  7513  0322  087C               	movf	displayDigit@D1+1,w
  7514  0323  1803               	skipnc
  7515  0324  3E01               	addlw	1
  7516  0325  00A1               	movwf	??_displayDigit+1
  7517  0326  0820               	movf	??_displayDigit,w
  7518  0327  0084               	movwf	4
  7519  0328  1783               	bsf	3,7
  7520  0329  1C21               	btfss	??_displayDigit+1,0
  7521  032A  1383               	bcf	3,7
  7522  032B  0A00               	incf	0,w
  7523  032C  00A2               	movwf	??_displayDigit+2
  7524  032D  3001               	movlw	1
  7525  032E  00A3               	movwf	??_displayDigit+3
  7526  032F  3000               	movlw	0
  7527  0330  00A4               	movwf	??_displayDigit+4
  7528  0331  2B35               	goto	u2534
  7529  0332                     u2535:	
  7530  0332  1003               	clrc
  7531  0333  0DA3               	rlf	??_displayDigit+3,f
  7532  0334  0DA4               	rlf	??_displayDigit+4,f
  7533  0335                     u2534:	
  7534  0335  0BA2               	decfsz	??_displayDigit+2,f
  7535  0336  2B32               	goto	u2535
  7536  0337  09A3               	comf	??_displayDigit+3,f
  7537  0338  09A4               	comf	??_displayDigit+4,f
  7538  0339  300A               	movlw	10
  7539  033A  077B               	addwf	displayDigit@D1,w
  7540  033B  00A5               	movwf	??_displayDigit+5
  7541  033C  087C               	movf	displayDigit@D1+1,w
  7542  033D  1803               	skipnc
  7543  033E  3E01               	addlw	1
  7544  033F  00A6               	movwf	??_displayDigit+6
  7545  0340  0825               	movf	??_displayDigit+5,w
  7546  0341  0084               	movwf	4
  7547  0342  1783               	bsf	3,7
  7548  0343  1C26               	btfss	??_displayDigit+6,0
  7549  0344  1383               	bcf	3,7
  7550  0345  0800               	movf	0,w
  7551  0346  00A7               	movwf	??_displayDigit+7
  7552  0347  0A84               	incf	4,f
  7553  0348  0800               	movf	0,w
  7554  0349  00A8               	movwf	??_displayDigit+8
  7555  034A  0827               	movf	??_displayDigit+7,w
  7556  034B  0084               	movwf	4
  7557  034C  1783               	bsf	3,7
  7558  034D  1C28               	btfss	??_displayDigit+8,0
  7559  034E  1383               	bcf	3,7
  7560  034F  0823               	movf	??_displayDigit+3,w
  7561  0350  0580               	andwf	0,f
  7562  0351  0A84               	incf	4,f
  7563  0352  0824               	movf	??_displayDigit+4,w
  7564  0353  0580               	andwf	0,f
  7565                           
  7566                           ;lcd.c: 155: ((*D1->sg) &= ~((1UL) << (D1->bits[6])));
  7567  0354  301A               	movlw	26
  7568  0355  077B               	addwf	displayDigit@D1,w
  7569  0356  00A0               	movwf	??_displayDigit
  7570  0357  087C               	movf	displayDigit@D1+1,w
  7571  0358  1803               	skipnc
  7572  0359  3E01               	addlw	1
  7573  035A  00A1               	movwf	??_displayDigit+1
  7574  035B  0820               	movf	??_displayDigit,w
  7575  035C  0084               	movwf	4
  7576  035D  1783               	bsf	3,7
  7577  035E  1C21               	btfss	??_displayDigit+1,0
  7578  035F  1383               	bcf	3,7
  7579  0360  0A00               	incf	0,w
  7580  0361  00A2               	movwf	??_displayDigit+2
  7581  0362  3001               	movlw	1
  7582  0363  00A3               	movwf	??_displayDigit+3
  7583  0364  3000               	movlw	0
  7584  0365  00A4               	movwf	??_displayDigit+4
  7585  0366  2B6A               	goto	u2544
  7586  0367                     u2545:	
  7587  0367  1003               	clrc
  7588  0368  0DA3               	rlf	??_displayDigit+3,f
  7589  0369  0DA4               	rlf	??_displayDigit+4,f
  7590  036A                     u2544:	
  7591  036A  0BA2               	decfsz	??_displayDigit+2,f
  7592  036B  2B67               	goto	u2545
  7593  036C  09A3               	comf	??_displayDigit+3,f
  7594  036D  09A4               	comf	??_displayDigit+4,f
  7595  036E  300C               	movlw	12
  7596  036F  077B               	addwf	displayDigit@D1,w
  7597  0370  00A5               	movwf	??_displayDigit+5
  7598  0371  087C               	movf	displayDigit@D1+1,w
  7599  0372  1803               	skipnc
  7600  0373  3E01               	addlw	1
  7601  0374  00A6               	movwf	??_displayDigit+6
  7602  0375  0825               	movf	??_displayDigit+5,w
  7603  0376  0084               	movwf	4
  7604  0377  1783               	bsf	3,7
  7605  0378  1C26               	btfss	??_displayDigit+6,0
  7606  0379  1383               	bcf	3,7
  7607  037A  0800               	movf	0,w
  7608  037B  00A7               	movwf	??_displayDigit+7
  7609  037C  0A84               	incf	4,f
  7610  037D  0800               	movf	0,w
  7611  037E  00A8               	movwf	??_displayDigit+8
  7612  037F  0827               	movf	??_displayDigit+7,w
  7613  0380  0084               	movwf	4
  7614  0381  1783               	bsf	3,7
  7615  0382  1C28               	btfss	??_displayDigit+8,0
  7616  0383  1383               	bcf	3,7
  7617  0384  0823               	movf	??_displayDigit+3,w
  7618  0385  0580               	andwf	0,f
  7619  0386  0A84               	incf	4,f
  7620  0387  0824               	movf	??_displayDigit+4,w
  7621  0388  0580               	andwf	0,f
  7622                           
  7623                           ;lcd.c: 156: break;
  7624  0389  0008               	return
  7625  038A                     l1343:	
  7626                           ;lcd.c: 157: case 8:
  7627                           
  7628                           
  7629                           ;lcd.c: 158: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  7630  038A  300E               	movlw	14
  7631  038B  077B               	addwf	displayDigit@D1,w
  7632  038C  1283               	bcf	3,5	;RP0=0, select bank0
  7633  038D  1303               	bcf	3,6	;RP1=0, select bank0
  7634  038E  00A0               	movwf	??_displayDigit
  7635  038F  087C               	movf	displayDigit@D1+1,w
  7636  0390  1803               	skipnc
  7637  0391  3E01               	addlw	1
  7638  0392  00A1               	movwf	??_displayDigit+1
  7639  0393  0820               	movf	??_displayDigit,w
  7640  0394  0084               	movwf	4
  7641  0395  1783               	bsf	3,7
  7642  0396  1C21               	btfss	??_displayDigit+1,0
  7643  0397  1383               	bcf	3,7
  7644  0398  0A00               	incf	0,w
  7645  0399  00A2               	movwf	??_displayDigit+2
  7646  039A  3001               	movlw	1
  7647  039B  00A3               	movwf	??_displayDigit+3
  7648  039C  3000               	movlw	0
  7649  039D  00A4               	movwf	??_displayDigit+4
  7650  039E  2BA2               	goto	u2554
  7651  039F                     u2555:	
  7652  039F  1003               	clrc
  7653  03A0  0DA3               	rlf	??_displayDigit+3,f
  7654  03A1  0DA4               	rlf	??_displayDigit+4,f
  7655  03A2                     u2554:	
  7656  03A2  0BA2               	decfsz	??_displayDigit+2,f
  7657  03A3  2B9F               	goto	u2555
  7658  03A4  087B               	movf	displayDigit@D1,w
  7659  03A5  0084               	movwf	4
  7660  03A6  1783               	bsf	3,7
  7661  03A7  1C7C               	btfss	displayDigit@D1+1,0
  7662  03A8  1383               	bcf	3,7
  7663  03A9  0800               	movf	0,w
  7664  03AA  00A5               	movwf	??_displayDigit+5
  7665  03AB  0A84               	incf	4,f
  7666  03AC  0800               	movf	0,w
  7667  03AD  00A6               	movwf	??_displayDigit+6
  7668  03AE  0825               	movf	??_displayDigit+5,w
  7669  03AF  0084               	movwf	4
  7670  03B0  1783               	bsf	3,7
  7671  03B1  1C26               	btfss	??_displayDigit+6,0
  7672  03B2  1383               	bcf	3,7
  7673  03B3  0823               	movf	??_displayDigit+3,w
  7674  03B4  0480               	iorwf	0,f
  7675  03B5  0A84               	incf	4,f
  7676  03B6  0824               	movf	??_displayDigit+4,w
  7677  03B7  0480               	iorwf	0,f
  7678                           
  7679                           ;lcd.c: 159: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  7680  03B8  3010               	movlw	16
  7681  03B9  077B               	addwf	displayDigit@D1,w
  7682  03BA  00A0               	movwf	??_displayDigit
  7683  03BB  087C               	movf	displayDigit@D1+1,w
  7684  03BC  1803               	skipnc
  7685  03BD  3E01               	addlw	1
  7686  03BE  00A1               	movwf	??_displayDigit+1
  7687  03BF  0820               	movf	??_displayDigit,w
  7688  03C0  0084               	movwf	4
  7689  03C1  1783               	bsf	3,7
  7690  03C2  1C21               	btfss	??_displayDigit+1,0
  7691  03C3  1383               	bcf	3,7
  7692  03C4  0A00               	incf	0,w
  7693  03C5  00A2               	movwf	??_displayDigit+2
  7694  03C6  3001               	movlw	1
  7695  03C7  00A3               	movwf	??_displayDigit+3
  7696  03C8  3000               	movlw	0
  7697  03C9  00A4               	movwf	??_displayDigit+4
  7698  03CA  2BCE               	goto	u2564
  7699  03CB                     u2565:	
  7700  03CB  1003               	clrc
  7701  03CC  0DA3               	rlf	??_displayDigit+3,f
  7702  03CD  0DA4               	rlf	??_displayDigit+4,f
  7703  03CE                     u2564:	
  7704  03CE  0BA2               	decfsz	??_displayDigit+2,f
  7705  03CF  2BCB               	goto	u2565
  7706  03D0  3002               	movlw	2
  7707  03D1  077B               	addwf	displayDigit@D1,w
  7708  03D2  00A5               	movwf	??_displayDigit+5
  7709  03D3  087C               	movf	displayDigit@D1+1,w
  7710  03D4  1803               	skipnc
  7711  03D5  3E01               	addlw	1
  7712  03D6  00A6               	movwf	??_displayDigit+6
  7713  03D7  0825               	movf	??_displayDigit+5,w
  7714  03D8  0084               	movwf	4
  7715  03D9  1783               	bsf	3,7
  7716  03DA  1C26               	btfss	??_displayDigit+6,0
  7717  03DB  1383               	bcf	3,7
  7718  03DC  0800               	movf	0,w
  7719  03DD  00A7               	movwf	??_displayDigit+7
  7720  03DE  0A84               	incf	4,f
  7721  03DF  0800               	movf	0,w
  7722  03E0  00A8               	movwf	??_displayDigit+8
  7723  03E1  0827               	movf	??_displayDigit+7,w
  7724  03E2  0084               	movwf	4
  7725  03E3  1783               	bsf	3,7
  7726  03E4  1C28               	btfss	??_displayDigit+8,0
  7727  03E5  1383               	bcf	3,7
  7728  03E6  0823               	movf	??_displayDigit+3,w
  7729  03E7  0480               	iorwf	0,f
  7730  03E8  0A84               	incf	4,f
  7731  03E9  0824               	movf	??_displayDigit+4,w
  7732  03EA  0480               	iorwf	0,f
  7733                           
  7734                           ;lcd.c: 160: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  7735  03EB  3012               	movlw	18
  7736  03EC  077B               	addwf	displayDigit@D1,w
  7737  03ED  00A0               	movwf	??_displayDigit
  7738  03EE  087C               	movf	displayDigit@D1+1,w
  7739  03EF  1803               	skipnc
  7740  03F0  3E01               	addlw	1
  7741  03F1  00A1               	movwf	??_displayDigit+1
  7742  03F2  0820               	movf	??_displayDigit,w
  7743  03F3  0084               	movwf	4
  7744  03F4  1783               	bsf	3,7
  7745  03F5  1C21               	btfss	??_displayDigit+1,0
  7746  03F6  1383               	bcf	3,7
  7747  03F7  0A00               	incf	0,w
  7748  03F8  00A2               	movwf	??_displayDigit+2
  7749  03F9  3001               	movlw	1
  7750  03FA  00A3               	movwf	??_displayDigit+3
  7751  03FB  3000               	movlw	0
  7752  03FC  00A4               	movwf	??_displayDigit+4
  7753  03FD  2C01               	goto	u2574
  7754  03FE                     u2575:	
  7755  03FE  1003               	clrc
  7756  03FF  0DA3               	rlf	??_displayDigit+3,f
  7757  0400  0DA4               	rlf	??_displayDigit+4,f
  7758  0401                     u2574:	
  7759  0401  0BA2               	decfsz	??_displayDigit+2,f
  7760  0402  2BFE               	goto	u2575
  7761  0403  3004               	movlw	4
  7762  0404  077B               	addwf	displayDigit@D1,w
  7763  0405  00A5               	movwf	??_displayDigit+5
  7764  0406  087C               	movf	displayDigit@D1+1,w
  7765  0407  1803               	skipnc
  7766  0408  3E01               	addlw	1
  7767  0409  00A6               	movwf	??_displayDigit+6
  7768  040A  0825               	movf	??_displayDigit+5,w
  7769  040B  0084               	movwf	4
  7770  040C  1783               	bsf	3,7
  7771  040D  1C26               	btfss	??_displayDigit+6,0
  7772  040E  1383               	bcf	3,7
  7773  040F  0800               	movf	0,w
  7774  0410  00A7               	movwf	??_displayDigit+7
  7775  0411  0A84               	incf	4,f
  7776  0412  0800               	movf	0,w
  7777  0413  00A8               	movwf	??_displayDigit+8
  7778  0414  0827               	movf	??_displayDigit+7,w
  7779  0415  0084               	movwf	4
  7780  0416  1783               	bsf	3,7
  7781  0417  1C28               	btfss	??_displayDigit+8,0
  7782  0418  1383               	bcf	3,7
  7783  0419  0823               	movf	??_displayDigit+3,w
  7784  041A  0480               	iorwf	0,f
  7785  041B  0A84               	incf	4,f
  7786  041C  0824               	movf	??_displayDigit+4,w
  7787  041D  0480               	iorwf	0,f
  7788                           
  7789                           ;lcd.c: 161: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  7790  041E  3014               	movlw	20
  7791  041F  077B               	addwf	displayDigit@D1,w
  7792  0420  00A0               	movwf	??_displayDigit
  7793  0421  087C               	movf	displayDigit@D1+1,w
  7794  0422  1803               	skipnc
  7795  0423  3E01               	addlw	1
  7796  0424  00A1               	movwf	??_displayDigit+1
  7797  0425  0820               	movf	??_displayDigit,w
  7798  0426  0084               	movwf	4
  7799  0427  1783               	bsf	3,7
  7800  0428  1C21               	btfss	??_displayDigit+1,0
  7801  0429  1383               	bcf	3,7
  7802  042A  0A00               	incf	0,w
  7803  042B  00A2               	movwf	??_displayDigit+2
  7804  042C  3001               	movlw	1
  7805  042D  00A3               	movwf	??_displayDigit+3
  7806  042E  3000               	movlw	0
  7807  042F  00A4               	movwf	??_displayDigit+4
  7808  0430  2C34               	goto	u2584
  7809  0431                     u2585:	
  7810  0431  1003               	clrc
  7811  0432  0DA3               	rlf	??_displayDigit+3,f
  7812  0433  0DA4               	rlf	??_displayDigit+4,f
  7813  0434                     u2584:	
  7814  0434  0BA2               	decfsz	??_displayDigit+2,f
  7815  0435  2C31               	goto	u2585
  7816  0436  3006               	movlw	6
  7817  0437  077B               	addwf	displayDigit@D1,w
  7818  0438  00A5               	movwf	??_displayDigit+5
  7819  0439  087C               	movf	displayDigit@D1+1,w
  7820  043A  1803               	skipnc
  7821  043B  3E01               	addlw	1
  7822  043C  00A6               	movwf	??_displayDigit+6
  7823  043D  0825               	movf	??_displayDigit+5,w
  7824  043E  0084               	movwf	4
  7825  043F  1783               	bsf	3,7
  7826  0440  1C26               	btfss	??_displayDigit+6,0
  7827  0441  1383               	bcf	3,7
  7828  0442  0800               	movf	0,w
  7829  0443  00A7               	movwf	??_displayDigit+7
  7830  0444  0A84               	incf	4,f
  7831  0445  0800               	movf	0,w
  7832  0446  00A8               	movwf	??_displayDigit+8
  7833  0447  0827               	movf	??_displayDigit+7,w
  7834  0448  0084               	movwf	4
  7835  0449  1783               	bsf	3,7
  7836  044A  1C28               	btfss	??_displayDigit+8,0
  7837  044B  1383               	bcf	3,7
  7838  044C  0823               	movf	??_displayDigit+3,w
  7839  044D  0480               	iorwf	0,f
  7840  044E  0A84               	incf	4,f
  7841  044F  0824               	movf	??_displayDigit+4,w
  7842  0450  0480               	iorwf	0,f
  7843                           
  7844                           ;lcd.c: 162: ((*D1->se) |= (1UL) << (D1->bits[4]));
  7845  0451  3016               	movlw	22
  7846  0452  077B               	addwf	displayDigit@D1,w
  7847  0453  00A0               	movwf	??_displayDigit
  7848  0454  087C               	movf	displayDigit@D1+1,w
  7849  0455  1803               	skipnc
  7850  0456  3E01               	addlw	1
  7851  0457  00A1               	movwf	??_displayDigit+1
  7852  0458  0820               	movf	??_displayDigit,w
  7853  0459  0084               	movwf	4
  7854  045A  1783               	bsf	3,7
  7855  045B  1C21               	btfss	??_displayDigit+1,0
  7856  045C  1383               	bcf	3,7
  7857  045D  0A00               	incf	0,w
  7858  045E  00A2               	movwf	??_displayDigit+2
  7859  045F  3001               	movlw	1
  7860  0460  00A3               	movwf	??_displayDigit+3
  7861  0461  3000               	movlw	0
  7862  0462  00A4               	movwf	??_displayDigit+4
  7863  0463  2C67               	goto	u2594
  7864  0464                     u2595:	
  7865  0464  1003               	clrc
  7866  0465  0DA3               	rlf	??_displayDigit+3,f
  7867  0466  0DA4               	rlf	??_displayDigit+4,f
  7868  0467                     u2594:	
  7869  0467  0BA2               	decfsz	??_displayDigit+2,f
  7870  0468  2C64               	goto	u2595
  7871  0469  3008               	movlw	8
  7872  046A  077B               	addwf	displayDigit@D1,w
  7873  046B  00A5               	movwf	??_displayDigit+5
  7874  046C  087C               	movf	displayDigit@D1+1,w
  7875  046D  1803               	skipnc
  7876  046E  3E01               	addlw	1
  7877  046F  00A6               	movwf	??_displayDigit+6
  7878  0470  0825               	movf	??_displayDigit+5,w
  7879  0471  0084               	movwf	4
  7880  0472  1783               	bsf	3,7
  7881  0473  1C26               	btfss	??_displayDigit+6,0
  7882  0474  1383               	bcf	3,7
  7883  0475  0800               	movf	0,w
  7884  0476  00A7               	movwf	??_displayDigit+7
  7885  0477  0A84               	incf	4,f
  7886  0478  0800               	movf	0,w
  7887  0479  00A8               	movwf	??_displayDigit+8
  7888  047A  0827               	movf	??_displayDigit+7,w
  7889  047B  0084               	movwf	4
  7890  047C  1783               	bsf	3,7
  7891  047D  1C28               	btfss	??_displayDigit+8,0
  7892  047E  1383               	bcf	3,7
  7893  047F  0823               	movf	??_displayDigit+3,w
  7894  0480  0480               	iorwf	0,f
  7895  0481  0A84               	incf	4,f
  7896  0482  0824               	movf	??_displayDigit+4,w
  7897  0483  0480               	iorwf	0,f
  7898                           
  7899                           ;lcd.c: 163: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  7900  0484  3018               	movlw	24
  7901  0485  077B               	addwf	displayDigit@D1,w
  7902  0486  00A0               	movwf	??_displayDigit
  7903  0487  087C               	movf	displayDigit@D1+1,w
  7904  0488  1803               	skipnc
  7905  0489  3E01               	addlw	1
  7906  048A  00A1               	movwf	??_displayDigit+1
  7907  048B  0820               	movf	??_displayDigit,w
  7908  048C  0084               	movwf	4
  7909  048D  1783               	bsf	3,7
  7910  048E  1C21               	btfss	??_displayDigit+1,0
  7911  048F  1383               	bcf	3,7
  7912  0490  0A00               	incf	0,w
  7913  0491  00A2               	movwf	??_displayDigit+2
  7914  0492  3001               	movlw	1
  7915  0493  00A3               	movwf	??_displayDigit+3
  7916  0494  3000               	movlw	0
  7917  0495  00A4               	movwf	??_displayDigit+4
  7918  0496  2C9A               	goto	u2604
  7919  0497                     u2605:	
  7920  0497  1003               	clrc
  7921  0498  0DA3               	rlf	??_displayDigit+3,f
  7922  0499  0DA4               	rlf	??_displayDigit+4,f
  7923  049A                     u2604:	
  7924  049A  0BA2               	decfsz	??_displayDigit+2,f
  7925  049B  2C97               	goto	u2605
  7926  049C  300A               	movlw	10
  7927  049D  077B               	addwf	displayDigit@D1,w
  7928  049E  00A5               	movwf	??_displayDigit+5
  7929  049F  087C               	movf	displayDigit@D1+1,w
  7930  04A0  1803               	skipnc
  7931  04A1  3E01               	addlw	1
  7932  04A2  00A6               	movwf	??_displayDigit+6
  7933  04A3  0825               	movf	??_displayDigit+5,w
  7934  04A4  0084               	movwf	4
  7935  04A5  1783               	bsf	3,7
  7936  04A6  1C26               	btfss	??_displayDigit+6,0
  7937  04A7  1383               	bcf	3,7
  7938  04A8  0800               	movf	0,w
  7939  04A9  00A7               	movwf	??_displayDigit+7
  7940  04AA  0A84               	incf	4,f
  7941  04AB  0800               	movf	0,w
  7942  04AC  00A8               	movwf	??_displayDigit+8
  7943  04AD  0827               	movf	??_displayDigit+7,w
  7944  04AE  0084               	movwf	4
  7945  04AF  1783               	bsf	3,7
  7946  04B0  1C28               	btfss	??_displayDigit+8,0
  7947  04B1  1383               	bcf	3,7
  7948  04B2  0823               	movf	??_displayDigit+3,w
  7949  04B3  0480               	iorwf	0,f
  7950  04B4  0A84               	incf	4,f
  7951  04B5  0824               	movf	??_displayDigit+4,w
  7952  04B6  0480               	iorwf	0,f
  7953                           
  7954                           ;lcd.c: 164: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  7955  04B7  301A               	movlw	26
  7956  04B8  077B               	addwf	displayDigit@D1,w
  7957  04B9  00A0               	movwf	??_displayDigit
  7958  04BA  087C               	movf	displayDigit@D1+1,w
  7959  04BB  1803               	skipnc
  7960  04BC  3E01               	addlw	1
  7961  04BD  00A1               	movwf	??_displayDigit+1
  7962  04BE  0820               	movf	??_displayDigit,w
  7963  04BF  0084               	movwf	4
  7964  04C0  1783               	bsf	3,7
  7965  04C1  1C21               	btfss	??_displayDigit+1,0
  7966  04C2  1383               	bcf	3,7
  7967  04C3  0A00               	incf	0,w
  7968  04C4  00A2               	movwf	??_displayDigit+2
  7969  04C5  3001               	movlw	1
  7970  04C6  00A3               	movwf	??_displayDigit+3
  7971  04C7  3000               	movlw	0
  7972  04C8  00A4               	movwf	??_displayDigit+4
  7973  04C9  2CCD               	goto	u2614
  7974  04CA                     u2615:	
  7975  04CA  1003               	clrc
  7976  04CB  0DA3               	rlf	??_displayDigit+3,f
  7977  04CC  0DA4               	rlf	??_displayDigit+4,f
  7978  04CD                     u2614:	
  7979  04CD  0BA2               	decfsz	??_displayDigit+2,f
  7980  04CE  2CCA               	goto	u2615
  7981  04CF  300C               	movlw	12
  7982  04D0  077B               	addwf	displayDigit@D1,w
  7983  04D1  00A5               	movwf	??_displayDigit+5
  7984  04D2  087C               	movf	displayDigit@D1+1,w
  7985  04D3  1803               	skipnc
  7986  04D4  3E01               	addlw	1
  7987  04D5  00A6               	movwf	??_displayDigit+6
  7988  04D6  0825               	movf	??_displayDigit+5,w
  7989  04D7  0084               	movwf	4
  7990  04D8  1783               	bsf	3,7
  7991  04D9  1C26               	btfss	??_displayDigit+6,0
  7992  04DA  1383               	bcf	3,7
  7993  04DB  0800               	movf	0,w
  7994  04DC  00A7               	movwf	??_displayDigit+7
  7995  04DD  0A84               	incf	4,f
  7996  04DE  0800               	movf	0,w
  7997  04DF  00A8               	movwf	??_displayDigit+8
  7998  04E0  0827               	movf	??_displayDigit+7,w
  7999  04E1  0084               	movwf	4
  8000  04E2  1783               	bsf	3,7
  8001  04E3  1C28               	btfss	??_displayDigit+8,0
  8002  04E4  1383               	bcf	3,7
  8003  04E5  0823               	movf	??_displayDigit+3,w
  8004  04E6  0480               	iorwf	0,f
  8005  04E7  0A84               	incf	4,f
  8006  04E8  0824               	movf	??_displayDigit+4,w
  8007  04E9  0480               	iorwf	0,f
  8008                           
  8009                           ;lcd.c: 165: break;
  8010  04EA  0008               	return
  8011  04EB                     l1345:	
  8012                           ;lcd.c: 166: case 9:
  8013                           
  8014                           
  8015                           ;lcd.c: 167: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  8016  04EB  300E               	movlw	14
  8017  04EC  077B               	addwf	displayDigit@D1,w
  8018  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  8019  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  8020  04EF  00A0               	movwf	??_displayDigit
  8021  04F0  087C               	movf	displayDigit@D1+1,w
  8022  04F1  1803               	skipnc
  8023  04F2  3E01               	addlw	1
  8024  04F3  00A1               	movwf	??_displayDigit+1
  8025  04F4  0820               	movf	??_displayDigit,w
  8026  04F5  0084               	movwf	4
  8027  04F6  1783               	bsf	3,7
  8028  04F7  1C21               	btfss	??_displayDigit+1,0
  8029  04F8  1383               	bcf	3,7
  8030  04F9  0A00               	incf	0,w
  8031  04FA  00A2               	movwf	??_displayDigit+2
  8032  04FB  3001               	movlw	1
  8033  04FC  00A3               	movwf	??_displayDigit+3
  8034  04FD  3000               	movlw	0
  8035  04FE  00A4               	movwf	??_displayDigit+4
  8036  04FF  2D03               	goto	u2624
  8037  0500                     u2625:	
  8038  0500  1003               	clrc
  8039  0501  0DA3               	rlf	??_displayDigit+3,f
  8040  0502  0DA4               	rlf	??_displayDigit+4,f
  8041  0503                     u2624:	
  8042  0503  0BA2               	decfsz	??_displayDigit+2,f
  8043  0504  2D00               	goto	u2625
  8044  0505  087B               	movf	displayDigit@D1,w
  8045  0506  0084               	movwf	4
  8046  0507  1783               	bsf	3,7
  8047  0508  1C7C               	btfss	displayDigit@D1+1,0
  8048  0509  1383               	bcf	3,7
  8049  050A  0800               	movf	0,w
  8050  050B  00A5               	movwf	??_displayDigit+5
  8051  050C  0A84               	incf	4,f
  8052  050D  0800               	movf	0,w
  8053  050E  00A6               	movwf	??_displayDigit+6
  8054  050F  0825               	movf	??_displayDigit+5,w
  8055  0510  0084               	movwf	4
  8056  0511  1783               	bsf	3,7
  8057  0512  1C26               	btfss	??_displayDigit+6,0
  8058  0513  1383               	bcf	3,7
  8059  0514  0823               	movf	??_displayDigit+3,w
  8060  0515  0480               	iorwf	0,f
  8061  0516  0A84               	incf	4,f
  8062  0517  0824               	movf	??_displayDigit+4,w
  8063  0518  0480               	iorwf	0,f
  8064                           
  8065                           ;lcd.c: 168: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  8066  0519  3010               	movlw	16
  8067  051A  077B               	addwf	displayDigit@D1,w
  8068  051B  00A0               	movwf	??_displayDigit
  8069  051C  087C               	movf	displayDigit@D1+1,w
  8070  051D  1803               	skipnc
  8071  051E  3E01               	addlw	1
  8072  051F  00A1               	movwf	??_displayDigit+1
  8073  0520  0820               	movf	??_displayDigit,w
  8074  0521  0084               	movwf	4
  8075  0522  1783               	bsf	3,7
  8076  0523  1C21               	btfss	??_displayDigit+1,0
  8077  0524  1383               	bcf	3,7
  8078  0525  0A00               	incf	0,w
  8079  0526  00A2               	movwf	??_displayDigit+2
  8080  0527  3001               	movlw	1
  8081  0528  00A3               	movwf	??_displayDigit+3
  8082  0529  3000               	movlw	0
  8083  052A  00A4               	movwf	??_displayDigit+4
  8084  052B  2D2F               	goto	u2634
  8085  052C                     u2635:	
  8086  052C  1003               	clrc
  8087  052D  0DA3               	rlf	??_displayDigit+3,f
  8088  052E  0DA4               	rlf	??_displayDigit+4,f
  8089  052F                     u2634:	
  8090  052F  0BA2               	decfsz	??_displayDigit+2,f
  8091  0530  2D2C               	goto	u2635
  8092  0531  3002               	movlw	2
  8093  0532  077B               	addwf	displayDigit@D1,w
  8094  0533  00A5               	movwf	??_displayDigit+5
  8095  0534  087C               	movf	displayDigit@D1+1,w
  8096  0535  1803               	skipnc
  8097  0536  3E01               	addlw	1
  8098  0537  00A6               	movwf	??_displayDigit+6
  8099  0538  0825               	movf	??_displayDigit+5,w
  8100  0539  0084               	movwf	4
  8101  053A  1783               	bsf	3,7
  8102  053B  1C26               	btfss	??_displayDigit+6,0
  8103  053C  1383               	bcf	3,7
  8104  053D  0800               	movf	0,w
  8105  053E  00A7               	movwf	??_displayDigit+7
  8106  053F  0A84               	incf	4,f
  8107  0540  0800               	movf	0,w
  8108  0541  00A8               	movwf	??_displayDigit+8
  8109  0542  0827               	movf	??_displayDigit+7,w
  8110  0543  0084               	movwf	4
  8111  0544  1783               	bsf	3,7
  8112  0545  1C28               	btfss	??_displayDigit+8,0
  8113  0546  1383               	bcf	3,7
  8114  0547  0823               	movf	??_displayDigit+3,w
  8115  0548  0480               	iorwf	0,f
  8116  0549  0A84               	incf	4,f
  8117  054A  0824               	movf	??_displayDigit+4,w
  8118  054B  0480               	iorwf	0,f
  8119                           
  8120                           ;lcd.c: 169: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  8121  054C  3012               	movlw	18
  8122  054D  077B               	addwf	displayDigit@D1,w
  8123  054E  00A0               	movwf	??_displayDigit
  8124  054F  087C               	movf	displayDigit@D1+1,w
  8125  0550  1803               	skipnc
  8126  0551  3E01               	addlw	1
  8127  0552  00A1               	movwf	??_displayDigit+1
  8128  0553  0820               	movf	??_displayDigit,w
  8129  0554  0084               	movwf	4
  8130  0555  1783               	bsf	3,7
  8131  0556  1C21               	btfss	??_displayDigit+1,0
  8132  0557  1383               	bcf	3,7
  8133  0558  0A00               	incf	0,w
  8134  0559  00A2               	movwf	??_displayDigit+2
  8135  055A  3001               	movlw	1
  8136  055B  00A3               	movwf	??_displayDigit+3
  8137  055C  3000               	movlw	0
  8138  055D  00A4               	movwf	??_displayDigit+4
  8139  055E  2D62               	goto	u2644
  8140  055F                     u2645:	
  8141  055F  1003               	clrc
  8142  0560  0DA3               	rlf	??_displayDigit+3,f
  8143  0561  0DA4               	rlf	??_displayDigit+4,f
  8144  0562                     u2644:	
  8145  0562  0BA2               	decfsz	??_displayDigit+2,f
  8146  0563  2D5F               	goto	u2645
  8147  0564  3004               	movlw	4
  8148  0565  077B               	addwf	displayDigit@D1,w
  8149  0566  00A5               	movwf	??_displayDigit+5
  8150  0567  087C               	movf	displayDigit@D1+1,w
  8151  0568  1803               	skipnc
  8152  0569  3E01               	addlw	1
  8153  056A  00A6               	movwf	??_displayDigit+6
  8154  056B  0825               	movf	??_displayDigit+5,w
  8155  056C  0084               	movwf	4
  8156  056D  1783               	bsf	3,7
  8157  056E  1C26               	btfss	??_displayDigit+6,0
  8158  056F  1383               	bcf	3,7
  8159  0570  0800               	movf	0,w
  8160  0571  00A7               	movwf	??_displayDigit+7
  8161  0572  0A84               	incf	4,f
  8162  0573  0800               	movf	0,w
  8163  0574  00A8               	movwf	??_displayDigit+8
  8164  0575  0827               	movf	??_displayDigit+7,w
  8165  0576  0084               	movwf	4
  8166  0577  1783               	bsf	3,7
  8167  0578  1C28               	btfss	??_displayDigit+8,0
  8168  0579  1383               	bcf	3,7
  8169  057A  0823               	movf	??_displayDigit+3,w
  8170  057B  0480               	iorwf	0,f
  8171  057C  0A84               	incf	4,f
  8172  057D  0824               	movf	??_displayDigit+4,w
  8173  057E  0480               	iorwf	0,f
  8174                           
  8175                           ;lcd.c: 170: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  8176  057F  3014               	movlw	20
  8177  0580  077B               	addwf	displayDigit@D1,w
  8178  0581  00A0               	movwf	??_displayDigit
  8179  0582  087C               	movf	displayDigit@D1+1,w
  8180  0583  1803               	skipnc
  8181  0584  3E01               	addlw	1
  8182  0585  00A1               	movwf	??_displayDigit+1
  8183  0586  0820               	movf	??_displayDigit,w
  8184  0587  0084               	movwf	4
  8185  0588  1783               	bsf	3,7
  8186  0589  1C21               	btfss	??_displayDigit+1,0
  8187  058A  1383               	bcf	3,7
  8188  058B  0A00               	incf	0,w
  8189  058C  00A2               	movwf	??_displayDigit+2
  8190  058D  3001               	movlw	1
  8191  058E  00A3               	movwf	??_displayDigit+3
  8192  058F  3000               	movlw	0
  8193  0590  00A4               	movwf	??_displayDigit+4
  8194  0591  2D95               	goto	u2654
  8195  0592                     u2655:	
  8196  0592  1003               	clrc
  8197  0593  0DA3               	rlf	??_displayDigit+3,f
  8198  0594  0DA4               	rlf	??_displayDigit+4,f
  8199  0595                     u2654:	
  8200  0595  0BA2               	decfsz	??_displayDigit+2,f
  8201  0596  2D92               	goto	u2655
  8202  0597  3006               	movlw	6
  8203  0598  077B               	addwf	displayDigit@D1,w
  8204  0599  00A5               	movwf	??_displayDigit+5
  8205  059A  087C               	movf	displayDigit@D1+1,w
  8206  059B  1803               	skipnc
  8207  059C  3E01               	addlw	1
  8208  059D  00A6               	movwf	??_displayDigit+6
  8209  059E  0825               	movf	??_displayDigit+5,w
  8210  059F  0084               	movwf	4
  8211  05A0  1783               	bsf	3,7
  8212  05A1  1C26               	btfss	??_displayDigit+6,0
  8213  05A2  1383               	bcf	3,7
  8214  05A3  0800               	movf	0,w
  8215  05A4  00A7               	movwf	??_displayDigit+7
  8216  05A5  0A84               	incf	4,f
  8217  05A6  0800               	movf	0,w
  8218  05A7  00A8               	movwf	??_displayDigit+8
  8219  05A8  0827               	movf	??_displayDigit+7,w
  8220  05A9  0084               	movwf	4
  8221  05AA  1783               	bsf	3,7
  8222  05AB  1C28               	btfss	??_displayDigit+8,0
  8223  05AC  1383               	bcf	3,7
  8224  05AD  0823               	movf	??_displayDigit+3,w
  8225  05AE  0480               	iorwf	0,f
  8226  05AF  0A84               	incf	4,f
  8227  05B0  0824               	movf	??_displayDigit+4,w
  8228  05B1  0480               	iorwf	0,f
  8229                           
  8230                           ;lcd.c: 171: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  8231  05B2  3016               	movlw	22
  8232  05B3  077B               	addwf	displayDigit@D1,w
  8233  05B4  00A0               	movwf	??_displayDigit
  8234  05B5  087C               	movf	displayDigit@D1+1,w
  8235  05B6  1803               	skipnc
  8236  05B7  3E01               	addlw	1
  8237  05B8  00A1               	movwf	??_displayDigit+1
  8238  05B9  0820               	movf	??_displayDigit,w
  8239  05BA  0084               	movwf	4
  8240  05BB  1783               	bsf	3,7
  8241  05BC  1C21               	btfss	??_displayDigit+1,0
  8242  05BD  1383               	bcf	3,7
  8243  05BE  0A00               	incf	0,w
  8244  05BF  00A2               	movwf	??_displayDigit+2
  8245  05C0  3001               	movlw	1
  8246  05C1  00A3               	movwf	??_displayDigit+3
  8247  05C2  3000               	movlw	0
  8248  05C3  00A4               	movwf	??_displayDigit+4
  8249  05C4  2DC8               	goto	u2664
  8250  05C5                     u2665:	
  8251  05C5  1003               	clrc
  8252  05C6  0DA3               	rlf	??_displayDigit+3,f
  8253  05C7  0DA4               	rlf	??_displayDigit+4,f
  8254  05C8                     u2664:	
  8255  05C8  0BA2               	decfsz	??_displayDigit+2,f
  8256  05C9  2DC5               	goto	u2665
  8257  05CA  09A3               	comf	??_displayDigit+3,f
  8258  05CB  09A4               	comf	??_displayDigit+4,f
  8259  05CC  3008               	movlw	8
  8260  05CD  077B               	addwf	displayDigit@D1,w
  8261  05CE  00A5               	movwf	??_displayDigit+5
  8262  05CF  087C               	movf	displayDigit@D1+1,w
  8263  05D0  1803               	skipnc
  8264  05D1  3E01               	addlw	1
  8265  05D2  00A6               	movwf	??_displayDigit+6
  8266  05D3  0825               	movf	??_displayDigit+5,w
  8267  05D4  0084               	movwf	4
  8268  05D5  1783               	bsf	3,7
  8269  05D6  1C26               	btfss	??_displayDigit+6,0
  8270  05D7  1383               	bcf	3,7
  8271  05D8  0800               	movf	0,w
  8272  05D9  00A7               	movwf	??_displayDigit+7
  8273  05DA  0A84               	incf	4,f
  8274  05DB  0800               	movf	0,w
  8275  05DC  00A8               	movwf	??_displayDigit+8
  8276  05DD  0827               	movf	??_displayDigit+7,w
  8277  05DE  0084               	movwf	4
  8278  05DF  1783               	bsf	3,7
  8279  05E0  1C28               	btfss	??_displayDigit+8,0
  8280  05E1  1383               	bcf	3,7
  8281  05E2  0823               	movf	??_displayDigit+3,w
  8282  05E3  0580               	andwf	0,f
  8283  05E4  0A84               	incf	4,f
  8284  05E5  0824               	movf	??_displayDigit+4,w
  8285  05E6  0580               	andwf	0,f
  8286                           
  8287                           ;lcd.c: 172: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  8288  05E7  3018               	movlw	24
  8289  05E8  077B               	addwf	displayDigit@D1,w
  8290  05E9  00A0               	movwf	??_displayDigit
  8291  05EA  087C               	movf	displayDigit@D1+1,w
  8292  05EB  1803               	skipnc
  8293  05EC  3E01               	addlw	1
  8294  05ED  00A1               	movwf	??_displayDigit+1
  8295  05EE  0820               	movf	??_displayDigit,w
  8296  05EF  0084               	movwf	4
  8297  05F0  1783               	bsf	3,7
  8298  05F1  1C21               	btfss	??_displayDigit+1,0
  8299  05F2  1383               	bcf	3,7
  8300  05F3  0A00               	incf	0,w
  8301  05F4  00A2               	movwf	??_displayDigit+2
  8302  05F5  3001               	movlw	1
  8303  05F6  00A3               	movwf	??_displayDigit+3
  8304  05F7  3000               	movlw	0
  8305  05F8  00A4               	movwf	??_displayDigit+4
  8306  05F9  2DFD               	goto	u2674
  8307  05FA                     u2675:	
  8308  05FA  1003               	clrc
  8309  05FB  0DA3               	rlf	??_displayDigit+3,f
  8310  05FC  0DA4               	rlf	??_displayDigit+4,f
  8311  05FD                     u2674:	
  8312  05FD  0BA2               	decfsz	??_displayDigit+2,f
  8313  05FE  2DFA               	goto	u2675
  8314  05FF  300A               	movlw	10
  8315  0600  077B               	addwf	displayDigit@D1,w
  8316  0601  00A5               	movwf	??_displayDigit+5
  8317  0602  087C               	movf	displayDigit@D1+1,w
  8318  0603  1803               	skipnc
  8319  0604  3E01               	addlw	1
  8320  0605  00A6               	movwf	??_displayDigit+6
  8321  0606  0825               	movf	??_displayDigit+5,w
  8322  0607  0084               	movwf	4
  8323  0608  1783               	bsf	3,7
  8324  0609  1C26               	btfss	??_displayDigit+6,0
  8325  060A  1383               	bcf	3,7
  8326  060B  0800               	movf	0,w
  8327  060C  00A7               	movwf	??_displayDigit+7
  8328  060D  0A84               	incf	4,f
  8329  060E  0800               	movf	0,w
  8330  060F  00A8               	movwf	??_displayDigit+8
  8331  0610  0827               	movf	??_displayDigit+7,w
  8332  0611  0084               	movwf	4
  8333  0612  1783               	bsf	3,7
  8334  0613  1C28               	btfss	??_displayDigit+8,0
  8335  0614  1383               	bcf	3,7
  8336  0615  0823               	movf	??_displayDigit+3,w
  8337  0616  0480               	iorwf	0,f
  8338  0617  0A84               	incf	4,f
  8339  0618  0824               	movf	??_displayDigit+4,w
  8340  0619  0480               	iorwf	0,f
  8341                           
  8342                           ;lcd.c: 173: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  8343  061A  301A               	movlw	26
  8344  061B  077B               	addwf	displayDigit@D1,w
  8345  061C  00A0               	movwf	??_displayDigit
  8346  061D  087C               	movf	displayDigit@D1+1,w
  8347  061E  1803               	skipnc
  8348  061F  3E01               	addlw	1
  8349  0620  00A1               	movwf	??_displayDigit+1
  8350  0621  0820               	movf	??_displayDigit,w
  8351  0622  0084               	movwf	4
  8352  0623  1783               	bsf	3,7
  8353  0624  1C21               	btfss	??_displayDigit+1,0
  8354  0625  1383               	bcf	3,7
  8355  0626  0A00               	incf	0,w
  8356  0627  00A2               	movwf	??_displayDigit+2
  8357  0628  3001               	movlw	1
  8358  0629  00A3               	movwf	??_displayDigit+3
  8359  062A  3000               	movlw	0
  8360  062B  00A4               	movwf	??_displayDigit+4
  8361  062C  2E30               	goto	u2684
  8362  062D                     u2685:	
  8363  062D  1003               	clrc
  8364  062E  0DA3               	rlf	??_displayDigit+3,f
  8365  062F  0DA4               	rlf	??_displayDigit+4,f
  8366  0630                     u2684:	
  8367  0630  0BA2               	decfsz	??_displayDigit+2,f
  8368  0631  2E2D               	goto	u2685
  8369  0632  300C               	movlw	12
  8370  0633  077B               	addwf	displayDigit@D1,w
  8371  0634  00A5               	movwf	??_displayDigit+5
  8372  0635  087C               	movf	displayDigit@D1+1,w
  8373  0636  1803               	skipnc
  8374  0637  3E01               	addlw	1
  8375  0638  00A6               	movwf	??_displayDigit+6
  8376  0639  0825               	movf	??_displayDigit+5,w
  8377  063A  0084               	movwf	4
  8378  063B  1783               	bsf	3,7
  8379  063C  1C26               	btfss	??_displayDigit+6,0
  8380  063D  1383               	bcf	3,7
  8381  063E  0800               	movf	0,w
  8382  063F  00A7               	movwf	??_displayDigit+7
  8383  0640  0A84               	incf	4,f
  8384  0641  0800               	movf	0,w
  8385  0642  00A8               	movwf	??_displayDigit+8
  8386  0643  0827               	movf	??_displayDigit+7,w
  8387  0644  0084               	movwf	4
  8388  0645  1783               	bsf	3,7
  8389  0646  1C28               	btfss	??_displayDigit+8,0
  8390  0647  1383               	bcf	3,7
  8391  0648  0823               	movf	??_displayDigit+3,w
  8392  0649  0480               	iorwf	0,f
  8393  064A  0A84               	incf	4,f
  8394  064B  0824               	movf	??_displayDigit+4,w
  8395  064C  0480               	iorwf	0,f
  8396                           
  8397                           ;lcd.c: 174: break;
  8398  064D  0008               	return
  8399  064E                     l1347:	
  8400                           ;lcd.c: 175: case 'C':
  8401                           
  8402                           
  8403                           ;lcd.c: 176: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  8404  064E  300E               	movlw	14
  8405  064F  077B               	addwf	displayDigit@D1,w
  8406  0650  1283               	bcf	3,5	;RP0=0, select bank0
  8407  0651  1303               	bcf	3,6	;RP1=0, select bank0
  8408  0652  00A0               	movwf	??_displayDigit
  8409  0653  087C               	movf	displayDigit@D1+1,w
  8410  0654  1803               	skipnc
  8411  0655  3E01               	addlw	1
  8412  0656  00A1               	movwf	??_displayDigit+1
  8413  0657  0820               	movf	??_displayDigit,w
  8414  0658  0084               	movwf	4
  8415  0659  1783               	bsf	3,7
  8416  065A  1C21               	btfss	??_displayDigit+1,0
  8417  065B  1383               	bcf	3,7
  8418  065C  0A00               	incf	0,w
  8419  065D  00A2               	movwf	??_displayDigit+2
  8420  065E  3001               	movlw	1
  8421  065F  00A3               	movwf	??_displayDigit+3
  8422  0660  3000               	movlw	0
  8423  0661  00A4               	movwf	??_displayDigit+4
  8424  0662  2E66               	goto	u2694
  8425  0663                     u2695:	
  8426  0663  1003               	clrc
  8427  0664  0DA3               	rlf	??_displayDigit+3,f
  8428  0665  0DA4               	rlf	??_displayDigit+4,f
  8429  0666                     u2694:	
  8430  0666  0BA2               	decfsz	??_displayDigit+2,f
  8431  0667  2E63               	goto	u2695
  8432  0668  087B               	movf	displayDigit@D1,w
  8433  0669  0084               	movwf	4
  8434  066A  1783               	bsf	3,7
  8435  066B  1C7C               	btfss	displayDigit@D1+1,0
  8436  066C  1383               	bcf	3,7
  8437  066D  0800               	movf	0,w
  8438  066E  00A5               	movwf	??_displayDigit+5
  8439  066F  0A84               	incf	4,f
  8440  0670  0800               	movf	0,w
  8441  0671  00A6               	movwf	??_displayDigit+6
  8442  0672  0825               	movf	??_displayDigit+5,w
  8443  0673  0084               	movwf	4
  8444  0674  1783               	bsf	3,7
  8445  0675  1C26               	btfss	??_displayDigit+6,0
  8446  0676  1383               	bcf	3,7
  8447  0677  0823               	movf	??_displayDigit+3,w
  8448  0678  0480               	iorwf	0,f
  8449  0679  0A84               	incf	4,f
  8450  067A  0824               	movf	??_displayDigit+4,w
  8451  067B  0480               	iorwf	0,f
  8452                           
  8453                           ;lcd.c: 177: ((*D1->sb) &= ~((1UL) << (D1->bits[1])));
  8454  067C  3010               	movlw	16
  8455  067D  077B               	addwf	displayDigit@D1,w
  8456  067E  00A0               	movwf	??_displayDigit
  8457  067F  087C               	movf	displayDigit@D1+1,w
  8458  0680  1803               	skipnc
  8459  0681  3E01               	addlw	1
  8460  0682  00A1               	movwf	??_displayDigit+1
  8461  0683  0820               	movf	??_displayDigit,w
  8462  0684  0084               	movwf	4
  8463  0685  1783               	bsf	3,7
  8464  0686  1C21               	btfss	??_displayDigit+1,0
  8465  0687  1383               	bcf	3,7
  8466  0688  0A00               	incf	0,w
  8467  0689  00A2               	movwf	??_displayDigit+2
  8468  068A  3001               	movlw	1
  8469  068B  00A3               	movwf	??_displayDigit+3
  8470  068C  3000               	movlw	0
  8471  068D  00A4               	movwf	??_displayDigit+4
  8472  068E  2E92               	goto	u2704
  8473  068F                     u2705:	
  8474  068F  1003               	clrc
  8475  0690  0DA3               	rlf	??_displayDigit+3,f
  8476  0691  0DA4               	rlf	??_displayDigit+4,f
  8477  0692                     u2704:	
  8478  0692  0BA2               	decfsz	??_displayDigit+2,f
  8479  0693  2E8F               	goto	u2705
  8480  0694  09A3               	comf	??_displayDigit+3,f
  8481  0695  09A4               	comf	??_displayDigit+4,f
  8482  0696  3002               	movlw	2
  8483  0697  077B               	addwf	displayDigit@D1,w
  8484  0698  00A5               	movwf	??_displayDigit+5
  8485  0699  087C               	movf	displayDigit@D1+1,w
  8486  069A  1803               	skipnc
  8487  069B  3E01               	addlw	1
  8488  069C  00A6               	movwf	??_displayDigit+6
  8489  069D  0825               	movf	??_displayDigit+5,w
  8490  069E  0084               	movwf	4
  8491  069F  1783               	bsf	3,7
  8492  06A0  1C26               	btfss	??_displayDigit+6,0
  8493  06A1  1383               	bcf	3,7
  8494  06A2  0800               	movf	0,w
  8495  06A3  00A7               	movwf	??_displayDigit+7
  8496  06A4  0A84               	incf	4,f
  8497  06A5  0800               	movf	0,w
  8498  06A6  00A8               	movwf	??_displayDigit+8
  8499  06A7  0827               	movf	??_displayDigit+7,w
  8500  06A8  0084               	movwf	4
  8501  06A9  1783               	bsf	3,7
  8502  06AA  1C28               	btfss	??_displayDigit+8,0
  8503  06AB  1383               	bcf	3,7
  8504  06AC  0823               	movf	??_displayDigit+3,w
  8505  06AD  0580               	andwf	0,f
  8506  06AE  0A84               	incf	4,f
  8507  06AF  0824               	movf	??_displayDigit+4,w
  8508  06B0  0580               	andwf	0,f
  8509                           
  8510                           ;lcd.c: 178: ((*D1->sc) &= ~((1UL) << (D1->bits[2])));
  8511  06B1  3012               	movlw	18
  8512  06B2  077B               	addwf	displayDigit@D1,w
  8513  06B3  00A0               	movwf	??_displayDigit
  8514  06B4  087C               	movf	displayDigit@D1+1,w
  8515  06B5  1803               	skipnc
  8516  06B6  3E01               	addlw	1
  8517  06B7  00A1               	movwf	??_displayDigit+1
  8518  06B8  0820               	movf	??_displayDigit,w
  8519  06B9  0084               	movwf	4
  8520  06BA  1783               	bsf	3,7
  8521  06BB  1C21               	btfss	??_displayDigit+1,0
  8522  06BC  1383               	bcf	3,7
  8523  06BD  0A00               	incf	0,w
  8524  06BE  00A2               	movwf	??_displayDigit+2
  8525  06BF  3001               	movlw	1
  8526  06C0  00A3               	movwf	??_displayDigit+3
  8527  06C1  3000               	movlw	0
  8528  06C2  00A4               	movwf	??_displayDigit+4
  8529  06C3  2EC7               	goto	u2714
  8530  06C4                     u2715:	
  8531  06C4  1003               	clrc
  8532  06C5  0DA3               	rlf	??_displayDigit+3,f
  8533  06C6  0DA4               	rlf	??_displayDigit+4,f
  8534  06C7                     u2714:	
  8535  06C7  0BA2               	decfsz	??_displayDigit+2,f
  8536  06C8  2EC4               	goto	u2715
  8537  06C9  09A3               	comf	??_displayDigit+3,f
  8538  06CA  09A4               	comf	??_displayDigit+4,f
  8539  06CB  3004               	movlw	4
  8540  06CC  077B               	addwf	displayDigit@D1,w
  8541  06CD  00A5               	movwf	??_displayDigit+5
  8542  06CE  087C               	movf	displayDigit@D1+1,w
  8543  06CF  1803               	skipnc
  8544  06D0  3E01               	addlw	1
  8545  06D1  00A6               	movwf	??_displayDigit+6
  8546  06D2  0825               	movf	??_displayDigit+5,w
  8547  06D3  0084               	movwf	4
  8548  06D4  1783               	bsf	3,7
  8549  06D5  1C26               	btfss	??_displayDigit+6,0
  8550  06D6  1383               	bcf	3,7
  8551  06D7  0800               	movf	0,w
  8552  06D8  00A7               	movwf	??_displayDigit+7
  8553  06D9  0A84               	incf	4,f
  8554  06DA  0800               	movf	0,w
  8555  06DB  00A8               	movwf	??_displayDigit+8
  8556  06DC  0827               	movf	??_displayDigit+7,w
  8557  06DD  0084               	movwf	4
  8558  06DE  1783               	bsf	3,7
  8559  06DF  1C28               	btfss	??_displayDigit+8,0
  8560  06E0  1383               	bcf	3,7
  8561  06E1  0823               	movf	??_displayDigit+3,w
  8562  06E2  0580               	andwf	0,f
  8563  06E3  0A84               	incf	4,f
  8564  06E4  0824               	movf	??_displayDigit+4,w
  8565  06E5  0580               	andwf	0,f
  8566                           
  8567                           ;lcd.c: 179: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  8568  06E6  3014               	movlw	20
  8569  06E7  077B               	addwf	displayDigit@D1,w
  8570  06E8  00A0               	movwf	??_displayDigit
  8571  06E9  087C               	movf	displayDigit@D1+1,w
  8572  06EA  1803               	skipnc
  8573  06EB  3E01               	addlw	1
  8574  06EC  00A1               	movwf	??_displayDigit+1
  8575  06ED  0820               	movf	??_displayDigit,w
  8576  06EE  0084               	movwf	4
  8577  06EF  1783               	bsf	3,7
  8578  06F0  1C21               	btfss	??_displayDigit+1,0
  8579  06F1  1383               	bcf	3,7
  8580  06F2  0A00               	incf	0,w
  8581  06F3  00A2               	movwf	??_displayDigit+2
  8582  06F4  3001               	movlw	1
  8583  06F5  00A3               	movwf	??_displayDigit+3
  8584  06F6  3000               	movlw	0
  8585  06F7  00A4               	movwf	??_displayDigit+4
  8586  06F8  2EFC               	goto	u2724
  8587  06F9                     u2725:	
  8588  06F9  1003               	clrc
  8589  06FA  0DA3               	rlf	??_displayDigit+3,f
  8590  06FB  0DA4               	rlf	??_displayDigit+4,f
  8591  06FC                     u2724:	
  8592  06FC  0BA2               	decfsz	??_displayDigit+2,f
  8593  06FD  2EF9               	goto	u2725
  8594  06FE  3006               	movlw	6
  8595  06FF  077B               	addwf	displayDigit@D1,w
  8596  0700  00A5               	movwf	??_displayDigit+5
  8597  0701  087C               	movf	displayDigit@D1+1,w
  8598  0702  1803               	skipnc
  8599  0703  3E01               	addlw	1
  8600  0704  00A6               	movwf	??_displayDigit+6
  8601  0705  0825               	movf	??_displayDigit+5,w
  8602  0706  0084               	movwf	4
  8603  0707  1783               	bsf	3,7
  8604  0708  1C26               	btfss	??_displayDigit+6,0
  8605  0709  1383               	bcf	3,7
  8606  070A  0800               	movf	0,w
  8607  070B  00A7               	movwf	??_displayDigit+7
  8608  070C  0A84               	incf	4,f
  8609  070D  0800               	movf	0,w
  8610  070E  00A8               	movwf	??_displayDigit+8
  8611  070F  0827               	movf	??_displayDigit+7,w
  8612  0710  0084               	movwf	4
  8613  0711  1783               	bsf	3,7
  8614  0712  1C28               	btfss	??_displayDigit+8,0
  8615  0713  1383               	bcf	3,7
  8616  0714  0823               	movf	??_displayDigit+3,w
  8617  0715  0480               	iorwf	0,f
  8618  0716  0A84               	incf	4,f
  8619  0717  0824               	movf	??_displayDigit+4,w
  8620  0718  0480               	iorwf	0,f
  8621                           
  8622                           ;lcd.c: 180: ((*D1->se) |= (1UL) << (D1->bits[4]));
  8623  0719  3016               	movlw	22
  8624  071A  077B               	addwf	displayDigit@D1,w
  8625  071B  00A0               	movwf	??_displayDigit
  8626  071C  087C               	movf	displayDigit@D1+1,w
  8627  071D  1803               	skipnc
  8628  071E  3E01               	addlw	1
  8629  071F  00A1               	movwf	??_displayDigit+1
  8630  0720  0820               	movf	??_displayDigit,w
  8631  0721  0084               	movwf	4
  8632  0722  1783               	bsf	3,7
  8633  0723  1C21               	btfss	??_displayDigit+1,0
  8634  0724  1383               	bcf	3,7
  8635  0725  0A00               	incf	0,w
  8636  0726  00A2               	movwf	??_displayDigit+2
  8637  0727  3001               	movlw	1
  8638  0728  00A3               	movwf	??_displayDigit+3
  8639  0729  3000               	movlw	0
  8640  072A  00A4               	movwf	??_displayDigit+4
  8641  072B  2F2F               	goto	u2734
  8642  072C                     u2735:	
  8643  072C  1003               	clrc
  8644  072D  0DA3               	rlf	??_displayDigit+3,f
  8645  072E  0DA4               	rlf	??_displayDigit+4,f
  8646  072F                     u2734:	
  8647  072F  0BA2               	decfsz	??_displayDigit+2,f
  8648  0730  2F2C               	goto	u2735
  8649  0731  3008               	movlw	8
  8650  0732  077B               	addwf	displayDigit@D1,w
  8651  0733  00A5               	movwf	??_displayDigit+5
  8652  0734  087C               	movf	displayDigit@D1+1,w
  8653  0735  1803               	skipnc
  8654  0736  3E01               	addlw	1
  8655  0737  00A6               	movwf	??_displayDigit+6
  8656  0738  0825               	movf	??_displayDigit+5,w
  8657  0739  0084               	movwf	4
  8658  073A  1783               	bsf	3,7
  8659  073B  1C26               	btfss	??_displayDigit+6,0
  8660  073C  1383               	bcf	3,7
  8661  073D  0800               	movf	0,w
  8662  073E  00A7               	movwf	??_displayDigit+7
  8663  073F  0A84               	incf	4,f
  8664  0740  0800               	movf	0,w
  8665  0741  00A8               	movwf	??_displayDigit+8
  8666  0742  0827               	movf	??_displayDigit+7,w
  8667  0743  0084               	movwf	4
  8668  0744  1783               	bsf	3,7
  8669  0745  1C28               	btfss	??_displayDigit+8,0
  8670  0746  1383               	bcf	3,7
  8671  0747  0823               	movf	??_displayDigit+3,w
  8672  0748  0480               	iorwf	0,f
  8673  0749  0A84               	incf	4,f
  8674  074A  0824               	movf	??_displayDigit+4,w
  8675  074B  0480               	iorwf	0,f
  8676                           
  8677                           ;lcd.c: 181: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  8678  074C  3018               	movlw	24
  8679  074D  077B               	addwf	displayDigit@D1,w
  8680  074E  00A0               	movwf	??_displayDigit
  8681  074F  087C               	movf	displayDigit@D1+1,w
  8682  0750  1803               	skipnc
  8683  0751  3E01               	addlw	1
  8684  0752  00A1               	movwf	??_displayDigit+1
  8685  0753  0820               	movf	??_displayDigit,w
  8686  0754  0084               	movwf	4
  8687  0755  1783               	bsf	3,7
  8688  0756  1C21               	btfss	??_displayDigit+1,0
  8689  0757  1383               	bcf	3,7
  8690  0758  0A00               	incf	0,w
  8691  0759  00A2               	movwf	??_displayDigit+2
  8692  075A  3001               	movlw	1
  8693  075B  00A3               	movwf	??_displayDigit+3
  8694  075C  3000               	movlw	0
  8695  075D  00A4               	movwf	??_displayDigit+4
  8696  075E  2F62               	goto	u2744
  8697  075F                     u2745:	
  8698  075F  1003               	clrc
  8699  0760  0DA3               	rlf	??_displayDigit+3,f
  8700  0761  0DA4               	rlf	??_displayDigit+4,f
  8701  0762                     u2744:	
  8702  0762  0BA2               	decfsz	??_displayDigit+2,f
  8703  0763  2F5F               	goto	u2745
  8704  0764  300A               	movlw	10
  8705  0765  077B               	addwf	displayDigit@D1,w
  8706  0766  00A5               	movwf	??_displayDigit+5
  8707  0767  087C               	movf	displayDigit@D1+1,w
  8708  0768  1803               	skipnc
  8709  0769  3E01               	addlw	1
  8710  076A  00A6               	movwf	??_displayDigit+6
  8711  076B  0825               	movf	??_displayDigit+5,w
  8712  076C  0084               	movwf	4
  8713  076D  1783               	bsf	3,7
  8714  076E  1C26               	btfss	??_displayDigit+6,0
  8715  076F  1383               	bcf	3,7
  8716  0770  0800               	movf	0,w
  8717  0771  00A7               	movwf	??_displayDigit+7
  8718  0772  0A84               	incf	4,f
  8719  0773  0800               	movf	0,w
  8720  0774  00A8               	movwf	??_displayDigit+8
  8721  0775  0827               	movf	??_displayDigit+7,w
  8722  0776  0084               	movwf	4
  8723  0777  1783               	bsf	3,7
  8724  0778  1C28               	btfss	??_displayDigit+8,0
  8725  0779  1383               	bcf	3,7
  8726  077A  0823               	movf	??_displayDigit+3,w
  8727  077B  0480               	iorwf	0,f
  8728  077C  0A84               	incf	4,f
  8729  077D  0824               	movf	??_displayDigit+4,w
  8730  077E  0480               	iorwf	0,f
  8731                           
  8732                           ;lcd.c: 182: ((*D1->sg) &= ~((1UL) << (D1->bits[6])));
  8733  077F  301A               	movlw	26
  8734  0780  077B               	addwf	displayDigit@D1,w
  8735  0781  00A0               	movwf	??_displayDigit
  8736  0782  087C               	movf	displayDigit@D1+1,w
  8737  0783  1803               	skipnc
  8738  0784  3E01               	addlw	1
  8739  0785  00A1               	movwf	??_displayDigit+1
  8740  0786  0820               	movf	??_displayDigit,w
  8741  0787  0084               	movwf	4
  8742  0788  1783               	bsf	3,7
  8743  0789  1C21               	btfss	??_displayDigit+1,0
  8744  078A  1383               	bcf	3,7
  8745  078B  0A00               	incf	0,w
  8746  078C  00A2               	movwf	??_displayDigit+2
  8747  078D  3001               	movlw	1
  8748  078E  00A3               	movwf	??_displayDigit+3
  8749  078F  3000               	movlw	0
  8750  0790  00A4               	movwf	??_displayDigit+4
  8751  0791  2F95               	goto	u2754
  8752  0792                     u2755:	
  8753  0792  1003               	clrc
  8754  0793  0DA3               	rlf	??_displayDigit+3,f
  8755  0794  0DA4               	rlf	??_displayDigit+4,f
  8756  0795                     u2754:	
  8757  0795  0BA2               	decfsz	??_displayDigit+2,f
  8758  0796  2F92               	goto	u2755
  8759  0797  09A3               	comf	??_displayDigit+3,f
  8760  0798  09A4               	comf	??_displayDigit+4,f
  8761  0799  300C               	movlw	12
  8762  079A  077B               	addwf	displayDigit@D1,w
  8763  079B  00A5               	movwf	??_displayDigit+5
  8764  079C  087C               	movf	displayDigit@D1+1,w
  8765  079D  1803               	skipnc
  8766  079E  3E01               	addlw	1
  8767  079F  00A6               	movwf	??_displayDigit+6
  8768  07A0  0825               	movf	??_displayDigit+5,w
  8769  07A1  0084               	movwf	4
  8770  07A2  1783               	bsf	3,7
  8771  07A3  1C26               	btfss	??_displayDigit+6,0
  8772  07A4  1383               	bcf	3,7
  8773  07A5  0800               	movf	0,w
  8774  07A6  00A7               	movwf	??_displayDigit+7
  8775  07A7  0A84               	incf	4,f
  8776  07A8  0800               	movf	0,w
  8777  07A9  00A8               	movwf	??_displayDigit+8
  8778  07AA  0827               	movf	??_displayDigit+7,w
  8779  07AB  0084               	movwf	4
  8780  07AC  1783               	bsf	3,7
  8781  07AD  1C28               	btfss	??_displayDigit+8,0
  8782  07AE  1383               	bcf	3,7
  8783  07AF  0823               	movf	??_displayDigit+3,w
  8784  07B0  0580               	andwf	0,f
  8785  07B1  0A84               	incf	4,f
  8786  07B2  0824               	movf	??_displayDigit+4,w
  8787  07B3  0580               	andwf	0,f
  8788                           
  8789                           ;lcd.c: 184: }
  8790                           
  8791                           ;lcd.c: 183: break;
  8792  07B4  0008               	return
  8793  07B5                     l1351:	
  8794                           
  8795                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8796                           ; Switch size 1, requested type "space"
  8797                           ; Number of cases is 1, Range of values is 0 to 0
  8798                           ; switch strategies available:
  8799                           ; Name         Instructions Cycles
  8800                           ; simple_byte            4     3 (average)
  8801                           ; direct_byte           11     8 (fixed)
  8802                           ; jumptable            260     6 (fixed)
  8803                           ;	Chosen strategy is simple_byte
  8804  07B5  087A               	movf	displayDigit@digito+1,w
  8805  07B6  3A00               	xorlw	0	; case 0
  8806  07B7  1903               	skipnz
  8807  07B8  2FBA               	goto	l1947
  8808  07B9  2FDD               	goto	l195
  8809  07BA                     l1947:	
  8810                           
  8811                           ; Switch size 1, requested type "space"
  8812                           ; Number of cases is 11, Range of values is 0 to 67
  8813                           ; switch strategies available:
  8814                           ; Name         Instructions Cycles
  8815                           ; simple_byte           34    18 (average)
  8816                           ; direct_byte          212     8 (fixed)
  8817                           ; jumptable            260     6 (fixed)
  8818                           ;	Chosen strategy is simple_byte
  8819  07BA  0879               	movf	displayDigit@digito,w
  8820  07BB  3A00               	xorlw	0	; case 0
  8821  07BC  1903               	skipnz
  8822  07BD  2FDE               	goto	L1
  8823  07BE  3A01               	xorlw	1	; case 1
  8824  07BF  1903               	skipnz
  8825  07C0  2FE1               	goto	L3
  8826  07C1  3A03               	xorlw	3	; case 2
  8827  07C2  1903               	skipnz
  8828  07C3  2FE4               	goto	L5
  8829  07C4  3A01               	xorlw	1	; case 3
  8830  07C5  1903               	skipnz
  8831  07C6  2FE7               	goto	L7
  8832  07C7  3A07               	xorlw	7	; case 4
  8833  07C8  1903               	skipnz
  8834  07C9  2FEA               	goto	L9
  8835  07CA  3A01               	xorlw	1	; case 5
  8836  07CB  1903               	skipnz
  8837  07CC  2FED               	goto	L11
  8838  07CD  3A03               	xorlw	3	; case 6
  8839  07CE  1903               	skipnz
  8840  07CF  28BE               	goto	l1339
  8841  07D0  3A01               	xorlw	1	; case 7
  8842  07D1  1903               	skipnz
  8843  07D2  2A21               	goto	l1341
  8844  07D3  3A0F               	xorlw	15	; case 8
  8845  07D4  1903               	skipnz
  8846  07D5  2B8A               	goto	l1343
  8847  07D6  3A01               	xorlw	1	; case 9
  8848  07D7  1903               	skipnz
  8849  07D8  2CEB               	goto	l1345
  8850  07D9  3A4A               	xorlw	74	; case 67
  8851  07DA  1903               	skipnz
  8852  07DB  2E4E               	goto	l1347
  8853  07DC  2FDD               	goto	l195
  8854  07DD                     l195:	
  8855  07DD  0008               	return
  8856  07DE                     L1:	
  8857  07DE                     __end_of_displayDigit:	
  8858  07DE  160A  118A  2DDC   	ljmp	l1327
  8859  07E1                     L3:	
  8860  07E1                     L2:	
  8861  07E1  120A  158A  2B60   	ljmp	l1329
  8862  07E4                     L5:	
  8863  07E4                     L4:	
  8864  07E4  160A  118A  2CC8   	ljmp	l1331
  8865  07E7                     L7:	
  8866  07E7                     L6:	
  8867  07E7  120A  158A  2A2E   	ljmp	l1333
  8868  07EA                     L9:	
  8869  07EA                     L8:	
  8870  07EA  160A  118A  2EEB   	ljmp	l1335
  8871  07ED                     L11:	
  8872  07ED                     L10:	
  8873  07ED  120A  158A  28FA   	ljmp	l1337


Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     68      68
    BANK3            96     28      45
    BANK2            80      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 17
		 -> main@str(BANK0[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 0

    displayDigit@D1.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    displayDigit@D1.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    displayDigit@D1.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    displayDigit@D1.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    displayDigit@D1.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    displayDigit@D1.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    displayDigit@D1.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    displayDigit@D1	PTR struct . size(2) Largest target is 28
		 -> main@D3(BANK3[28]), main@D2(BANK1[28]), main@D1(BANK1[28]), 

    displayNumber@D1	PTR struct . size(1) Largest target is 28
		 -> main@D1(BANK1[28]), 

    displayNumber@D2	PTR struct . size(1) Largest target is 28
		 -> main@D2(BANK1[28]), 

    displayNumber@D3	PTR struct . size(1) Largest target is 28
		 -> main@D3(BANK3[28]), 

    LCD_mapping@D3.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D3.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D3.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D3.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    LCD_mapping@D3.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D3.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D3.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D3	PTR struct . size(1) Largest target is 28
		 -> main@D3(BANK3[28]), 

    LCD_mapping@D2.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D2.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D2.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D2.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    LCD_mapping@D2.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D2.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D2.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D2	PTR struct . size(1) Largest target is 28
		 -> main@D2(BANK1[28]), 

    LCD_mapping@D1.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D1.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D1.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D1.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    LCD_mapping@D1.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D1.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D1.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D1	PTR struct . size(1) Largest target is 28
		 -> main@D1(BANK1[28]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 17
		 -> main@str(BANK0[17]), 

    D3.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    D3.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    D3.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    D3.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    D3.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    D3.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    D3.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    D2.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    D2.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    D2.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    D2.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    D2.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    D2.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    D2.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    S31$sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    D1.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    S31$sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    D1.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    S31$se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    D1.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    S31$sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    D1.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    S31$sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    D1.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    S31$sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    D1.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    S31$sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    D1.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 17
		 -> main@str(BANK0[17]), 


Critical Paths under _main in COMMON

    _main->___awtoft
    _utoa->___lwdiv
    _displayNumber->_displayDigit
    _displayDigit->___awdiv
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    ___awtoft->___ftpack
    _UART_Write_Text->_UART_Write
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->___fttol
    _displayNumber->_displayDigit
    ___fttol->___ftadd
    ___ftadd->___ftmul
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               132   132      0   16700
                                             43 BANK0     36    36      0
                                              0 BANK1     68    68      0
                                              0 BANK3     28    28      0
                           _LCD_init
                        _LCD_mapping
                          _UART_Init
                         _UART_Write
                    _UART_Write_Text
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                      _displayNumber
                               _utoa
 ---------------------------------------------------------------------------------
 (1) _utoa                                                 9     5      4    1314
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _displayNumber                                        5     0      5    5138
                                              9 BANK0      5     0      5
                            ___awdiv
                            ___awmod
                       _displayDigit
 ---------------------------------------------------------------------------------
 (2) _displayDigit                                        13     9      4    3728
                                              9 COMMON     4     0      4
                                              0 BANK0      9     9      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     508
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     512
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     305
                                             29 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    2312
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             13     7      6    2800
                                             16 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    1918
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      4     4      0     166
                                              1 COMMON     4     4      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     526
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _LCD_mapping                                          5     3      2    1057
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
   _LCD_mapping
   _UART_Init
     ___aldiv
   _UART_Write
   _UART_Write_Text
     _UART_Write
   ___awtoft
     ___ftpack
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   _displayNumber
     ___awdiv
     ___awmod
     _displayDigit
       ___awdiv (ARG)
   _utoa
     ___lwdiv
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     1C      2D       8       46.9%
BITBANK3            60      0       0       7        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       9        0.0%
BITBANK2            50      0       0      11        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     44      44       6       85.0%
BITBANK1            50      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      4F       4       98.8%
BITBANK0            50      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      CE      12        0.0%
ABS                  0      0      CE      10        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sun Oct 22 16:53:23 2017

                       pc 0002               __CFG_CP$OFF 0000                        l76 1E2E  
            ___awdiv@sign 0076                        fsr 0004             ?_displayDigit 0079  
            ___ftadd@exp1 003C              ___ftadd@exp2 003B              ___ftadd@sign 003A  
                     l334 0829                       l440 1F5E                       l531 12D2  
                     l195 07DD                       l447 1F73                       l471 1467  
                     l448 1F7B                       l546 1FEA                       _RD7 0047  
                     _PR2 0092              __CFG_CPD$OFF 0000                       fsr0 0004  
                     indf 0000              ___awmod@sign 0076              __CFG_IESO$ON 0000  
          ?_displayNumber 0029                      l1331 14C8                      l1421 088F  
                    l1341 0221                      l1333 0A2E                      l1407 084A  
                    l1503 1F1B                      l1343 038A                      l1335 16EB  
                    l1327 15DC                      l1351 07B5                      l1425 089D  
                    l1417 0882                      l1409 085A                      l1361 1F30  
                    l1345 04EB                      l1337 08FA                      l1329 0B60  
                    l1521 1EA9                      l1443 1019                      l1507 1F23  
                    l1347 064E                      l1339 00BE                      l1523 1EB7  
                    l1365 1F37                      l1701 142D                      l1461 1045  
                    l1453 1021                      l1437 100E                      l1533 1ED8  
                    l1375 1F63                      l1367 1F43                      l1703 1439  
                    l1455 102F                      l1551 0025                      l1377 1F6D  
                    l1369 1F48                      l1713 1457                      l1705 143E  
                    l1465 1050                      l1481 1EE7                      l1529 1ECD  
                    l1545 0009                      l1723 148B                      l1715 1463  
                    l1707 1442                      l1811 12AA                      l1547 0017  
                    l1555 0030                      l1627 1F9B                      l1733 14AE  
                    l1821 12D5                      l1813 12BA                      l1469 1058  
                    l1493 1EF4                      l1485 1EEE                      l1637 1FBC  
                    l1399 083A                      l1663 1E8A                      l1719 1479  
                    l1743 1304                      l1495 1F02                      l1585 1E64  
                    l1673 13E8                      l1761 1359                      l1825 12E3  
                    l1683 13FE                      l1819 12C7                      l1499 1F10  
                    l1677 13EF                      l1773 1381                      l1765 1369  
                    l1749 131A                      l1909 0FB2                      l1695 1418  
                    l1777 1391                      l1793 1278                      l1947 07BA  
                    l1889 0EB7                      _BRGH 04C2                      _CREN 00C4  
                    u2004 1620                      u2005 161D                      u2014 1653  
                    u2015 1650                      u2104 11D4                      u2024 1686  
                    u2105 11D1                      u2025 1683                      u2114 1209  
                    u2034 16B9                      u2115 1206                      u2035 16B6  
                    u2204 0A46                      u2124 123E                      u2044 0B0D  
                    u2205 0A43                      u2125 123B                      u2045 0B0A  
                    u2214 0A72                      u2134 14E0                      u2054 0B40  
                    u3015 1024                      u2215 0A6F                      u2135 14DD  
                    u2055 0B3D                      u2304 1797                      u2224 0AA5  
                    u2144 150C                      u2064 0B78                      u2305 1794  
                    u2225 0AA2                      u2145 1509                      u2065 0B75  
                    u2314 17CC                      u2234 0AD8                      u2154 153F  
                    u2074 0BA6                      u3035 1030                      u3115 1EF7  
                    u2315 17C9                      u2235 0AD5                      u2155 153C  
                    u2075 0BA3                      u2404 00A0                      u2324 08A9  
                    u2244 1149                      u2164 1574                      u2084 0BD9  
                    u3045 103C                      u2405 009D                      u2325 08A6  
                    u2245 1146                      u2165 1571                      u2085 0BD6  
                    u3205 1EB8                      u2414 00D6                      u2334 08DC  
                    u2254 117E                      u2174 15A7                      u2094 0C0C  
                    u3055 1046                      u3135 1F08                      u2415 00D3  
                    u2335 08D9                      u2255 117B                      u2175 15A4  
                    u2095 0C09                      u3215 1EC4                      u3320 10A3  
                    u2504 0298                      u2424 0102                      u2344 0912  
                    u2264 11B3                      u2184 09DB                      u3321 10A4  
                    u3305 1068                      u3145 1F11                      u2505 0295  
                    u2425 00FF                      u2345 090F                      u2265 11B0  
                    u2185 09D8                      u3225 1ECE                      u3322 10A9  
                    u2514 02CB                      u2434 0137                      u2354 093E  
                    u2274 1703                      u2194 0A10                      u3323 10AA  
                    u3315 1089                      u2515 02C8                      u2435 0134  
                    u2355 093B                      u2275 1700                      u2195 0A0D  
                    u2604 049A                      u2524 0300                      u2444 016A  
                    u2364 0973                      u2284 1731                      u2605 0497  
                    u2525 02FD                      u2445 0167                      u2365 0970  
                    u2285 172E                      u2614 04CD                      u2534 0335  
                    u2454 019D                      u2374 09A6                      u2294 1764  
                    u2615 04CA                      u2535 0332                      u2455 019A  
                    u2375 09A3                      u2295 1761                      u3255 000C  
                    u2704 0692                      u2624 0503                      u2544 036A  
                    u2464 01D0                      u2384 0038                      u3505 142E  
                    u2705 068F                      u2625 0500                      u2545 0367  
                    u2465 01CD                      u2385 0035                      u3185 1EAC  
                    u2714 06C7                      u2634 052F                      u2554 03A2  
                    u2474 0203                      u2394 006D                      u2715 06C4  
                    u2635 052C                      u2555 039F                      u2475 0200  
                    u2395 006A                      u3275 001D                      u2724 06FC  
                    u2644 0562                      u2564 03CE                      u2484 0239  
                    u2805 1F57                      u2725 06F9                      u2645 055F  
                    u2565 03CB                      u2485 0236                      u3285 0026  
                    u2734 072F                      u2654 0595                      u2574 0401  
                    u2494 0265                      u3535 1443                      u2735 072C  
                    u2655 0592                      u2575 03FE                      u2495 0262  
                    u2744 0762                      u2664 05C8                      u2584 0434  
                    u2825 1F66                      u2745 075F                      u2665 05C5  
                    u2585 0431                      u2754 0795                      u2674 05FD  
                    u2594 0467                      u2915 084E                      u3475 1419  
                    u2755 0792                      u2675 05FA                      u2595 0464  
                    u2684 0630                      u3565 1458                      u3645 1326  
                    u3805 12AB                      u2685 062D                      u2694 0666  
                    u2935 085C                      u3735 1392                      u3655 1338  
                    u2695 0663                      u3904 0E8A                      u2945 0871  
                    u2865 1F82                      u2785 1F3C                      u3745 139A  
                    u3905 0E88                      u1994 15F4                      u2955 0883  
                    u3835 12C9                      u1995 15F1                      u3860 0E0E  
                    _RCIF 0065                      u3685 136A                      u3695 1372  
                    u3775 127F                      u3927 0FF8                      u3874 0E60  
                    u3875 0E5E                      u3884 0E6C                      u3885 0E6A  
                    u3894 0E78                      u3895 0E76                      _SPEN 00C7  
                    _TRMT 04C1                      _TXEN 04C5                      _SYNC 04C4  
            ?_LCD_mapping 0070             __CFG_FCMEN$ON 0000                      _main 0DFA  
            ___ftpack@arg 0070              ___ftpack@exp 0073                      btemp 007E  
                    _utoa 1F94             __CFG_BOREN$ON 0000                      start 0000  
           __CFG_MCLRE$ON 0000              ___ftmul@cntr 002E              ___ftmul@sign 002F  
 __end_of_UART_Write_Text 1E80              ___fttol@exp1 004A              ___fttol@lval 0046  
            main@desejado 006D            ??_displayDigit 0020          __end_of_LCD_init 1E61  
         __end_of___aldiv 08A6                     ?_main 0070           __end_of___awdiv 105D  
         __end_of___ftadd 14C8             __CFG_WDTE$OFF 0000           __end_of___awmod 1F28  
                   _ANSEL 0091                     ?_utoa 0078           __end_of___ftmul 13BF  
         ___awdiv@divisor 0070                     _T1CON 0010           __end_of___fttol 12EC  
                   _T2CON 0012                     _LCDPS 0108           __end_of___lwdiv 1EDD  
         __end_of___lwmod 0035           ___awdiv@counter 0075                     _RCREG 001A  
                   _TMR1H 000F                     _TMR1L 000E                     _SPBRG 0099  
                   _PORTD 0008                     _TRISA 0085                     _TRISC 0087  
                   _TRISD 0088                     _TXREG 0019               ?_UART_Write 0070  
      __size_of_UART_Init 0074             ___awtoft@sign 007D             ___ftpack@sign 0074  
                   main@D 00A2                     main@I 00A6                     main@P 00A0  
                   pclath 000A                     utoa@c 0022                     utoa@v 0020  
                   status 0003                     wtemp0 007E           __initialization 07F0  
            __end_of_main 1000              __end_of_utoa 2000                    ??_main 004B  
           ___fttol@sign1 0045                    ??_utoa 007C           ??_displayNumber 007D  
                  _ADCON0 001F                    _ADCON1 009F                    _ADRESH 001E  
                  _ADRESL 009E                    _CCPR2L 001B          ___awdiv@dividend 0072  
                  _CMCON0 009C          __end_of___awtoft 1EA1          __end_of___ftpack 1F94  
                  _LCDCON 0107                    _LCDSE0 011C                    _LCDSE1 011D  
                  _LCDSE2 011E                    _T1SYNC 0082                    _INTCON 000B  
                  _OSCCON 008F                    _TMR1CS 0081                    _TMR1ON 0080  
                  _TRISC6 043E                    _TRISC7 043F            __CFG_PWRTE$OFF 0000  
       __end_of_UART_Init 10D1       __size_of_UART_Write 000A                 ??___aldiv 0078  
               ??___awdiv 0074                 ??___ftadd 0036                 ??___awmod 0074  
        ?_UART_Write_Text 0070                 ??___ftmul 0026                 ??___fttol 0041  
               ??___lwdiv 0074                 ??___lwmod 0074          ___awdiv@quotient 0077  
         ___awmod@divisor 0070                    main@D1 00AC                    main@D2 00C8  
                  main@D3 0190           ___awmod@counter 0075                    main@kd 0064  
                  main@ki 0061                    main@kp 0067     ___ftmul@f3_as_product 002B  
    __end_of_displayDigit 07DE   __end_of__initialization 07FC                ___ftadd@f1 0030  
              ___ftadd@f2 0033                 ?_LCD_init 0070      __size_of_LCD_mapping 01BA  
              ___awtoft@c 0078                ___ftmul@f1 0020                ___ftmul@f2 0023  
              ___fttol@f1 003D            __pcstackCOMMON 0070              __pidataBANK3 0806  
              ??_LCD_init 0070                __pmaintext 0DFA                   _CCP2CON 001D  
               ?___awtoft 0078                 ?___ftpack 0070              ??_UART_Write 0070  
          main@duty_cycle 0060            displayDigit@D1 007B                   ___aldiv 0817  
                 ___awdiv 1004                   ___ftadd 13BF                   ___awmod 1EDD  
      __end_of_UART_Write 1E37                   ___ftmul 12EC                   ___fttol 125E  
                 ___lwdiv 1EA1                   ___lwmod 0003                 _LCDDATA10 011A  
               _LCDDATA11 011B                ??___awtoft 007B                ??___ftpack 0075  
                 __ptext1 1F94                   __ptext2 0003                   __ptext3 1EA1  
                 __ptext4 10D1                   __ptext5 15D9                   __ptext6 1EDD  
                 __ptext7 1004                   __ptext8 125E                   __ptext9 12EC  
        ___awmod@dividend 0072          ___aldiv@dividend 0074     __size_of_displayDigit F205  
                 main@str 004F      end_of_initialization 07FC          ___aldiv@quotient 0022  
                 psplit$0 F001D                   psplit$1 1D001E                   psplit$2 1E001F  
                 psplit$3 1F0020                   psplit$4 200021                   psplit$5 210022  
                 psplit$6 220023                   psplit$7 230024                   utoa@buf 0023  
                 utoa@val 0078                 _UART_Init 105D              _displayDigit 15D9  
          UART_Write@data 0070     __end_of_displayNumber 1146        displayDigit@digito 0079  
              main@timer1 00AA         __size_of_LCD_init 0019               ___ftmul@exp 002A  
           LCD_mapping@D1 0074             LCD_mapping@D2 0070             LCD_mapping@D3 0071  
              ?_UART_Init 0026  __size_of_UART_Write_Text 001F       start_initialization 07F0  
       pnum$text5_split_1 001D         pnum$text5_split_2 001E         pnum$text5_split_3 001F  
       pnum$text5_split_4 0020         pnum$text5_split_5 0021         pnum$text5_split_6 0022  
       pnum$text5_split_7 0023         pnum$text5_split_8 0024             ??_LCD_mapping 0072  
              init_fetch0 1E37               __pdataBANK3 01AC         __size_of___awtoft 0021  
       __size_of___ftpack 006C                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0             __pcstackBANK3 0190          ___lwdiv@dividend 0072  
     __end_of_LCD_mapping 0DFA                  ?___aldiv 0070                  ?___awdiv 0070  
                ?___ftadd 0030                  ?___awmod 0070                  ?___ftmul 0020  
                ?___fttol 003D                  ?___lwdiv 0070                  ?___lwmod 0070  
             ??_UART_Init 002A          ___lwdiv@quotient 0075                  _LCDDATA0 0110  
                _LCDDATA1 0111                  _LCDDATA2 0112                  _LCDDATA3 0113  
                _LCDDATA4 0114                  _LCDDATA5 0115                  _LCDDATA6 0116  
                _LCDDATA7 0117                  _LCDDATA8 0118                  _LCDDATA9 0119  
              UART_Init@x 0079         ??_UART_Write_Text 0071           ___aldiv@divisor 0070  
         ___aldiv@counter 0020                  _LCD_init 1E48                  _GO_nDONE 00F9  
               main@F2788 01AC                 main@PID_v 00A4         UART_Init@baudrate 0026  
               main@error 00A8          displayNumber@num 0029               _LCD_mapping 0C40  
        __size_of___aldiv 008F          __size_of___awdiv 0059          __size_of___ftadd 0109  
        __size_of___awmod 004B          __size_of___ftmul 00D3          __size_of___fttol 008E  
        __size_of___lwdiv 003C          __size_of___lwmod 0032                  ___awtoft 1E80  
                ___ftpack 1F28                  _main$656 006A           ___lwdiv@divisor 0070  
         ___lwdiv@counter 0077                  __ptext10 13BF                  __ptext11 1E80  
                __ptext12 1F28                  __ptext13 1E61                  __ptext14 1E2D  
                __ptext15 105D                  __ptext16 0817                  __ptext17 0C40  
                __ptext18 1E48       UART_Write_Text@text 0074             __size_of_main 0206  
               pnum$text5 000F             __size_of_utoa 006C    __size_of_displayNumber 0075  
         displayNumber@D1 002B           displayNumber@D2 002C           displayNumber@D3 002D  
                init_ram0 1E3B          ___lwmod@dividend 0072                  utoa@base 007A  
         _UART_Write_Text 1E61           ___lwmod@divisor 0070           ___lwmod@counter 0075  
            ___aldiv@sign 0021                _UART_Write 1E2D             _displayNumber 10D1  
      __CFG_FOSC$INTOSCIO 0000          UART_Write_Text@i 0072  
