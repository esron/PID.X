

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sun Oct 22 19:08:42 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F917
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text5_split_1,local,class=CODE,merge=1,delta=2
    33                           	psect	text5_split_2,local,class=CODE,merge=1,delta=2
    34                           	psect	text5_split_3,local,class=CODE,merge=1,delta=2
    35                           	psect	text5_split_4,local,class=CODE,merge=1,delta=2
    36                           	psect	text5_split_5,local,class=CODE,merge=1,delta=2
    37                           	psect	text5_split_6,local,class=CODE,merge=1,delta=2
    38                           	psect	text5_split_7,local,class=CODE,merge=1,delta=2
    39                           	psect	text5_split_8,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 1.43
    43                           ; Generated 25/07/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F917 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  008F                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  0105                     	;# 
   138  0107                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0110                     	;# 
   148  0111                     	;# 
   149  0112                     	;# 
   150  0113                     	;# 
   151  0114                     	;# 
   152  0115                     	;# 
   153  0116                     	;# 
   154  0117                     	;# 
   155  0118                     	;# 
   156  0119                     	;# 
   157  011A                     	;# 
   158  011B                     	;# 
   159  011C                     	;# 
   160  011D                     	;# 
   161  011E                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  000D                     	;# 
   178  000E                     	;# 
   179  000E                     	;# 
   180  000F                     	;# 
   181  0010                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0013                     	;# 
   185  0014                     	;# 
   186  0015                     	;# 
   187  0015                     	;# 
   188  0016                     	;# 
   189  0017                     	;# 
   190  0018                     	;# 
   191  0019                     	;# 
   192  001A                     	;# 
   193  001B                     	;# 
   194  001B                     	;# 
   195  001C                     	;# 
   196  001D                     	;# 
   197  001E                     	;# 
   198  001F                     	;# 
   199  0081                     	;# 
   200  0085                     	;# 
   201  0086                     	;# 
   202  0087                     	;# 
   203  0088                     	;# 
   204  0089                     	;# 
   205  008C                     	;# 
   206  008D                     	;# 
   207  008E                     	;# 
   208  008F                     	;# 
   209  0090                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0095                     	;# 
   215  0095                     	;# 
   216  0096                     	;# 
   217  0096                     	;# 
   218  0097                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  009F                     	;# 
   225  0105                     	;# 
   226  0107                     	;# 
   227  0108                     	;# 
   228  0109                     	;# 
   229  010C                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  0110                     	;# 
   236  0111                     	;# 
   237  0112                     	;# 
   238  0113                     	;# 
   239  0114                     	;# 
   240  0115                     	;# 
   241  0116                     	;# 
   242  0117                     	;# 
   243  0118                     	;# 
   244  0119                     	;# 
   245  011A                     	;# 
   246  011B                     	;# 
   247  011C                     	;# 
   248  011D                     	;# 
   249  011E                     	;# 
   250  018C                     	;# 
   251  018D                     	;# 
   252  0000                     	;# 
   253  0001                     	;# 
   254  0002                     	;# 
   255  0003                     	;# 
   256  0004                     	;# 
   257  0005                     	;# 
   258  0006                     	;# 
   259  0007                     	;# 
   260  0008                     	;# 
   261  0009                     	;# 
   262  000A                     	;# 
   263  000B                     	;# 
   264  000C                     	;# 
   265  000D                     	;# 
   266  000E                     	;# 
   267  000E                     	;# 
   268  000F                     	;# 
   269  0010                     	;# 
   270  0011                     	;# 
   271  0012                     	;# 
   272  0013                     	;# 
   273  0014                     	;# 
   274  0015                     	;# 
   275  0015                     	;# 
   276  0016                     	;# 
   277  0017                     	;# 
   278  0018                     	;# 
   279  0019                     	;# 
   280  001A                     	;# 
   281  001B                     	;# 
   282  001B                     	;# 
   283  001C                     	;# 
   284  001D                     	;# 
   285  001E                     	;# 
   286  001F                     	;# 
   287  0081                     	;# 
   288  0085                     	;# 
   289  0086                     	;# 
   290  0087                     	;# 
   291  0088                     	;# 
   292  0089                     	;# 
   293  008C                     	;# 
   294  008D                     	;# 
   295  008E                     	;# 
   296  008F                     	;# 
   297  0090                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0093                     	;# 
   301  0094                     	;# 
   302  0095                     	;# 
   303  0095                     	;# 
   304  0096                     	;# 
   305  0096                     	;# 
   306  0097                     	;# 
   307  0098                     	;# 
   308  0099                     	;# 
   309  009C                     	;# 
   310  009D                     	;# 
   311  009E                     	;# 
   312  009F                     	;# 
   313  0105                     	;# 
   314  0107                     	;# 
   315  0108                     	;# 
   316  0109                     	;# 
   317  010C                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  010D                     	;# 
   321  010E                     	;# 
   322  010F                     	;# 
   323  0110                     	;# 
   324  0111                     	;# 
   325  0112                     	;# 
   326  0113                     	;# 
   327  0114                     	;# 
   328  0115                     	;# 
   329  0116                     	;# 
   330  0117                     	;# 
   331  0118                     	;# 
   332  0119                     	;# 
   333  011A                     	;# 
   334  011B                     	;# 
   335  011C                     	;# 
   336  011D                     	;# 
   337  011E                     	;# 
   338  018C                     	;# 
   339  018D                     	;# 
   340  0000                     	;# 
   341  0001                     	;# 
   342  0002                     	;# 
   343  0003                     	;# 
   344  0004                     	;# 
   345  0005                     	;# 
   346  0006                     	;# 
   347  0007                     	;# 
   348  0008                     	;# 
   349  0009                     	;# 
   350  000A                     	;# 
   351  000B                     	;# 
   352  000C                     	;# 
   353  000D                     	;# 
   354  000E                     	;# 
   355  000E                     	;# 
   356  000F                     	;# 
   357  0010                     	;# 
   358  0011                     	;# 
   359  0012                     	;# 
   360  0013                     	;# 
   361  0014                     	;# 
   362  0015                     	;# 
   363  0015                     	;# 
   364  0016                     	;# 
   365  0017                     	;# 
   366  0018                     	;# 
   367  0019                     	;# 
   368  001A                     	;# 
   369  001B                     	;# 
   370  001B                     	;# 
   371  001C                     	;# 
   372  001D                     	;# 
   373  001E                     	;# 
   374  001F                     	;# 
   375  0081                     	;# 
   376  0085                     	;# 
   377  0086                     	;# 
   378  0087                     	;# 
   379  0088                     	;# 
   380  0089                     	;# 
   381  008C                     	;# 
   382  008D                     	;# 
   383  008E                     	;# 
   384  008F                     	;# 
   385  0090                     	;# 
   386  0091                     	;# 
   387  0092                     	;# 
   388  0093                     	;# 
   389  0094                     	;# 
   390  0095                     	;# 
   391  0095                     	;# 
   392  0096                     	;# 
   393  0096                     	;# 
   394  0097                     	;# 
   395  0098                     	;# 
   396  0099                     	;# 
   397  009C                     	;# 
   398  009D                     	;# 
   399  009E                     	;# 
   400  009F                     	;# 
   401  0105                     	;# 
   402  0107                     	;# 
   403  0108                     	;# 
   404  0109                     	;# 
   405  010C                     	;# 
   406  010C                     	;# 
   407  010D                     	;# 
   408  010D                     	;# 
   409  010E                     	;# 
   410  010F                     	;# 
   411  0110                     	;# 
   412  0111                     	;# 
   413  0112                     	;# 
   414  0113                     	;# 
   415  0114                     	;# 
   416  0115                     	;# 
   417  0116                     	;# 
   418  0117                     	;# 
   419  0118                     	;# 
   420  0119                     	;# 
   421  011A                     	;# 
   422  011B                     	;# 
   423  011C                     	;# 
   424  011D                     	;# 
   425  011E                     	;# 
   426  018C                     	;# 
   427  018D                     	;# 
   428                           
   429                           	psect	nvBANK0
   430  005E                     __pnvBANK0:	
   431  005E                     _kp:	
   432  005E                     	ds	3
   433  0061                     _kd:	
   434  0061                     	ds	3
   435  0064                     _ki:	
   436  0064                     	ds	3
   437  001A                     _RCREG	set	26
   438  0019                     _TXREG	set	25
   439  001E                     _ADRESH	set	30
   440  001F                     _ADCON0	set	31
   441  000E                     _TMR1L	set	14
   442  000F                     _TMR1H	set	15
   443  0008                     _PORTD	set	8
   444  0010                     _T1CON	set	16
   445  0012                     _T2CON	set	18
   446  001D                     _CCP2CON	set	29
   447  001B                     _CCPR2L	set	27
   448  000B                     _INTCON	set	11
   449  0065                     _RCIF	set	101
   450  00C4                     _CREN	set	196
   451  00C7                     _SPEN	set	199
   452  00F9                     _GO_nDONE	set	249
   453  0047                     _RD7	set	71
   454  0082                     _T1SYNC	set	130
   455  0081                     _TMR1CS	set	129
   456  0080                     _TMR1ON	set	128
   457  003D                     _RC5	set	61
   458  0099                     _SPBRG	set	153
   459  009E                     _ADRESL	set	158
   460  009F                     _ADCON1	set	159
   461  0091                     _ANSEL	set	145
   462  0085                     _TRISA	set	133
   463  0087                     _TRISC	set	135
   464  0092                     _PR2	set	146
   465  008F                     _OSCCON	set	143
   466  0088                     _TRISD	set	136
   467  04C1                     _TRMT	set	1217
   468  04C5                     _TXEN	set	1221
   469  043E                     _TRISC6	set	1086
   470  043F                     _TRISC7	set	1087
   471  04C4                     _SYNC	set	1220
   472  04C2                     _BRGH	set	1218
   473  0107                     _LCDCON	set	263
   474  0108                     _LCDPS	set	264
   475  011A                     _LCDDATA10	set	282
   476  011E                     _LCDSE2	set	286
   477  011D                     _LCDSE1	set	285
   478  011C                     _LCDSE0	set	284
   479  0114                     _LCDDATA4	set	276
   480  0117                     _LCDDATA7	set	279
   481  0111                     _LCDDATA1	set	273
   482  0113                     _LCDDATA3	set	275
   483  0116                     _LCDDATA6	set	278
   484  0119                     _LCDDATA9	set	281
   485  0110                     _LCDDATA0	set	272
   486  0115                     _LCDDATA5	set	277
   487  011B                     _LCDDATA11	set	283
   488  0118                     _LCDDATA8	set	280
   489  0112                     _LCDDATA2	set	274
   490                           
   491                           ; #config settings
   492  0000                     
   493                           	psect	cinit
   494  07F4                     start_initialization:	
   495  07F4                     __initialization:	
   496                           
   497                           ; Clear objects allocated to BANK0
   498  07F4  1283               	bcf	3,5	;RP0=0, select bank0
   499  07F5  1303               	bcf	3,6	;RP1=0, select bank0
   500  07F6  01E7               	clrf	__pbssBANK0& (0+127)
   501  07F7  01E8               	clrf	(__pbssBANK0+1)& (0+127)
   502  07F8  01E9               	clrf	(__pbssBANK0+2)& (0+127)
   503  07F9  01EA               	clrf	(__pbssBANK0+3)& (0+127)
   504  07FA  01EB               	clrf	(__pbssBANK0+4)& (0+127)
   505  07FB  01EC               	clrf	(__pbssBANK0+5)& (0+127)
   506  07FC                     end_of_initialization:	
   507                           ;End of C runtime variable initialization code
   508                           
   509  07FC                     __end_of__initialization:	
   510  07FC  0183               	clrf	3
   511  07FD  160A  118A  2CFC   	ljmp	_main	;jump to C main() function
   512                           
   513                           	psect	bssBANK0
   514  0067                     __pbssBANK0:	
   515  0067                     _D:	
   516  0067                     	ds	2
   517  0069                     _I:	
   518  0069                     	ds	2
   519  006B                     _P:	
   520  006B                     	ds	2
   521                           
   522                           	psect	cstackBANK3
   523  0190                     __pcstackBANK3:	
   524  0190                     main@D2:	
   525                           
   526                           ; 28 bytes @ 0x0
   527  0190                     	ds	28
   528  01AC                     main@D3:	
   529                           
   530                           ; 28 bytes @ 0x1C
   531  01AC                     	ds	28
   532                           
   533                           	psect	cstackBANK1
   534  00A0                     __pcstackBANK1:	
   535  00A0                     main@str:	
   536                           
   537                           ; 33 bytes @ 0x0
   538  00A0                     	ds	33
   539  00C1                     main@D1:	
   540                           
   541                           ; 28 bytes @ 0x21
   542  00C1                     	ds	28
   543                           
   544                           	psect	cstackCOMMON
   545  0070                     __pcstackCOMMON:	
   546  0070                     ?_LCD_init:	
   547  0070                     ??_LCD_init:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_LCD_mapping:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_UART_Write_Text:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_UART_Write:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ??_UART_Write:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_PID_init:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ??_PID_init:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_main:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?___awdiv:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?___awmod:	
   575                           ; 2 bytes @ 0x0
   576                           
   577  0070                     ?___lwdiv:	
   578                           ; 2 bytes @ 0x0
   579                           
   580  0070                     ?___lwmod:	
   581                           ; 2 bytes @ 0x0
   582                           
   583  0070                     ?___ftpack:	
   584                           ; 2 bytes @ 0x0
   585                           
   586  0070                     ?___aldiv:	
   587                           ; 3 bytes @ 0x0
   588                           
   589  0070                     LCD_mapping@D2:	
   590                           ; 4 bytes @ 0x0
   591                           
   592  0070                     UART_Write@data:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ___awdiv@divisor:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ___awmod@divisor:	
   599                           ; 2 bytes @ 0x0
   600                           
   601  0070                     ___lwdiv@divisor:	
   602                           ; 2 bytes @ 0x0
   603                           
   604  0070                     ___lwmod@divisor:	
   605                           ; 2 bytes @ 0x0
   606                           
   607  0070                     ___ftpack@arg:	
   608                           ; 2 bytes @ 0x0
   609                           
   610  0070                     ___aldiv@divisor:	
   611                           ; 3 bytes @ 0x0
   612                           
   613                           
   614                           ; 4 bytes @ 0x0
   615  0070                     	ds	1
   616  0071                     ??_UART_Write_Text:	
   617  0071                     LCD_mapping@D3:	
   618                           ; 1 bytes @ 0x1
   619                           
   620                           
   621                           ; 1 bytes @ 0x1
   622  0071                     	ds	1
   623  0072                     ??_LCD_mapping:	
   624  0072                     UART_Write_Text@i:	
   625                           ; 1 bytes @ 0x2
   626                           
   627  0072                     ___awdiv@dividend:	
   628                           ; 2 bytes @ 0x2
   629                           
   630  0072                     ___awmod@dividend:	
   631                           ; 2 bytes @ 0x2
   632                           
   633  0072                     ___lwdiv@dividend:	
   634                           ; 2 bytes @ 0x2
   635                           
   636  0072                     ___lwmod@dividend:	
   637                           ; 2 bytes @ 0x2
   638                           
   639                           
   640                           ; 2 bytes @ 0x2
   641  0072                     	ds	1
   642  0073                     ___ftpack@exp:	
   643                           
   644                           ; 1 bytes @ 0x3
   645  0073                     	ds	1
   646  0074                     ??___awdiv:	
   647  0074                     ??___awmod:	
   648                           ; 1 bytes @ 0x4
   649                           
   650  0074                     ??___lwdiv:	
   651                           ; 1 bytes @ 0x4
   652                           
   653  0074                     ??___lwmod:	
   654                           ; 1 bytes @ 0x4
   655                           
   656  0074                     LCD_mapping@D1:	
   657                           ; 1 bytes @ 0x4
   658                           
   659  0074                     UART_Write_Text@text:	
   660                           ; 1 bytes @ 0x4
   661                           
   662  0074                     ___ftpack@sign:	
   663                           ; 1 bytes @ 0x4
   664                           
   665  0074                     ___aldiv@dividend:	
   666                           ; 1 bytes @ 0x4
   667                           
   668                           
   669                           ; 4 bytes @ 0x4
   670  0074                     	ds	1
   671  0075                     ??___ftpack:	
   672  0075                     ___awdiv@counter:	
   673                           ; 1 bytes @ 0x5
   674                           
   675  0075                     ___awmod@counter:	
   676                           ; 1 bytes @ 0x5
   677                           
   678  0075                     ___lwmod@counter:	
   679                           ; 1 bytes @ 0x5
   680                           
   681  0075                     ___lwdiv@quotient:	
   682                           ; 1 bytes @ 0x5
   683                           
   684                           
   685                           ; 2 bytes @ 0x5
   686  0075                     	ds	1
   687  0076                     ___awdiv@sign:	
   688  0076                     ___awmod@sign:	
   689                           ; 1 bytes @ 0x6
   690                           
   691                           
   692                           ; 1 bytes @ 0x6
   693  0076                     	ds	1
   694  0077                     ___lwdiv@counter:	
   695  0077                     ___awdiv@quotient:	
   696                           ; 1 bytes @ 0x7
   697                           
   698                           
   699                           ; 2 bytes @ 0x7
   700  0077                     	ds	1
   701  0078                     ?_utoa:	
   702  0078                     ??___aldiv:	
   703                           ; 1 bytes @ 0x8
   704                           
   705  0078                     ?___awtoft:	
   706                           ; 1 bytes @ 0x8
   707                           
   708  0078                     ___awtoft@c:	
   709                           ; 3 bytes @ 0x8
   710                           
   711  0078                     utoa@val:	
   712                           ; 2 bytes @ 0x8
   713                           
   714                           
   715                           ; 2 bytes @ 0x8
   716  0078                     	ds	1
   717  0079                     ?_displayDigit:	
   718  0079                     displayDigit@digito:	
   719                           ; 1 bytes @ 0x9
   720                           
   721  0079                     UART_Init@x:	
   722                           ; 2 bytes @ 0x9
   723                           
   724                           
   725                           ; 2 bytes @ 0x9
   726  0079                     	ds	1
   727  007A                     utoa@base:	
   728                           
   729                           ; 2 bytes @ 0xA
   730  007A                     	ds	1
   731  007B                     ??___awtoft:	
   732  007B                     displayDigit@D1:	
   733                           ; 1 bytes @ 0xB
   734                           
   735                           
   736                           ; 2 bytes @ 0xB
   737  007B                     	ds	1
   738  007C                     ??_utoa:	
   739                           
   740                           ; 1 bytes @ 0xC
   741  007C                     	ds	1
   742  007D                     ??_displayNumber:	
   743  007D                     ___awtoft@sign:	
   744                           ; 1 bytes @ 0xD
   745                           
   746                           
   747                           ; 1 bytes @ 0xD
   748  007D                     	ds	1
   749                           
   750                           	psect	cstackBANK0
   751  0020                     __pcstackBANK0:	
   752  0020                     ??_displayDigit:	
   753  0020                     ?___ftmul:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0020                     ___aldiv@counter:	
   757                           ; 3 bytes @ 0x0
   758                           
   759  0020                     utoa@v:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0020                     ___ftmul@f1:	
   763                           ; 2 bytes @ 0x0
   764                           
   765                           
   766                           ; 3 bytes @ 0x0
   767  0020                     	ds	1
   768  0021                     ___aldiv@sign:	
   769                           
   770                           ; 1 bytes @ 0x1
   771  0021                     	ds	1
   772  0022                     utoa@c:	
   773  0022                     ___aldiv@quotient:	
   774                           ; 1 bytes @ 0x2
   775                           
   776                           
   777                           ; 4 bytes @ 0x2
   778  0022                     	ds	1
   779  0023                     utoa@buf:	
   780  0023                     ___ftmul@f2:	
   781                           ; 1 bytes @ 0x3
   782                           
   783                           
   784                           ; 3 bytes @ 0x3
   785  0023                     	ds	3
   786  0026                     ?_UART_Init:	
   787  0026                     ??___ftmul:	
   788                           ; 1 bytes @ 0x6
   789                           
   790  0026                     UART_Init@baudrate:	
   791                           ; 1 bytes @ 0x6
   792                           
   793                           
   794                           ; 4 bytes @ 0x6
   795  0026                     	ds	3
   796  0029                     ?_displayNumber:	
   797  0029                     displayNumber@num:	
   798                           ; 1 bytes @ 0x9
   799                           
   800                           
   801                           ; 2 bytes @ 0x9
   802  0029                     	ds	1
   803  002A                     ??_UART_Init:	
   804  002A                     ___ftmul@exp:	
   805                           ; 1 bytes @ 0xA
   806                           
   807                           
   808                           ; 1 bytes @ 0xA
   809  002A                     	ds	1
   810  002B                     displayNumber@D1:	
   811  002B                     ___ftmul@f3_as_product:	
   812                           ; 1 bytes @ 0xB
   813                           
   814                           
   815                           ; 3 bytes @ 0xB
   816  002B                     	ds	1
   817  002C                     displayNumber@D2:	
   818                           
   819                           ; 1 bytes @ 0xC
   820  002C                     	ds	1
   821  002D                     displayNumber@D3:	
   822                           
   823                           ; 1 bytes @ 0xD
   824  002D                     	ds	1
   825  002E                     ___ftmul@cntr:	
   826                           
   827                           ; 1 bytes @ 0xE
   828  002E                     	ds	1
   829  002F                     ___ftmul@sign:	
   830                           
   831                           ; 1 bytes @ 0xF
   832  002F                     	ds	1
   833  0030                     ?___ftadd:	
   834  0030                     ___ftadd@f1:	
   835                           ; 3 bytes @ 0x10
   836                           
   837                           
   838                           ; 3 bytes @ 0x10
   839  0030                     	ds	3
   840  0033                     ___ftadd@f2:	
   841                           
   842                           ; 3 bytes @ 0x13
   843  0033                     	ds	3
   844  0036                     ??___ftadd:	
   845                           
   846                           ; 1 bytes @ 0x16
   847  0036                     	ds	4
   848  003A                     ___ftadd@sign:	
   849                           
   850                           ; 1 bytes @ 0x1A
   851  003A                     	ds	1
   852  003B                     ___ftadd@exp2:	
   853                           
   854                           ; 1 bytes @ 0x1B
   855  003B                     	ds	1
   856  003C                     ___ftadd@exp1:	
   857                           
   858                           ; 1 bytes @ 0x1C
   859  003C                     	ds	1
   860  003D                     ?___fttol:	
   861  003D                     ___fttol@f1:	
   862                           ; 4 bytes @ 0x1D
   863                           
   864                           
   865                           ; 3 bytes @ 0x1D
   866  003D                     	ds	4
   867  0041                     ??___fttol:	
   868                           
   869                           ; 1 bytes @ 0x21
   870  0041                     	ds	4
   871  0045                     ___fttol@sign1:	
   872                           
   873                           ; 1 bytes @ 0x25
   874  0045                     	ds	1
   875  0046                     ___fttol@lval:	
   876                           
   877                           ; 4 bytes @ 0x26
   878  0046                     	ds	4
   879  004A                     ___fttol@exp1:	
   880                           
   881                           ; 1 bytes @ 0x2A
   882  004A                     	ds	1
   883  004B                     ?_PID:	
   884  004B                     PID@setpoint:	
   885                           ; 2 bytes @ 0x2B
   886                           
   887                           
   888                           ; 2 bytes @ 0x2B
   889  004B                     	ds	2
   890  004D                     PID@read:	
   891                           
   892                           ; 2 bytes @ 0x2D
   893  004D                     	ds	2
   894  004F                     ??_PID:	
   895                           
   896                           ; 1 bytes @ 0x2F
   897  004F                     	ds	2
   898  0051                     _PID$656:	
   899                           
   900                           ; 3 bytes @ 0x31
   901  0051                     	ds	3
   902  0054                     PID@error:	
   903                           
   904                           ; 2 bytes @ 0x34
   905  0054                     	ds	2
   906  0056                     ??_main:	
   907                           
   908                           ; 1 bytes @ 0x36
   909  0056                     	ds	4
   910  005A                     main@setpoint:	
   911                           
   912                           ; 2 bytes @ 0x3A
   913  005A                     	ds	2
   914  005C                     main@timer1:	
   915                           
   916                           ; 2 bytes @ 0x3C
   917  005C                     	ds	2
   918                           
   919                           	psect	maintext
   920  14FC                     __pmaintext:	
   921 ;;
   922 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   923 ;;
   924 ;; *************** function _main *****************
   925 ;; Defined at:
   926 ;;		line 57 in file "main.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;		None
   929 ;; Auto vars:     Size  Location     Type
   930 ;;  str            33    0[BANK1 ] unsigned char [33]
   931 ;;  D3             28   28[BANK3 ] struct .
   932 ;;  D2             28    0[BANK3 ] struct .
   933 ;;  D1             28   33[BANK1 ] struct .
   934 ;;  timer1          2   60[BANK0 ] unsigned int 
   935 ;;  setpoint        2   58[BANK0 ] int 
   936 ;; Return value:  Size  Location     Type
   937 ;;                  1    wreg      void 
   938 ;; Registers used:
   939 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   940 ;; Tracked objects:
   941 ;;		On entry : B00/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   945 ;;      Params:         0       0       0       0       0
   946 ;;      Locals:         0       4      61      56       0
   947 ;;      Temps:          0       4       0       0       0
   948 ;;      Totals:         0       8      61      56       0
   949 ;;Total ram usage:      125 bytes
   950 ;; Hardware stack levels required when called:    3
   951 ;; This function calls:
   952 ;;		_LCD_init
   953 ;;		_LCD_mapping
   954 ;;		_PID
   955 ;;		_PID_init
   956 ;;		_UART_Init
   957 ;;		_UART_Write
   958 ;;		_UART_Write_Text
   959 ;;		_displayNumber
   960 ;;		_utoa
   961 ;; This function is called by:
   962 ;;		Startup code after reset
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           
   967                           ;psect for function _main
   968  14FC                     _main:	
   969                           
   970                           ;main.c: 58: MAPKEY D1, D2, D3;
   971                           ;main.c: 61: int setpoint = 25;
   972                           
   973                           ;incstack = 0
   974                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   975  14FC  3019               	movlw	25
   976  14FD  1283               	bcf	3,5	;RP0=0, select bank0
   977  14FE  1303               	bcf	3,6	;RP1=0, select bank0
   978  14FF  00DA               	movwf	main@setpoint
   979  1500  3000               	movlw	0
   980  1501  00DB               	movwf	main@setpoint+1
   981                           
   982                           ;main.c: 62: unsigned int timer1;
   983                           ;main.c: 65: char str [33];
   984                           ;main.c: 68: LCD_init();
   985  1502  160A  158A  2699  160A  118A  	fcall	_LCD_init
   986                           
   987                           ;main.c: 69: LCD_mapping(&D1,&D2,&D3);
   988  1507  3090               	movlw	(low (main@D2| (0+256)))& (0+255)
   989  1508  1283               	bcf	3,5	;RP0=0, select bank0
   990  1509  1303               	bcf	3,6	;RP1=0, select bank0
   991  150A  00D6               	movwf	??_main
   992  150B  0856               	movf	??_main,w
   993  150C  00F0               	movwf	LCD_mapping@D2
   994  150D  30AC               	movlw	(low (main@D3| (0+256)))& (0+255)
   995  150E  00D7               	movwf	??_main+1
   996  150F  0857               	movf	??_main+1,w
   997  1510  00F1               	movwf	LCD_mapping@D3
   998  1511  30C1               	movlw	(low (main@D1| 0))& (0+255)
   999  1512  120A  158A  2646  160A  118A  	fcall	_LCD_mapping
  1000                           
  1001                           ;main.c: 70: UART_Init(9600);
  1002  1517  3000               	movlw	0
  1003  1518  1283               	bcf	3,5	;RP0=0, select bank0
  1004  1519  1303               	bcf	3,6	;RP1=0, select bank0
  1005  151A  00A9               	movwf	UART_Init@baudrate+3
  1006  151B  3000               	movlw	0
  1007  151C  00A8               	movwf	UART_Init@baudrate+2
  1008  151D  3025               	movlw	37
  1009  151E  00A7               	movwf	UART_Init@baudrate+1
  1010  151F  3080               	movlw	128
  1011  1520  00A6               	movwf	UART_Init@baudrate
  1012  1521  160A  118A  20C7  160A  118A  	fcall	_UART_Init
  1013                           
  1014                           ;main.c: 71: PID_init();
  1015  1526  160A  158A  26B2  160A  118A  	fcall	_PID_init
  1016                           
  1017                           ;main.c: 74: TRISD = 0x00;
  1018  152B  1683               	bsf	3,5	;RP0=1, select bank1
  1019  152C  1303               	bcf	3,6	;RP1=0, select bank1
  1020  152D  0188               	clrf	8	;volatile
  1021                           
  1022                           ;main.c: 75: OSCCON = 0x70;
  1023  152E  3070               	movlw	112
  1024  152F  008F               	movwf	15	;volatile
  1025                           
  1026                           ;main.c: 76: PR2 = 0x3F;
  1027  1530  303F               	movlw	63
  1028  1531  0092               	movwf	18	;volatile
  1029                           
  1030                           ;main.c: 77: INTCON = 0;
  1031  1532  018B               	clrf	11	;volatile
  1032                           
  1033                           ;main.c: 78: CCPR2L = 0;
  1034  1533  1283               	bcf	3,5	;RP0=0, select bank0
  1035  1534  1303               	bcf	3,6	;RP1=0, select bank0
  1036  1535  019B               	clrf	27	;volatile
  1037                           
  1038                           ;main.c: 79: CCP2CON = 0x0C;
  1039  1536  300C               	movlw	12
  1040  1537  009D               	movwf	29	;volatile
  1041                           
  1042                           ;main.c: 80: T2CON = 0x04;
  1043  1538  3004               	movlw	4
  1044  1539  0092               	movwf	18	;volatile
  1045                           
  1046                           ;main.c: 83: TRISC |= (1 << RC5);
  1047  153A  3001               	movlw	1
  1048  153B  00D6               	movwf	??_main
  1049  153C  3000               	movlw	0
  1050  153D  1A87               	btfsc	7,5	;volatile
  1051  153E  3001               	movlw	1
  1052  153F  3E01               	addlw	1
  1053  1540  2D43               	goto	u3864
  1054  1541                     u3865:	
  1055  1541  1003               	clrc
  1056  1542  0DD6               	rlf	??_main,f
  1057  1543                     u3864:	
  1058  1543  3EFF               	addlw	-1
  1059  1544  1D03               	skipz
  1060  1545  2D41               	goto	u3865
  1061  1546  0856               	movf	??_main,w
  1062  1547  00D7               	movwf	??_main+1
  1063  1548  0857               	movf	??_main+1,w
  1064  1549  1683               	bsf	3,5	;RP0=1, select bank1
  1065  154A  1303               	bcf	3,6	;RP1=0, select bank1
  1066  154B  0487               	iorwf	7,f	;volatile
  1067                           
  1068                           ;main.c: 87: T1CON |= (1 << TMR1ON) | (1 << TMR1CS) | (1 << T1SYNC);
  1069  154C  3001               	movlw	1
  1070  154D  1283               	bcf	3,5	;RP0=0, select bank0
  1071  154E  1303               	bcf	3,6	;RP1=0, select bank0
  1072  154F  00D6               	movwf	??_main
  1073  1550  3000               	movlw	0
  1074  1551  1910               	btfsc	16,2	;volatile
  1075  1552  3001               	movlw	1
  1076  1553  3E01               	addlw	1
  1077  1554  2D57               	goto	u3874
  1078  1555                     u3875:	
  1079  1555  1003               	clrc
  1080  1556  0DD6               	rlf	??_main,f
  1081  1557                     u3874:	
  1082  1557  3EFF               	addlw	-1
  1083  1558  1D03               	skipz
  1084  1559  2D55               	goto	u3875
  1085  155A  3001               	movlw	1
  1086  155B  00D7               	movwf	??_main+1
  1087  155C  3000               	movlw	0
  1088  155D  1890               	btfsc	16,1	;volatile
  1089  155E  3001               	movlw	1
  1090  155F  3E01               	addlw	1
  1091  1560  2D63               	goto	u3884
  1092  1561                     u3885:	
  1093  1561  1003               	clrc
  1094  1562  0DD7               	rlf	??_main+1,f
  1095  1563                     u3884:	
  1096  1563  3EFF               	addlw	-1
  1097  1564  1D03               	skipz
  1098  1565  2D61               	goto	u3885
  1099  1566  3001               	movlw	1
  1100  1567  00D8               	movwf	??_main+2
  1101  1568  3000               	movlw	0
  1102  1569  1810               	btfsc	16,0	;volatile
  1103  156A  3001               	movlw	1
  1104  156B  3E01               	addlw	1
  1105  156C  2D6F               	goto	u3894
  1106  156D                     u3895:	
  1107  156D  1003               	clrc
  1108  156E  0DD8               	rlf	??_main+2,f
  1109  156F                     u3894:	
  1110  156F  3EFF               	addlw	-1
  1111  1570  1D03               	skipz
  1112  1571  2D6D               	goto	u3895
  1113  1572  0858               	movf	??_main+2,w
  1114  1573  0457               	iorwf	??_main+1,w
  1115  1574  0456               	iorwf	??_main,w
  1116  1575  00D9               	movwf	??_main+3
  1117  1576  0859               	movf	??_main+3,w
  1118  1577  0490               	iorwf	16,f	;volatile
  1119                           
  1120                           ;main.c: 89: PORTD |= (1 << RD7);
  1121  1578  3001               	movlw	1
  1122  1579  00D6               	movwf	??_main
  1123  157A  3000               	movlw	0
  1124  157B  1B88               	btfsc	8,7	;volatile
  1125  157C  3001               	movlw	1
  1126  157D  3E01               	addlw	1
  1127  157E  2D81               	goto	u3904
  1128  157F                     u3905:	
  1129  157F  1003               	clrc
  1130  1580  0DD6               	rlf	??_main,f
  1131  1581                     u3904:	
  1132  1581  3EFF               	addlw	-1
  1133  1582  1D03               	skipz
  1134  1583  2D7F               	goto	u3905
  1135  1584  0856               	movf	??_main,w
  1136  1585  00D7               	movwf	??_main+1
  1137  1586  0857               	movf	??_main+1,w
  1138  1587  0488               	iorwf	8,f	;volatile
  1139                           
  1140                           ;main.c: 91: TMR1H = 0;
  1141  1588  018F               	clrf	15	;volatile
  1142                           
  1143                           ;main.c: 92: TMR1L = 0;
  1144  1589  018E               	clrf	14	;volatile
  1145  158A                     l1862:	
  1146                           ;main.c: 94: while(1) {
  1147                           
  1148                           
  1149                           ;main.c: 97: timer1 = (TMR1H << 8) + TMR1L;
  1150  158A  1283               	bcf	3,5	;RP0=0, select bank0
  1151  158B  1303               	bcf	3,6	;RP1=0, select bank0
  1152  158C  080F               	movf	15,w	;volatile
  1153  158D  00DD               	movwf	main@timer1+1
  1154  158E  080E               	movf	14,w	;volatile
  1155  158F  00DC               	movwf	main@timer1
  1156                           
  1157                           ;main.c: 100: displayNumber(timer1, &D1, &D2, &D3);
  1158  1590  085D               	movf	main@timer1+1,w
  1159  1591  00AA               	movwf	displayNumber@num+1
  1160  1592  085C               	movf	main@timer1,w
  1161  1593  00A9               	movwf	displayNumber@num
  1162  1594  30C1               	movlw	(low (main@D1| 0))& (0+255)
  1163  1595  00D6               	movwf	??_main
  1164  1596  0856               	movf	??_main,w
  1165  1597  00AB               	movwf	displayNumber@D1
  1166  1598  3090               	movlw	(low (main@D2| (0+256)))& (0+255)
  1167  1599  00D7               	movwf	??_main+1
  1168  159A  0857               	movf	??_main+1,w
  1169  159B  00AC               	movwf	displayNumber@D2
  1170  159C  30AC               	movlw	(low (main@D3| (0+256)))& (0+255)
  1171  159D  00D8               	movwf	??_main+2
  1172  159E  0858               	movf	??_main+2,w
  1173  159F  00AD               	movwf	displayNumber@D3
  1174  15A0  120A  158A  2010  160A  118A  	fcall	_displayNumber
  1175                           
  1176                           ;main.c: 103: CCPR2L = PID(setpoint, timer1);
  1177  15A5  1283               	bcf	3,5	;RP0=0, select bank0
  1178  15A6  1303               	bcf	3,6	;RP1=0, select bank0
  1179  15A7  085B               	movf	main@setpoint+1,w
  1180  15A8  00CC               	movwf	PID@setpoint+1
  1181  15A9  085A               	movf	main@setpoint,w
  1182  15AA  00CB               	movwf	PID@setpoint
  1183  15AB  085D               	movf	main@timer1+1,w
  1184  15AC  00CE               	movwf	PID@read+1
  1185  15AD  085C               	movf	main@timer1,w
  1186  15AE  00CD               	movwf	PID@read
  1187  15AF  160A  118A  2370  160A  118A  	fcall	_PID
  1188  15B4  1283               	bcf	3,5	;RP0=0, select bank0
  1189  15B5  1303               	bcf	3,6	;RP1=0, select bank0
  1190  15B6  084B               	movf	?_PID,w
  1191  15B7  009B               	movwf	27	;volatile
  1192                           
  1193                           ;main.c: 106: utoa(str, timer1, 10);
  1194  15B8  085D               	movf	main@timer1+1,w
  1195  15B9  00F9               	movwf	utoa@val+1
  1196  15BA  085C               	movf	main@timer1,w
  1197  15BB  00F8               	movwf	utoa@val
  1198  15BC  300A               	movlw	10
  1199  15BD  00FA               	movwf	utoa@base
  1200  15BE  3000               	movlw	0
  1201  15BF  00FB               	movwf	utoa@base+1
  1202  15C0  30A0               	movlw	(low (main@str| 0))& (0+255)
  1203  15C1  160A  118A  205B  160A  118A  	fcall	_utoa
  1204                           
  1205                           ;main.c: 107: UART_Write_Text(str);
  1206  15C6  30A0               	movlw	(low (main@str| 0))& (0+255)
  1207  15C7  160A  158A  26CD  160A  118A  	fcall	_UART_Write_Text
  1208                           
  1209                           ;main.c: 108: UART_Write('\n');
  1210  15CC  300A               	movlw	10
  1211  15CD  120A  158A  2006  160A  118A  	fcall	_UART_Write
  1212                           
  1213                           ;main.c: 112: TMR1H = 0;
  1214  15D2  1283               	bcf	3,5	;RP0=0, select bank0
  1215  15D3  1303               	bcf	3,6	;RP1=0, select bank0
  1216  15D4  018F               	clrf	15	;volatile
  1217                           
  1218                           ;main.c: 113: TMR1L = 0;
  1219  15D5  018E               	clrf	14	;volatile
  1220                           
  1221                           ;main.c: 116: _delay((unsigned long)((600)*(8000000/4000.0)));
  1222  15D6  3007               	movlw	7
  1223  15D7  1283               	bcf	3,5	;RP0=0, select bank0
  1224  15D8  1303               	bcf	3,6	;RP1=0, select bank0
  1225  15D9  00D8               	movwf	??_main+2
  1226  15DA  3017               	movlw	23
  1227  15DB  00D7               	movwf	??_main+1
  1228  15DC  3069               	movlw	105
  1229  15DD  00D6               	movwf	??_main
  1230  15DE                     u3917:	
  1231  15DE  0BD6               	decfsz	??_main,f
  1232  15DF  2DDE               	goto	u3917
  1233  15E0  0BD7               	decfsz	??_main+1,f
  1234  15E1  2DDE               	goto	u3917
  1235  15E2  0BD8               	decfsz	??_main+2,f
  1236  15E3  2DDE               	goto	u3917
  1237  15E4  2DE5               	nop2
  1238  15E5  2D8A               	goto	l1862
  1239  15E6                     __end_of_main:	
  1240                           ;main.c: 117: }
  1241                           ;main.c: 119: return;
  1242                           
  1243                           
  1244                           	psect	text1
  1245  105B                     __ptext1:	
  1246 ;; *************** function _utoa *****************
  1247 ;; Defined at:
  1248 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\itoa.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;  buf             1    wreg     PTR unsigned char 
  1251 ;;		 -> main@str(33), 
  1252 ;;  val             2    8[COMMON] unsigned int 
  1253 ;;  base            2   10[COMMON] int 
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  1256 ;;		 -> main@str(33), 
  1257 ;;  v               2    0[BANK0 ] unsigned int 
  1258 ;;  c               1    2[BANK0 ] unsigned char 
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      PTR unsigned char 
  1261 ;; Registers used:
  1262 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1268 ;;      Params:         4       0       0       0       0
  1269 ;;      Locals:         0       4       0       0       0
  1270 ;;      Temps:          1       0       0       0       0
  1271 ;;      Totals:         5       4       0       0       0
  1272 ;;Total ram usage:        9 bytes
  1273 ;; Hardware stack levels used:    1
  1274 ;; Hardware stack levels required when called:    1
  1275 ;; This function calls:
  1276 ;;		___lwdiv
  1277 ;;		___lwmod
  1278 ;; This function is called by:
  1279 ;;		_main
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           
  1284                           ;psect for function _utoa
  1285  105B                     _utoa:	
  1286                           
  1287                           ;incstack = 0
  1288                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1289                           ;utoa@buf stored from wreg
  1290  105B  1283               	bcf	3,5	;RP0=0, select bank0
  1291  105C  1303               	bcf	3,6	;RP1=0, select bank0
  1292  105D  00A3               	movwf	utoa@buf
  1293  105E  0879               	movf	utoa@val+1,w
  1294  105F  00A1               	movwf	utoa@v+1
  1295  1060  0878               	movf	utoa@val,w
  1296  1061  00A0               	movwf	utoa@v
  1297  1062                     l1792:	
  1298  1062  087B               	movf	utoa@base+1,w
  1299  1063  00F1               	movwf	___lwdiv@divisor+1
  1300  1064  087A               	movf	utoa@base,w
  1301  1065  00F0               	movwf	___lwdiv@divisor
  1302  1066  0821               	movf	utoa@v+1,w
  1303  1067  00F3               	movwf	___lwdiv@dividend+1
  1304  1068  0820               	movf	utoa@v,w
  1305  1069  00F2               	movwf	___lwdiv@dividend
  1306  106A  160A  158A  270D  160A  118A  	fcall	___lwdiv
  1307  106F  0871               	movf	?___lwdiv+1,w
  1308  1070  1283               	bcf	3,5	;RP0=0, select bank0
  1309  1071  1303               	bcf	3,6	;RP1=0, select bank0
  1310  1072  00A1               	movwf	utoa@v+1
  1311  1073  0870               	movf	?___lwdiv,w
  1312  1074  00A0               	movwf	utoa@v
  1313  1075  3001               	movlw	1
  1314  1076  00FC               	movwf	??_utoa
  1315  1077  087C               	movf	??_utoa,w
  1316  1078  07A3               	addwf	utoa@buf,f
  1317  1079  0820               	movf	utoa@v,w
  1318  107A  0421               	iorwf	utoa@v+1,w
  1319  107B  1D03               	btfss	3,2
  1320  107C  2862               	goto	l1792
  1321  107D  0823               	movf	utoa@buf,w
  1322  107E  0084               	movwf	4
  1323  107F  1383               	bcf	3,7	;select IRP bank0
  1324  1080  0180               	clrf	0
  1325  1081  3001               	movlw	1
  1326  1082  02A3               	subwf	utoa@buf,f
  1327  1083                     l1802:	
  1328  1083  087B               	movf	utoa@base+1,w
  1329  1084  00F1               	movwf	___lwmod@divisor+1
  1330  1085  087A               	movf	utoa@base,w
  1331  1086  00F0               	movwf	___lwmod@divisor
  1332  1087  0879               	movf	utoa@val+1,w
  1333  1088  00F3               	movwf	___lwmod@dividend+1
  1334  1089  0878               	movf	utoa@val,w
  1335  108A  00F2               	movwf	___lwmod@dividend
  1336  108B  120A  118A  2007  160A  118A  	fcall	___lwmod
  1337  1090  0870               	movf	?___lwmod,w
  1338  1091  00FC               	movwf	??_utoa
  1339  1092  087C               	movf	??_utoa,w
  1340  1093  1283               	bcf	3,5	;RP0=0, select bank0
  1341  1094  1303               	bcf	3,6	;RP1=0, select bank0
  1342  1095  00A2               	movwf	utoa@c
  1343  1096  087B               	movf	utoa@base+1,w
  1344  1097  00F1               	movwf	___lwdiv@divisor+1
  1345  1098  087A               	movf	utoa@base,w
  1346  1099  00F0               	movwf	___lwdiv@divisor
  1347  109A  0879               	movf	utoa@val+1,w
  1348  109B  00F3               	movwf	___lwdiv@dividend+1
  1349  109C  0878               	movf	utoa@val,w
  1350  109D  00F2               	movwf	___lwdiv@dividend
  1351  109E  160A  158A  270D  160A  118A  	fcall	___lwdiv
  1352  10A3  0871               	movf	?___lwdiv+1,w
  1353  10A4  00F9               	movwf	utoa@val+1
  1354  10A5  0870               	movf	?___lwdiv,w
  1355  10A6  00F8               	movwf	utoa@val
  1356  10A7  300A               	movlw	10
  1357  10A8  1283               	bcf	3,5	;RP0=0, select bank0
  1358  10A9  1303               	bcf	3,6	;RP1=0, select bank0
  1359  10AA  0222               	subwf	utoa@c,w
  1360  10AB  1C03               	skipc
  1361  10AC  28B1               	goto	l557
  1362  10AD  3007               	movlw	7
  1363  10AE  00FC               	movwf	??_utoa
  1364  10AF  087C               	movf	??_utoa,w
  1365  10B0  07A2               	addwf	utoa@c,f
  1366  10B1                     l557:	
  1367  10B1  3030               	movlw	48
  1368  10B2  00FC               	movwf	??_utoa
  1369  10B3  087C               	movf	??_utoa,w
  1370  10B4  07A2               	addwf	utoa@c,f
  1371  10B5  0822               	movf	utoa@c,w
  1372  10B6  00FC               	movwf	??_utoa
  1373  10B7  0823               	movf	utoa@buf,w
  1374  10B8  0084               	movwf	4
  1375  10B9  087C               	movf	??_utoa,w
  1376  10BA  1383               	bcf	3,7	;select IRP bank0
  1377  10BB  0080               	movwf	0
  1378  10BC  3001               	movlw	1
  1379  10BD  02A3               	subwf	utoa@buf,f
  1380  10BE  0878               	movf	utoa@val,w
  1381  10BF  0479               	iorwf	utoa@val+1,w
  1382  10C0  1D03               	btfss	3,2
  1383  10C1  2883               	goto	l1802
  1384                           
  1385                           ;	Return value of _utoa is never used
  1386  10C2  3001               	movlw	1
  1387  10C3  00FC               	movwf	??_utoa
  1388  10C4  087C               	movf	??_utoa,w
  1389  10C5  07A3               	addwf	utoa@buf,f
  1390  10C6  0008               	return
  1391  10C7                     __end_of_utoa:	
  1392                           
  1393                           	psect	text2
  1394  0007                     __ptext2:	
  1395 ;; *************** function ___lwmod *****************
  1396 ;; Defined at:
  1397 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;  divisor         2    0[COMMON] unsigned int 
  1400 ;;  dividend        2    2[COMMON] unsigned int 
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;  counter         1    5[COMMON] unsigned char 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  2    0[COMMON] unsigned int 
  1405 ;; Registers used:
  1406 ;;		wreg, status,2, status,0
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1412 ;;      Params:         4       0       0       0       0
  1413 ;;      Locals:         1       0       0       0       0
  1414 ;;      Temps:          1       0       0       0       0
  1415 ;;      Totals:         6       0       0       0       0
  1416 ;;Total ram usage:        6 bytes
  1417 ;; Hardware stack levels used:    1
  1418 ;; This function calls:
  1419 ;;		Nothing
  1420 ;; This function is called by:
  1421 ;;		_utoa
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           
  1426                           ;psect for function ___lwmod
  1427  0007                     ___lwmod:	
  1428                           
  1429                           ;incstack = 0
  1430                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1431  0007  0870               	movf	___lwmod@divisor,w
  1432  0008  0471               	iorwf	___lwmod@divisor+1,w
  1433  0009  1903               	btfsc	3,2
  1434  000A  2834               	goto	l1706
  1435  000B  01F5               	clrf	___lwmod@counter
  1436  000C  0AF5               	incf	___lwmod@counter,f
  1437  000D                     l1696:	
  1438  000D  1BF1               	btfsc	___lwmod@divisor+1,7
  1439  000E  281B               	goto	l1698
  1440  000F  3001               	movlw	1
  1441  0010                     u3735:	
  1442  0010  1003               	clrc
  1443  0011  0DF0               	rlf	___lwmod@divisor,f
  1444  0012  0DF1               	rlf	___lwmod@divisor+1,f
  1445  0013  3EFF               	addlw	-1
  1446  0014  1D03               	skipz
  1447  0015  2810               	goto	u3735
  1448  0016  3001               	movlw	1
  1449  0017  00F4               	movwf	??___lwmod
  1450  0018  0874               	movf	??___lwmod,w
  1451  0019  07F5               	addwf	___lwmod@counter,f
  1452  001A  280D               	goto	l1696
  1453  001B                     l1698:	
  1454  001B  0871               	movf	___lwmod@divisor+1,w
  1455  001C  0273               	subwf	___lwmod@dividend+1,w
  1456  001D  1D03               	skipz
  1457  001E  2821               	goto	u3755
  1458  001F  0870               	movf	___lwmod@divisor,w
  1459  0020  0272               	subwf	___lwmod@dividend,w
  1460  0021                     u3755:	
  1461  0021  1C03               	skipc
  1462  0022  2829               	goto	l1702
  1463  0023  0870               	movf	___lwmod@divisor,w
  1464  0024  02F2               	subwf	___lwmod@dividend,f
  1465  0025  0871               	movf	___lwmod@divisor+1,w
  1466  0026  1C03               	skipc
  1467  0027  03F3               	decf	___lwmod@dividend+1,f
  1468  0028  02F3               	subwf	___lwmod@dividend+1,f
  1469  0029                     l1702:	
  1470  0029  3001               	movlw	1
  1471  002A                     u3765:	
  1472  002A  1003               	clrc
  1473  002B  0CF1               	rrf	___lwmod@divisor+1,f
  1474  002C  0CF0               	rrf	___lwmod@divisor,f
  1475  002D  3EFF               	addlw	-1
  1476  002E  1D03               	skipz
  1477  002F  282A               	goto	u3765
  1478  0030  3001               	movlw	1
  1479  0031  02F5               	subwf	___lwmod@counter,f
  1480  0032  1D03               	btfss	3,2
  1481  0033  281B               	goto	l1698
  1482  0034                     l1706:	
  1483  0034  0873               	movf	___lwmod@dividend+1,w
  1484  0035  00F1               	movwf	?___lwmod+1
  1485  0036  0872               	movf	___lwmod@dividend,w
  1486  0037  00F0               	movwf	?___lwmod
  1487  0038  0008               	return
  1488  0039                     __end_of___lwmod:	
  1489                           
  1490                           	psect	text3
  1491  1F0D                     __ptext3:	
  1492 ;; *************** function ___lwdiv *****************
  1493 ;; Defined at:
  1494 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  divisor         2    0[COMMON] unsigned int 
  1497 ;;  dividend        2    2[COMMON] unsigned int 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  quotient        2    5[COMMON] unsigned int 
  1500 ;;  counter         1    7[COMMON] unsigned char 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  2    0[COMMON] unsigned int 
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, status,0
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1510 ;;      Params:         4       0       0       0       0
  1511 ;;      Locals:         3       0       0       0       0
  1512 ;;      Temps:          1       0       0       0       0
  1513 ;;      Totals:         8       0       0       0       0
  1514 ;;Total ram usage:        8 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; This function calls:
  1517 ;;		Nothing
  1518 ;; This function is called by:
  1519 ;;		_utoa
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           
  1524                           ;psect for function ___lwdiv
  1525  1F0D                     ___lwdiv:	
  1526                           
  1527                           ;incstack = 0
  1528                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1529  1F0D  01F5               	clrf	___lwdiv@quotient
  1530  1F0E  01F6               	clrf	___lwdiv@quotient+1
  1531  1F0F  0870               	movf	___lwdiv@divisor,w
  1532  1F10  0471               	iorwf	___lwdiv@divisor+1,w
  1533  1F11  1903               	btfsc	3,2
  1534  1F12  2F44               	goto	l1684
  1535  1F13  01F7               	clrf	___lwdiv@counter
  1536  1F14  0AF7               	incf	___lwdiv@counter,f
  1537  1F15                     l1672:	
  1538  1F15  1BF1               	btfsc	___lwdiv@divisor+1,7
  1539  1F16  2F23               	goto	l1674
  1540  1F17  3001               	movlw	1
  1541  1F18                     u3665:	
  1542  1F18  1003               	clrc
  1543  1F19  0DF0               	rlf	___lwdiv@divisor,f
  1544  1F1A  0DF1               	rlf	___lwdiv@divisor+1,f
  1545  1F1B  3EFF               	addlw	-1
  1546  1F1C  1D03               	skipz
  1547  1F1D  2F18               	goto	u3665
  1548  1F1E  3001               	movlw	1
  1549  1F1F  00F4               	movwf	??___lwdiv
  1550  1F20  0874               	movf	??___lwdiv,w
  1551  1F21  07F7               	addwf	___lwdiv@counter,f
  1552  1F22  2F15               	goto	l1672
  1553  1F23                     l1674:	
  1554  1F23  3001               	movlw	1
  1555  1F24                     u3685:	
  1556  1F24  1003               	clrc
  1557  1F25  0DF5               	rlf	___lwdiv@quotient,f
  1558  1F26  0DF6               	rlf	___lwdiv@quotient+1,f
  1559  1F27  3EFF               	addlw	-1
  1560  1F28  1D03               	skipz
  1561  1F29  2F24               	goto	u3685
  1562  1F2A  0871               	movf	___lwdiv@divisor+1,w
  1563  1F2B  0273               	subwf	___lwdiv@dividend+1,w
  1564  1F2C  1D03               	skipz
  1565  1F2D  2F30               	goto	u3695
  1566  1F2E  0870               	movf	___lwdiv@divisor,w
  1567  1F2F  0272               	subwf	___lwdiv@dividend,w
  1568  1F30                     u3695:	
  1569  1F30  1C03               	skipc
  1570  1F31  2F39               	goto	l1680
  1571  1F32  0870               	movf	___lwdiv@divisor,w
  1572  1F33  02F2               	subwf	___lwdiv@dividend,f
  1573  1F34  0871               	movf	___lwdiv@divisor+1,w
  1574  1F35  1C03               	skipc
  1575  1F36  03F3               	decf	___lwdiv@dividend+1,f
  1576  1F37  02F3               	subwf	___lwdiv@dividend+1,f
  1577  1F38  1475               	bsf	___lwdiv@quotient,0
  1578  1F39                     l1680:	
  1579  1F39  3001               	movlw	1
  1580  1F3A                     u3705:	
  1581  1F3A  1003               	clrc
  1582  1F3B  0CF1               	rrf	___lwdiv@divisor+1,f
  1583  1F3C  0CF0               	rrf	___lwdiv@divisor,f
  1584  1F3D  3EFF               	addlw	-1
  1585  1F3E  1D03               	skipz
  1586  1F3F  2F3A               	goto	u3705
  1587  1F40  3001               	movlw	1
  1588  1F41  02F7               	subwf	___lwdiv@counter,f
  1589  1F42  1D03               	btfss	3,2
  1590  1F43  2F23               	goto	l1674
  1591  1F44                     l1684:	
  1592  1F44  0876               	movf	___lwdiv@quotient+1,w
  1593  1F45  00F1               	movwf	?___lwdiv+1
  1594  1F46  0875               	movf	___lwdiv@quotient,w
  1595  1F47  00F0               	movwf	?___lwdiv
  1596  1F48  0008               	return
  1597  1F49                     __end_of___lwdiv:	
  1598                           
  1599                           	psect	text4
  1600  0810                     __ptext4:	
  1601 ;; *************** function _displayNumber *****************
  1602 ;; Defined at:
  1603 ;;		line 69 in file "lcd.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  num             2    9[BANK0 ] int 
  1606 ;;  D1              1   11[BANK0 ] PTR struct .
  1607 ;;		 -> main@D1(28), 
  1608 ;;  D2              1   12[BANK0 ] PTR struct .
  1609 ;;		 -> main@D2(28), 
  1610 ;;  D3              1   13[BANK0 ] PTR struct .
  1611 ;;		 -> main@D3(28), 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;		None
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1623 ;;      Params:         0       5       0       0       0
  1624 ;;      Locals:         0       0       0       0       0
  1625 ;;      Temps:          0       0       0       0       0
  1626 ;;      Totals:         0       5       0       0       0
  1627 ;;Total ram usage:        5 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    1
  1630 ;; This function calls:
  1631 ;;		___awdiv
  1632 ;;		___awmod
  1633 ;;		_displayDigit
  1634 ;; This function is called by:
  1635 ;;		_main
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           
  1640                           ;psect for function _displayNumber
  1641  0810                     _displayNumber:	
  1642                           
  1643                           ;lcd.c: 71: displayDigit(num/100, D3 );
  1644                           
  1645                           ;incstack = 0
  1646                           ; Regs used in _displayNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1647  0810  3064               	movlw	100
  1648  0811  00F0               	movwf	___awdiv@divisor
  1649  0812  3000               	movlw	0
  1650  0813  00F1               	movwf	___awdiv@divisor+1
  1651  0814  1283               	bcf	3,5	;RP0=0, select bank0
  1652  0815  1303               	bcf	3,6	;RP1=0, select bank0
  1653  0816  082A               	movf	displayNumber@num+1,w
  1654  0817  00F3               	movwf	___awdiv@dividend+1
  1655  0818  0829               	movf	displayNumber@num,w
  1656  0819  00F2               	movwf	___awdiv@dividend
  1657  081A  160A  118A  2002  120A  158A  	fcall	___awdiv
  1658  081F  0871               	movf	?___awdiv+1,w
  1659  0820  00FA               	movwf	displayDigit@digito+1
  1660  0821  0870               	movf	?___awdiv,w
  1661  0822  00F9               	movwf	displayDigit@digito
  1662  0823  1283               	bcf	3,5	;RP0=0, select bank0
  1663  0824  1303               	bcf	3,6	;RP1=0, select bank0
  1664  0825  082D               	movf	displayNumber@D3,w
  1665  0826  00FB               	movwf	displayDigit@D1
  1666  0827  3001               	movlw	1
  1667  0828  00FC               	movwf	displayDigit@D1+1
  1668  0829  120A  158A  2085  120A  158A  	fcall	_displayDigit
  1669                           
  1670                           ;lcd.c: 72: num %=100;
  1671  082E  3064               	movlw	100
  1672  082F  00F0               	movwf	___awmod@divisor
  1673  0830  3000               	movlw	0
  1674  0831  00F1               	movwf	___awmod@divisor+1
  1675  0832  1283               	bcf	3,5	;RP0=0, select bank0
  1676  0833  1303               	bcf	3,6	;RP1=0, select bank0
  1677  0834  082A               	movf	displayNumber@num+1,w
  1678  0835  00F3               	movwf	___awmod@dividend+1
  1679  0836  0829               	movf	displayNumber@num,w
  1680  0837  00F2               	movwf	___awmod@dividend
  1681  0838  160A  158A  2749  120A  158A  	fcall	___awmod
  1682  083D  0871               	movf	?___awmod+1,w
  1683  083E  1283               	bcf	3,5	;RP0=0, select bank0
  1684  083F  1303               	bcf	3,6	;RP1=0, select bank0
  1685  0840  00AA               	movwf	displayNumber@num+1
  1686  0841  0870               	movf	?___awmod,w
  1687  0842  00A9               	movwf	displayNumber@num
  1688                           
  1689                           ;lcd.c: 74: displayDigit(num/10, D2);
  1690  0843  300A               	movlw	10
  1691  0844  00F0               	movwf	___awdiv@divisor
  1692  0845  3000               	movlw	0
  1693  0846  00F1               	movwf	___awdiv@divisor+1
  1694  0847  082A               	movf	displayNumber@num+1,w
  1695  0848  00F3               	movwf	___awdiv@dividend+1
  1696  0849  0829               	movf	displayNumber@num,w
  1697  084A  00F2               	movwf	___awdiv@dividend
  1698  084B  160A  118A  2002  120A  158A  	fcall	___awdiv
  1699  0850  0871               	movf	?___awdiv+1,w
  1700  0851  00FA               	movwf	displayDigit@digito+1
  1701  0852  0870               	movf	?___awdiv,w
  1702  0853  00F9               	movwf	displayDigit@digito
  1703  0854  1283               	bcf	3,5	;RP0=0, select bank0
  1704  0855  1303               	bcf	3,6	;RP1=0, select bank0
  1705  0856  082C               	movf	displayNumber@D2,w
  1706  0857  00FB               	movwf	displayDigit@D1
  1707  0858  3001               	movlw	1
  1708  0859  00FC               	movwf	displayDigit@D1+1
  1709  085A  120A  158A  2085  120A  158A  	fcall	_displayDigit
  1710                           
  1711                           ;lcd.c: 75: num %=10;
  1712  085F  300A               	movlw	10
  1713  0860  00F0               	movwf	___awmod@divisor
  1714  0861  3000               	movlw	0
  1715  0862  00F1               	movwf	___awmod@divisor+1
  1716  0863  1283               	bcf	3,5	;RP0=0, select bank0
  1717  0864  1303               	bcf	3,6	;RP1=0, select bank0
  1718  0865  082A               	movf	displayNumber@num+1,w
  1719  0866  00F3               	movwf	___awmod@dividend+1
  1720  0867  0829               	movf	displayNumber@num,w
  1721  0868  00F2               	movwf	___awmod@dividend
  1722  0869  160A  158A  2749  120A  158A  	fcall	___awmod
  1723  086E  0871               	movf	?___awmod+1,w
  1724  086F  1283               	bcf	3,5	;RP0=0, select bank0
  1725  0870  1303               	bcf	3,6	;RP1=0, select bank0
  1726  0871  00AA               	movwf	displayNumber@num+1
  1727  0872  0870               	movf	?___awmod,w
  1728  0873  00A9               	movwf	displayNumber@num
  1729                           
  1730                           ;lcd.c: 76: ((LCDDATA10) |= (1UL) << (3));
  1731  0874  1283               	bcf	3,5	;RP0=0, select bank2
  1732  0875  1703               	bsf	3,6	;RP1=1, select bank2
  1733  0876  159A               	bsf	26,3	;volatile
  1734                           
  1735                           ;lcd.c: 78: displayDigit(num, D1);
  1736  0877  1283               	bcf	3,5	;RP0=0, select bank0
  1737  0878  1303               	bcf	3,6	;RP1=0, select bank0
  1738  0879  082A               	movf	displayNumber@num+1,w
  1739  087A  00FA               	movwf	displayDigit@digito+1
  1740  087B  0829               	movf	displayNumber@num,w
  1741  087C  00F9               	movwf	displayDigit@digito
  1742  087D  082B               	movf	displayNumber@D1,w
  1743  087E  00FB               	movwf	displayDigit@D1
  1744  087F  3000               	movlw	0
  1745  0880  00FC               	movwf	displayDigit@D1+1
  1746  0881  120A  158A  2085   	fcall	_displayDigit
  1747  0884  0008               	return
  1748  0885                     __end_of_displayNumber:	
  1749                           
  1750                           	psect	text5
  1751  0885                     __ptext5:	
  1752 ;; *************** function _displayDigit *****************
  1753 ;; Defined at:
  1754 ;;		line 83 in file "lcd.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;  digito          2    9[COMMON] int 
  1757 ;;  D1              2   11[COMMON] PTR struct .
  1758 ;;		 -> main@D3(28), main@D2(28), main@D1(28), 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;		None
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1770 ;;      Params:         4       0       0       0       0
  1771 ;;      Locals:         0       0       0       0       0
  1772 ;;      Temps:          0       9       0       0       0
  1773 ;;      Totals:         4       9       0       0       0
  1774 ;;Total ram usage:       13 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_displayNumber
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           
  1784                           ;psect for function _displayDigit
  1785  0885                     _displayDigit:	
  1786                           
  1787                           ;lcd.c: 84: switch(digito){
  1788                           
  1789                           ;incstack = 0
  1790                           ; Regs used in _displayDigit: [wreg-fsr0h+status,2+status,0]
  1791  0885  120A  118A  2FB9   	goto	l1360
  1792  0888                     l1336:	
  1793                           ;lcd.c: 85: case 0:
  1794                           
  1795                           
  1796                           ;lcd.c: 86: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  1797  0888  300E               	movlw	14
  1798  0889  077B               	addwf	displayDigit@D1,w
  1799  088A  1283               	bcf	3,5	;RP0=0, select bank0
  1800  088B  1303               	bcf	3,6	;RP1=0, select bank0
  1801  088C  00A0               	movwf	??_displayDigit
  1802  088D  087C               	movf	displayDigit@D1+1,w
  1803  088E  1803               	skipnc
  1804  088F  3E01               	addlw	1
  1805  0890  00A1               	movwf	??_displayDigit+1
  1806  0891  0820               	movf	??_displayDigit,w
  1807  0892  0084               	movwf	4
  1808  0893  1783               	bsf	3,7
  1809  0894  1C21               	btfss	??_displayDigit+1,0
  1810  0895  1383               	bcf	3,7
  1811  0896  0A00               	incf	0,w
  1812  0897  00A2               	movwf	??_displayDigit+2
  1813  0898  3001               	movlw	1
  1814  0899  00A3               	movwf	??_displayDigit+3
  1815  089A  3000               	movlw	0
  1816  089B  00A4               	movwf	??_displayDigit+4
  1817  089C  28A0               	goto	u2104
  1818  089D                     u2105:	
  1819  089D  1003               	clrc
  1820  089E  0DA3               	rlf	??_displayDigit+3,f
  1821  089F  0DA4               	rlf	??_displayDigit+4,f
  1822  08A0                     u2104:	
  1823  08A0  0BA2               	decfsz	??_displayDigit+2,f
  1824  08A1  289D               	goto	u2105
  1825  08A2  087B               	movf	displayDigit@D1,w
  1826  08A3  0084               	movwf	4
  1827  08A4  1783               	bsf	3,7
  1828  08A5  1C7C               	btfss	displayDigit@D1+1,0
  1829  08A6  1383               	bcf	3,7
  1830  08A7  0800               	movf	0,w
  1831  08A8  00A5               	movwf	??_displayDigit+5
  1832  08A9  0A84               	incf	4,f
  1833  08AA  0800               	movf	0,w
  1834  08AB  00A6               	movwf	??_displayDigit+6
  1835  08AC  0825               	movf	??_displayDigit+5,w
  1836  08AD  0084               	movwf	4
  1837  08AE  1783               	bsf	3,7
  1838  08AF  1C26               	btfss	??_displayDigit+6,0
  1839  08B0  1383               	bcf	3,7
  1840  08B1  0823               	movf	??_displayDigit+3,w
  1841  08B2  0480               	iorwf	0,f
  1842  08B3  0A84               	incf	4,f
  1843  08B4  0824               	movf	??_displayDigit+4,w
  1844  08B5  0480               	iorwf	0,f
  1845                           
  1846                           ;lcd.c: 87: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  1847  08B6  3010               	movlw	16
  1848  08B7  077B               	addwf	displayDigit@D1,w
  1849  08B8  00A0               	movwf	??_displayDigit
  1850  08B9  087C               	movf	displayDigit@D1+1,w
  1851  08BA  1803               	skipnc
  1852  08BB  3E01               	addlw	1
  1853  08BC  00A1               	movwf	??_displayDigit+1
  1854  08BD  0820               	movf	??_displayDigit,w
  1855  08BE  0084               	movwf	4
  1856  08BF  1783               	bsf	3,7
  1857  08C0  1C21               	btfss	??_displayDigit+1,0
  1858  08C1  1383               	bcf	3,7
  1859  08C2  0A00               	incf	0,w
  1860  08C3  00A2               	movwf	??_displayDigit+2
  1861  08C4  3001               	movlw	1
  1862  08C5  00A3               	movwf	??_displayDigit+3
  1863  08C6  3000               	movlw	0
  1864  08C7  00A4               	movwf	??_displayDigit+4
  1865  08C8  28CC               	goto	u2114
  1866  08C9                     u2115:	
  1867  08C9  1003               	clrc
  1868  08CA  0DA3               	rlf	??_displayDigit+3,f
  1869  08CB  0DA4               	rlf	??_displayDigit+4,f
  1870  08CC                     u2114:	
  1871  08CC  0BA2               	decfsz	??_displayDigit+2,f
  1872  08CD  28C9               	goto	u2115
  1873  08CE  3002               	movlw	2
  1874  08CF  077B               	addwf	displayDigit@D1,w
  1875  08D0  00A5               	movwf	??_displayDigit+5
  1876  08D1  087C               	movf	displayDigit@D1+1,w
  1877  08D2  1803               	skipnc
  1878  08D3  3E01               	addlw	1
  1879  08D4  00A6               	movwf	??_displayDigit+6
  1880  08D5  0825               	movf	??_displayDigit+5,w
  1881  08D6  0084               	movwf	4
  1882  08D7  1783               	bsf	3,7
  1883  08D8  1C26               	btfss	??_displayDigit+6,0
  1884  08D9  1383               	bcf	3,7
  1885  08DA  0800               	movf	0,w
  1886  08DB  00A7               	movwf	??_displayDigit+7
  1887  08DC  0A84               	incf	4,f
  1888  08DD  0800               	movf	0,w
  1889  08DE  00A8               	movwf	??_displayDigit+8
  1890  08DF  0827               	movf	??_displayDigit+7,w
  1891  08E0  0084               	movwf	4
  1892  08E1  1783               	bsf	3,7
  1893  08E2  1C28               	btfss	??_displayDigit+8,0
  1894  08E3  1383               	bcf	3,7
  1895  08E4  0823               	movf	??_displayDigit+3,w
  1896  08E5  0480               	iorwf	0,f
  1897  08E6  0A84               	incf	4,f
  1898  08E7  0824               	movf	??_displayDigit+4,w
  1899  08E8  0480               	iorwf	0,f
  1900                           
  1901                           ;lcd.c: 88: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  1902  08E9  3012               	movlw	18
  1903  08EA  077B               	addwf	displayDigit@D1,w
  1904  08EB  00A0               	movwf	??_displayDigit
  1905  08EC  087C               	movf	displayDigit@D1+1,w
  1906  08ED  1803               	skipnc
  1907  08EE  3E01               	addlw	1
  1908  08EF  00A1               	movwf	??_displayDigit+1
  1909  08F0  0820               	movf	??_displayDigit,w
  1910  08F1  0084               	movwf	4
  1911  08F2  1783               	bsf	3,7
  1912  08F3  1C21               	btfss	??_displayDigit+1,0
  1913  08F4  1383               	bcf	3,7
  1914  08F5  0A00               	incf	0,w
  1915  08F6  00A2               	movwf	??_displayDigit+2
  1916  08F7  3001               	movlw	1
  1917  08F8  00A3               	movwf	??_displayDigit+3
  1918  08F9  3000               	movlw	0
  1919  08FA  00A4               	movwf	??_displayDigit+4
  1920  08FB  28FF               	goto	u2124
  1921  08FC                     u2125:	
  1922  08FC  1003               	clrc
  1923  08FD  0DA3               	rlf	??_displayDigit+3,f
  1924  08FE  0DA4               	rlf	??_displayDigit+4,f
  1925  08FF                     u2124:	
  1926  08FF  0BA2               	decfsz	??_displayDigit+2,f
  1927  0900  28FC               	goto	u2125
  1928  0901  3004               	movlw	4
  1929  0902  077B               	addwf	displayDigit@D1,w
  1930  0903  00A5               	movwf	??_displayDigit+5
  1931  0904  087C               	movf	displayDigit@D1+1,w
  1932  0905  1803               	skipnc
  1933  0906  3E01               	addlw	1
  1934  0907  00A6               	movwf	??_displayDigit+6
  1935  0908  0825               	movf	??_displayDigit+5,w
  1936  0909  0084               	movwf	4
  1937  090A  1783               	bsf	3,7
  1938  090B  1C26               	btfss	??_displayDigit+6,0
  1939  090C  1383               	bcf	3,7
  1940  090D  0800               	movf	0,w
  1941  090E  00A7               	movwf	??_displayDigit+7
  1942  090F  0A84               	incf	4,f
  1943  0910  0800               	movf	0,w
  1944  0911  00A8               	movwf	??_displayDigit+8
  1945  0912  0827               	movf	??_displayDigit+7,w
  1946  0913  0084               	movwf	4
  1947  0914  1783               	bsf	3,7
  1948  0915  1C28               	btfss	??_displayDigit+8,0
  1949  0916  1383               	bcf	3,7
  1950  0917  0823               	movf	??_displayDigit+3,w
  1951  0918  0480               	iorwf	0,f
  1952  0919  0A84               	incf	4,f
  1953  091A  0824               	movf	??_displayDigit+4,w
  1954  091B  0480               	iorwf	0,f
  1955                           
  1956                           ;lcd.c: 89: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  1957  091C  3014               	movlw	20
  1958  091D  077B               	addwf	displayDigit@D1,w
  1959  091E  00A0               	movwf	??_displayDigit
  1960  091F  087C               	movf	displayDigit@D1+1,w
  1961  0920  1803               	skipnc
  1962  0921  3E01               	addlw	1
  1963  0922  00A1               	movwf	??_displayDigit+1
  1964  0923  0820               	movf	??_displayDigit,w
  1965  0924  0084               	movwf	4
  1966  0925  1783               	bsf	3,7
  1967  0926  1C21               	btfss	??_displayDigit+1,0
  1968  0927  1383               	bcf	3,7
  1969  0928  0A00               	incf	0,w
  1970  0929  00A2               	movwf	??_displayDigit+2
  1971  092A  3001               	movlw	1
  1972  092B  00A3               	movwf	??_displayDigit+3
  1973  092C  3000               	movlw	0
  1974  092D  00A4               	movwf	??_displayDigit+4
  1975  092E  2932               	goto	u2134
  1976  092F                     u2135:	
  1977  092F  1003               	clrc
  1978  0930  0DA3               	rlf	??_displayDigit+3,f
  1979  0931  0DA4               	rlf	??_displayDigit+4,f
  1980  0932                     u2134:	
  1981  0932  0BA2               	decfsz	??_displayDigit+2,f
  1982  0933  292F               	goto	u2135
  1983  0934  3006               	movlw	6
  1984  0935  077B               	addwf	displayDigit@D1,w
  1985  0936  00A5               	movwf	??_displayDigit+5
  1986  0937  087C               	movf	displayDigit@D1+1,w
  1987  0938  1803               	skipnc
  1988  0939  3E01               	addlw	1
  1989  093A  00A6               	movwf	??_displayDigit+6
  1990  093B  0825               	movf	??_displayDigit+5,w
  1991  093C  0084               	movwf	4
  1992  093D  1783               	bsf	3,7
  1993  093E  1C26               	btfss	??_displayDigit+6,0
  1994  093F  1383               	bcf	3,7
  1995  0940  0800               	movf	0,w
  1996  0941  00A7               	movwf	??_displayDigit+7
  1997  0942  0A84               	incf	4,f
  1998  0943  0800               	movf	0,w
  1999  0944  00A8               	movwf	??_displayDigit+8
  2000  0945  0827               	movf	??_displayDigit+7,w
  2001  0946  0084               	movwf	4
  2002  0947  1783               	bsf	3,7
  2003  0948  1C28               	btfss	??_displayDigit+8,0
  2004  0949  1383               	bcf	3,7
  2005  094A  0823               	movf	??_displayDigit+3,w
  2006  094B  0480               	iorwf	0,f
  2007  094C  0A84               	incf	4,f
  2008  094D  0824               	movf	??_displayDigit+4,w
  2009  094E  0480               	iorwf	0,f
  2010                           
  2011                           ;lcd.c: 90: ((*D1->se) |= (1UL) << (D1->bits[4]));
  2012  094F  3016               	movlw	22
  2013  0950  077B               	addwf	displayDigit@D1,w
  2014  0951  00A0               	movwf	??_displayDigit
  2015  0952  087C               	movf	displayDigit@D1+1,w
  2016  0953  1803               	skipnc
  2017  0954  3E01               	addlw	1
  2018  0955  00A1               	movwf	??_displayDigit+1
  2019  0956  0820               	movf	??_displayDigit,w
  2020  0957  0084               	movwf	4
  2021  0958  1783               	bsf	3,7
  2022  0959  1C21               	btfss	??_displayDigit+1,0
  2023  095A  1383               	bcf	3,7
  2024  095B  0A00               	incf	0,w
  2025  095C  00A2               	movwf	??_displayDigit+2
  2026  095D  3001               	movlw	1
  2027  095E  00A3               	movwf	??_displayDigit+3
  2028  095F  3000               	movlw	0
  2029  0960  00A4               	movwf	??_displayDigit+4
  2030  0961  2965               	goto	u2144
  2031  0962                     u2145:	
  2032  0962  1003               	clrc
  2033  0963  0DA3               	rlf	??_displayDigit+3,f
  2034  0964  0DA4               	rlf	??_displayDigit+4,f
  2035  0965                     u2144:	
  2036  0965  0BA2               	decfsz	??_displayDigit+2,f
  2037  0966  2962               	goto	u2145
  2038  0967  3008               	movlw	8
  2039  0968  077B               	addwf	displayDigit@D1,w
  2040  0969  00A5               	movwf	??_displayDigit+5
  2041  096A  087C               	movf	displayDigit@D1+1,w
  2042  096B  1803               	skipnc
  2043  096C  3E01               	addlw	1
  2044  096D  00A6               	movwf	??_displayDigit+6
  2045  096E  0825               	movf	??_displayDigit+5,w
  2046  096F  0084               	movwf	4
  2047  0970  1783               	bsf	3,7
  2048  0971  1C26               	btfss	??_displayDigit+6,0
  2049  0972  1383               	bcf	3,7
  2050  0973  0800               	movf	0,w
  2051  0974  00A7               	movwf	??_displayDigit+7
  2052  0975  0A84               	incf	4,f
  2053  0976  0800               	movf	0,w
  2054  0977  00A8               	movwf	??_displayDigit+8
  2055  0978  0827               	movf	??_displayDigit+7,w
  2056  0979  0084               	movwf	4
  2057  097A  1783               	bsf	3,7
  2058  097B  1C28               	btfss	??_displayDigit+8,0
  2059  097C  1383               	bcf	3,7
  2060  097D  0823               	movf	??_displayDigit+3,w
  2061  097E  0480               	iorwf	0,f
  2062  097F  0A84               	incf	4,f
  2063  0980  0824               	movf	??_displayDigit+4,w
  2064  0981  0480               	iorwf	0,f
  2065                           
  2066                           ;lcd.c: 91: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  2067  0982  3018               	movlw	24
  2068  0983  077B               	addwf	displayDigit@D1,w
  2069  0984  00A0               	movwf	??_displayDigit
  2070  0985  087C               	movf	displayDigit@D1+1,w
  2071  0986  1803               	skipnc
  2072  0987  3E01               	addlw	1
  2073  0988  00A1               	movwf	??_displayDigit+1
  2074  0989  0820               	movf	??_displayDigit,w
  2075  098A  0084               	movwf	4
  2076  098B  1783               	bsf	3,7
  2077  098C  1C21               	btfss	??_displayDigit+1,0
  2078  098D  1383               	bcf	3,7
  2079  098E  0A00               	incf	0,w
  2080  098F  00A2               	movwf	??_displayDigit+2
  2081  0990  3001               	movlw	1
  2082  0991  00A3               	movwf	??_displayDigit+3
  2083  0992  3000               	movlw	0
  2084  0993  00A4               	movwf	??_displayDigit+4
  2085  0994  120A  158A  2D13   	goto	u2154
  2086                           
  2087                           	psect	text6
  2088  1F49                     __ptext6:	
  2089 ;; *************** function ___awmod *****************
  2090 ;; Defined at:
  2091 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awmod.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  divisor         2    0[COMMON] int 
  2094 ;;  dividend        2    2[COMMON] int 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  sign            1    6[COMMON] unsigned char 
  2097 ;;  counter         1    5[COMMON] unsigned char 
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  2    0[COMMON] int 
  2100 ;; Registers used:
  2101 ;;		wreg, status,2, status,0
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2107 ;;      Params:         4       0       0       0       0
  2108 ;;      Locals:         2       0       0       0       0
  2109 ;;      Temps:          1       0       0       0       0
  2110 ;;      Totals:         7       0       0       0       0
  2111 ;;Total ram usage:        7 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; This function calls:
  2114 ;;		Nothing
  2115 ;; This function is called by:
  2116 ;;		_displayNumber
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           
  2121                           ;psect for function ___awmod
  2122  1F49                     ___awmod:	
  2123                           
  2124                           ;incstack = 0
  2125                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2126  1F49  01F6               	clrf	___awmod@sign
  2127  1F4A  1FF3               	btfss	___awmod@dividend+1,7
  2128  1F4B  2F53               	goto	l1458
  2129  1F4C  09F2               	comf	___awmod@dividend,f
  2130  1F4D  09F3               	comf	___awmod@dividend+1,f
  2131  1F4E  0AF2               	incf	___awmod@dividend,f
  2132  1F4F  1903               	skipnz
  2133  1F50  0AF3               	incf	___awmod@dividend+1,f
  2134  1F51  01F6               	clrf	___awmod@sign
  2135  1F52  0AF6               	incf	___awmod@sign,f
  2136  1F53                     l1458:	
  2137  1F53  1FF1               	btfss	___awmod@divisor+1,7
  2138  1F54  2F5A               	goto	l1462
  2139  1F55  09F0               	comf	___awmod@divisor,f
  2140  1F56  09F1               	comf	___awmod@divisor+1,f
  2141  1F57  0AF0               	incf	___awmod@divisor,f
  2142  1F58  1903               	skipnz
  2143  1F59  0AF1               	incf	___awmod@divisor+1,f
  2144  1F5A                     l1462:	
  2145  1F5A  0870               	movf	___awmod@divisor,w
  2146  1F5B  0471               	iorwf	___awmod@divisor+1,w
  2147  1F5C  1903               	btfsc	3,2
  2148  1F5D  2F87               	goto	l1480
  2149  1F5E  01F5               	clrf	___awmod@counter
  2150  1F5F  0AF5               	incf	___awmod@counter,f
  2151  1F60                     l1470:	
  2152  1F60  1BF1               	btfsc	___awmod@divisor+1,7
  2153  1F61  2F6E               	goto	l1472
  2154  1F62  3001               	movlw	1
  2155  1F63                     u3105:	
  2156  1F63  1003               	clrc
  2157  1F64  0DF0               	rlf	___awmod@divisor,f
  2158  1F65  0DF1               	rlf	___awmod@divisor+1,f
  2159  1F66  3EFF               	addlw	-1
  2160  1F67  1D03               	skipz
  2161  1F68  2F63               	goto	u3105
  2162  1F69  3001               	movlw	1
  2163  1F6A  00F4               	movwf	??___awmod
  2164  1F6B  0874               	movf	??___awmod,w
  2165  1F6C  07F5               	addwf	___awmod@counter,f
  2166  1F6D  2F60               	goto	l1470
  2167  1F6E                     l1472:	
  2168  1F6E  0871               	movf	___awmod@divisor+1,w
  2169  1F6F  0273               	subwf	___awmod@dividend+1,w
  2170  1F70  1D03               	skipz
  2171  1F71  2F74               	goto	u3125
  2172  1F72  0870               	movf	___awmod@divisor,w
  2173  1F73  0272               	subwf	___awmod@dividend,w
  2174  1F74                     u3125:	
  2175  1F74  1C03               	skipc
  2176  1F75  2F7C               	goto	l1476
  2177  1F76  0870               	movf	___awmod@divisor,w
  2178  1F77  02F2               	subwf	___awmod@dividend,f
  2179  1F78  0871               	movf	___awmod@divisor+1,w
  2180  1F79  1C03               	skipc
  2181  1F7A  03F3               	decf	___awmod@dividend+1,f
  2182  1F7B  02F3               	subwf	___awmod@dividend+1,f
  2183  1F7C                     l1476:	
  2184  1F7C  3001               	movlw	1
  2185  1F7D                     u3135:	
  2186  1F7D  1003               	clrc
  2187  1F7E  0CF1               	rrf	___awmod@divisor+1,f
  2188  1F7F  0CF0               	rrf	___awmod@divisor,f
  2189  1F80  3EFF               	addlw	-1
  2190  1F81  1D03               	skipz
  2191  1F82  2F7D               	goto	u3135
  2192  1F83  3001               	movlw	1
  2193  1F84  02F5               	subwf	___awmod@counter,f
  2194  1F85  1D03               	btfss	3,2
  2195  1F86  2F6E               	goto	l1472
  2196  1F87                     l1480:	
  2197  1F87  0876               	movf	___awmod@sign,w
  2198  1F88  1903               	btfsc	3,2
  2199  1F89  2F8F               	goto	l1484
  2200  1F8A  09F2               	comf	___awmod@dividend,f
  2201  1F8B  09F3               	comf	___awmod@dividend+1,f
  2202  1F8C  0AF2               	incf	___awmod@dividend,f
  2203  1F8D  1903               	skipnz
  2204  1F8E  0AF3               	incf	___awmod@dividend+1,f
  2205  1F8F                     l1484:	
  2206  1F8F  0873               	movf	___awmod@dividend+1,w
  2207  1F90  00F1               	movwf	?___awmod+1
  2208  1F91  0872               	movf	___awmod@dividend,w
  2209  1F92  00F0               	movwf	?___awmod
  2210  1F93  0008               	return
  2211  1F94                     __end_of___awmod:	
  2212                           
  2213                           	psect	text7
  2214  1002                     __ptext7:	
  2215 ;; *************** function ___awdiv *****************
  2216 ;; Defined at:
  2217 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;  divisor         2    0[COMMON] int 
  2220 ;;  dividend        2    2[COMMON] int 
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;  quotient        2    7[COMMON] int 
  2223 ;;  sign            1    6[COMMON] unsigned char 
  2224 ;;  counter         1    5[COMMON] unsigned char 
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  2    0[COMMON] int 
  2227 ;; Registers used:
  2228 ;;		wreg, status,2, status,0
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2234 ;;      Params:         4       0       0       0       0
  2235 ;;      Locals:         4       0       0       0       0
  2236 ;;      Temps:          1       0       0       0       0
  2237 ;;      Totals:         9       0       0       0       0
  2238 ;;Total ram usage:        9 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; This function calls:
  2241 ;;		Nothing
  2242 ;; This function is called by:
  2243 ;;		_displayNumber
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           
  2248                           ;psect for function ___awdiv
  2249  1002                     ___awdiv:	
  2250                           
  2251                           ;incstack = 0
  2252                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2253  1002  01F6               	clrf	___awdiv@sign
  2254  1003  1FF1               	btfss	___awdiv@divisor+1,7
  2255  1004  280C               	goto	l1414
  2256  1005  09F0               	comf	___awdiv@divisor,f
  2257  1006  09F1               	comf	___awdiv@divisor+1,f
  2258  1007  0AF0               	incf	___awdiv@divisor,f
  2259  1008  1903               	skipnz
  2260  1009  0AF1               	incf	___awdiv@divisor+1,f
  2261  100A  01F6               	clrf	___awdiv@sign
  2262  100B  0AF6               	incf	___awdiv@sign,f
  2263  100C                     l1414:	
  2264  100C  1FF3               	btfss	___awdiv@dividend+1,7
  2265  100D  2817               	goto	l1420
  2266  100E  09F2               	comf	___awdiv@dividend,f
  2267  100F  09F3               	comf	___awdiv@dividend+1,f
  2268  1010  0AF2               	incf	___awdiv@dividend,f
  2269  1011  1903               	skipnz
  2270  1012  0AF3               	incf	___awdiv@dividend+1,f
  2271  1013  3001               	movlw	1
  2272  1014  00F4               	movwf	??___awdiv
  2273  1015  0874               	movf	??___awdiv,w
  2274  1016  06F6               	xorwf	___awdiv@sign,f
  2275  1017                     l1420:	
  2276  1017  01F7               	clrf	___awdiv@quotient
  2277  1018  01F8               	clrf	___awdiv@quotient+1
  2278  1019  0870               	movf	___awdiv@divisor,w
  2279  101A  0471               	iorwf	___awdiv@divisor+1,w
  2280  101B  1903               	btfsc	3,2
  2281  101C  284E               	goto	l1442
  2282  101D  01F5               	clrf	___awdiv@counter
  2283  101E  0AF5               	incf	___awdiv@counter,f
  2284  101F                     l1430:	
  2285  101F  1BF1               	btfsc	___awdiv@divisor+1,7
  2286  1020  282D               	goto	l1432
  2287  1021  3001               	movlw	1
  2288  1022                     u3005:	
  2289  1022  1003               	clrc
  2290  1023  0DF0               	rlf	___awdiv@divisor,f
  2291  1024  0DF1               	rlf	___awdiv@divisor+1,f
  2292  1025  3EFF               	addlw	-1
  2293  1026  1D03               	skipz
  2294  1027  2822               	goto	u3005
  2295  1028  3001               	movlw	1
  2296  1029  00F4               	movwf	??___awdiv
  2297  102A  0874               	movf	??___awdiv,w
  2298  102B  07F5               	addwf	___awdiv@counter,f
  2299  102C  281F               	goto	l1430
  2300  102D                     l1432:	
  2301  102D  3001               	movlw	1
  2302  102E                     u3025:	
  2303  102E  1003               	clrc
  2304  102F  0DF7               	rlf	___awdiv@quotient,f
  2305  1030  0DF8               	rlf	___awdiv@quotient+1,f
  2306  1031  3EFF               	addlw	-1
  2307  1032  1D03               	skipz
  2308  1033  282E               	goto	u3025
  2309  1034  0871               	movf	___awdiv@divisor+1,w
  2310  1035  0273               	subwf	___awdiv@dividend+1,w
  2311  1036  1D03               	skipz
  2312  1037  283A               	goto	u3035
  2313  1038  0870               	movf	___awdiv@divisor,w
  2314  1039  0272               	subwf	___awdiv@dividend,w
  2315  103A                     u3035:	
  2316  103A  1C03               	skipc
  2317  103B  2843               	goto	l1438
  2318  103C  0870               	movf	___awdiv@divisor,w
  2319  103D  02F2               	subwf	___awdiv@dividend,f
  2320  103E  0871               	movf	___awdiv@divisor+1,w
  2321  103F  1C03               	skipc
  2322  1040  03F3               	decf	___awdiv@dividend+1,f
  2323  1041  02F3               	subwf	___awdiv@dividend+1,f
  2324  1042  1477               	bsf	___awdiv@quotient,0
  2325  1043                     l1438:	
  2326  1043  3001               	movlw	1
  2327  1044                     u3045:	
  2328  1044  1003               	clrc
  2329  1045  0CF1               	rrf	___awdiv@divisor+1,f
  2330  1046  0CF0               	rrf	___awdiv@divisor,f
  2331  1047  3EFF               	addlw	-1
  2332  1048  1D03               	skipz
  2333  1049  2844               	goto	u3045
  2334  104A  3001               	movlw	1
  2335  104B  02F5               	subwf	___awdiv@counter,f
  2336  104C  1D03               	btfss	3,2
  2337  104D  282D               	goto	l1432
  2338  104E                     l1442:	
  2339  104E  0876               	movf	___awdiv@sign,w
  2340  104F  1903               	btfsc	3,2
  2341  1050  2856               	goto	l1446
  2342  1051  09F7               	comf	___awdiv@quotient,f
  2343  1052  09F8               	comf	___awdiv@quotient+1,f
  2344  1053  0AF7               	incf	___awdiv@quotient,f
  2345  1054  1903               	skipnz
  2346  1055  0AF8               	incf	___awdiv@quotient+1,f
  2347  1056                     l1446:	
  2348  1056  0878               	movf	___awdiv@quotient+1,w
  2349  1057  00F1               	movwf	?___awdiv+1
  2350  1058  0877               	movf	___awdiv@quotient,w
  2351  1059  00F0               	movwf	?___awdiv
  2352  105A  0008               	return
  2353  105B                     __end_of___awdiv:	
  2354                           
  2355                           	psect	text8
  2356  1ECD                     __ptext8:	
  2357 ;; *************** function _UART_Write_Text *****************
  2358 ;; Defined at:
  2359 ;;		line 36 in file "uart.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  text            1    wreg     PTR unsigned char 
  2362 ;;		 -> main@str(33), 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  text            1    4[COMMON] PTR unsigned char 
  2365 ;;		 -> main@str(33), 
  2366 ;;  i               2    2[COMMON] int 
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  1    wreg      void 
  2369 ;; Registers used:
  2370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2376 ;;      Params:         0       0       0       0       0
  2377 ;;      Locals:         3       0       0       0       0
  2378 ;;      Temps:          1       0       0       0       0
  2379 ;;      Totals:         4       0       0       0       0
  2380 ;;Total ram usage:        4 bytes
  2381 ;; Hardware stack levels used:    1
  2382 ;; Hardware stack levels required when called:    1
  2383 ;; This function calls:
  2384 ;;		_UART_Write
  2385 ;; This function is called by:
  2386 ;;		_main
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           
  2391                           ;psect for function _UART_Write_Text
  2392  1ECD                     _UART_Write_Text:	
  2393                           
  2394                           ;incstack = 0
  2395                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2396                           ;UART_Write_Text@text stored from wreg
  2397  1ECD  00F4               	movwf	UART_Write_Text@text
  2398                           
  2399                           ;uart.c: 37: int i;
  2400                           ;uart.c: 38: for (i = 0; text[i] != '\0'; i++)
  2401  1ECE  01F2               	clrf	UART_Write_Text@i
  2402  1ECF  01F3               	clrf	UART_Write_Text@i+1
  2403  1ED0                     l1826:	
  2404  1ED0  0872               	movf	UART_Write_Text@i,w
  2405  1ED1  0774               	addwf	UART_Write_Text@text,w
  2406  1ED2  00F1               	movwf	??_UART_Write_Text
  2407  1ED3  0871               	movf	??_UART_Write_Text,w
  2408  1ED4  0084               	movwf	4
  2409  1ED5  1383               	bcf	3,7	;select IRP bank0
  2410  1ED6  0800               	movf	0,w
  2411  1ED7  1903               	btfsc	3,2
  2412  1ED8  0008               	return
  2413                           
  2414                           ;uart.c: 39: UART_Write(text[i]);
  2415  1ED9  0872               	movf	UART_Write_Text@i,w
  2416  1EDA  0774               	addwf	UART_Write_Text@text,w
  2417  1EDB  00F1               	movwf	??_UART_Write_Text
  2418  1EDC  0871               	movf	??_UART_Write_Text,w
  2419  1EDD  0084               	movwf	4
  2420  1EDE  1383               	bcf	3,7	;select IRP bank0
  2421  1EDF  0800               	movf	0,w
  2422  1EE0  120A  158A  2006  160A  158A  	fcall	_UART_Write
  2423  1EE5  3001               	movlw	1
  2424  1EE6  07F2               	addwf	UART_Write_Text@i,f
  2425  1EE7  1803               	skipnc
  2426  1EE8  0AF3               	incf	UART_Write_Text@i+1,f
  2427  1EE9  3000               	movlw	0
  2428  1EEA  07F3               	addwf	UART_Write_Text@i+1,f
  2429  1EEB  2ED0               	goto	l1826
  2430  1EEC                     __end_of_UART_Write_Text:	
  2431                           
  2432                           	psect	text9
  2433  0806                     __ptext9:	
  2434 ;; *************** function _UART_Write *****************
  2435 ;; Defined at:
  2436 ;;		line 24 in file "uart.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  data            1    wreg     unsigned char 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;  data            1    0[COMMON] unsigned char 
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		wreg
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2450 ;;      Params:         0       0       0       0       0
  2451 ;;      Locals:         1       0       0       0       0
  2452 ;;      Temps:          0       0       0       0       0
  2453 ;;      Totals:         1       0       0       0       0
  2454 ;;Total ram usage:        1 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; This function calls:
  2457 ;;		Nothing
  2458 ;; This function is called by:
  2459 ;;		_main
  2460 ;;		_UART_Write_Text
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           
  2465                           ;psect for function _UART_Write
  2466  0806                     _UART_Write:	
  2467                           
  2468                           ;incstack = 0
  2469                           ; Regs used in _UART_Write: [wreg]
  2470                           ;UART_Write@data stored from wreg
  2471  0806  00F0               	movwf	UART_Write@data
  2472  0807                     l191:	
  2473                           ;uart.c: 25: while (!TRMT);
  2474                           
  2475  0807  1683               	bsf	3,5	;RP0=1, select bank1
  2476  0808  1303               	bcf	3,6	;RP1=0, select bank1
  2477  0809  1C98               	btfss	24,1	;volatile
  2478  080A  2807               	goto	l191
  2479                           
  2480                           ;uart.c: 26: TXREG = data;
  2481  080B  0870               	movf	UART_Write@data,w
  2482  080C  1283               	bcf	3,5	;RP0=0, select bank0
  2483  080D  1303               	bcf	3,6	;RP1=0, select bank0
  2484  080E  0099               	movwf	25	;volatile
  2485  080F  0008               	return
  2486  0810                     __end_of_UART_Write:	
  2487                           
  2488                           	psect	text10
  2489  10C7                     __ptext10:	
  2490 ;; *************** function _UART_Init *****************
  2491 ;; Defined at:
  2492 ;;		line 7 in file "uart.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  baudrate        4    6[BANK0 ] const long 
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;  x               2    9[COMMON] unsigned int 
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1    wreg      unsigned char 
  2499 ;; Registers used:
  2500 ;;		wreg, status,2, status,0, pclath, cstack
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2506 ;;      Params:         0       4       0       0       0
  2507 ;;      Locals:         2       0       0       0       0
  2508 ;;      Temps:          0      12       0       0       0
  2509 ;;      Totals:         2      16       0       0       0
  2510 ;;Total ram usage:       18 bytes
  2511 ;; Hardware stack levels used:    1
  2512 ;; Hardware stack levels required when called:    1
  2513 ;; This function calls:
  2514 ;;		___aldiv
  2515 ;; This function is called by:
  2516 ;;		_main
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           
  2521                           ;psect for function _UART_Init
  2522  10C7                     _UART_Init:	
  2523                           
  2524                           ;uart.c: 8: unsigned int x;
  2525                           ;uart.c: 10: x = (8000000 - baudrate * 16) / (baudrate * 16);
  2526                           
  2527                           ;incstack = 0
  2528                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  2529  10C7  1283               	bcf	3,5	;RP0=0, select bank0
  2530  10C8  1303               	bcf	3,6	;RP1=0, select bank0
  2531  10C9  0826               	movf	UART_Init@baudrate,w
  2532  10CA  00AA               	movwf	??_UART_Init
  2533  10CB  0827               	movf	UART_Init@baudrate+1,w
  2534  10CC  00AB               	movwf	??_UART_Init+1
  2535  10CD  0828               	movf	UART_Init@baudrate+2,w
  2536  10CE  00AC               	movwf	??_UART_Init+2
  2537  10CF  0829               	movf	UART_Init@baudrate+3,w
  2538  10D0  00AD               	movwf	??_UART_Init+3
  2539  10D1  3004               	movlw	4
  2540  10D2                     u3795:	
  2541  10D2  1003               	clrc
  2542  10D3  0DAA               	rlf	??_UART_Init,f
  2543  10D4  0DAB               	rlf	??_UART_Init+1,f
  2544  10D5  0DAC               	rlf	??_UART_Init+2,f
  2545  10D6  0DAD               	rlf	??_UART_Init+3,f
  2546  10D7  3EFF               	addlw	-1
  2547  10D8  1D03               	skipz
  2548  10D9  28D2               	goto	u3795
  2549  10DA  082D               	movf	??_UART_Init+3,w
  2550  10DB  00F3               	movwf	___aldiv@divisor+3
  2551  10DC  082C               	movf	??_UART_Init+2,w
  2552  10DD  00F2               	movwf	___aldiv@divisor+2
  2553  10DE  082B               	movf	??_UART_Init+1,w
  2554  10DF  00F1               	movwf	___aldiv@divisor+1
  2555  10E0  082A               	movf	??_UART_Init,w
  2556  10E1  00F0               	movwf	___aldiv@divisor
  2557  10E2  3000               	movlw	0
  2558  10E3  00AE               	movwf	??_UART_Init+4
  2559  10E4  3012               	movlw	18
  2560  10E5  00AF               	movwf	??_UART_Init+5
  2561  10E6  307A               	movlw	122
  2562  10E7  00B0               	movwf	??_UART_Init+6
  2563  10E8  3000               	movlw	0
  2564  10E9  00B1               	movwf	??_UART_Init+7
  2565  10EA  0826               	movf	UART_Init@baudrate,w
  2566  10EB  00B2               	movwf	??_UART_Init+8
  2567  10EC  0827               	movf	UART_Init@baudrate+1,w
  2568  10ED  00B3               	movwf	??_UART_Init+9
  2569  10EE  0828               	movf	UART_Init@baudrate+2,w
  2570  10EF  00B4               	movwf	??_UART_Init+10
  2571  10F0  0829               	movf	UART_Init@baudrate+3,w
  2572  10F1  00B5               	movwf	??_UART_Init+11
  2573  10F2  3004               	movlw	4
  2574  10F3                     u3805:	
  2575  10F3  1003               	clrc
  2576  10F4  0DB2               	rlf	??_UART_Init+8,f
  2577  10F5  0DB3               	rlf	??_UART_Init+9,f
  2578  10F6  0DB4               	rlf	??_UART_Init+10,f
  2579  10F7  0DB5               	rlf	??_UART_Init+11,f
  2580  10F8  3EFF               	addlw	-1
  2581  10F9  1D03               	skipz
  2582  10FA  28F3               	goto	u3805
  2583  10FB  09B2               	comf	??_UART_Init+8,f
  2584  10FC  09B3               	comf	??_UART_Init+9,f
  2585  10FD  09B4               	comf	??_UART_Init+10,f
  2586  10FE  09B5               	comf	??_UART_Init+11,f
  2587  10FF  0AB2               	incf	??_UART_Init+8,f
  2588  1100  1903               	skipnz
  2589  1101  0AB3               	incf	??_UART_Init+9,f
  2590  1102  1903               	skipnz
  2591  1103  0AB4               	incf	??_UART_Init+10,f
  2592  1104  1903               	skipnz
  2593  1105  0AB5               	incf	??_UART_Init+11,f
  2594  1106  0832               	movf	??_UART_Init+8,w
  2595  1107  07AE               	addwf	??_UART_Init+4,f
  2596  1108  0833               	movf	??_UART_Init+9,w
  2597  1109  1803               	skipnc
  2598  110A  0F33               	incfsz	??_UART_Init+9,w
  2599  110B  290D               	goto	u3810
  2600  110C  290E               	goto	u3811
  2601  110D                     u3810:	
  2602  110D  07AF               	addwf	??_UART_Init+5,f
  2603  110E                     u3811:	
  2604  110E  0834               	movf	??_UART_Init+10,w
  2605  110F  1803               	skipnc
  2606  1110  0F34               	incfsz	??_UART_Init+10,w
  2607  1111  2913               	goto	u3812
  2608  1112  2914               	goto	u3813
  2609  1113                     u3812:	
  2610  1113  07B0               	addwf	??_UART_Init+6,f
  2611  1114                     u3813:	
  2612  1114  0835               	movf	??_UART_Init+11,w
  2613  1115  1803               	skipnc
  2614  1116  0A35               	incf	??_UART_Init+11,w
  2615  1117  07B1               	addwf	??_UART_Init+7,f
  2616  1118  0831               	movf	??_UART_Init+7,w
  2617  1119  00F7               	movwf	___aldiv@dividend+3
  2618  111A  0830               	movf	??_UART_Init+6,w
  2619  111B  00F6               	movwf	___aldiv@dividend+2
  2620  111C  082F               	movf	??_UART_Init+5,w
  2621  111D  00F5               	movwf	___aldiv@dividend+1
  2622  111E  082E               	movf	??_UART_Init+4,w
  2623  111F  00F4               	movwf	___aldiv@dividend
  2624  1120  160A  118A  22E1   	fcall	___aldiv
  2625  1123  0871               	movf	?___aldiv+1,w
  2626  1124  00FA               	movwf	UART_Init@x+1
  2627  1125  0870               	movf	?___aldiv,w
  2628  1126  00F9               	movwf	UART_Init@x
  2629                           
  2630                           ;uart.c: 11: BRGH = 1;
  2631  1127  1683               	bsf	3,5	;RP0=1, select bank1
  2632  1128  1303               	bcf	3,6	;RP1=0, select bank1
  2633  1129  1518               	bsf	24,2	;volatile
  2634                           
  2635                           ;uart.c: 13: SPBRG = x;
  2636  112A  0879               	movf	UART_Init@x,w
  2637  112B  0099               	movwf	25	;volatile
  2638                           
  2639                           ;uart.c: 14: SYNC = 0;
  2640  112C  1218               	bcf	24,4	;volatile
  2641                           
  2642                           ;uart.c: 15: SPEN = 1;
  2643  112D  1283               	bcf	3,5	;RP0=0, select bank0
  2644  112E  1303               	bcf	3,6	;RP1=0, select bank0
  2645  112F  1798               	bsf	24,7	;volatile
  2646                           
  2647                           ;uart.c: 16: TRISC7 = 1;
  2648  1130  1683               	bsf	3,5	;RP0=1, select bank1
  2649  1131  1303               	bcf	3,6	;RP1=0, select bank1
  2650  1132  1787               	bsf	7,7	;volatile
  2651                           
  2652                           ;uart.c: 17: TRISC6 = 1;
  2653  1133  1707               	bsf	7,6	;volatile
  2654                           
  2655                           ;uart.c: 18: CREN = 1;
  2656  1134  1283               	bcf	3,5	;RP0=0, select bank0
  2657  1135  1303               	bcf	3,6	;RP1=0, select bank0
  2658  1136  1618               	bsf	24,4	;volatile
  2659                           
  2660                           ;uart.c: 19: TXEN = 1;
  2661  1137  1683               	bsf	3,5	;RP0=1, select bank1
  2662  1138  1303               	bcf	3,6	;RP1=0, select bank1
  2663  1139  1698               	bsf	24,5	;volatile
  2664  113A  0008               	return
  2665  113B                     __end_of_UART_Init:	
  2666                           ;uart.c: 20: return 1;
  2667                           ;	Return value of _UART_Init is never used
  2668                           
  2669                           
  2670                           	psect	text11
  2671  12E1                     __ptext11:	
  2672 ;; *************** function ___aldiv *****************
  2673 ;; Defined at:
  2674 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\aldiv.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  divisor         4    0[COMMON] long 
  2677 ;;  dividend        4    4[COMMON] long 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  quotient        4    2[BANK0 ] long 
  2680 ;;  sign            1    1[BANK0 ] unsigned char 
  2681 ;;  counter         1    0[BANK0 ] unsigned char 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  4    0[COMMON] long 
  2684 ;; Registers used:
  2685 ;;		wreg, status,2, status,0
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2691 ;;      Params:         8       0       0       0       0
  2692 ;;      Locals:         0       6       0       0       0
  2693 ;;      Temps:          1       0       0       0       0
  2694 ;;      Totals:         9       6       0       0       0
  2695 ;;Total ram usage:       15 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; This function calls:
  2698 ;;		Nothing
  2699 ;; This function is called by:
  2700 ;;		_UART_Init
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           
  2705                           ;psect for function ___aldiv
  2706  12E1                     ___aldiv:	
  2707                           
  2708                           ;incstack = 0
  2709                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2710  12E1  1283               	bcf	3,5	;RP0=0, select bank0
  2711  12E2  1303               	bcf	3,6	;RP1=0, select bank0
  2712  12E3  01A1               	clrf	___aldiv@sign
  2713  12E4  1FF3               	btfss	___aldiv@divisor+3,7
  2714  12E5  2AF3               	goto	l345
  2715  12E6  09F0               	comf	___aldiv@divisor,f
  2716  12E7  09F1               	comf	___aldiv@divisor+1,f
  2717  12E8  09F2               	comf	___aldiv@divisor+2,f
  2718  12E9  09F3               	comf	___aldiv@divisor+3,f
  2719  12EA  0AF0               	incf	___aldiv@divisor,f
  2720  12EB  1903               	skipnz
  2721  12EC  0AF1               	incf	___aldiv@divisor+1,f
  2722  12ED  1903               	skipnz
  2723  12EE  0AF2               	incf	___aldiv@divisor+2,f
  2724  12EF  1903               	skipnz
  2725  12F0  0AF3               	incf	___aldiv@divisor+3,f
  2726  12F1  01A1               	clrf	___aldiv@sign
  2727  12F2  0AA1               	incf	___aldiv@sign,f
  2728  12F3                     l345:	
  2729  12F3  1FF7               	btfss	___aldiv@dividend+3,7
  2730  12F4  2B04               	goto	l1376
  2731  12F5  09F4               	comf	___aldiv@dividend,f
  2732  12F6  09F5               	comf	___aldiv@dividend+1,f
  2733  12F7  09F6               	comf	___aldiv@dividend+2,f
  2734  12F8  09F7               	comf	___aldiv@dividend+3,f
  2735  12F9  0AF4               	incf	___aldiv@dividend,f
  2736  12FA  1903               	skipnz
  2737  12FB  0AF5               	incf	___aldiv@dividend+1,f
  2738  12FC  1903               	skipnz
  2739  12FD  0AF6               	incf	___aldiv@dividend+2,f
  2740  12FE  1903               	skipnz
  2741  12FF  0AF7               	incf	___aldiv@dividend+3,f
  2742  1300  3001               	movlw	1
  2743  1301  00F8               	movwf	??___aldiv
  2744  1302  0878               	movf	??___aldiv,w
  2745  1303  06A1               	xorwf	___aldiv@sign,f
  2746  1304                     l1376:	
  2747  1304  3000               	movlw	0
  2748  1305  00A5               	movwf	___aldiv@quotient+3
  2749  1306  3000               	movlw	0
  2750  1307  00A4               	movwf	___aldiv@quotient+2
  2751  1308  3000               	movlw	0
  2752  1309  00A3               	movwf	___aldiv@quotient+1
  2753  130A  3000               	movlw	0
  2754  130B  00A2               	movwf	___aldiv@quotient
  2755  130C  0873               	movf	___aldiv@divisor+3,w
  2756  130D  0472               	iorwf	___aldiv@divisor+2,w
  2757  130E  0471               	iorwf	___aldiv@divisor+1,w
  2758  130F  0470               	iorwf	___aldiv@divisor,w
  2759  1310  1903               	skipnz
  2760  1311  2B59               	goto	l1398
  2761  1312  01A0               	clrf	___aldiv@counter
  2762  1313  0AA0               	incf	___aldiv@counter,f
  2763  1314                     l1384:	
  2764  1314  1BF3               	btfsc	___aldiv@divisor+3,7
  2765  1315  2B24               	goto	l1386
  2766  1316  3001               	movlw	1
  2767  1317  00F8               	movwf	??___aldiv
  2768  1318                     u2905:	
  2769  1318  1003               	clrc
  2770  1319  0DF0               	rlf	___aldiv@divisor,f
  2771  131A  0DF1               	rlf	___aldiv@divisor+1,f
  2772  131B  0DF2               	rlf	___aldiv@divisor+2,f
  2773  131C  0DF3               	rlf	___aldiv@divisor+3,f
  2774  131D  0BF8               	decfsz	??___aldiv,f
  2775  131E  2B18               	goto	u2905
  2776  131F  3001               	movlw	1
  2777  1320  00F8               	movwf	??___aldiv
  2778  1321  0878               	movf	??___aldiv,w
  2779  1322  07A0               	addwf	___aldiv@counter,f
  2780  1323  2B14               	goto	l1384
  2781  1324                     l1386:	
  2782  1324  3001               	movlw	1
  2783  1325  00F8               	movwf	??___aldiv
  2784  1326                     u2925:	
  2785  1326  1003               	clrc
  2786  1327  0DA2               	rlf	___aldiv@quotient,f
  2787  1328  0DA3               	rlf	___aldiv@quotient+1,f
  2788  1329  0DA4               	rlf	___aldiv@quotient+2,f
  2789  132A  0DA5               	rlf	___aldiv@quotient+3,f
  2790  132B  0BF8               	decfsz	??___aldiv,f
  2791  132C  2B26               	goto	u2925
  2792  132D  0873               	movf	___aldiv@divisor+3,w
  2793  132E  0277               	subwf	___aldiv@dividend+3,w
  2794  132F  1D03               	skipz
  2795  1330  2B3B               	goto	u2935
  2796  1331  0872               	movf	___aldiv@divisor+2,w
  2797  1332  0276               	subwf	___aldiv@dividend+2,w
  2798  1333  1D03               	skipz
  2799  1334  2B3B               	goto	u2935
  2800  1335  0871               	movf	___aldiv@divisor+1,w
  2801  1336  0275               	subwf	___aldiv@dividend+1,w
  2802  1337  1D03               	skipz
  2803  1338  2B3B               	goto	u2935
  2804  1339  0870               	movf	___aldiv@divisor,w
  2805  133A  0274               	subwf	___aldiv@dividend,w
  2806  133B                     u2935:	
  2807  133B  1C03               	skipc
  2808  133C  2B4C               	goto	l1394
  2809  133D  0870               	movf	___aldiv@divisor,w
  2810  133E  02F4               	subwf	___aldiv@dividend,f
  2811  133F  0871               	movf	___aldiv@divisor+1,w
  2812  1340  1C03               	skipc
  2813  1341  0F71               	incfsz	___aldiv@divisor+1,w
  2814  1342  02F5               	subwf	___aldiv@dividend+1,f
  2815  1343  0872               	movf	___aldiv@divisor+2,w
  2816  1344  1C03               	skipc
  2817  1345  0F72               	incfsz	___aldiv@divisor+2,w
  2818  1346  02F6               	subwf	___aldiv@dividend+2,f
  2819  1347  0873               	movf	___aldiv@divisor+3,w
  2820  1348  1C03               	skipc
  2821  1349  0F73               	incfsz	___aldiv@divisor+3,w
  2822  134A  02F7               	subwf	___aldiv@dividend+3,f
  2823  134B  1422               	bsf	___aldiv@quotient,0
  2824  134C                     l1394:	
  2825  134C  3001               	movlw	1
  2826  134D                     u2945:	
  2827  134D  1003               	clrc
  2828  134E  0CF3               	rrf	___aldiv@divisor+3,f
  2829  134F  0CF2               	rrf	___aldiv@divisor+2,f
  2830  1350  0CF1               	rrf	___aldiv@divisor+1,f
  2831  1351  0CF0               	rrf	___aldiv@divisor,f
  2832  1352  3EFF               	addlw	-1
  2833  1353  1D03               	skipz
  2834  1354  2B4D               	goto	u2945
  2835  1355  3001               	movlw	1
  2836  1356  02A0               	subwf	___aldiv@counter,f
  2837  1357  1D03               	btfss	3,2
  2838  1358  2B24               	goto	l1386
  2839  1359                     l1398:	
  2840  1359  0821               	movf	___aldiv@sign,w
  2841  135A  1903               	btfsc	3,2
  2842  135B  2B67               	goto	l1402
  2843  135C  09A2               	comf	___aldiv@quotient,f
  2844  135D  09A3               	comf	___aldiv@quotient+1,f
  2845  135E  09A4               	comf	___aldiv@quotient+2,f
  2846  135F  09A5               	comf	___aldiv@quotient+3,f
  2847  1360  0AA2               	incf	___aldiv@quotient,f
  2848  1361  1903               	skipnz
  2849  1362  0AA3               	incf	___aldiv@quotient+1,f
  2850  1363  1903               	skipnz
  2851  1364  0AA4               	incf	___aldiv@quotient+2,f
  2852  1365  1903               	skipnz
  2853  1366  0AA5               	incf	___aldiv@quotient+3,f
  2854  1367                     l1402:	
  2855  1367  0825               	movf	___aldiv@quotient+3,w
  2856  1368  00F3               	movwf	?___aldiv+3
  2857  1369  0824               	movf	___aldiv@quotient+2,w
  2858  136A  00F2               	movwf	?___aldiv+2
  2859  136B  0823               	movf	___aldiv@quotient+1,w
  2860  136C  00F1               	movwf	?___aldiv+1
  2861  136D  0822               	movf	___aldiv@quotient,w
  2862  136E  00F0               	movwf	?___aldiv
  2863  136F  0008               	return
  2864  1370                     __end_of___aldiv:	
  2865                           
  2866                           	psect	text12
  2867  1EB2                     __ptext12:	
  2868 ;; *************** function _PID_init *****************
  2869 ;; Defined at:
  2870 ;;		line 31 in file "main.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;		None
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      void 
  2877 ;; Registers used:
  2878 ;;		wreg, status,2
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2884 ;;      Params:         0       0       0       0       0
  2885 ;;      Locals:         0       0       0       0       0
  2886 ;;      Temps:          0       0       0       0       0
  2887 ;;      Totals:         0       0       0       0       0
  2888 ;;Total ram usage:        0 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_main
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           
  2898                           ;psect for function _PID_init
  2899  1EB2                     _PID_init:	
  2900                           
  2901                           ;main.c: 34: P = 0;
  2902                           
  2903                           ;incstack = 0
  2904                           ; Regs used in _PID_init: [wreg+status,2]
  2905  1EB2  1283               	bcf	3,5	;RP0=0, select bank0
  2906  1EB3  1303               	bcf	3,6	;RP1=0, select bank0
  2907  1EB4  01EB               	clrf	_P
  2908  1EB5  01EC               	clrf	_P+1
  2909                           
  2910                           ;main.c: 35: I = 0;
  2911  1EB6  01E9               	clrf	_I
  2912  1EB7  01EA               	clrf	_I+1
  2913                           
  2914                           ;main.c: 36: D = 0;
  2915  1EB8  01E7               	clrf	_D
  2916  1EB9  01E8               	clrf	_D+1
  2917                           
  2918                           ;main.c: 39: kp = 0.001;
  2919  1EBA  3012               	movlw	18
  2920  1EBB  00DE               	movwf	_kp
  2921  1EBC  3083               	movlw	131
  2922  1EBD  00DF               	movwf	_kp+1
  2923  1EBE  303A               	movlw	58
  2924  1EBF  00E0               	movwf	_kp+2
  2925                           
  2926                           ;main.c: 40: ki = 1;
  2927  1EC0  3000               	movlw	0
  2928  1EC1  00E4               	movwf	_ki
  2929  1EC2  3080               	movlw	128
  2930  1EC3  00E5               	movwf	_ki+1
  2931  1EC4  303F               	movlw	63
  2932  1EC5  00E6               	movwf	_ki+2
  2933                           
  2934                           ;main.c: 41: kd = 1;
  2935  1EC6  3000               	movlw	0
  2936  1EC7  00E1               	movwf	_kd
  2937  1EC8  3080               	movlw	128
  2938  1EC9  00E2               	movwf	_kd+1
  2939  1ECA  303F               	movlw	63
  2940  1ECB  00E3               	movwf	_kd+2
  2941  1ECC  0008               	return
  2942  1ECD                     __end_of_PID_init:	
  2943                           
  2944                           	psect	text13
  2945  1370                     __ptext13:	
  2946 ;; *************** function _PID *****************
  2947 ;; Defined at:
  2948 ;;		line 44 in file "main.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;  setpoint        2   43[BANK0 ] int 
  2951 ;;  read            2   45[BANK0 ] int 
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  error           2   52[BANK0 ] int 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  2   43[BANK0 ] int 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0, pclath, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2963 ;;      Params:         0       4       0       0       0
  2964 ;;      Locals:         0       5       0       0       0
  2965 ;;      Temps:          0       2       0       0       0
  2966 ;;      Totals:         0      11       0       0       0
  2967 ;;Total ram usage:       11 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    2
  2970 ;; This function calls:
  2971 ;;		___awtoft
  2972 ;;		___ftadd
  2973 ;;		___ftmul
  2974 ;;		___fttol
  2975 ;; This function is called by:
  2976 ;;		_main
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           
  2981                           ;psect for function _PID
  2982  1370                     _PID:	
  2983                           
  2984                           ;main.c: 45: int error;
  2985                           ;main.c: 46: error = setpoint - read;
  2986                           
  2987                           ;incstack = 0
  2988                           ; Regs used in _PID: [wreg+status,2+status,0+pclath+cstack]
  2989  1370  1283               	bcf	3,5	;RP0=0, select bank0
  2990  1371  1303               	bcf	3,6	;RP1=0, select bank0
  2991  1372  094D               	comf	PID@read,w
  2992  1373  00CF               	movwf	??_PID
  2993  1374  094E               	comf	PID@read+1,w
  2994  1375  00D0               	movwf	??_PID+1
  2995  1376  0ACF               	incf	??_PID,f
  2996  1377  1903               	skipnz
  2997  1378  0AD0               	incf	??_PID+1,f
  2998  1379  084B               	movf	PID@setpoint,w
  2999  137A  074F               	addwf	??_PID,w
  3000  137B  00D4               	movwf	PID@error
  3001  137C  084C               	movf	PID@setpoint+1,w
  3002  137D  1803               	skipnc
  3003  137E  0A4C               	incf	PID@setpoint+1,w
  3004  137F  0750               	addwf	??_PID+1,w
  3005  1380  00D5               	movwf	PID@error+1
  3006                           
  3007                           ;main.c: 48: if (error) {
  3008  1381  0854               	movf	PID@error,w
  3009  1382  0455               	iorwf	PID@error+1,w
  3010  1383  1903               	btfsc	3,2
  3011  1384  0008               	return
  3012                           
  3013                           ;main.c: 49: P = error;
  3014  1385  0855               	movf	PID@error+1,w
  3015  1386  00EC               	movwf	_P+1
  3016  1387  0854               	movf	PID@error,w
  3017  1388  00EB               	movwf	_P
  3018                           
  3019                           ;main.c: 50: I = I + error;
  3020  1389  0854               	movf	PID@error,w
  3021  138A  0769               	addwf	_I,w
  3022  138B  00E9               	movwf	_I
  3023  138C  0855               	movf	PID@error+1,w
  3024  138D  1803               	skipnc
  3025  138E  0A55               	incf	PID@error+1,w
  3026  138F  076A               	addwf	_I+1,w
  3027  1390  00EA               	movwf	_I+1
  3028                           
  3029                           ;main.c: 51: D = 0;
  3030  1391  01E7               	clrf	_D
  3031  1392  01E8               	clrf	_D+1
  3032                           
  3033                           ;main.c: 53: return kp * P + ki * I + kd*D;
  3034  1393  086C               	movf	_P+1,w
  3035  1394  00F9               	movwf	___awtoft@c+1
  3036  1395  086B               	movf	_P,w
  3037  1396  00F8               	movwf	___awtoft@c
  3038  1397  160A  158A  26EC  160A  118A  	fcall	___awtoft
  3039  139C  0878               	movf	?___awtoft,w
  3040  139D  1283               	bcf	3,5	;RP0=0, select bank0
  3041  139E  1303               	bcf	3,6	;RP1=0, select bank0
  3042  139F  00A3               	movwf	___ftmul@f2
  3043  13A0  0879               	movf	?___awtoft+1,w
  3044  13A1  00A4               	movwf	___ftmul@f2+1
  3045  13A2  087A               	movf	?___awtoft+2,w
  3046  13A3  00A5               	movwf	___ftmul@f2+2
  3047  13A4  085E               	movf	_kp,w
  3048  13A5  00A0               	movwf	___ftmul@f1
  3049  13A6  085F               	movf	_kp+1,w
  3050  13A7  00A1               	movwf	___ftmul@f1+1
  3051  13A8  0860               	movf	_kp+2,w
  3052  13A9  00A2               	movwf	___ftmul@f1+2
  3053  13AA  160A  118A  2429  160A  118A  	fcall	___ftmul
  3054  13AF  1283               	bcf	3,5	;RP0=0, select bank0
  3055  13B0  1303               	bcf	3,6	;RP1=0, select bank0
  3056  13B1  0820               	movf	?___ftmul,w
  3057  13B2  00B3               	movwf	___ftadd@f2
  3058  13B3  0821               	movf	?___ftmul+1,w
  3059  13B4  00B4               	movwf	___ftadd@f2+1
  3060  13B5  0822               	movf	?___ftmul+2,w
  3061  13B6  00B5               	movwf	___ftadd@f2+2
  3062  13B7  086A               	movf	_I+1,w
  3063  13B8  00F9               	movwf	___awtoft@c+1
  3064  13B9  0869               	movf	_I,w
  3065  13BA  00F8               	movwf	___awtoft@c
  3066  13BB  160A  158A  26EC  160A  118A  	fcall	___awtoft
  3067  13C0  0878               	movf	?___awtoft,w
  3068  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  3069  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  3070  13C3  00A3               	movwf	___ftmul@f2
  3071  13C4  0879               	movf	?___awtoft+1,w
  3072  13C5  00A4               	movwf	___ftmul@f2+1
  3073  13C6  087A               	movf	?___awtoft+2,w
  3074  13C7  00A5               	movwf	___ftmul@f2+2
  3075  13C8  0864               	movf	_ki,w
  3076  13C9  00A0               	movwf	___ftmul@f1
  3077  13CA  0865               	movf	_ki+1,w
  3078  13CB  00A1               	movwf	___ftmul@f1+1
  3079  13CC  0866               	movf	_ki+2,w
  3080  13CD  00A2               	movwf	___ftmul@f1+2
  3081  13CE  160A  118A  2429  160A  118A  	fcall	___ftmul
  3082  13D3  1283               	bcf	3,5	;RP0=0, select bank0
  3083  13D4  1303               	bcf	3,6	;RP1=0, select bank0
  3084  13D5  0820               	movf	?___ftmul,w
  3085  13D6  00B0               	movwf	___ftadd@f1
  3086  13D7  0821               	movf	?___ftmul+1,w
  3087  13D8  00B1               	movwf	___ftadd@f1+1
  3088  13D9  0822               	movf	?___ftmul+2,w
  3089  13DA  00B2               	movwf	___ftadd@f1+2
  3090  13DB  160A  118A  25E6  160A  118A  	fcall	___ftadd
  3091  13E0  1283               	bcf	3,5	;RP0=0, select bank0
  3092  13E1  1303               	bcf	3,6	;RP1=0, select bank0
  3093  13E2  0830               	movf	?___ftadd,w
  3094  13E3  00D1               	movwf	_PID$656
  3095  13E4  0831               	movf	?___ftadd+1,w
  3096  13E5  00D2               	movwf	_PID$656+1
  3097  13E6  0832               	movf	?___ftadd+2,w
  3098  13E7  00D3               	movwf	_PID$656+2
  3099                           
  3100                           ;main.c: 53: return kp * P + ki * I + kd*D;
  3101  13E8  0851               	movf	_PID$656,w
  3102  13E9  00B3               	movwf	___ftadd@f2
  3103  13EA  0852               	movf	_PID$656+1,w
  3104  13EB  00B4               	movwf	___ftadd@f2+1
  3105  13EC  0853               	movf	_PID$656+2,w
  3106  13ED  00B5               	movwf	___ftadd@f2+2
  3107  13EE  0868               	movf	_D+1,w
  3108  13EF  00F9               	movwf	___awtoft@c+1
  3109  13F0  0867               	movf	_D,w
  3110  13F1  00F8               	movwf	___awtoft@c
  3111  13F2  160A  158A  26EC  160A  118A  	fcall	___awtoft
  3112  13F7  0878               	movf	?___awtoft,w
  3113  13F8  1283               	bcf	3,5	;RP0=0, select bank0
  3114  13F9  1303               	bcf	3,6	;RP1=0, select bank0
  3115  13FA  00A3               	movwf	___ftmul@f2
  3116  13FB  0879               	movf	?___awtoft+1,w
  3117  13FC  00A4               	movwf	___ftmul@f2+1
  3118  13FD  087A               	movf	?___awtoft+2,w
  3119  13FE  00A5               	movwf	___ftmul@f2+2
  3120  13FF  0861               	movf	_kd,w
  3121  1400  00A0               	movwf	___ftmul@f1
  3122  1401  0862               	movf	_kd+1,w
  3123  1402  00A1               	movwf	___ftmul@f1+1
  3124  1403  0863               	movf	_kd+2,w
  3125  1404  00A2               	movwf	___ftmul@f1+2
  3126  1405  160A  118A  2429  160A  118A  	fcall	___ftmul
  3127  140A  1283               	bcf	3,5	;RP0=0, select bank0
  3128  140B  1303               	bcf	3,6	;RP1=0, select bank0
  3129  140C  0820               	movf	?___ftmul,w
  3130  140D  00B0               	movwf	___ftadd@f1
  3131  140E  0821               	movf	?___ftmul+1,w
  3132  140F  00B1               	movwf	___ftadd@f1+1
  3133  1410  0822               	movf	?___ftmul+2,w
  3134  1411  00B2               	movwf	___ftadd@f1+2
  3135  1412  160A  118A  25E6  160A  118A  	fcall	___ftadd
  3136  1417  1283               	bcf	3,5	;RP0=0, select bank0
  3137  1418  1303               	bcf	3,6	;RP1=0, select bank0
  3138  1419  0830               	movf	?___ftadd,w
  3139  141A  00BD               	movwf	___fttol@f1
  3140  141B  0831               	movf	?___ftadd+1,w
  3141  141C  00BE               	movwf	___fttol@f1+1
  3142  141D  0832               	movf	?___ftadd+2,w
  3143  141E  00BF               	movwf	___fttol@f1+2
  3144  141F  160A  118A  2253   	fcall	___fttol
  3145  1422  1283               	bcf	3,5	;RP0=0, select bank0
  3146  1423  1303               	bcf	3,6	;RP1=0, select bank0
  3147  1424  083E               	movf	?___fttol+1,w
  3148  1425  00CC               	movwf	?_PID+1
  3149  1426  083D               	movf	?___fttol,w
  3150  1427  00CB               	movwf	?_PID
  3151  1428  0008               	return
  3152  1429                     __end_of_PID:	
  3153                           
  3154                           	psect	text14
  3155  1253                     __ptext14:	
  3156 ;; *************** function ___fttol *****************
  3157 ;; Defined at:
  3158 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fttol.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  f1              3   29[BANK0 ] float 
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;  lval            4   38[BANK0 ] unsigned long 
  3163 ;;  exp1            1   42[BANK0 ] unsigned char 
  3164 ;;  sign1           1   37[BANK0 ] unsigned char 
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  4   29[BANK0 ] long 
  3167 ;; Registers used:
  3168 ;;		wreg, status,2, status,0
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3174 ;;      Params:         0       4       0       0       0
  3175 ;;      Locals:         0       6       0       0       0
  3176 ;;      Temps:          0       4       0       0       0
  3177 ;;      Totals:         0      14       0       0       0
  3178 ;;Total ram usage:       14 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; This function calls:
  3181 ;;		Nothing
  3182 ;; This function is called by:
  3183 ;;		_PID
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           
  3188                           ;psect for function ___fttol
  3189  1253                     ___fttol:	
  3190                           
  3191                           ;incstack = 0
  3192                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3193  1253  1283               	bcf	3,5	;RP0=0, select bank0
  3194  1254  1303               	bcf	3,6	;RP1=0, select bank0
  3195  1255  083D               	movf	___fttol@f1,w
  3196  1256  00C1               	movwf	??___fttol
  3197  1257  083E               	movf	___fttol@f1+1,w
  3198  1258  00C2               	movwf	??___fttol+1
  3199  1259  083F               	movf	___fttol@f1+2,w
  3200  125A  00C3               	movwf	??___fttol+2
  3201  125B  1003               	clrc
  3202  125C  0D42               	rlf	??___fttol+1,w
  3203  125D  0D43               	rlf	??___fttol+2,w
  3204  125E  00C4               	movwf	??___fttol+3
  3205  125F  0844               	movf	??___fttol+3,w
  3206  1260  00CA               	movwf	___fttol@exp1
  3207  1261  084A               	movf	___fttol@exp1,w
  3208  1262  1D03               	btfss	3,2
  3209  1263  2A6D               	goto	l1626
  3210  1264  3000               	movlw	0
  3211  1265  00C0               	movwf	?___fttol+3
  3212  1266  3000               	movlw	0
  3213  1267  00BF               	movwf	?___fttol+2
  3214  1268  3000               	movlw	0
  3215  1269  00BE               	movwf	?___fttol+1
  3216  126A  3000               	movlw	0
  3217  126B  00BD               	movwf	?___fttol
  3218  126C  0008               	return
  3219  126D                     l1626:	
  3220  126D  083D               	movf	___fttol@f1,w
  3221  126E  00C1               	movwf	??___fttol
  3222  126F  083E               	movf	___fttol@f1+1,w
  3223  1270  00C2               	movwf	??___fttol+1
  3224  1271  083F               	movf	___fttol@f1+2,w
  3225  1272  00C3               	movwf	??___fttol+2
  3226  1273  3017               	movlw	23
  3227  1274                     u3565:	
  3228  1274  1003               	clrc
  3229  1275  0CC3               	rrf	??___fttol+2,f
  3230  1276  0CC2               	rrf	??___fttol+1,f
  3231  1277  0CC1               	rrf	??___fttol,f
  3232  1278  3EFF               	addlw	-1
  3233  1279  1D03               	skipz
  3234  127A  2A74               	goto	u3565
  3235  127B  0841               	movf	??___fttol,w
  3236  127C  00C4               	movwf	??___fttol+3
  3237  127D  0844               	movf	??___fttol+3,w
  3238  127E  00C5               	movwf	___fttol@sign1
  3239  127F  17BE               	bsf	___fttol@f1+1,7
  3240  1280  30FF               	movlw	255
  3241  1281  05BD               	andwf	___fttol@f1,f
  3242  1282  30FF               	movlw	255
  3243  1283  05BE               	andwf	___fttol@f1+1,f
  3244  1284  3000               	movlw	0
  3245  1285  05BF               	andwf	___fttol@f1+2,f
  3246  1286  083D               	movf	___fttol@f1,w
  3247  1287  00C6               	movwf	___fttol@lval
  3248  1288  083E               	movf	___fttol@f1+1,w
  3249  1289  00C7               	movwf	___fttol@lval+1
  3250  128A  083F               	movf	___fttol@f1+2,w
  3251  128B  00C8               	movwf	___fttol@lval+2
  3252  128C  01C9               	clrf	___fttol@lval+3
  3253  128D  308E               	movlw	142
  3254  128E  02CA               	subwf	___fttol@exp1,f
  3255  128F  1FCA               	btfss	___fttol@exp1,7
  3256  1290  2AAF               	goto	l1646
  3257  1291  084A               	movf	___fttol@exp1,w
  3258  1292  3A80               	xorlw	128
  3259  1293  3E8F               	addlw	143
  3260  1294  1803               	skipnc
  3261  1295  2A9F               	goto	l1644
  3262  1296  3000               	movlw	0
  3263  1297  00C0               	movwf	?___fttol+3
  3264  1298  3000               	movlw	0
  3265  1299  00BF               	movwf	?___fttol+2
  3266  129A  3000               	movlw	0
  3267  129B  00BE               	movwf	?___fttol+1
  3268  129C  3000               	movlw	0
  3269  129D  00BD               	movwf	?___fttol
  3270  129E  0008               	return
  3271  129F                     l1644:	
  3272  129F  3001               	movlw	1
  3273  12A0                     u3595:	
  3274  12A0  1003               	clrc
  3275  12A1  0CC9               	rrf	___fttol@lval+3,f
  3276  12A2  0CC8               	rrf	___fttol@lval+2,f
  3277  12A3  0CC7               	rrf	___fttol@lval+1,f
  3278  12A4  0CC6               	rrf	___fttol@lval,f
  3279  12A5  3EFF               	addlw	-1
  3280  12A6  1D03               	skipz
  3281  12A7  2AA0               	goto	u3595
  3282  12A8  3001               	movlw	1
  3283  12A9  00C1               	movwf	??___fttol
  3284  12AA  0841               	movf	??___fttol,w
  3285  12AB  07CA               	addwf	___fttol@exp1,f
  3286  12AC  1903               	btfsc	3,2
  3287  12AD  2ACA               	goto	l1654
  3288  12AE  2A9F               	goto	l1644
  3289  12AF                     l1646:	
  3290  12AF  3018               	movlw	24
  3291  12B0  024A               	subwf	___fttol@exp1,w
  3292  12B1  1C03               	skipc
  3293  12B2  2AC7               	goto	l542
  3294  12B3  3000               	movlw	0
  3295  12B4  00C0               	movwf	?___fttol+3
  3296  12B5  3000               	movlw	0
  3297  12B6  00BF               	movwf	?___fttol+2
  3298  12B7  3000               	movlw	0
  3299  12B8  00BE               	movwf	?___fttol+1
  3300  12B9  3000               	movlw	0
  3301  12BA  00BD               	movwf	?___fttol
  3302  12BB  0008               	return
  3303  12BC                     l1652:	
  3304  12BC  3001               	movlw	1
  3305  12BD  00C1               	movwf	??___fttol
  3306  12BE                     u3625:	
  3307  12BE  1003               	clrc
  3308  12BF  0DC6               	rlf	___fttol@lval,f
  3309  12C0  0DC7               	rlf	___fttol@lval+1,f
  3310  12C1  0DC8               	rlf	___fttol@lval+2,f
  3311  12C2  0DC9               	rlf	___fttol@lval+3,f
  3312  12C3  0BC1               	decfsz	??___fttol,f
  3313  12C4  2ABE               	goto	u3625
  3314  12C5  3001               	movlw	1
  3315  12C6  02CA               	subwf	___fttol@exp1,f
  3316  12C7                     l542:	
  3317  12C7  084A               	movf	___fttol@exp1,w
  3318  12C8  1D03               	btfss	3,2
  3319  12C9  2ABC               	goto	l1652
  3320  12CA                     l1654:	
  3321  12CA  0845               	movf	___fttol@sign1,w
  3322  12CB  1903               	btfsc	3,2
  3323  12CC  2AD8               	goto	l1658
  3324  12CD  09C6               	comf	___fttol@lval,f
  3325  12CE  09C7               	comf	___fttol@lval+1,f
  3326  12CF  09C8               	comf	___fttol@lval+2,f
  3327  12D0  09C9               	comf	___fttol@lval+3,f
  3328  12D1  0AC6               	incf	___fttol@lval,f
  3329  12D2  1903               	skipnz
  3330  12D3  0AC7               	incf	___fttol@lval+1,f
  3331  12D4  1903               	skipnz
  3332  12D5  0AC8               	incf	___fttol@lval+2,f
  3333  12D6  1903               	skipnz
  3334  12D7  0AC9               	incf	___fttol@lval+3,f
  3335  12D8                     l1658:	
  3336  12D8  0849               	movf	___fttol@lval+3,w
  3337  12D9  00C0               	movwf	?___fttol+3
  3338  12DA  0848               	movf	___fttol@lval+2,w
  3339  12DB  00BF               	movwf	?___fttol+2
  3340  12DC  0847               	movf	___fttol@lval+1,w
  3341  12DD  00BE               	movwf	?___fttol+1
  3342  12DE  0846               	movf	___fttol@lval,w
  3343  12DF  00BD               	movwf	?___fttol
  3344  12E0  0008               	return
  3345  12E1                     __end_of___fttol:	
  3346                           
  3347                           	psect	text15
  3348  1429                     __ptext15:	
  3349 ;; *************** function ___ftmul *****************
  3350 ;; Defined at:
  3351 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  f1              3    0[BANK0 ] float 
  3354 ;;  f2              3    3[BANK0 ] float 
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  3357 ;;  sign            1   15[BANK0 ] unsigned char 
  3358 ;;  cntr            1   14[BANK0 ] unsigned char 
  3359 ;;  exp             1   10[BANK0 ] unsigned char 
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  3    0[BANK0 ] float 
  3362 ;; Registers used:
  3363 ;;		wreg, status,2, status,0, pclath, cstack
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3369 ;;      Params:         0       6       0       0       0
  3370 ;;      Locals:         0       6       0       0       0
  3371 ;;      Temps:          0       4       0       0       0
  3372 ;;      Totals:         0      16       0       0       0
  3373 ;;Total ram usage:       16 bytes
  3374 ;; Hardware stack levels used:    1
  3375 ;; Hardware stack levels required when called:    1
  3376 ;; This function calls:
  3377 ;;		___ftpack
  3378 ;; This function is called by:
  3379 ;;		_PID
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           
  3384                           ;psect for function ___ftmul
  3385  1429                     ___ftmul:	
  3386                           
  3387                           ;incstack = 0
  3388                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3389  1429  1283               	bcf	3,5	;RP0=0, select bank0
  3390  142A  1303               	bcf	3,6	;RP1=0, select bank0
  3391  142B  0820               	movf	___ftmul@f1,w
  3392  142C  00A6               	movwf	??___ftmul
  3393  142D  0821               	movf	___ftmul@f1+1,w
  3394  142E  00A7               	movwf	??___ftmul+1
  3395  142F  0822               	movf	___ftmul@f1+2,w
  3396  1430  00A8               	movwf	??___ftmul+2
  3397  1431  1003               	clrc
  3398  1432  0D27               	rlf	??___ftmul+1,w
  3399  1433  0D28               	rlf	??___ftmul+2,w
  3400  1434  00A9               	movwf	??___ftmul+3
  3401  1435  0829               	movf	??___ftmul+3,w
  3402  1436  00AA               	movwf	___ftmul@exp
  3403  1437  082A               	movf	___ftmul@exp,w
  3404  1438  1D03               	btfss	3,2
  3405  1439  2C41               	goto	l1576
  3406  143A  3000               	movlw	0
  3407  143B  00A0               	movwf	?___ftmul
  3408  143C  3000               	movlw	0
  3409  143D  00A1               	movwf	?___ftmul+1
  3410  143E  3000               	movlw	0
  3411  143F  00A2               	movwf	?___ftmul+2
  3412  1440  0008               	return
  3413  1441                     l1576:	
  3414  1441  0823               	movf	___ftmul@f2,w
  3415  1442  00A6               	movwf	??___ftmul
  3416  1443  0824               	movf	___ftmul@f2+1,w
  3417  1444  00A7               	movwf	??___ftmul+1
  3418  1445  0825               	movf	___ftmul@f2+2,w
  3419  1446  00A8               	movwf	??___ftmul+2
  3420  1447  1003               	clrc
  3421  1448  0D27               	rlf	??___ftmul+1,w
  3422  1449  0D28               	rlf	??___ftmul+2,w
  3423  144A  00A9               	movwf	??___ftmul+3
  3424  144B  0829               	movf	??___ftmul+3,w
  3425  144C  00AF               	movwf	___ftmul@sign
  3426  144D  082F               	movf	___ftmul@sign,w
  3427  144E  1D03               	btfss	3,2
  3428  144F  2C57               	goto	l1582
  3429  1450  3000               	movlw	0
  3430  1451  00A0               	movwf	?___ftmul
  3431  1452  3000               	movlw	0
  3432  1453  00A1               	movwf	?___ftmul+1
  3433  1454  3000               	movlw	0
  3434  1455  00A2               	movwf	?___ftmul+2
  3435  1456  0008               	return
  3436  1457                     l1582:	
  3437  1457  082F               	movf	___ftmul@sign,w
  3438  1458  3E7B               	addlw	123
  3439  1459  00A6               	movwf	??___ftmul
  3440  145A  0826               	movf	??___ftmul,w
  3441  145B  07AA               	addwf	___ftmul@exp,f
  3442  145C  0820               	movf	___ftmul@f1,w
  3443  145D  00A6               	movwf	??___ftmul
  3444  145E  0821               	movf	___ftmul@f1+1,w
  3445  145F  00A7               	movwf	??___ftmul+1
  3446  1460  0822               	movf	___ftmul@f1+2,w
  3447  1461  00A8               	movwf	??___ftmul+2
  3448  1462  3010               	movlw	16
  3449  1463                     u3435:	
  3450  1463  1003               	clrc
  3451  1464  0CA8               	rrf	??___ftmul+2,f
  3452  1465  0CA7               	rrf	??___ftmul+1,f
  3453  1466  0CA6               	rrf	??___ftmul,f
  3454  1467  3EFF               	addlw	-1
  3455  1468  1D03               	skipz
  3456  1469  2C63               	goto	u3435
  3457  146A  0826               	movf	??___ftmul,w
  3458  146B  00A9               	movwf	??___ftmul+3
  3459  146C  0829               	movf	??___ftmul+3,w
  3460  146D  00AF               	movwf	___ftmul@sign
  3461  146E  0823               	movf	___ftmul@f2,w
  3462  146F  00A6               	movwf	??___ftmul
  3463  1470  0824               	movf	___ftmul@f2+1,w
  3464  1471  00A7               	movwf	??___ftmul+1
  3465  1472  0825               	movf	___ftmul@f2+2,w
  3466  1473  00A8               	movwf	??___ftmul+2
  3467  1474  3010               	movlw	16
  3468  1475                     u3445:	
  3469  1475  1003               	clrc
  3470  1476  0CA8               	rrf	??___ftmul+2,f
  3471  1477  0CA7               	rrf	??___ftmul+1,f
  3472  1478  0CA6               	rrf	??___ftmul,f
  3473  1479  3EFF               	addlw	-1
  3474  147A  1D03               	skipz
  3475  147B  2C75               	goto	u3445
  3476  147C  0826               	movf	??___ftmul,w
  3477  147D  00A9               	movwf	??___ftmul+3
  3478  147E  0829               	movf	??___ftmul+3,w
  3479  147F  06AF               	xorwf	___ftmul@sign,f
  3480  1480  3080               	movlw	128
  3481  1481  00A6               	movwf	??___ftmul
  3482  1482  0826               	movf	??___ftmul,w
  3483  1483  05AF               	andwf	___ftmul@sign,f
  3484  1484  17A1               	bsf	___ftmul@f1+1,7
  3485  1485  17A4               	bsf	___ftmul@f2+1,7
  3486  1486  30FF               	movlw	255
  3487  1487  05A3               	andwf	___ftmul@f2,f
  3488  1488  30FF               	movlw	255
  3489  1489  05A4               	andwf	___ftmul@f2+1,f
  3490  148A  3000               	movlw	0
  3491  148B  05A5               	andwf	___ftmul@f2+2,f
  3492  148C  3000               	movlw	0
  3493  148D  00AB               	movwf	___ftmul@f3_as_product
  3494  148E  3000               	movlw	0
  3495  148F  00AC               	movwf	___ftmul@f3_as_product+1
  3496  1490  3000               	movlw	0
  3497  1491  00AD               	movwf	___ftmul@f3_as_product+2
  3498  1492  3007               	movlw	7
  3499  1493  00A6               	movwf	??___ftmul
  3500  1494  0826               	movf	??___ftmul,w
  3501  1495  00AE               	movwf	___ftmul@cntr
  3502  1496                     l1594:	
  3503  1496  1C20               	btfss	___ftmul@f1,0
  3504  1497  2CA6               	goto	l1598
  3505  1498  0823               	movf	___ftmul@f2,w
  3506  1499  07AB               	addwf	___ftmul@f3_as_product,f
  3507  149A  0824               	movf	___ftmul@f2+1,w
  3508  149B  1103               	clrz
  3509  149C  1803               	skipnc
  3510  149D  0A24               	incf	___ftmul@f2+1,w
  3511  149E  1D03               	btfss	3,2
  3512  149F  07AC               	addwf	___ftmul@f3_as_product+1,f
  3513  14A0  0825               	movf	___ftmul@f2+2,w
  3514  14A1  1103               	clrz
  3515  14A2  1803               	skipnc
  3516  14A3  0A25               	incf	___ftmul@f2+2,w
  3517  14A4  1D03               	btfss	3,2
  3518  14A5  07AD               	addwf	___ftmul@f3_as_product+2,f
  3519  14A6                     l1598:	
  3520  14A6  3001               	movlw	1
  3521  14A7                     u3475:	
  3522  14A7  1003               	clrc
  3523  14A8  0CA2               	rrf	___ftmul@f1+2,f
  3524  14A9  0CA1               	rrf	___ftmul@f1+1,f
  3525  14AA  0CA0               	rrf	___ftmul@f1,f
  3526  14AB  3EFF               	addlw	-1
  3527  14AC  1D03               	skipz
  3528  14AD  2CA7               	goto	u3475
  3529  14AE  3001               	movlw	1
  3530  14AF                     u3485:	
  3531  14AF  1003               	clrc
  3532  14B0  0DA3               	rlf	___ftmul@f2,f
  3533  14B1  0DA4               	rlf	___ftmul@f2+1,f
  3534  14B2  0DA5               	rlf	___ftmul@f2+2,f
  3535  14B3  3EFF               	addlw	-1
  3536  14B4  1D03               	skipz
  3537  14B5  2CAF               	goto	u3485
  3538  14B6  3001               	movlw	1
  3539  14B7  02AE               	subwf	___ftmul@cntr,f
  3540  14B8  1D03               	btfss	3,2
  3541  14B9  2C96               	goto	l1594
  3542  14BA  3009               	movlw	9
  3543  14BB  00A6               	movwf	??___ftmul
  3544  14BC  0826               	movf	??___ftmul,w
  3545  14BD  00AE               	movwf	___ftmul@cntr
  3546  14BE                     l1606:	
  3547  14BE  1C20               	btfss	___ftmul@f1,0
  3548  14BF  2CCE               	goto	l1610
  3549  14C0  0823               	movf	___ftmul@f2,w
  3550  14C1  07AB               	addwf	___ftmul@f3_as_product,f
  3551  14C2  0824               	movf	___ftmul@f2+1,w
  3552  14C3  1103               	clrz
  3553  14C4  1803               	skipnc
  3554  14C5  0A24               	incf	___ftmul@f2+1,w
  3555  14C6  1D03               	btfss	3,2
  3556  14C7  07AC               	addwf	___ftmul@f3_as_product+1,f
  3557  14C8  0825               	movf	___ftmul@f2+2,w
  3558  14C9  1103               	clrz
  3559  14CA  1803               	skipnc
  3560  14CB  0A25               	incf	___ftmul@f2+2,w
  3561  14CC  1D03               	btfss	3,2
  3562  14CD  07AD               	addwf	___ftmul@f3_as_product+2,f
  3563  14CE                     l1610:	
  3564  14CE  3001               	movlw	1
  3565  14CF                     u3525:	
  3566  14CF  1003               	clrc
  3567  14D0  0CA2               	rrf	___ftmul@f1+2,f
  3568  14D1  0CA1               	rrf	___ftmul@f1+1,f
  3569  14D2  0CA0               	rrf	___ftmul@f1,f
  3570  14D3  3EFF               	addlw	-1
  3571  14D4  1D03               	skipz
  3572  14D5  2CCF               	goto	u3525
  3573  14D6  3001               	movlw	1
  3574  14D7                     u3535:	
  3575  14D7  1003               	clrc
  3576  14D8  0CAD               	rrf	___ftmul@f3_as_product+2,f
  3577  14D9  0CAC               	rrf	___ftmul@f3_as_product+1,f
  3578  14DA  0CAB               	rrf	___ftmul@f3_as_product,f
  3579  14DB  3EFF               	addlw	-1
  3580  14DC  1D03               	skipz
  3581  14DD  2CD7               	goto	u3535
  3582  14DE  3001               	movlw	1
  3583  14DF  02AE               	subwf	___ftmul@cntr,f
  3584  14E0  1D03               	btfss	3,2
  3585  14E1  2CBE               	goto	l1606
  3586  14E2  082B               	movf	___ftmul@f3_as_product,w
  3587  14E3  00F0               	movwf	___ftpack@arg
  3588  14E4  082C               	movf	___ftmul@f3_as_product+1,w
  3589  14E5  00F1               	movwf	___ftpack@arg+1
  3590  14E6  082D               	movf	___ftmul@f3_as_product+2,w
  3591  14E7  00F2               	movwf	___ftpack@arg+2
  3592  14E8  082A               	movf	___ftmul@exp,w
  3593  14E9  00A6               	movwf	??___ftmul
  3594  14EA  0826               	movf	??___ftmul,w
  3595  14EB  00F3               	movwf	___ftpack@exp
  3596  14EC  082F               	movf	___ftmul@sign,w
  3597  14ED  00A7               	movwf	??___ftmul+1
  3598  14EE  0827               	movf	??___ftmul+1,w
  3599  14EF  00F4               	movwf	___ftpack@sign
  3600  14F0  160A  158A  2794   	fcall	___ftpack
  3601  14F3  0870               	movf	?___ftpack,w
  3602  14F4  1283               	bcf	3,5	;RP0=0, select bank0
  3603  14F5  1303               	bcf	3,6	;RP1=0, select bank0
  3604  14F6  00A0               	movwf	?___ftmul
  3605  14F7  0871               	movf	?___ftpack+1,w
  3606  14F8  00A1               	movwf	?___ftmul+1
  3607  14F9  0872               	movf	?___ftpack+2,w
  3608  14FA  00A2               	movwf	?___ftmul+2
  3609  14FB  0008               	return
  3610  14FC                     __end_of___ftmul:	
  3611                           
  3612                           	psect	text16
  3613  15E6                     __ptext16:	
  3614 ;; *************** function ___ftadd *****************
  3615 ;; Defined at:
  3616 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftadd.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;  f1              3   16[BANK0 ] float 
  3619 ;;  f2              3   19[BANK0 ] float 
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;  exp1            1   28[BANK0 ] unsigned char 
  3622 ;;  exp2            1   27[BANK0 ] unsigned char 
  3623 ;;  sign            1   26[BANK0 ] unsigned char 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  3   16[BANK0 ] float 
  3626 ;; Registers used:
  3627 ;;		wreg, status,2, status,0, pclath, cstack
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3633 ;;      Params:         0       6       0       0       0
  3634 ;;      Locals:         0       3       0       0       0
  3635 ;;      Temps:          0       4       0       0       0
  3636 ;;      Totals:         0      13       0       0       0
  3637 ;;Total ram usage:       13 bytes
  3638 ;; Hardware stack levels used:    1
  3639 ;; Hardware stack levels required when called:    1
  3640 ;; This function calls:
  3641 ;;		___ftpack
  3642 ;; This function is called by:
  3643 ;;		_PID
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           
  3648                           ;psect for function ___ftadd
  3649  15E6                     ___ftadd:	
  3650                           
  3651                           ;incstack = 0
  3652                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3653  15E6  1283               	bcf	3,5	;RP0=0, select bank0
  3654  15E7  1303               	bcf	3,6	;RP1=0, select bank0
  3655  15E8  0830               	movf	___ftadd@f1,w
  3656  15E9  00B6               	movwf	??___ftadd
  3657  15EA  0831               	movf	___ftadd@f1+1,w
  3658  15EB  00B7               	movwf	??___ftadd+1
  3659  15EC  0832               	movf	___ftadd@f1+2,w
  3660  15ED  00B8               	movwf	??___ftadd+2
  3661  15EE  1003               	clrc
  3662  15EF  0D37               	rlf	??___ftadd+1,w
  3663  15F0  0D38               	rlf	??___ftadd+2,w
  3664  15F1  00B9               	movwf	??___ftadd+3
  3665  15F2  0839               	movf	??___ftadd+3,w
  3666  15F3  00BC               	movwf	___ftadd@exp1
  3667  15F4  0833               	movf	___ftadd@f2,w
  3668  15F5  00B6               	movwf	??___ftadd
  3669  15F6  0834               	movf	___ftadd@f2+1,w
  3670  15F7  00B7               	movwf	??___ftadd+1
  3671  15F8  0835               	movf	___ftadd@f2+2,w
  3672  15F9  00B8               	movwf	??___ftadd+2
  3673  15FA  1003               	clrc
  3674  15FB  0D37               	rlf	??___ftadd+1,w
  3675  15FC  0D38               	rlf	??___ftadd+2,w
  3676  15FD  00B9               	movwf	??___ftadd+3
  3677  15FE  0839               	movf	??___ftadd+3,w
  3678  15FF  00BB               	movwf	___ftadd@exp2
  3679  1600  083C               	movf	___ftadd@exp1,w
  3680  1601  1903               	btfsc	3,2
  3681  1602  2E0F               	goto	l1506
  3682  1603  083B               	movf	___ftadd@exp2,w
  3683  1604  023C               	subwf	___ftadd@exp1,w
  3684  1605  1803               	skipnc
  3685  1606  2E16               	goto	l1510
  3686  1607  033C               	decf	___ftadd@exp1,w
  3687  1608  3AFF               	xorlw	255
  3688  1609  073B               	addwf	___ftadd@exp2,w
  3689  160A  00B6               	movwf	??___ftadd
  3690  160B  3019               	movlw	25
  3691  160C  0236               	subwf	??___ftadd,w
  3692  160D  1C03               	skipc
  3693  160E  2E16               	goto	l1510
  3694  160F                     l1506:	
  3695  160F  0833               	movf	___ftadd@f2,w
  3696  1610  00B0               	movwf	?___ftadd
  3697  1611  0834               	movf	___ftadd@f2+1,w
  3698  1612  00B1               	movwf	?___ftadd+1
  3699  1613  0835               	movf	___ftadd@f2+2,w
  3700  1614  00B2               	movwf	?___ftadd+2
  3701  1615  0008               	return
  3702  1616                     l1510:	
  3703  1616  083B               	movf	___ftadd@exp2,w
  3704  1617  1903               	btfsc	3,2
  3705  1618  0008               	return
  3706  1619  083C               	movf	___ftadd@exp1,w
  3707  161A  023B               	subwf	___ftadd@exp2,w
  3708  161B  1803               	skipnc
  3709  161C  2E25               	goto	l1516
  3710  161D  033B               	decf	___ftadd@exp2,w
  3711  161E  3AFF               	xorlw	255
  3712  161F  073C               	addwf	___ftadd@exp1,w
  3713  1620  00B6               	movwf	??___ftadd
  3714  1621  3019               	movlw	25
  3715  1622  0236               	subwf	??___ftadd,w
  3716  1623  1803               	btfsc	3,0
  3717  1624  0008               	return
  3718  1625                     l1516:	
  3719  1625  3006               	movlw	6
  3720  1626  00B6               	movwf	??___ftadd
  3721  1627  0836               	movf	??___ftadd,w
  3722  1628  00BA               	movwf	___ftadd@sign
  3723  1629  1BB2               	btfsc	___ftadd@f1+2,7
  3724  162A  17BA               	bsf	___ftadd@sign,7
  3725  162B  1BB5               	btfsc	___ftadd@f2+2,7
  3726  162C  173A               	bsf	___ftadd@sign,6
  3727  162D  17B1               	bsf	___ftadd@f1+1,7
  3728  162E  30FF               	movlw	255
  3729  162F  05B0               	andwf	___ftadd@f1,f
  3730  1630  30FF               	movlw	255
  3731  1631  05B1               	andwf	___ftadd@f1+1,f
  3732  1632  3000               	movlw	0
  3733  1633  05B2               	andwf	___ftadd@f1+2,f
  3734  1634  17B4               	bsf	___ftadd@f2+1,7
  3735  1635  30FF               	movlw	255
  3736  1636  05B3               	andwf	___ftadd@f2,f
  3737  1637  30FF               	movlw	255
  3738  1638  05B4               	andwf	___ftadd@f2+1,f
  3739  1639  3000               	movlw	0
  3740  163A  05B5               	andwf	___ftadd@f2+2,f
  3741  163B  083B               	movf	___ftadd@exp2,w
  3742  163C  023C               	subwf	___ftadd@exp1,w
  3743  163D  1803               	skipnc
  3744  163E  2E65               	goto	l1538
  3745  163F                     l1528:	
  3746  163F  3001               	movlw	1
  3747  1640                     u3265:	
  3748  1640  1003               	clrc
  3749  1641  0DB3               	rlf	___ftadd@f2,f
  3750  1642  0DB4               	rlf	___ftadd@f2+1,f
  3751  1643  0DB5               	rlf	___ftadd@f2+2,f
  3752  1644  3EFF               	addlw	-1
  3753  1645  1D03               	skipz
  3754  1646  2E40               	goto	u3265
  3755  1647  3001               	movlw	1
  3756  1648  02BB               	subwf	___ftadd@exp2,f
  3757  1649  083B               	movf	___ftadd@exp2,w
  3758  164A  063C               	xorwf	___ftadd@exp1,w
  3759  164B  1903               	skipnz
  3760  164C  2E60               	goto	l1536
  3761  164D  3001               	movlw	1
  3762  164E  02BA               	subwf	___ftadd@sign,f
  3763  164F  083A               	movf	___ftadd@sign,w
  3764  1650  3907               	andlw	7
  3765  1651  1903               	btfsc	3,2
  3766  1652  2E60               	goto	l1536
  3767  1653  2E3F               	goto	l1528
  3768  1654                     l1534:	
  3769  1654  3001               	movlw	1
  3770  1655                     u3295:	
  3771  1655  1003               	clrc
  3772  1656  0CB2               	rrf	___ftadd@f1+2,f
  3773  1657  0CB1               	rrf	___ftadd@f1+1,f
  3774  1658  0CB0               	rrf	___ftadd@f1,f
  3775  1659  3EFF               	addlw	-1
  3776  165A  1D03               	skipz
  3777  165B  2E55               	goto	u3295
  3778  165C  3001               	movlw	1
  3779  165D  00B6               	movwf	??___ftadd
  3780  165E  0836               	movf	??___ftadd,w
  3781  165F  07BC               	addwf	___ftadd@exp1,f
  3782  1660                     l1536:	
  3783  1660  083C               	movf	___ftadd@exp1,w
  3784  1661  063B               	xorwf	___ftadd@exp2,w
  3785  1662  1903               	btfsc	3,2
  3786  1663  2E8E               	goto	l482
  3787  1664  2E54               	goto	l1534
  3788  1665                     l1538:	
  3789  1665  083C               	movf	___ftadd@exp1,w
  3790  1666  023B               	subwf	___ftadd@exp2,w
  3791  1667  1803               	skipnc
  3792  1668  2E8E               	goto	l482
  3793  1669                     l1540:	
  3794  1669  3001               	movlw	1
  3795  166A                     u3325:	
  3796  166A  1003               	clrc
  3797  166B  0DB0               	rlf	___ftadd@f1,f
  3798  166C  0DB1               	rlf	___ftadd@f1+1,f
  3799  166D  0DB2               	rlf	___ftadd@f1+2,f
  3800  166E  3EFF               	addlw	-1
  3801  166F  1D03               	skipz
  3802  1670  2E6A               	goto	u3325
  3803  1671  3001               	movlw	1
  3804  1672  02BC               	subwf	___ftadd@exp1,f
  3805  1673  083B               	movf	___ftadd@exp2,w
  3806  1674  063C               	xorwf	___ftadd@exp1,w
  3807  1675  1903               	skipnz
  3808  1676  2E8A               	goto	l1548
  3809  1677  3001               	movlw	1
  3810  1678  02BA               	subwf	___ftadd@sign,f
  3811  1679  083A               	movf	___ftadd@sign,w
  3812  167A  3907               	andlw	7
  3813  167B  1903               	btfsc	3,2
  3814  167C  2E8A               	goto	l1548
  3815  167D  2E69               	goto	l1540
  3816  167E                     l1546:	
  3817  167E  3001               	movlw	1
  3818  167F                     u3355:	
  3819  167F  1003               	clrc
  3820  1680  0CB5               	rrf	___ftadd@f2+2,f
  3821  1681  0CB4               	rrf	___ftadd@f2+1,f
  3822  1682  0CB3               	rrf	___ftadd@f2,f
  3823  1683  3EFF               	addlw	-1
  3824  1684  1D03               	skipz
  3825  1685  2E7F               	goto	u3355
  3826  1686  3001               	movlw	1
  3827  1687  00B6               	movwf	??___ftadd
  3828  1688  0836               	movf	??___ftadd,w
  3829  1689  07BB               	addwf	___ftadd@exp2,f
  3830  168A                     l1548:	
  3831  168A  083C               	movf	___ftadd@exp1,w
  3832  168B  063B               	xorwf	___ftadd@exp2,w
  3833  168C  1D03               	skipz
  3834  168D  2E7E               	goto	l1546
  3835  168E                     l482:	
  3836  168E  1FBA               	btfss	___ftadd@sign,7
  3837  168F  2EA0               	goto	l1552
  3838  1690  30FF               	movlw	255
  3839  1691  06B0               	xorwf	___ftadd@f1,f
  3840  1692  30FF               	movlw	255
  3841  1693  06B1               	xorwf	___ftadd@f1+1,f
  3842  1694  30FF               	movlw	255
  3843  1695  06B2               	xorwf	___ftadd@f1+2,f
  3844  1696  3001               	movlw	1
  3845  1697  07B0               	addwf	___ftadd@f1,f
  3846  1698  3000               	movlw	0
  3847  1699  1803               	skipnc
  3848  169A  3001               	movlw	1
  3849  169B  07B1               	addwf	___ftadd@f1+1,f
  3850  169C  3000               	movlw	0
  3851  169D  1803               	skipnc
  3852  169E  3001               	movlw	1
  3853  169F  07B2               	addwf	___ftadd@f1+2,f
  3854  16A0                     l1552:	
  3855  16A0  1F3A               	btfss	___ftadd@sign,6
  3856  16A1  2EB2               	goto	l1556
  3857  16A2  30FF               	movlw	255
  3858  16A3  06B3               	xorwf	___ftadd@f2,f
  3859  16A4  30FF               	movlw	255
  3860  16A5  06B4               	xorwf	___ftadd@f2+1,f
  3861  16A6  30FF               	movlw	255
  3862  16A7  06B5               	xorwf	___ftadd@f2+2,f
  3863  16A8  3001               	movlw	1
  3864  16A9  07B3               	addwf	___ftadd@f2,f
  3865  16AA  3000               	movlw	0
  3866  16AB  1803               	skipnc
  3867  16AC  3001               	movlw	1
  3868  16AD  07B4               	addwf	___ftadd@f2+1,f
  3869  16AE  3000               	movlw	0
  3870  16AF  1803               	skipnc
  3871  16B0  3001               	movlw	1
  3872  16B1  07B5               	addwf	___ftadd@f2+2,f
  3873  16B2                     l1556:	
  3874  16B2  01BA               	clrf	___ftadd@sign
  3875  16B3  0830               	movf	___ftadd@f1,w
  3876  16B4  07B3               	addwf	___ftadd@f2,f
  3877  16B5  0831               	movf	___ftadd@f1+1,w
  3878  16B6  1103               	clrz
  3879  16B7  1803               	skipnc
  3880  16B8  0A31               	incf	___ftadd@f1+1,w
  3881  16B9  1D03               	btfss	3,2
  3882  16BA  07B4               	addwf	___ftadd@f2+1,f
  3883  16BB  0832               	movf	___ftadd@f1+2,w
  3884  16BC  1103               	clrz
  3885  16BD  1803               	skipnc
  3886  16BE  0A32               	incf	___ftadd@f1+2,w
  3887  16BF  1D03               	btfss	3,2
  3888  16C0  07B5               	addwf	___ftadd@f2+2,f
  3889  16C1  1FB5               	btfss	___ftadd@f2+2,7
  3890  16C2  2ED5               	goto	l1566
  3891  16C3  30FF               	movlw	255
  3892  16C4  06B3               	xorwf	___ftadd@f2,f
  3893  16C5  30FF               	movlw	255
  3894  16C6  06B4               	xorwf	___ftadd@f2+1,f
  3895  16C7  30FF               	movlw	255
  3896  16C8  06B5               	xorwf	___ftadd@f2+2,f
  3897  16C9  3001               	movlw	1
  3898  16CA  07B3               	addwf	___ftadd@f2,f
  3899  16CB  3000               	movlw	0
  3900  16CC  1803               	skipnc
  3901  16CD  3001               	movlw	1
  3902  16CE  07B4               	addwf	___ftadd@f2+1,f
  3903  16CF  3000               	movlw	0
  3904  16D0  1803               	skipnc
  3905  16D1  3001               	movlw	1
  3906  16D2  07B5               	addwf	___ftadd@f2+2,f
  3907  16D3  01BA               	clrf	___ftadd@sign
  3908  16D4  0ABA               	incf	___ftadd@sign,f
  3909  16D5                     l1566:	
  3910  16D5  0833               	movf	___ftadd@f2,w
  3911  16D6  00F0               	movwf	___ftpack@arg
  3912  16D7  0834               	movf	___ftadd@f2+1,w
  3913  16D8  00F1               	movwf	___ftpack@arg+1
  3914  16D9  0835               	movf	___ftadd@f2+2,w
  3915  16DA  00F2               	movwf	___ftpack@arg+2
  3916  16DB  083C               	movf	___ftadd@exp1,w
  3917  16DC  00B6               	movwf	??___ftadd
  3918  16DD  0836               	movf	??___ftadd,w
  3919  16DE  00F3               	movwf	___ftpack@exp
  3920  16DF  083A               	movf	___ftadd@sign,w
  3921  16E0  00B7               	movwf	??___ftadd+1
  3922  16E1  0837               	movf	??___ftadd+1,w
  3923  16E2  00F4               	movwf	___ftpack@sign
  3924  16E3  160A  158A  2794   	fcall	___ftpack
  3925  16E6  0870               	movf	?___ftpack,w
  3926  16E7  1283               	bcf	3,5	;RP0=0, select bank0
  3927  16E8  1303               	bcf	3,6	;RP1=0, select bank0
  3928  16E9  00B0               	movwf	?___ftadd
  3929  16EA  0871               	movf	?___ftpack+1,w
  3930  16EB  00B1               	movwf	?___ftadd+1
  3931  16EC  0872               	movf	?___ftpack+2,w
  3932  16ED  00B2               	movwf	?___ftadd+2
  3933  16EE  0008               	return
  3934  16EF                     __end_of___ftadd:	
  3935                           
  3936                           	psect	text17
  3937  1EEC                     __ptext17:	
  3938 ;; *************** function ___awtoft *****************
  3939 ;; Defined at:
  3940 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awtoft.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;  c               2    8[COMMON] int 
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;  sign            1   13[COMMON] unsigned char 
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  3    8[COMMON] float 
  3947 ;; Registers used:
  3948 ;;		wreg, status,2, status,0, pclath, cstack
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3954 ;;      Params:         3       0       0       0       0
  3955 ;;      Locals:         1       0       0       0       0
  3956 ;;      Temps:          2       0       0       0       0
  3957 ;;      Totals:         6       0       0       0       0
  3958 ;;Total ram usage:        6 bytes
  3959 ;; Hardware stack levels used:    1
  3960 ;; Hardware stack levels required when called:    1
  3961 ;; This function calls:
  3962 ;;		___ftpack
  3963 ;; This function is called by:
  3964 ;;		_PID
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           
  3969                           ;psect for function ___awtoft
  3970  1EEC                     ___awtoft:	
  3971                           
  3972                           ;incstack = 0
  3973                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3974  1EEC  01FD               	clrf	___awtoft@sign
  3975  1EED  1FF9               	btfss	___awtoft@c+1,7
  3976  1EEE  2EF6               	goto	l1496
  3977  1EEF  09F8               	comf	___awtoft@c,f
  3978  1EF0  09F9               	comf	___awtoft@c+1,f
  3979  1EF1  0AF8               	incf	___awtoft@c,f
  3980  1EF2  1903               	skipnz
  3981  1EF3  0AF9               	incf	___awtoft@c+1,f
  3982  1EF4  01FD               	clrf	___awtoft@sign
  3983  1EF5  0AFD               	incf	___awtoft@sign,f
  3984  1EF6                     l1496:	
  3985  1EF6  0878               	movf	___awtoft@c,w
  3986  1EF7  00F0               	movwf	___ftpack@arg
  3987  1EF8  0879               	movf	___awtoft@c+1,w
  3988  1EF9  00F1               	movwf	___ftpack@arg+1
  3989  1EFA  01F2               	clrf	___ftpack@arg+2
  3990  1EFB  308E               	movlw	142
  3991  1EFC  00FB               	movwf	??___awtoft
  3992  1EFD  087B               	movf	??___awtoft,w
  3993  1EFE  00F3               	movwf	___ftpack@exp
  3994  1EFF  087D               	movf	___awtoft@sign,w
  3995  1F00  00FC               	movwf	??___awtoft+1
  3996  1F01  087C               	movf	??___awtoft+1,w
  3997  1F02  00F4               	movwf	___ftpack@sign
  3998  1F03  160A  158A  2794   	fcall	___ftpack
  3999  1F06  0870               	movf	?___ftpack,w
  4000  1F07  00F8               	movwf	?___awtoft
  4001  1F08  0871               	movf	?___ftpack+1,w
  4002  1F09  00F9               	movwf	?___awtoft+1
  4003  1F0A  0872               	movf	?___ftpack+2,w
  4004  1F0B  00FA               	movwf	?___awtoft+2
  4005  1F0C  0008               	return
  4006  1F0D                     __end_of___awtoft:	
  4007                           
  4008                           	psect	text18
  4009  1F94                     __ptext18:	
  4010 ;; *************** function ___ftpack *****************
  4011 ;; Defined at:
  4012 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;  arg             3    0[COMMON] unsigned um
  4015 ;;  exp             1    3[COMMON] unsigned char 
  4016 ;;  sign            1    4[COMMON] unsigned char 
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;		None
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  3    0[COMMON] float 
  4021 ;; Registers used:
  4022 ;;		wreg, status,2, status,0
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4028 ;;      Params:         5       0       0       0       0
  4029 ;;      Locals:         0       0       0       0       0
  4030 ;;      Temps:          3       0       0       0       0
  4031 ;;      Totals:         8       0       0       0       0
  4032 ;;Total ram usage:        8 bytes
  4033 ;; Hardware stack levels used:    1
  4034 ;; This function calls:
  4035 ;;		Nothing
  4036 ;; This function is called by:
  4037 ;;		___awtoft
  4038 ;;		___ftadd
  4039 ;;		___ftmul
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           
  4044                           ;psect for function ___ftpack
  4045  1F94                     ___ftpack:	
  4046                           
  4047                           ;incstack = 0
  4048                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4049  1F94  0873               	movf	___ftpack@exp,w
  4050  1F95  1903               	btfsc	3,2
  4051  1F96  2F9C               	goto	l1302
  4052  1F97  0872               	movf	___ftpack@arg+2,w
  4053  1F98  0471               	iorwf	___ftpack@arg+1,w
  4054  1F99  0470               	iorwf	___ftpack@arg,w
  4055  1F9A  1D03               	skipz
  4056  1F9B  2FAF               	goto	l1308
  4057  1F9C                     l1302:	
  4058  1F9C  3000               	movlw	0
  4059  1F9D  00F0               	movwf	?___ftpack
  4060  1F9E  3000               	movlw	0
  4061  1F9F  00F1               	movwf	?___ftpack+1
  4062  1FA0  3000               	movlw	0
  4063  1FA1  00F2               	movwf	?___ftpack+2
  4064  1FA2  0008               	return
  4065  1FA3                     l1306:	
  4066  1FA3  3001               	movlw	1
  4067  1FA4  00F5               	movwf	??___ftpack
  4068  1FA5  0875               	movf	??___ftpack,w
  4069  1FA6  07F3               	addwf	___ftpack@exp,f
  4070  1FA7  3001               	movlw	1
  4071  1FA8                     u1995:	
  4072  1FA8  1003               	clrc
  4073  1FA9  0CF2               	rrf	___ftpack@arg+2,f
  4074  1FAA  0CF1               	rrf	___ftpack@arg+1,f
  4075  1FAB  0CF0               	rrf	___ftpack@arg,f
  4076  1FAC  3EFF               	addlw	-1
  4077  1FAD  1D03               	skipz
  4078  1FAE  2FA8               	goto	u1995
  4079  1FAF                     l1308:	
  4080  1FAF  30FE               	movlw	254
  4081  1FB0  0572               	andwf	___ftpack@arg+2,w
  4082  1FB1  1903               	btfsc	3,2
  4083  1FB2  2FCA               	goto	l451
  4084  1FB3  2FA3               	goto	l1306
  4085  1FB4                     l1310:	
  4086  1FB4  3001               	movlw	1
  4087  1FB5  00F5               	movwf	??___ftpack
  4088  1FB6  0875               	movf	??___ftpack,w
  4089  1FB7  07F3               	addwf	___ftpack@exp,f
  4090  1FB8  3001               	movlw	1
  4091  1FB9  07F0               	addwf	___ftpack@arg,f
  4092  1FBA  3000               	movlw	0
  4093  1FBB  1803               	skipnc
  4094  1FBC  3001               	movlw	1
  4095  1FBD  07F1               	addwf	___ftpack@arg+1,f
  4096  1FBE  3000               	movlw	0
  4097  1FBF  1803               	skipnc
  4098  1FC0  3001               	movlw	1
  4099  1FC1  07F2               	addwf	___ftpack@arg+2,f
  4100  1FC2  3001               	movlw	1
  4101  1FC3                     u2015:	
  4102  1FC3  1003               	clrc
  4103  1FC4  0CF2               	rrf	___ftpack@arg+2,f
  4104  1FC5  0CF1               	rrf	___ftpack@arg+1,f
  4105  1FC6  0CF0               	rrf	___ftpack@arg,f
  4106  1FC7  3EFF               	addlw	-1
  4107  1FC8  1D03               	skipz
  4108  1FC9  2FC3               	goto	u2015
  4109  1FCA                     l451:	
  4110  1FCA  30FF               	movlw	255
  4111  1FCB  0572               	andwf	___ftpack@arg+2,w
  4112  1FCC  1903               	btfsc	3,2
  4113  1FCD  2FD9               	goto	l1318
  4114  1FCE  2FB4               	goto	l1310
  4115  1FCF                     l1316:	
  4116  1FCF  3001               	movlw	1
  4117  1FD0  02F3               	subwf	___ftpack@exp,f
  4118  1FD1  3001               	movlw	1
  4119  1FD2                     u2035:	
  4120  1FD2  1003               	clrc
  4121  1FD3  0DF0               	rlf	___ftpack@arg,f
  4122  1FD4  0DF1               	rlf	___ftpack@arg+1,f
  4123  1FD5  0DF2               	rlf	___ftpack@arg+2,f
  4124  1FD6  3EFF               	addlw	-1
  4125  1FD7  1D03               	skipz
  4126  1FD8  2FD2               	goto	u2035
  4127  1FD9                     l1318:	
  4128  1FD9  1BF1               	btfsc	___ftpack@arg+1,7
  4129  1FDA  2FDF               	goto	l458
  4130  1FDB  3002               	movlw	2
  4131  1FDC  0273               	subwf	___ftpack@exp,w
  4132  1FDD  1803               	skipnc
  4133  1FDE  2FCF               	goto	l1316
  4134  1FDF                     l458:	
  4135  1FDF  1873               	btfsc	___ftpack@exp,0
  4136  1FE0  2FE7               	goto	l459
  4137  1FE1  30FF               	movlw	255
  4138  1FE2  05F0               	andwf	___ftpack@arg,f
  4139  1FE3  307F               	movlw	127
  4140  1FE4  05F1               	andwf	___ftpack@arg+1,f
  4141  1FE5  30FF               	movlw	255
  4142  1FE6  05F2               	andwf	___ftpack@arg+2,f
  4143  1FE7                     l459:	
  4144  1FE7  1003               	clrc
  4145  1FE8  0CF3               	rrf	___ftpack@exp,f
  4146  1FE9  0873               	movf	___ftpack@exp,w
  4147  1FEA  00F5               	movwf	??___ftpack
  4148  1FEB  01F6               	clrf	??___ftpack+1
  4149  1FEC  01F7               	clrf	??___ftpack+2
  4150  1FED  3010               	movlw	16
  4151  1FEE                     u2075:	
  4152  1FEE  1003               	clrc
  4153  1FEF  0DF5               	rlf	??___ftpack,f
  4154  1FF0  0DF6               	rlf	??___ftpack+1,f
  4155  1FF1  0DF7               	rlf	??___ftpack+2,f
  4156  1FF2  3EFF               	addlw	-1
  4157  1FF3  1D03               	skipz
  4158  1FF4  2FEE               	goto	u2075
  4159  1FF5  0875               	movf	??___ftpack,w
  4160  1FF6  04F0               	iorwf	___ftpack@arg,f
  4161  1FF7  0876               	movf	??___ftpack+1,w
  4162  1FF8  04F1               	iorwf	___ftpack@arg+1,f
  4163  1FF9  0877               	movf	??___ftpack+2,w
  4164  1FFA  04F2               	iorwf	___ftpack@arg+2,f
  4165  1FFB  0874               	movf	___ftpack@sign,w
  4166  1FFC  1903               	btfsc	3,2
  4167  1FFD  0008               	return
  4168  1FFE  17F2               	bsf	___ftpack@arg+2,7
  4169  1FFF  0008               	return
  4170  2000                     __end_of___ftpack:	
  4171                           
  4172                           	psect	text19
  4173  0E46                     __ptext19:	
  4174 ;; *************** function _LCD_mapping *****************
  4175 ;; Defined at:
  4176 ;;		line 9 in file "lcd.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  D1              1    wreg     PTR struct .
  4179 ;;		 -> main@D1(28), 
  4180 ;;  D2              1    0[COMMON] PTR struct .
  4181 ;;		 -> main@D2(28), 
  4182 ;;  D3              1    1[COMMON] PTR struct .
  4183 ;;		 -> main@D3(28), 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;  D1              1    4[COMMON] PTR struct .
  4186 ;;		 -> main@D1(28), 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  1    wreg      void 
  4189 ;; Registers used:
  4190 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4196 ;;      Params:         2       0       0       0       0
  4197 ;;      Locals:         1       0       0       0       0
  4198 ;;      Temps:          2       0       0       0       0
  4199 ;;      Totals:         5       0       0       0       0
  4200 ;;Total ram usage:        5 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; This function calls:
  4203 ;;		Nothing
  4204 ;; This function is called by:
  4205 ;;		_main
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           
  4210                           ;psect for function _LCD_mapping
  4211  0E46                     _LCD_mapping:	
  4212                           
  4213                           ;incstack = 0
  4214                           ; Regs used in _LCD_mapping: [wreg-fsr0h+status,2+status,0]
  4215                           ;LCD_mapping@D1 stored from wreg
  4216  0E46  00F4               	movwf	LCD_mapping@D1
  4217                           
  4218                           ;lcd.c: 11: D1->sa = &LCDDATA2; D1->bits[0] =6 ;
  4219  0E47  3012               	movlw	18
  4220  0E48  00F2               	movwf	??_LCD_mapping
  4221  0E49  3001               	movlw	1
  4222  0E4A  00F3               	movwf	??_LCD_mapping+1
  4223  0E4B  0874               	movf	LCD_mapping@D1,w
  4224  0E4C  0084               	movwf	4
  4225  0E4D  0872               	movf	??_LCD_mapping,w
  4226  0E4E  1383               	bcf	3,7	;select IRP bank0
  4227  0E4F  0080               	movwf	0
  4228  0E50  0873               	movf	??_LCD_mapping+1,w
  4229  0E51  0A84               	incf	4,f
  4230  0E52  0080               	movwf	0
  4231  0E53  0384               	decf	4,f
  4232  0E54  0874               	movf	LCD_mapping@D1,w
  4233  0E55  3E0E               	addlw	14
  4234  0E56  0084               	movwf	4
  4235  0E57  3006               	movlw	6
  4236  0E58  0080               	movwf	0
  4237  0E59  0A84               	incf	4,f
  4238  0E5A  3000               	movlw	0
  4239  0E5B  0080               	movwf	0
  4240                           
  4241                           ;lcd.c: 12: D1->sb = &LCDDATA2; D1->bits[1] =7 ;
  4242  0E5C  3012               	movlw	18
  4243  0E5D  00F2               	movwf	??_LCD_mapping
  4244  0E5E  3001               	movlw	1
  4245  0E5F  00F3               	movwf	??_LCD_mapping+1
  4246  0E60  0874               	movf	LCD_mapping@D1,w
  4247  0E61  3E02               	addlw	2
  4248  0E62  0084               	movwf	4
  4249  0E63  0872               	movf	??_LCD_mapping,w
  4250  0E64  0080               	movwf	0
  4251  0E65  0873               	movf	??_LCD_mapping+1,w
  4252  0E66  0A84               	incf	4,f
  4253  0E67  0080               	movwf	0
  4254  0E68  0384               	decf	4,f
  4255  0E69  0874               	movf	LCD_mapping@D1,w
  4256  0E6A  3E10               	addlw	16
  4257  0E6B  0084               	movwf	4
  4258  0E6C  3007               	movlw	7
  4259  0E6D  0080               	movwf	0
  4260  0E6E  0A84               	incf	4,f
  4261  0E6F  3000               	movlw	0
  4262  0E70  0080               	movwf	0
  4263                           
  4264                           ;lcd.c: 13: D1->sc = &LCDDATA8; D1->bits[2] =7 ;
  4265  0E71  3018               	movlw	24
  4266  0E72  00F2               	movwf	??_LCD_mapping
  4267  0E73  3001               	movlw	1
  4268  0E74  00F3               	movwf	??_LCD_mapping+1
  4269  0E75  0874               	movf	LCD_mapping@D1,w
  4270  0E76  3E04               	addlw	4
  4271  0E77  0084               	movwf	4
  4272  0E78  0872               	movf	??_LCD_mapping,w
  4273  0E79  0080               	movwf	0
  4274  0E7A  0873               	movf	??_LCD_mapping+1,w
  4275  0E7B  0A84               	incf	4,f
  4276  0E7C  0080               	movwf	0
  4277  0E7D  0384               	decf	4,f
  4278  0E7E  0874               	movf	LCD_mapping@D1,w
  4279  0E7F  3E12               	addlw	18
  4280  0E80  0084               	movwf	4
  4281  0E81  3007               	movlw	7
  4282  0E82  0080               	movwf	0
  4283  0E83  0A84               	incf	4,f
  4284  0E84  3000               	movlw	0
  4285  0E85  0080               	movwf	0
  4286                           
  4287                           ;lcd.c: 14: D1->sd = &LCDDATA11; D1->bits[3] =6 ;
  4288  0E86  301B               	movlw	27
  4289  0E87  00F2               	movwf	??_LCD_mapping
  4290  0E88  3001               	movlw	1
  4291  0E89  00F3               	movwf	??_LCD_mapping+1
  4292  0E8A  0874               	movf	LCD_mapping@D1,w
  4293  0E8B  3E06               	addlw	6
  4294  0E8C  0084               	movwf	4
  4295  0E8D  0872               	movf	??_LCD_mapping,w
  4296  0E8E  0080               	movwf	0
  4297  0E8F  0873               	movf	??_LCD_mapping+1,w
  4298  0E90  0A84               	incf	4,f
  4299  0E91  0080               	movwf	0
  4300  0E92  0384               	decf	4,f
  4301  0E93  0874               	movf	LCD_mapping@D1,w
  4302  0E94  3E14               	addlw	20
  4303  0E95  0084               	movwf	4
  4304  0E96  3006               	movlw	6
  4305  0E97  0080               	movwf	0
  4306  0E98  0A84               	incf	4,f
  4307  0E99  3000               	movlw	0
  4308  0E9A  0080               	movwf	0
  4309                           
  4310                           ;lcd.c: 15: D1->se = &LCDDATA8; D1->bits[4] =6 ;
  4311  0E9B  3018               	movlw	24
  4312  0E9C  00F2               	movwf	??_LCD_mapping
  4313  0E9D  3001               	movlw	1
  4314  0E9E  00F3               	movwf	??_LCD_mapping+1
  4315  0E9F  0874               	movf	LCD_mapping@D1,w
  4316  0EA0  3E08               	addlw	8
  4317  0EA1  0084               	movwf	4
  4318  0EA2  0872               	movf	??_LCD_mapping,w
  4319  0EA3  0080               	movwf	0
  4320  0EA4  0873               	movf	??_LCD_mapping+1,w
  4321  0EA5  0A84               	incf	4,f
  4322  0EA6  0080               	movwf	0
  4323  0EA7  0384               	decf	4,f
  4324  0EA8  0874               	movf	LCD_mapping@D1,w
  4325  0EA9  3E16               	addlw	22
  4326  0EAA  0084               	movwf	4
  4327  0EAB  3006               	movlw	6
  4328  0EAC  0080               	movwf	0
  4329  0EAD  0A84               	incf	4,f
  4330  0EAE  3000               	movlw	0
  4331  0EAF  0080               	movwf	0
  4332                           
  4333                           ;lcd.c: 16: D1->sf = &LCDDATA5; D1->bits[5] =6 ;
  4334  0EB0  3015               	movlw	21
  4335  0EB1  00F2               	movwf	??_LCD_mapping
  4336  0EB2  3001               	movlw	1
  4337  0EB3  00F3               	movwf	??_LCD_mapping+1
  4338  0EB4  0874               	movf	LCD_mapping@D1,w
  4339  0EB5  3E0A               	addlw	10
  4340  0EB6  0084               	movwf	4
  4341  0EB7  0872               	movf	??_LCD_mapping,w
  4342  0EB8  0080               	movwf	0
  4343  0EB9  0873               	movf	??_LCD_mapping+1,w
  4344  0EBA  0A84               	incf	4,f
  4345  0EBB  0080               	movwf	0
  4346  0EBC  0384               	decf	4,f
  4347  0EBD  0874               	movf	LCD_mapping@D1,w
  4348  0EBE  3E18               	addlw	24
  4349  0EBF  0084               	movwf	4
  4350  0EC0  3006               	movlw	6
  4351  0EC1  0080               	movwf	0
  4352  0EC2  0A84               	incf	4,f
  4353  0EC3  3000               	movlw	0
  4354  0EC4  0080               	movwf	0
  4355                           
  4356                           ;lcd.c: 17: D1->sg = &LCDDATA5; D1->bits[6] =7 ;
  4357  0EC5  3015               	movlw	21
  4358  0EC6  00F2               	movwf	??_LCD_mapping
  4359  0EC7  3001               	movlw	1
  4360  0EC8  00F3               	movwf	??_LCD_mapping+1
  4361  0EC9  0874               	movf	LCD_mapping@D1,w
  4362  0ECA  3E0C               	addlw	12
  4363  0ECB  0084               	movwf	4
  4364  0ECC  0872               	movf	??_LCD_mapping,w
  4365  0ECD  0080               	movwf	0
  4366  0ECE  0873               	movf	??_LCD_mapping+1,w
  4367  0ECF  0A84               	incf	4,f
  4368  0ED0  0080               	movwf	0
  4369  0ED1  0384               	decf	4,f
  4370  0ED2  0874               	movf	LCD_mapping@D1,w
  4371  0ED3  3E1A               	addlw	26
  4372  0ED4  0084               	movwf	4
  4373  0ED5  3007               	movlw	7
  4374  0ED6  0080               	movwf	0
  4375  0ED7  0A84               	incf	4,f
  4376  0ED8  3000               	movlw	0
  4377  0ED9  0080               	movwf	0
  4378                           
  4379                           ;lcd.c: 20: D2->sa = &LCDDATA0; D2->bits[0] =6 ;
  4380  0EDA  3010               	movlw	16
  4381  0EDB  00F2               	movwf	??_LCD_mapping
  4382  0EDC  3001               	movlw	1
  4383  0EDD  00F3               	movwf	??_LCD_mapping+1
  4384  0EDE  0870               	movf	LCD_mapping@D2,w
  4385  0EDF  0084               	movwf	4
  4386  0EE0  0872               	movf	??_LCD_mapping,w
  4387  0EE1  1783               	bsf	3,7	;select IRP bank2
  4388  0EE2  0080               	movwf	0
  4389  0EE3  0873               	movf	??_LCD_mapping+1,w
  4390  0EE4  0A84               	incf	4,f
  4391  0EE5  0080               	movwf	0
  4392  0EE6  0384               	decf	4,f
  4393  0EE7  0870               	movf	LCD_mapping@D2,w
  4394  0EE8  3E0E               	addlw	14
  4395  0EE9  0084               	movwf	4
  4396  0EEA  3006               	movlw	6
  4397  0EEB  0080               	movwf	0
  4398  0EEC  0A84               	incf	4,f
  4399  0EED  3000               	movlw	0
  4400  0EEE  0080               	movwf	0
  4401                           
  4402                           ;lcd.c: 21: D2->sb = &LCDDATA2; D2->bits[1] =5 ;
  4403  0EEF  3012               	movlw	18
  4404  0EF0  00F2               	movwf	??_LCD_mapping
  4405  0EF1  3001               	movlw	1
  4406  0EF2  00F3               	movwf	??_LCD_mapping+1
  4407  0EF3  0870               	movf	LCD_mapping@D2,w
  4408  0EF4  3E02               	addlw	2
  4409  0EF5  0084               	movwf	4
  4410  0EF6  0872               	movf	??_LCD_mapping,w
  4411  0EF7  0080               	movwf	0
  4412  0EF8  0873               	movf	??_LCD_mapping+1,w
  4413  0EF9  0A84               	incf	4,f
  4414  0EFA  0080               	movwf	0
  4415  0EFB  0384               	decf	4,f
  4416  0EFC  0870               	movf	LCD_mapping@D2,w
  4417  0EFD  3E10               	addlw	16
  4418  0EFE  0084               	movwf	4
  4419  0EFF  3005               	movlw	5
  4420  0F00  0080               	movwf	0
  4421  0F01  0A84               	incf	4,f
  4422  0F02  3000               	movlw	0
  4423  0F03  0080               	movwf	0
  4424                           
  4425                           ;lcd.c: 22: D2->sc = &LCDDATA8; D2->bits[2] =5 ;
  4426  0F04  3018               	movlw	24
  4427  0F05  00F2               	movwf	??_LCD_mapping
  4428  0F06  3001               	movlw	1
  4429  0F07  00F3               	movwf	??_LCD_mapping+1
  4430  0F08  0870               	movf	LCD_mapping@D2,w
  4431  0F09  3E04               	addlw	4
  4432  0F0A  0084               	movwf	4
  4433  0F0B  0872               	movf	??_LCD_mapping,w
  4434  0F0C  0080               	movwf	0
  4435  0F0D  0873               	movf	??_LCD_mapping+1,w
  4436  0F0E  0A84               	incf	4,f
  4437  0F0F  0080               	movwf	0
  4438  0F10  0384               	decf	4,f
  4439  0F11  0870               	movf	LCD_mapping@D2,w
  4440  0F12  3E12               	addlw	18
  4441  0F13  0084               	movwf	4
  4442  0F14  3005               	movlw	5
  4443  0F15  0080               	movwf	0
  4444  0F16  0A84               	incf	4,f
  4445  0F17  3000               	movlw	0
  4446  0F18  0080               	movwf	0
  4447                           
  4448                           ;lcd.c: 23: D2->sd = &LCDDATA9; D2->bits[3] =6 ;
  4449  0F19  3019               	movlw	25
  4450  0F1A  00F2               	movwf	??_LCD_mapping
  4451  0F1B  3001               	movlw	1
  4452  0F1C  00F3               	movwf	??_LCD_mapping+1
  4453  0F1D  0870               	movf	LCD_mapping@D2,w
  4454  0F1E  3E06               	addlw	6
  4455  0F1F  0084               	movwf	4
  4456  0F20  0872               	movf	??_LCD_mapping,w
  4457  0F21  0080               	movwf	0
  4458  0F22  0873               	movf	??_LCD_mapping+1,w
  4459  0F23  0A84               	incf	4,f
  4460  0F24  0080               	movwf	0
  4461  0F25  0384               	decf	4,f
  4462  0F26  0870               	movf	LCD_mapping@D2,w
  4463  0F27  3E14               	addlw	20
  4464  0F28  0084               	movwf	4
  4465  0F29  3006               	movlw	6
  4466  0F2A  0080               	movwf	0
  4467  0F2B  0A84               	incf	4,f
  4468  0F2C  3000               	movlw	0
  4469  0F2D  0080               	movwf	0
  4470                           
  4471                           ;lcd.c: 24: D2->se = &LCDDATA6; D2->bits[4] =6 ;
  4472  0F2E  3016               	movlw	22
  4473  0F2F  00F2               	movwf	??_LCD_mapping
  4474  0F30  3001               	movlw	1
  4475  0F31  00F3               	movwf	??_LCD_mapping+1
  4476  0F32  0870               	movf	LCD_mapping@D2,w
  4477  0F33  3E08               	addlw	8
  4478  0F34  0084               	movwf	4
  4479  0F35  0872               	movf	??_LCD_mapping,w
  4480  0F36  0080               	movwf	0
  4481  0F37  0873               	movf	??_LCD_mapping+1,w
  4482  0F38  0A84               	incf	4,f
  4483  0F39  0080               	movwf	0
  4484  0F3A  0384               	decf	4,f
  4485  0F3B  0870               	movf	LCD_mapping@D2,w
  4486  0F3C  3E16               	addlw	22
  4487  0F3D  0084               	movwf	4
  4488  0F3E  3006               	movlw	6
  4489  0F3F  0080               	movwf	0
  4490  0F40  0A84               	incf	4,f
  4491  0F41  3000               	movlw	0
  4492  0F42  0080               	movwf	0
  4493                           
  4494                           ;lcd.c: 25: D2->sf = &LCDDATA3; D2->bits[5] =6 ;
  4495  0F43  3013               	movlw	19
  4496  0F44  00F2               	movwf	??_LCD_mapping
  4497  0F45  3001               	movlw	1
  4498  0F46  00F3               	movwf	??_LCD_mapping+1
  4499  0F47  0870               	movf	LCD_mapping@D2,w
  4500  0F48  3E0A               	addlw	10
  4501  0F49  0084               	movwf	4
  4502  0F4A  0872               	movf	??_LCD_mapping,w
  4503  0F4B  0080               	movwf	0
  4504  0F4C  0873               	movf	??_LCD_mapping+1,w
  4505  0F4D  0A84               	incf	4,f
  4506  0F4E  0080               	movwf	0
  4507  0F4F  0384               	decf	4,f
  4508  0F50  0870               	movf	LCD_mapping@D2,w
  4509  0F51  3E18               	addlw	24
  4510  0F52  0084               	movwf	4
  4511  0F53  3006               	movlw	6
  4512  0F54  0080               	movwf	0
  4513  0F55  0A84               	incf	4,f
  4514  0F56  3000               	movlw	0
  4515  0F57  0080               	movwf	0
  4516                           
  4517                           ;lcd.c: 26: D2->sg = &LCDDATA5; D2->bits[6] =5 ;
  4518  0F58  3015               	movlw	21
  4519  0F59  00F2               	movwf	??_LCD_mapping
  4520  0F5A  3001               	movlw	1
  4521  0F5B  00F3               	movwf	??_LCD_mapping+1
  4522  0F5C  0870               	movf	LCD_mapping@D2,w
  4523  0F5D  3E0C               	addlw	12
  4524  0F5E  0084               	movwf	4
  4525  0F5F  0872               	movf	??_LCD_mapping,w
  4526  0F60  0080               	movwf	0
  4527  0F61  0873               	movf	??_LCD_mapping+1,w
  4528  0F62  0A84               	incf	4,f
  4529  0F63  0080               	movwf	0
  4530  0F64  0384               	decf	4,f
  4531  0F65  0870               	movf	LCD_mapping@D2,w
  4532  0F66  3E1A               	addlw	26
  4533  0F67  0084               	movwf	4
  4534  0F68  3005               	movlw	5
  4535  0F69  0080               	movwf	0
  4536  0F6A  0A84               	incf	4,f
  4537  0F6B  3000               	movlw	0
  4538  0F6C  0080               	movwf	0
  4539                           
  4540                           ;lcd.c: 29: D3->sa = &LCDDATA0; D3->bits[0] =3 ;
  4541  0F6D  3010               	movlw	16
  4542  0F6E  00F2               	movwf	??_LCD_mapping
  4543  0F6F  3001               	movlw	1
  4544  0F70  00F3               	movwf	??_LCD_mapping+1
  4545  0F71  0871               	movf	LCD_mapping@D3,w
  4546  0F72  0084               	movwf	4
  4547  0F73  0872               	movf	??_LCD_mapping,w
  4548  0F74  0080               	movwf	0
  4549  0F75  0873               	movf	??_LCD_mapping+1,w
  4550  0F76  0A84               	incf	4,f
  4551  0F77  0080               	movwf	0
  4552  0F78  0384               	decf	4,f
  4553  0F79  0871               	movf	LCD_mapping@D3,w
  4554  0F7A  3E0E               	addlw	14
  4555  0F7B  0084               	movwf	4
  4556  0F7C  3003               	movlw	3
  4557  0F7D  0080               	movwf	0
  4558  0F7E  0A84               	incf	4,f
  4559  0F7F  3000               	movlw	0
  4560  0F80  0080               	movwf	0
  4561                           
  4562                           ;lcd.c: 30: D3->sb = &LCDDATA1; D3->bits[1] =3 ;
  4563  0F81  3011               	movlw	17
  4564  0F82  00F2               	movwf	??_LCD_mapping
  4565  0F83  3001               	movlw	1
  4566  0F84  00F3               	movwf	??_LCD_mapping+1
  4567  0F85  0871               	movf	LCD_mapping@D3,w
  4568  0F86  3E02               	addlw	2
  4569  0F87  0084               	movwf	4
  4570  0F88  0872               	movf	??_LCD_mapping,w
  4571  0F89  0080               	movwf	0
  4572  0F8A  0873               	movf	??_LCD_mapping+1,w
  4573  0F8B  0A84               	incf	4,f
  4574  0F8C  0080               	movwf	0
  4575  0F8D  0384               	decf	4,f
  4576  0F8E  0871               	movf	LCD_mapping@D3,w
  4577  0F8F  3E10               	addlw	16
  4578  0F90  0084               	movwf	4
  4579  0F91  3003               	movlw	3
  4580  0F92  0080               	movwf	0
  4581  0F93  0A84               	incf	4,f
  4582  0F94  3000               	movlw	0
  4583  0F95  0080               	movwf	0
  4584                           
  4585                           ;lcd.c: 31: D3->sc = &LCDDATA7; D3->bits[2] =3 ;
  4586  0F96  3017               	movlw	23
  4587  0F97  00F2               	movwf	??_LCD_mapping
  4588  0F98  3001               	movlw	1
  4589  0F99  00F3               	movwf	??_LCD_mapping+1
  4590  0F9A  0871               	movf	LCD_mapping@D3,w
  4591  0F9B  3E04               	addlw	4
  4592  0F9C  0084               	movwf	4
  4593  0F9D  0872               	movf	??_LCD_mapping,w
  4594  0F9E  0080               	movwf	0
  4595  0F9F  0873               	movf	??_LCD_mapping+1,w
  4596  0FA0  0A84               	incf	4,f
  4597  0FA1  0080               	movwf	0
  4598  0FA2  0384               	decf	4,f
  4599  0FA3  0871               	movf	LCD_mapping@D3,w
  4600  0FA4  3E12               	addlw	18
  4601  0FA5  0084               	movwf	4
  4602  0FA6  3003               	movlw	3
  4603  0FA7  0080               	movwf	0
  4604  0FA8  0A84               	incf	4,f
  4605  0FA9  3000               	movlw	0
  4606  0FAA  0080               	movwf	0
  4607                           
  4608                           ;lcd.c: 32: D3->sd = &LCDDATA9; D3->bits[3] =3 ;
  4609  0FAB  3019               	movlw	25
  4610  0FAC  00F2               	movwf	??_LCD_mapping
  4611  0FAD  3001               	movlw	1
  4612  0FAE  00F3               	movwf	??_LCD_mapping+1
  4613  0FAF  0871               	movf	LCD_mapping@D3,w
  4614  0FB0  3E06               	addlw	6
  4615  0FB1  0084               	movwf	4
  4616  0FB2  0872               	movf	??_LCD_mapping,w
  4617  0FB3  0080               	movwf	0
  4618  0FB4  0873               	movf	??_LCD_mapping+1,w
  4619  0FB5  0A84               	incf	4,f
  4620  0FB6  0080               	movwf	0
  4621  0FB7  0384               	decf	4,f
  4622  0FB8  0871               	movf	LCD_mapping@D3,w
  4623  0FB9  3E14               	addlw	20
  4624  0FBA  0084               	movwf	4
  4625  0FBB  3003               	movlw	3
  4626  0FBC  0080               	movwf	0
  4627  0FBD  0A84               	incf	4,f
  4628  0FBE  3000               	movlw	0
  4629  0FBF  0080               	movwf	0
  4630                           
  4631                           ;lcd.c: 33: D3->se = &LCDDATA6; D3->bits[4] =3 ;
  4632  0FC0  3016               	movlw	22
  4633  0FC1  00F2               	movwf	??_LCD_mapping
  4634  0FC2  3001               	movlw	1
  4635  0FC3  00F3               	movwf	??_LCD_mapping+1
  4636  0FC4  0871               	movf	LCD_mapping@D3,w
  4637  0FC5  3E08               	addlw	8
  4638  0FC6  0084               	movwf	4
  4639  0FC7  0872               	movf	??_LCD_mapping,w
  4640  0FC8  0080               	movwf	0
  4641  0FC9  0873               	movf	??_LCD_mapping+1,w
  4642  0FCA  0A84               	incf	4,f
  4643  0FCB  0080               	movwf	0
  4644  0FCC  0384               	decf	4,f
  4645  0FCD  0871               	movf	LCD_mapping@D3,w
  4646  0FCE  3E16               	addlw	22
  4647  0FCF  0084               	movwf	4
  4648  0FD0  3003               	movlw	3
  4649  0FD1  0080               	movwf	0
  4650  0FD2  0A84               	incf	4,f
  4651  0FD3  3000               	movlw	0
  4652  0FD4  0080               	movwf	0
  4653                           
  4654                           ;lcd.c: 34: D3->sf = &LCDDATA3; D3->bits[5] =3 ;
  4655  0FD5  3013               	movlw	19
  4656  0FD6  00F2               	movwf	??_LCD_mapping
  4657  0FD7  3001               	movlw	1
  4658  0FD8  00F3               	movwf	??_LCD_mapping+1
  4659  0FD9  0871               	movf	LCD_mapping@D3,w
  4660  0FDA  3E0A               	addlw	10
  4661  0FDB  0084               	movwf	4
  4662  0FDC  0872               	movf	??_LCD_mapping,w
  4663  0FDD  0080               	movwf	0
  4664  0FDE  0873               	movf	??_LCD_mapping+1,w
  4665  0FDF  0A84               	incf	4,f
  4666  0FE0  0080               	movwf	0
  4667  0FE1  0384               	decf	4,f
  4668  0FE2  0871               	movf	LCD_mapping@D3,w
  4669  0FE3  3E18               	addlw	24
  4670  0FE4  0084               	movwf	4
  4671  0FE5  3003               	movlw	3
  4672  0FE6  0080               	movwf	0
  4673  0FE7  0A84               	incf	4,f
  4674  0FE8  3000               	movlw	0
  4675  0FE9  0080               	movwf	0
  4676                           
  4677                           ;lcd.c: 35: D3->sg = &LCDDATA4; D3->bits[6] =3 ;
  4678  0FEA  3014               	movlw	20
  4679  0FEB  00F2               	movwf	??_LCD_mapping
  4680  0FEC  3001               	movlw	1
  4681  0FED  00F3               	movwf	??_LCD_mapping+1
  4682  0FEE  0871               	movf	LCD_mapping@D3,w
  4683  0FEF  3E0C               	addlw	12
  4684  0FF0  0084               	movwf	4
  4685  0FF1  0872               	movf	??_LCD_mapping,w
  4686  0FF2  0080               	movwf	0
  4687  0FF3  0873               	movf	??_LCD_mapping+1,w
  4688  0FF4  0A84               	incf	4,f
  4689  0FF5  0080               	movwf	0
  4690  0FF6  0384               	decf	4,f
  4691  0FF7  0871               	movf	LCD_mapping@D3,w
  4692  0FF8  3E1A               	addlw	26
  4693  0FF9  0084               	movwf	4
  4694  0FFA  3003               	movlw	3
  4695  0FFB  0080               	movwf	0
  4696  0FFC  0A84               	incf	4,f
  4697  0FFD  3000               	movlw	0
  4698  0FFE  0080               	movwf	0
  4699  0FFF  0008               	return
  4700  1000                     __end_of_LCD_mapping:	
  4701                           
  4702                           	psect	text20
  4703  1E99                     __ptext20:	
  4704 ;; *************** function _LCD_init *****************
  4705 ;; Defined at:
  4706 ;;		line 38 in file "lcd.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;		None
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;		None
  4711 ;; Return value:  Size  Location     Type
  4712 ;;                  1    wreg      void 
  4713 ;; Registers used:
  4714 ;;		wreg, status,2
  4715 ;; Tracked objects:
  4716 ;;		On entry : 0/0
  4717 ;;		On exit  : 0/0
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4720 ;;      Params:         0       0       0       0       0
  4721 ;;      Locals:         0       0       0       0       0
  4722 ;;      Temps:          0       0       0       0       0
  4723 ;;      Totals:         0       0       0       0       0
  4724 ;;Total ram usage:        0 bytes
  4725 ;; Hardware stack levels used:    1
  4726 ;; This function calls:
  4727 ;;		Nothing
  4728 ;; This function is called by:
  4729 ;;		_main
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           
  4734                           ;psect for function _LCD_init
  4735  1E99                     _LCD_init:	
  4736                           
  4737                           ;lcd.c: 40: LCDSE0 = 0x4F;
  4738                           
  4739                           ;incstack = 0
  4740                           ; Regs used in _LCD_init: [wreg+status,2]
  4741  1E99  304F               	movlw	79
  4742  1E9A  1283               	bcf	3,5	;RP0=0, select bank2
  4743  1E9B  1703               	bsf	3,6	;RP1=1, select bank2
  4744  1E9C  009C               	movwf	28	;volatile
  4745                           
  4746                           ;lcd.c: 41: LCDSE1 = 0x08;
  4747  1E9D  3008               	movlw	8
  4748  1E9E  009D               	movwf	29	;volatile
  4749                           
  4750                           ;lcd.c: 42: LCDSE2 = 0xE1;
  4751  1E9F  30E1               	movlw	225
  4752  1EA0  009E               	movwf	30	;volatile
  4753                           
  4754                           ;lcd.c: 45: ((LCDDATA0) &= 0x00);
  4755  1EA1  0190               	clrf	16	;volatile
  4756                           
  4757                           ;lcd.c: 46: ((LCDDATA1) &= 0x00);
  4758  1EA2  0191               	clrf	17	;volatile
  4759                           
  4760                           ;lcd.c: 47: ((LCDDATA2) &= 0x00);
  4761  1EA3  0192               	clrf	18	;volatile
  4762                           
  4763                           ;lcd.c: 48: ((LCDDATA3) &= 0x00);
  4764  1EA4  0193               	clrf	19	;volatile
  4765                           
  4766                           ;lcd.c: 49: ((LCDDATA4) &= 0x00);
  4767  1EA5  0194               	clrf	20	;volatile
  4768                           
  4769                           ;lcd.c: 50: ((LCDDATA5) &= 0x00);
  4770  1EA6  0195               	clrf	21	;volatile
  4771                           
  4772                           ;lcd.c: 51: ((LCDDATA6) &= 0x00);
  4773  1EA7  0196               	clrf	22	;volatile
  4774                           
  4775                           ;lcd.c: 52: ((LCDDATA7) &= 0x00);
  4776  1EA8  0197               	clrf	23	;volatile
  4777                           
  4778                           ;lcd.c: 53: ((LCDDATA8) &= 0x00);
  4779  1EA9  0198               	clrf	24	;volatile
  4780                           
  4781                           ;lcd.c: 54: ((LCDDATA9) &= 0x00);
  4782  1EAA  0199               	clrf	25	;volatile
  4783                           
  4784                           ;lcd.c: 55: ((LCDDATA10) &= 0x00);
  4785  1EAB  019A               	clrf	26	;volatile
  4786                           
  4787                           ;lcd.c: 56: ((LCDDATA11) &= 0x00);
  4788  1EAC  019B               	clrf	27	;volatile
  4789                           
  4790                           ;lcd.c: 60: LCDPS = 0x20;
  4791  1EAD  3020               	movlw	32
  4792  1EAE  0088               	movwf	8	;volatile
  4793                           
  4794                           ;lcd.c: 64: LCDCON = 0x93;
  4795  1EAF  3093               	movlw	147
  4796  1EB0  0087               	movwf	7	;volatile
  4797  1EB1  0008               	return
  4798  1EB2                     __end_of_LCD_init:	
  4799  007E                     btemp	set	126	;btemp
  4800  007E                     wtemp0	set	126
  4801                           
  4802                           	psect	text5_split_1
  4803  0D10                     u2155:	
  4804  0D10  1003               	clrc
  4805  0D11  0DA3               	rlf	??_displayDigit+3,f
  4806  0D12  0DA4               	rlf	??_displayDigit+4,f
  4807  0D13                     u2154:	
  4808  0D13  0BA2               	decfsz	??_displayDigit+2,f
  4809  0D14  2D10               	goto	u2155
  4810  0D15  300A               	movlw	10
  4811  0D16  077B               	addwf	displayDigit@D1,w
  4812  0D17  00A5               	movwf	??_displayDigit+5
  4813  0D18  087C               	movf	displayDigit@D1+1,w
  4814  0D19  1803               	skipnc
  4815  0D1A  3E01               	addlw	1
  4816  0D1B  00A6               	movwf	??_displayDigit+6
  4817  0D1C  0825               	movf	??_displayDigit+5,w
  4818  0D1D  0084               	movwf	4
  4819  0D1E  1783               	bsf	3,7
  4820  0D1F  1C26               	btfss	??_displayDigit+6,0
  4821  0D20  1383               	bcf	3,7
  4822  0D21  0800               	movf	0,w
  4823  0D22  00A7               	movwf	??_displayDigit+7
  4824  0D23  0A84               	incf	4,f
  4825  0D24  0800               	movf	0,w
  4826  0D25  00A8               	movwf	??_displayDigit+8
  4827  0D26  0827               	movf	??_displayDigit+7,w
  4828  0D27  0084               	movwf	4
  4829  0D28  1783               	bsf	3,7
  4830  0D29  1C28               	btfss	??_displayDigit+8,0
  4831  0D2A  1383               	bcf	3,7
  4832  0D2B  0823               	movf	??_displayDigit+3,w
  4833  0D2C  0480               	iorwf	0,f
  4834  0D2D  0A84               	incf	4,f
  4835  0D2E  0824               	movf	??_displayDigit+4,w
  4836  0D2F  0480               	iorwf	0,f
  4837                           
  4838                           ;lcd.c: 92: ((*D1->sg) &= ~((1UL) << (D1->bits[6])));
  4839  0D30  301A               	movlw	26
  4840  0D31  077B               	addwf	displayDigit@D1,w
  4841  0D32  00A0               	movwf	??_displayDigit
  4842  0D33  087C               	movf	displayDigit@D1+1,w
  4843  0D34  1803               	skipnc
  4844  0D35  3E01               	addlw	1
  4845  0D36  00A1               	movwf	??_displayDigit+1
  4846  0D37  0820               	movf	??_displayDigit,w
  4847  0D38  0084               	movwf	4
  4848  0D39  1783               	bsf	3,7
  4849  0D3A  1C21               	btfss	??_displayDigit+1,0
  4850  0D3B  1383               	bcf	3,7
  4851  0D3C  0A00               	incf	0,w
  4852  0D3D  00A2               	movwf	??_displayDigit+2
  4853  0D3E  3001               	movlw	1
  4854  0D3F  00A3               	movwf	??_displayDigit+3
  4855  0D40  3000               	movlw	0
  4856  0D41  00A4               	movwf	??_displayDigit+4
  4857  0D42  2D46               	goto	u2164
  4858  0D43                     u2165:	
  4859  0D43  1003               	clrc
  4860  0D44  0DA3               	rlf	??_displayDigit+3,f
  4861  0D45  0DA4               	rlf	??_displayDigit+4,f
  4862  0D46                     u2164:	
  4863  0D46  0BA2               	decfsz	??_displayDigit+2,f
  4864  0D47  2D43               	goto	u2165
  4865  0D48  09A3               	comf	??_displayDigit+3,f
  4866  0D49  09A4               	comf	??_displayDigit+4,f
  4867  0D4A  300C               	movlw	12
  4868  0D4B  077B               	addwf	displayDigit@D1,w
  4869  0D4C  00A5               	movwf	??_displayDigit+5
  4870  0D4D  087C               	movf	displayDigit@D1+1,w
  4871  0D4E  1803               	skipnc
  4872  0D4F  3E01               	addlw	1
  4873  0D50  00A6               	movwf	??_displayDigit+6
  4874  0D51  0825               	movf	??_displayDigit+5,w
  4875  0D52  0084               	movwf	4
  4876  0D53  1783               	bsf	3,7
  4877  0D54  1C26               	btfss	??_displayDigit+6,0
  4878  0D55  1383               	bcf	3,7
  4879  0D56  0800               	movf	0,w
  4880  0D57  00A7               	movwf	??_displayDigit+7
  4881  0D58  0A84               	incf	4,f
  4882  0D59  0800               	movf	0,w
  4883  0D5A  00A8               	movwf	??_displayDigit+8
  4884  0D5B  0827               	movf	??_displayDigit+7,w
  4885  0D5C  0084               	movwf	4
  4886  0D5D  1783               	bsf	3,7
  4887  0D5E  1C28               	btfss	??_displayDigit+8,0
  4888  0D5F  1383               	bcf	3,7
  4889  0D60  0823               	movf	??_displayDigit+3,w
  4890  0D61  0580               	andwf	0,f
  4891  0D62  0A84               	incf	4,f
  4892  0D63  0824               	movf	??_displayDigit+4,w
  4893  0D64  0580               	andwf	0,f
  4894                           
  4895                           ;lcd.c: 93: break;
  4896  0D65  0008               	return
  4897  0D66                     l1338:	
  4898                           ;lcd.c: 94: case 1:
  4899                           
  4900                           
  4901                           ;lcd.c: 95: ((*D1->sa) &= ~((1UL) << (D1->bits[0])));
  4902  0D66  300E               	movlw	14
  4903  0D67  077B               	addwf	displayDigit@D1,w
  4904  0D68  1283               	bcf	3,5	;RP0=0, select bank0
  4905  0D69  1303               	bcf	3,6	;RP1=0, select bank0
  4906  0D6A  00A0               	movwf	??_displayDigit
  4907  0D6B  087C               	movf	displayDigit@D1+1,w
  4908  0D6C  1803               	skipnc
  4909  0D6D  3E01               	addlw	1
  4910  0D6E  00A1               	movwf	??_displayDigit+1
  4911  0D6F  0820               	movf	??_displayDigit,w
  4912  0D70  0084               	movwf	4
  4913  0D71  1783               	bsf	3,7
  4914  0D72  1C21               	btfss	??_displayDigit+1,0
  4915  0D73  1383               	bcf	3,7
  4916  0D74  0A00               	incf	0,w
  4917  0D75  00A2               	movwf	??_displayDigit+2
  4918  0D76  3001               	movlw	1
  4919  0D77  00A3               	movwf	??_displayDigit+3
  4920  0D78  3000               	movlw	0
  4921  0D79  00A4               	movwf	??_displayDigit+4
  4922  0D7A  2D7E               	goto	u2174
  4923  0D7B                     u2175:	
  4924  0D7B  1003               	clrc
  4925  0D7C  0DA3               	rlf	??_displayDigit+3,f
  4926  0D7D  0DA4               	rlf	??_displayDigit+4,f
  4927  0D7E                     u2174:	
  4928  0D7E  0BA2               	decfsz	??_displayDigit+2,f
  4929  0D7F  2D7B               	goto	u2175
  4930  0D80  09A3               	comf	??_displayDigit+3,f
  4931  0D81  09A4               	comf	??_displayDigit+4,f
  4932  0D82  087B               	movf	displayDigit@D1,w
  4933  0D83  0084               	movwf	4
  4934  0D84  1783               	bsf	3,7
  4935  0D85  1C7C               	btfss	displayDigit@D1+1,0
  4936  0D86  1383               	bcf	3,7
  4937  0D87  0800               	movf	0,w
  4938  0D88  00A5               	movwf	??_displayDigit+5
  4939  0D89  0A84               	incf	4,f
  4940  0D8A  0800               	movf	0,w
  4941  0D8B  00A6               	movwf	??_displayDigit+6
  4942  0D8C  0825               	movf	??_displayDigit+5,w
  4943  0D8D  0084               	movwf	4
  4944  0D8E  1783               	bsf	3,7
  4945  0D8F  1C26               	btfss	??_displayDigit+6,0
  4946  0D90  1383               	bcf	3,7
  4947  0D91  0823               	movf	??_displayDigit+3,w
  4948  0D92  0580               	andwf	0,f
  4949  0D93  0A84               	incf	4,f
  4950  0D94  0824               	movf	??_displayDigit+4,w
  4951  0D95  0580               	andwf	0,f
  4952                           
  4953                           ;lcd.c: 96: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  4954  0D96  3010               	movlw	16
  4955  0D97  077B               	addwf	displayDigit@D1,w
  4956  0D98  00A0               	movwf	??_displayDigit
  4957  0D99  087C               	movf	displayDigit@D1+1,w
  4958  0D9A  1803               	skipnc
  4959  0D9B  3E01               	addlw	1
  4960  0D9C  00A1               	movwf	??_displayDigit+1
  4961  0D9D  0820               	movf	??_displayDigit,w
  4962  0D9E  0084               	movwf	4
  4963  0D9F  1783               	bsf	3,7
  4964  0DA0  1C21               	btfss	??_displayDigit+1,0
  4965  0DA1  1383               	bcf	3,7
  4966  0DA2  0A00               	incf	0,w
  4967  0DA3  00A2               	movwf	??_displayDigit+2
  4968  0DA4  3001               	movlw	1
  4969  0DA5  00A3               	movwf	??_displayDigit+3
  4970  0DA6  3000               	movlw	0
  4971  0DA7  00A4               	movwf	??_displayDigit+4
  4972  0DA8  2DAC               	goto	u2184
  4973  0DA9                     u2185:	
  4974  0DA9  1003               	clrc
  4975  0DAA  0DA3               	rlf	??_displayDigit+3,f
  4976  0DAB  0DA4               	rlf	??_displayDigit+4,f
  4977  0DAC                     u2184:	
  4978  0DAC  0BA2               	decfsz	??_displayDigit+2,f
  4979  0DAD  2DA9               	goto	u2185
  4980  0DAE  3002               	movlw	2
  4981  0DAF  077B               	addwf	displayDigit@D1,w
  4982  0DB0  00A5               	movwf	??_displayDigit+5
  4983  0DB1  087C               	movf	displayDigit@D1+1,w
  4984  0DB2  1803               	skipnc
  4985  0DB3  3E01               	addlw	1
  4986  0DB4  00A6               	movwf	??_displayDigit+6
  4987  0DB5  0825               	movf	??_displayDigit+5,w
  4988  0DB6  0084               	movwf	4
  4989  0DB7  1783               	bsf	3,7
  4990  0DB8  1C26               	btfss	??_displayDigit+6,0
  4991  0DB9  1383               	bcf	3,7
  4992  0DBA  0800               	movf	0,w
  4993  0DBB  00A7               	movwf	??_displayDigit+7
  4994  0DBC  0A84               	incf	4,f
  4995  0DBD  0800               	movf	0,w
  4996  0DBE  00A8               	movwf	??_displayDigit+8
  4997  0DBF  0827               	movf	??_displayDigit+7,w
  4998  0DC0  0084               	movwf	4
  4999  0DC1  1783               	bsf	3,7
  5000  0DC2  1C28               	btfss	??_displayDigit+8,0
  5001  0DC3  1383               	bcf	3,7
  5002  0DC4  0823               	movf	??_displayDigit+3,w
  5003  0DC5  0480               	iorwf	0,f
  5004  0DC6  0A84               	incf	4,f
  5005  0DC7  0824               	movf	??_displayDigit+4,w
  5006  0DC8  0480               	iorwf	0,f
  5007                           
  5008                           ;lcd.c: 97: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  5009  0DC9  3012               	movlw	18
  5010  0DCA  077B               	addwf	displayDigit@D1,w
  5011  0DCB  00A0               	movwf	??_displayDigit
  5012  0DCC  087C               	movf	displayDigit@D1+1,w
  5013  0DCD  1803               	skipnc
  5014  0DCE  3E01               	addlw	1
  5015  0DCF  00A1               	movwf	??_displayDigit+1
  5016  0DD0  0820               	movf	??_displayDigit,w
  5017  0DD1  0084               	movwf	4
  5018  0DD2  1783               	bsf	3,7
  5019  0DD3  1C21               	btfss	??_displayDigit+1,0
  5020  0DD4  1383               	bcf	3,7
  5021  0DD5  0A00               	incf	0,w
  5022  0DD6  00A2               	movwf	??_displayDigit+2
  5023  0DD7  3001               	movlw	1
  5024  0DD8  00A3               	movwf	??_displayDigit+3
  5025  0DD9  3000               	movlw	0
  5026  0DDA  00A4               	movwf	??_displayDigit+4
  5027  0DDB  2DDF               	goto	u2194
  5028  0DDC                     u2195:	
  5029  0DDC  1003               	clrc
  5030  0DDD  0DA3               	rlf	??_displayDigit+3,f
  5031  0DDE  0DA4               	rlf	??_displayDigit+4,f
  5032  0DDF                     u2194:	
  5033  0DDF  0BA2               	decfsz	??_displayDigit+2,f
  5034  0DE0  2DDC               	goto	u2195
  5035  0DE1  3004               	movlw	4
  5036  0DE2  077B               	addwf	displayDigit@D1,w
  5037  0DE3  00A5               	movwf	??_displayDigit+5
  5038  0DE4  087C               	movf	displayDigit@D1+1,w
  5039  0DE5  1803               	skipnc
  5040  0DE6  3E01               	addlw	1
  5041  0DE7  00A6               	movwf	??_displayDigit+6
  5042  0DE8  0825               	movf	??_displayDigit+5,w
  5043  0DE9  0084               	movwf	4
  5044  0DEA  1783               	bsf	3,7
  5045  0DEB  1C26               	btfss	??_displayDigit+6,0
  5046  0DEC  1383               	bcf	3,7
  5047  0DED  0800               	movf	0,w
  5048  0DEE  00A7               	movwf	??_displayDigit+7
  5049  0DEF  0A84               	incf	4,f
  5050  0DF0  0800               	movf	0,w
  5051  0DF1  00A8               	movwf	??_displayDigit+8
  5052  0DF2  0827               	movf	??_displayDigit+7,w
  5053  0DF3  0084               	movwf	4
  5054  0DF4  1783               	bsf	3,7
  5055  0DF5  1C28               	btfss	??_displayDigit+8,0
  5056  0DF6  1383               	bcf	3,7
  5057  0DF7  0823               	movf	??_displayDigit+3,w
  5058  0DF8  0480               	iorwf	0,f
  5059  0DF9  0A84               	incf	4,f
  5060  0DFA  0824               	movf	??_displayDigit+4,w
  5061  0DFB  0480               	iorwf	0,f
  5062                           
  5063                           ;lcd.c: 98: ((*D1->sd) &= ~((1UL) << (D1->bits[3])));
  5064  0DFC  3014               	movlw	20
  5065  0DFD  077B               	addwf	displayDigit@D1,w
  5066  0DFE  00A0               	movwf	??_displayDigit
  5067  0DFF  087C               	movf	displayDigit@D1+1,w
  5068  0E00  1803               	skipnc
  5069  0E01  3E01               	addlw	1
  5070  0E02  00A1               	movwf	??_displayDigit+1
  5071  0E03  0820               	movf	??_displayDigit,w
  5072  0E04  0084               	movwf	4
  5073  0E05  1783               	bsf	3,7
  5074  0E06  1C21               	btfss	??_displayDigit+1,0
  5075  0E07  1383               	bcf	3,7
  5076  0E08  0A00               	incf	0,w
  5077  0E09  00A2               	movwf	??_displayDigit+2
  5078  0E0A  3001               	movlw	1
  5079  0E0B  00A3               	movwf	??_displayDigit+3
  5080  0E0C  3000               	movlw	0
  5081  0E0D  00A4               	movwf	??_displayDigit+4
  5082  0E0E  2E12               	goto	u2204
  5083  0E0F                     u2205:	
  5084  0E0F  1003               	clrc
  5085  0E10  0DA3               	rlf	??_displayDigit+3,f
  5086  0E11  0DA4               	rlf	??_displayDigit+4,f
  5087  0E12                     u2204:	
  5088  0E12  0BA2               	decfsz	??_displayDigit+2,f
  5089  0E13  2E0F               	goto	u2205
  5090  0E14  09A3               	comf	??_displayDigit+3,f
  5091  0E15  09A4               	comf	??_displayDigit+4,f
  5092  0E16  3006               	movlw	6
  5093  0E17  077B               	addwf	displayDigit@D1,w
  5094  0E18  00A5               	movwf	??_displayDigit+5
  5095  0E19  087C               	movf	displayDigit@D1+1,w
  5096  0E1A  1803               	skipnc
  5097  0E1B  3E01               	addlw	1
  5098  0E1C  00A6               	movwf	??_displayDigit+6
  5099  0E1D  0825               	movf	??_displayDigit+5,w
  5100  0E1E  0084               	movwf	4
  5101  0E1F  1783               	bsf	3,7
  5102  0E20  1C26               	btfss	??_displayDigit+6,0
  5103  0E21  1383               	bcf	3,7
  5104  0E22  0800               	movf	0,w
  5105  0E23  00A7               	movwf	??_displayDigit+7
  5106  0E24  0A84               	incf	4,f
  5107  0E25  0800               	movf	0,w
  5108  0E26  00A8               	movwf	??_displayDigit+8
  5109  0E27  0827               	movf	??_displayDigit+7,w
  5110  0E28  0084               	movwf	4
  5111  0E29  1783               	bsf	3,7
  5112  0E2A  1C28               	btfss	??_displayDigit+8,0
  5113  0E2B  1383               	bcf	3,7
  5114  0E2C  0823               	movf	??_displayDigit+3,w
  5115  0E2D  0580               	andwf	0,f
  5116  0E2E  0A84               	incf	4,f
  5117  0E2F  0824               	movf	??_displayDigit+4,w
  5118  0E30  0580               	andwf	0,f
  5119                           
  5120                           ;lcd.c: 99: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  5121  0E31  3016               	movlw	22
  5122  0E32  077B               	addwf	displayDigit@D1,w
  5123  0E33  00A0               	movwf	??_displayDigit
  5124  0E34  087C               	movf	displayDigit@D1+1,w
  5125  0E35  1803               	skipnc
  5126  0E36  3E01               	addlw	1
  5127  0E37  00A1               	movwf	??_displayDigit+1
  5128  0E38  0820               	movf	??_displayDigit,w
  5129  0E39  0084               	movwf	4
  5130  0E3A  1783               	bsf	3,7
  5131  0E3B  1C21               	btfss	??_displayDigit+1,0
  5132  0E3C  1383               	bcf	3,7
  5133  0E3D  0A00               	incf	0,w
  5134  0E3E  00A2               	movwf	??_displayDigit+2
  5135  0E3F  3001               	movlw	1
  5136  0E40  00A3               	movwf	??_displayDigit+3
  5137  0E41  3000               	movlw	0
  5138  0E42  00A4               	movwf	??_displayDigit+4
  5139  0E43  160A  118A  29C9   	goto	u2214
  5140                           
  5141                           	psect	text5_split_2
  5142  11C6                     u2215:	
  5143  11C6  1003               	clrc
  5144  11C7  0DA3               	rlf	??_displayDigit+3,f
  5145  11C8  0DA4               	rlf	??_displayDigit+4,f
  5146  11C9                     u2214:	
  5147  11C9  0BA2               	decfsz	??_displayDigit+2,f
  5148  11CA  29C6               	goto	u2215
  5149  11CB  09A3               	comf	??_displayDigit+3,f
  5150  11CC  09A4               	comf	??_displayDigit+4,f
  5151  11CD  3008               	movlw	8
  5152  11CE  077B               	addwf	displayDigit@D1,w
  5153  11CF  00A5               	movwf	??_displayDigit+5
  5154  11D0  087C               	movf	displayDigit@D1+1,w
  5155  11D1  1803               	skipnc
  5156  11D2  3E01               	addlw	1
  5157  11D3  00A6               	movwf	??_displayDigit+6
  5158  11D4  0825               	movf	??_displayDigit+5,w
  5159  11D5  0084               	movwf	4
  5160  11D6  1783               	bsf	3,7
  5161  11D7  1C26               	btfss	??_displayDigit+6,0
  5162  11D8  1383               	bcf	3,7
  5163  11D9  0800               	movf	0,w
  5164  11DA  00A7               	movwf	??_displayDigit+7
  5165  11DB  0A84               	incf	4,f
  5166  11DC  0800               	movf	0,w
  5167  11DD  00A8               	movwf	??_displayDigit+8
  5168  11DE  0827               	movf	??_displayDigit+7,w
  5169  11DF  0084               	movwf	4
  5170  11E0  1783               	bsf	3,7
  5171  11E1  1C28               	btfss	??_displayDigit+8,0
  5172  11E2  1383               	bcf	3,7
  5173  11E3  0823               	movf	??_displayDigit+3,w
  5174  11E4  0580               	andwf	0,f
  5175  11E5  0A84               	incf	4,f
  5176  11E6  0824               	movf	??_displayDigit+4,w
  5177  11E7  0580               	andwf	0,f
  5178                           
  5179                           ;lcd.c: 100: ((*D1->sf) &= ~((1UL) << (D1->bits[5])));
  5180  11E8  3018               	movlw	24
  5181  11E9  077B               	addwf	displayDigit@D1,w
  5182  11EA  00A0               	movwf	??_displayDigit
  5183  11EB  087C               	movf	displayDigit@D1+1,w
  5184  11EC  1803               	skipnc
  5185  11ED  3E01               	addlw	1
  5186  11EE  00A1               	movwf	??_displayDigit+1
  5187  11EF  0820               	movf	??_displayDigit,w
  5188  11F0  0084               	movwf	4
  5189  11F1  1783               	bsf	3,7
  5190  11F2  1C21               	btfss	??_displayDigit+1,0
  5191  11F3  1383               	bcf	3,7
  5192  11F4  0A00               	incf	0,w
  5193  11F5  00A2               	movwf	??_displayDigit+2
  5194  11F6  3001               	movlw	1
  5195  11F7  00A3               	movwf	??_displayDigit+3
  5196  11F8  3000               	movlw	0
  5197  11F9  00A4               	movwf	??_displayDigit+4
  5198  11FA  29FE               	goto	u2224
  5199  11FB                     u2225:	
  5200  11FB  1003               	clrc
  5201  11FC  0DA3               	rlf	??_displayDigit+3,f
  5202  11FD  0DA4               	rlf	??_displayDigit+4,f
  5203  11FE                     u2224:	
  5204  11FE  0BA2               	decfsz	??_displayDigit+2,f
  5205  11FF  29FB               	goto	u2225
  5206  1200  09A3               	comf	??_displayDigit+3,f
  5207  1201  09A4               	comf	??_displayDigit+4,f
  5208  1202  300A               	movlw	10
  5209  1203  077B               	addwf	displayDigit@D1,w
  5210  1204  00A5               	movwf	??_displayDigit+5
  5211  1205  087C               	movf	displayDigit@D1+1,w
  5212  1206  1803               	skipnc
  5213  1207  3E01               	addlw	1
  5214  1208  00A6               	movwf	??_displayDigit+6
  5215  1209  0825               	movf	??_displayDigit+5,w
  5216  120A  0084               	movwf	4
  5217  120B  1783               	bsf	3,7
  5218  120C  1C26               	btfss	??_displayDigit+6,0
  5219  120D  1383               	bcf	3,7
  5220  120E  0800               	movf	0,w
  5221  120F  00A7               	movwf	??_displayDigit+7
  5222  1210  0A84               	incf	4,f
  5223  1211  0800               	movf	0,w
  5224  1212  00A8               	movwf	??_displayDigit+8
  5225  1213  0827               	movf	??_displayDigit+7,w
  5226  1214  0084               	movwf	4
  5227  1215  1783               	bsf	3,7
  5228  1216  1C28               	btfss	??_displayDigit+8,0
  5229  1217  1383               	bcf	3,7
  5230  1218  0823               	movf	??_displayDigit+3,w
  5231  1219  0580               	andwf	0,f
  5232  121A  0A84               	incf	4,f
  5233  121B  0824               	movf	??_displayDigit+4,w
  5234  121C  0580               	andwf	0,f
  5235                           
  5236                           ;lcd.c: 101: ((*D1->sg) &= ~((1UL) << (D1->bits[6])));
  5237  121D  301A               	movlw	26
  5238  121E  077B               	addwf	displayDigit@D1,w
  5239  121F  00A0               	movwf	??_displayDigit
  5240  1220  087C               	movf	displayDigit@D1+1,w
  5241  1221  1803               	skipnc
  5242  1222  3E01               	addlw	1
  5243  1223  00A1               	movwf	??_displayDigit+1
  5244  1224  0820               	movf	??_displayDigit,w
  5245  1225  0084               	movwf	4
  5246  1226  1783               	bsf	3,7
  5247  1227  1C21               	btfss	??_displayDigit+1,0
  5248  1228  1383               	bcf	3,7
  5249  1229  0A00               	incf	0,w
  5250  122A  00A2               	movwf	??_displayDigit+2
  5251  122B  3001               	movlw	1
  5252  122C  00A3               	movwf	??_displayDigit+3
  5253  122D  3000               	movlw	0
  5254  122E  00A4               	movwf	??_displayDigit+4
  5255  122F  2A33               	goto	u2234
  5256  1230                     u2235:	
  5257  1230  1003               	clrc
  5258  1231  0DA3               	rlf	??_displayDigit+3,f
  5259  1232  0DA4               	rlf	??_displayDigit+4,f
  5260  1233                     u2234:	
  5261  1233  0BA2               	decfsz	??_displayDigit+2,f
  5262  1234  2A30               	goto	u2235
  5263  1235  09A3               	comf	??_displayDigit+3,f
  5264  1236  09A4               	comf	??_displayDigit+4,f
  5265  1237  300C               	movlw	12
  5266  1238  077B               	addwf	displayDigit@D1,w
  5267  1239  00A5               	movwf	??_displayDigit+5
  5268  123A  087C               	movf	displayDigit@D1+1,w
  5269  123B  1803               	skipnc
  5270  123C  3E01               	addlw	1
  5271  123D  00A6               	movwf	??_displayDigit+6
  5272  123E  0825               	movf	??_displayDigit+5,w
  5273  123F  0084               	movwf	4
  5274  1240  1783               	bsf	3,7
  5275  1241  1C26               	btfss	??_displayDigit+6,0
  5276  1242  1383               	bcf	3,7
  5277  1243  0800               	movf	0,w
  5278  1244  00A7               	movwf	??_displayDigit+7
  5279  1245  0A84               	incf	4,f
  5280  1246  0800               	movf	0,w
  5281  1247  00A8               	movwf	??_displayDigit+8
  5282  1248  0827               	movf	??_displayDigit+7,w
  5283  1249  0084               	movwf	4
  5284  124A  1783               	bsf	3,7
  5285  124B  1C28               	btfss	??_displayDigit+8,0
  5286  124C  1383               	bcf	3,7
  5287  124D  0823               	movf	??_displayDigit+3,w
  5288  124E  0580               	andwf	0,f
  5289  124F  0A84               	incf	4,f
  5290  1250  0824               	movf	??_displayDigit+4,w
  5291  1251  0580               	andwf	0,f
  5292                           
  5293                           ;lcd.c: 102: break;
  5294  1252  0008               	return
  5295                           
  5296                           	psect	text5_split_3
  5297  16EF                     l1340:	
  5298                           ;lcd.c: 103: case 2:
  5299                           
  5300                           
  5301                           ;lcd.c: 104: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  5302  16EF  300E               	movlw	14
  5303  16F0  077B               	addwf	displayDigit@D1,w
  5304  16F1  1283               	bcf	3,5	;RP0=0, select bank0
  5305  16F2  1303               	bcf	3,6	;RP1=0, select bank0
  5306  16F3  00A0               	movwf	??_displayDigit
  5307  16F4  087C               	movf	displayDigit@D1+1,w
  5308  16F5  1803               	skipnc
  5309  16F6  3E01               	addlw	1
  5310  16F7  00A1               	movwf	??_displayDigit+1
  5311  16F8  0820               	movf	??_displayDigit,w
  5312  16F9  0084               	movwf	4
  5313  16FA  1783               	bsf	3,7
  5314  16FB  1C21               	btfss	??_displayDigit+1,0
  5315  16FC  1383               	bcf	3,7
  5316  16FD  0A00               	incf	0,w
  5317  16FE  00A2               	movwf	??_displayDigit+2
  5318  16FF  3001               	movlw	1
  5319  1700  00A3               	movwf	??_displayDigit+3
  5320  1701  3000               	movlw	0
  5321  1702  00A4               	movwf	??_displayDigit+4
  5322  1703  2F07               	goto	u2244
  5323  1704                     u2245:	
  5324  1704  1003               	clrc
  5325  1705  0DA3               	rlf	??_displayDigit+3,f
  5326  1706  0DA4               	rlf	??_displayDigit+4,f
  5327  1707                     u2244:	
  5328  1707  0BA2               	decfsz	??_displayDigit+2,f
  5329  1708  2F04               	goto	u2245
  5330  1709  087B               	movf	displayDigit@D1,w
  5331  170A  0084               	movwf	4
  5332  170B  1783               	bsf	3,7
  5333  170C  1C7C               	btfss	displayDigit@D1+1,0
  5334  170D  1383               	bcf	3,7
  5335  170E  0800               	movf	0,w
  5336  170F  00A5               	movwf	??_displayDigit+5
  5337  1710  0A84               	incf	4,f
  5338  1711  0800               	movf	0,w
  5339  1712  00A6               	movwf	??_displayDigit+6
  5340  1713  0825               	movf	??_displayDigit+5,w
  5341  1714  0084               	movwf	4
  5342  1715  1783               	bsf	3,7
  5343  1716  1C26               	btfss	??_displayDigit+6,0
  5344  1717  1383               	bcf	3,7
  5345  1718  0823               	movf	??_displayDigit+3,w
  5346  1719  0480               	iorwf	0,f
  5347  171A  0A84               	incf	4,f
  5348  171B  0824               	movf	??_displayDigit+4,w
  5349  171C  0480               	iorwf	0,f
  5350                           
  5351                           ;lcd.c: 105: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  5352  171D  3010               	movlw	16
  5353  171E  077B               	addwf	displayDigit@D1,w
  5354  171F  00A0               	movwf	??_displayDigit
  5355  1720  087C               	movf	displayDigit@D1+1,w
  5356  1721  1803               	skipnc
  5357  1722  3E01               	addlw	1
  5358  1723  00A1               	movwf	??_displayDigit+1
  5359  1724  0820               	movf	??_displayDigit,w
  5360  1725  0084               	movwf	4
  5361  1726  1783               	bsf	3,7
  5362  1727  1C21               	btfss	??_displayDigit+1,0
  5363  1728  1383               	bcf	3,7
  5364  1729  0A00               	incf	0,w
  5365  172A  00A2               	movwf	??_displayDigit+2
  5366  172B  3001               	movlw	1
  5367  172C  00A3               	movwf	??_displayDigit+3
  5368  172D  3000               	movlw	0
  5369  172E  00A4               	movwf	??_displayDigit+4
  5370  172F  2F33               	goto	u2254
  5371  1730                     u2255:	
  5372  1730  1003               	clrc
  5373  1731  0DA3               	rlf	??_displayDigit+3,f
  5374  1732  0DA4               	rlf	??_displayDigit+4,f
  5375  1733                     u2254:	
  5376  1733  0BA2               	decfsz	??_displayDigit+2,f
  5377  1734  2F30               	goto	u2255
  5378  1735  3002               	movlw	2
  5379  1736  077B               	addwf	displayDigit@D1,w
  5380  1737  00A5               	movwf	??_displayDigit+5
  5381  1738  087C               	movf	displayDigit@D1+1,w
  5382  1739  1803               	skipnc
  5383  173A  3E01               	addlw	1
  5384  173B  00A6               	movwf	??_displayDigit+6
  5385  173C  0825               	movf	??_displayDigit+5,w
  5386  173D  0084               	movwf	4
  5387  173E  1783               	bsf	3,7
  5388  173F  1C26               	btfss	??_displayDigit+6,0
  5389  1740  1383               	bcf	3,7
  5390  1741  0800               	movf	0,w
  5391  1742  00A7               	movwf	??_displayDigit+7
  5392  1743  0A84               	incf	4,f
  5393  1744  0800               	movf	0,w
  5394  1745  00A8               	movwf	??_displayDigit+8
  5395  1746  0827               	movf	??_displayDigit+7,w
  5396  1747  0084               	movwf	4
  5397  1748  1783               	bsf	3,7
  5398  1749  1C28               	btfss	??_displayDigit+8,0
  5399  174A  1383               	bcf	3,7
  5400  174B  0823               	movf	??_displayDigit+3,w
  5401  174C  0480               	iorwf	0,f
  5402  174D  0A84               	incf	4,f
  5403  174E  0824               	movf	??_displayDigit+4,w
  5404  174F  0480               	iorwf	0,f
  5405                           
  5406                           ;lcd.c: 106: ((*D1->sc) &= ~((1UL) << (D1->bits[2])));
  5407  1750  3012               	movlw	18
  5408  1751  077B               	addwf	displayDigit@D1,w
  5409  1752  00A0               	movwf	??_displayDigit
  5410  1753  087C               	movf	displayDigit@D1+1,w
  5411  1754  1803               	skipnc
  5412  1755  3E01               	addlw	1
  5413  1756  00A1               	movwf	??_displayDigit+1
  5414  1757  0820               	movf	??_displayDigit,w
  5415  1758  0084               	movwf	4
  5416  1759  1783               	bsf	3,7
  5417  175A  1C21               	btfss	??_displayDigit+1,0
  5418  175B  1383               	bcf	3,7
  5419  175C  0A00               	incf	0,w
  5420  175D  00A2               	movwf	??_displayDigit+2
  5421  175E  3001               	movlw	1
  5422  175F  00A3               	movwf	??_displayDigit+3
  5423  1760  3000               	movlw	0
  5424  1761  00A4               	movwf	??_displayDigit+4
  5425  1762  2F66               	goto	u2264
  5426  1763                     u2265:	
  5427  1763  1003               	clrc
  5428  1764  0DA3               	rlf	??_displayDigit+3,f
  5429  1765  0DA4               	rlf	??_displayDigit+4,f
  5430  1766                     u2264:	
  5431  1766  0BA2               	decfsz	??_displayDigit+2,f
  5432  1767  2F63               	goto	u2265
  5433  1768  09A3               	comf	??_displayDigit+3,f
  5434  1769  09A4               	comf	??_displayDigit+4,f
  5435  176A  3004               	movlw	4
  5436  176B  077B               	addwf	displayDigit@D1,w
  5437  176C  00A5               	movwf	??_displayDigit+5
  5438  176D  087C               	movf	displayDigit@D1+1,w
  5439  176E  1803               	skipnc
  5440  176F  3E01               	addlw	1
  5441  1770  00A6               	movwf	??_displayDigit+6
  5442  1771  0825               	movf	??_displayDigit+5,w
  5443  1772  0084               	movwf	4
  5444  1773  1783               	bsf	3,7
  5445  1774  1C26               	btfss	??_displayDigit+6,0
  5446  1775  1383               	bcf	3,7
  5447  1776  0800               	movf	0,w
  5448  1777  00A7               	movwf	??_displayDigit+7
  5449  1778  0A84               	incf	4,f
  5450  1779  0800               	movf	0,w
  5451  177A  00A8               	movwf	??_displayDigit+8
  5452  177B  0827               	movf	??_displayDigit+7,w
  5453  177C  0084               	movwf	4
  5454  177D  1783               	bsf	3,7
  5455  177E  1C28               	btfss	??_displayDigit+8,0
  5456  177F  1383               	bcf	3,7
  5457  1780  0823               	movf	??_displayDigit+3,w
  5458  1781  0580               	andwf	0,f
  5459  1782  0A84               	incf	4,f
  5460  1783  0824               	movf	??_displayDigit+4,w
  5461  1784  0580               	andwf	0,f
  5462                           
  5463                           ;lcd.c: 107: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  5464  1785  3014               	movlw	20
  5465  1786  077B               	addwf	displayDigit@D1,w
  5466  1787  00A0               	movwf	??_displayDigit
  5467  1788  087C               	movf	displayDigit@D1+1,w
  5468  1789  1803               	skipnc
  5469  178A  3E01               	addlw	1
  5470  178B  00A1               	movwf	??_displayDigit+1
  5471  178C  0820               	movf	??_displayDigit,w
  5472  178D  0084               	movwf	4
  5473  178E  1783               	bsf	3,7
  5474  178F  1C21               	btfss	??_displayDigit+1,0
  5475  1790  1383               	bcf	3,7
  5476  1791  0A00               	incf	0,w
  5477  1792  00A2               	movwf	??_displayDigit+2
  5478  1793  3001               	movlw	1
  5479  1794  00A3               	movwf	??_displayDigit+3
  5480  1795  3000               	movlw	0
  5481  1796  00A4               	movwf	??_displayDigit+4
  5482  1797  2F9B               	goto	u2274
  5483  1798                     u2275:	
  5484  1798  1003               	clrc
  5485  1799  0DA3               	rlf	??_displayDigit+3,f
  5486  179A  0DA4               	rlf	??_displayDigit+4,f
  5487  179B                     u2274:	
  5488  179B  0BA2               	decfsz	??_displayDigit+2,f
  5489  179C  2F98               	goto	u2275
  5490  179D  3006               	movlw	6
  5491  179E  077B               	addwf	displayDigit@D1,w
  5492  179F  00A5               	movwf	??_displayDigit+5
  5493  17A0  087C               	movf	displayDigit@D1+1,w
  5494  17A1  1803               	skipnc
  5495  17A2  3E01               	addlw	1
  5496  17A3  00A6               	movwf	??_displayDigit+6
  5497  17A4  0825               	movf	??_displayDigit+5,w
  5498  17A5  0084               	movwf	4
  5499  17A6  1783               	bsf	3,7
  5500  17A7  1C26               	btfss	??_displayDigit+6,0
  5501  17A8  1383               	bcf	3,7
  5502  17A9  0800               	movf	0,w
  5503  17AA  00A7               	movwf	??_displayDigit+7
  5504  17AB  0A84               	incf	4,f
  5505  17AC  0800               	movf	0,w
  5506  17AD  00A8               	movwf	??_displayDigit+8
  5507  17AE  0827               	movf	??_displayDigit+7,w
  5508  17AF  0084               	movwf	4
  5509  17B0  1783               	bsf	3,7
  5510  17B1  1C28               	btfss	??_displayDigit+8,0
  5511  17B2  1383               	bcf	3,7
  5512  17B3  0823               	movf	??_displayDigit+3,w
  5513  17B4  0480               	iorwf	0,f
  5514  17B5  0A84               	incf	4,f
  5515  17B6  0824               	movf	??_displayDigit+4,w
  5516  17B7  0480               	iorwf	0,f
  5517                           
  5518                           ;lcd.c: 108: ((*D1->se) |= (1UL) << (D1->bits[4]));
  5519  17B8  3016               	movlw	22
  5520  17B9  077B               	addwf	displayDigit@D1,w
  5521  17BA  00A0               	movwf	??_displayDigit
  5522  17BB  087C               	movf	displayDigit@D1+1,w
  5523  17BC  1803               	skipnc
  5524  17BD  3E01               	addlw	1
  5525  17BE  00A1               	movwf	??_displayDigit+1
  5526  17BF  0820               	movf	??_displayDigit,w
  5527  17C0  0084               	movwf	4
  5528  17C1  1783               	bsf	3,7
  5529  17C2  1C21               	btfss	??_displayDigit+1,0
  5530  17C3  1383               	bcf	3,7
  5531  17C4  0A00               	incf	0,w
  5532  17C5  00A2               	movwf	??_displayDigit+2
  5533  17C6  3001               	movlw	1
  5534  17C7  00A3               	movwf	??_displayDigit+3
  5535  17C8  3000               	movlw	0
  5536  17C9  00A4               	movwf	??_displayDigit+4
  5537  17CA  2FCE               	goto	u2284
  5538  17CB                     u2285:	
  5539  17CB  1003               	clrc
  5540  17CC  0DA3               	rlf	??_displayDigit+3,f
  5541  17CD  0DA4               	rlf	??_displayDigit+4,f
  5542  17CE                     u2284:	
  5543  17CE  0BA2               	decfsz	??_displayDigit+2,f
  5544  17CF  2FCB               	goto	u2285
  5545  17D0  3008               	movlw	8
  5546  17D1  077B               	addwf	displayDigit@D1,w
  5547  17D2  00A5               	movwf	??_displayDigit+5
  5548  17D3  087C               	movf	displayDigit@D1+1,w
  5549  17D4  1803               	skipnc
  5550  17D5  3E01               	addlw	1
  5551  17D6  00A6               	movwf	??_displayDigit+6
  5552  17D7  0825               	movf	??_displayDigit+5,w
  5553  17D8  0084               	movwf	4
  5554  17D9  1783               	bsf	3,7
  5555  17DA  1C26               	btfss	??_displayDigit+6,0
  5556  17DB  1383               	bcf	3,7
  5557  17DC  0800               	movf	0,w
  5558  17DD  00A7               	movwf	??_displayDigit+7
  5559  17DE  0A84               	incf	4,f
  5560  17DF  0800               	movf	0,w
  5561  17E0  00A8               	movwf	??_displayDigit+8
  5562  17E1  0827               	movf	??_displayDigit+7,w
  5563  17E2  0084               	movwf	4
  5564  17E3  1783               	bsf	3,7
  5565  17E4  1C28               	btfss	??_displayDigit+8,0
  5566  17E5  1383               	bcf	3,7
  5567  17E6  0823               	movf	??_displayDigit+3,w
  5568  17E7  0480               	iorwf	0,f
  5569  17E8  0A84               	incf	4,f
  5570  17E9  0824               	movf	??_displayDigit+4,w
  5571  17EA  0480               	iorwf	0,f
  5572                           
  5573                           ;lcd.c: 109: ((*D1->sf) &= ~((1UL) << (D1->bits[5])));
  5574  17EB  3018               	movlw	24
  5575  17EC  077B               	addwf	displayDigit@D1,w
  5576  17ED  00A0               	movwf	??_displayDigit
  5577  17EE  087C               	movf	displayDigit@D1+1,w
  5578  17EF  1803               	skipnc
  5579  17F0  3E01               	addlw	1
  5580  17F1  00A1               	movwf	??_displayDigit+1
  5581  17F2  0820               	movf	??_displayDigit,w
  5582  17F3  0084               	movwf	4
  5583  17F4  1783               	bsf	3,7
  5584  17F5  1C21               	btfss	??_displayDigit+1,0
  5585  17F6  1383               	bcf	3,7
  5586  17F7  0A00               	incf	0,w
  5587  17F8  00A2               	movwf	??_displayDigit+2
  5588  17F9  3001               	movlw	1
  5589  17FA  00A3               	movwf	??_displayDigit+3
  5590  17FB  3000               	movlw	0
  5591  17FC  00A4               	movwf	??_displayDigit+4
  5592  17FD  120A  158A  2BE1   	goto	u2294
  5593                           
  5594                           	psect	text5_split_4
  5595  0BDE                     u2295:	
  5596  0BDE  1003               	clrc
  5597  0BDF  0DA3               	rlf	??_displayDigit+3,f
  5598  0BE0  0DA4               	rlf	??_displayDigit+4,f
  5599  0BE1                     u2294:	
  5600  0BE1  0BA2               	decfsz	??_displayDigit+2,f
  5601  0BE2  2BDE               	goto	u2295
  5602  0BE3  09A3               	comf	??_displayDigit+3,f
  5603  0BE4  09A4               	comf	??_displayDigit+4,f
  5604  0BE5  300A               	movlw	10
  5605  0BE6  077B               	addwf	displayDigit@D1,w
  5606  0BE7  00A5               	movwf	??_displayDigit+5
  5607  0BE8  087C               	movf	displayDigit@D1+1,w
  5608  0BE9  1803               	skipnc
  5609  0BEA  3E01               	addlw	1
  5610  0BEB  00A6               	movwf	??_displayDigit+6
  5611  0BEC  0825               	movf	??_displayDigit+5,w
  5612  0BED  0084               	movwf	4
  5613  0BEE  1783               	bsf	3,7
  5614  0BEF  1C26               	btfss	??_displayDigit+6,0
  5615  0BF0  1383               	bcf	3,7
  5616  0BF1  0800               	movf	0,w
  5617  0BF2  00A7               	movwf	??_displayDigit+7
  5618  0BF3  0A84               	incf	4,f
  5619  0BF4  0800               	movf	0,w
  5620  0BF5  00A8               	movwf	??_displayDigit+8
  5621  0BF6  0827               	movf	??_displayDigit+7,w
  5622  0BF7  0084               	movwf	4
  5623  0BF8  1783               	bsf	3,7
  5624  0BF9  1C28               	btfss	??_displayDigit+8,0
  5625  0BFA  1383               	bcf	3,7
  5626  0BFB  0823               	movf	??_displayDigit+3,w
  5627  0BFC  0580               	andwf	0,f
  5628  0BFD  0A84               	incf	4,f
  5629  0BFE  0824               	movf	??_displayDigit+4,w
  5630  0BFF  0580               	andwf	0,f
  5631                           
  5632                           ;lcd.c: 110: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  5633  0C00  301A               	movlw	26
  5634  0C01  077B               	addwf	displayDigit@D1,w
  5635  0C02  00A0               	movwf	??_displayDigit
  5636  0C03  087C               	movf	displayDigit@D1+1,w
  5637  0C04  1803               	skipnc
  5638  0C05  3E01               	addlw	1
  5639  0C06  00A1               	movwf	??_displayDigit+1
  5640  0C07  0820               	movf	??_displayDigit,w
  5641  0C08  0084               	movwf	4
  5642  0C09  1783               	bsf	3,7
  5643  0C0A  1C21               	btfss	??_displayDigit+1,0
  5644  0C0B  1383               	bcf	3,7
  5645  0C0C  0A00               	incf	0,w
  5646  0C0D  00A2               	movwf	??_displayDigit+2
  5647  0C0E  3001               	movlw	1
  5648  0C0F  00A3               	movwf	??_displayDigit+3
  5649  0C10  3000               	movlw	0
  5650  0C11  00A4               	movwf	??_displayDigit+4
  5651  0C12  2C16               	goto	u2304
  5652  0C13                     u2305:	
  5653  0C13  1003               	clrc
  5654  0C14  0DA3               	rlf	??_displayDigit+3,f
  5655  0C15  0DA4               	rlf	??_displayDigit+4,f
  5656  0C16                     u2304:	
  5657  0C16  0BA2               	decfsz	??_displayDigit+2,f
  5658  0C17  2C13               	goto	u2305
  5659  0C18  300C               	movlw	12
  5660  0C19  077B               	addwf	displayDigit@D1,w
  5661  0C1A  00A5               	movwf	??_displayDigit+5
  5662  0C1B  087C               	movf	displayDigit@D1+1,w
  5663  0C1C  1803               	skipnc
  5664  0C1D  3E01               	addlw	1
  5665  0C1E  00A6               	movwf	??_displayDigit+6
  5666  0C1F  0825               	movf	??_displayDigit+5,w
  5667  0C20  0084               	movwf	4
  5668  0C21  1783               	bsf	3,7
  5669  0C22  1C26               	btfss	??_displayDigit+6,0
  5670  0C23  1383               	bcf	3,7
  5671  0C24  0800               	movf	0,w
  5672  0C25  00A7               	movwf	??_displayDigit+7
  5673  0C26  0A84               	incf	4,f
  5674  0C27  0800               	movf	0,w
  5675  0C28  00A8               	movwf	??_displayDigit+8
  5676  0C29  0827               	movf	??_displayDigit+7,w
  5677  0C2A  0084               	movwf	4
  5678  0C2B  1783               	bsf	3,7
  5679  0C2C  1C28               	btfss	??_displayDigit+8,0
  5680  0C2D  1383               	bcf	3,7
  5681  0C2E  0823               	movf	??_displayDigit+3,w
  5682  0C2F  0480               	iorwf	0,f
  5683  0C30  0A84               	incf	4,f
  5684  0C31  0824               	movf	??_displayDigit+4,w
  5685  0C32  0480               	iorwf	0,f
  5686                           
  5687                           ;lcd.c: 111: break;
  5688  0C33  0008               	return
  5689  0C34                     l1342:	
  5690                           ;lcd.c: 112: case 3:
  5691                           
  5692                           
  5693                           ;lcd.c: 113: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  5694  0C34  300E               	movlw	14
  5695  0C35  077B               	addwf	displayDigit@D1,w
  5696  0C36  1283               	bcf	3,5	;RP0=0, select bank0
  5697  0C37  1303               	bcf	3,6	;RP1=0, select bank0
  5698  0C38  00A0               	movwf	??_displayDigit
  5699  0C39  087C               	movf	displayDigit@D1+1,w
  5700  0C3A  1803               	skipnc
  5701  0C3B  3E01               	addlw	1
  5702  0C3C  00A1               	movwf	??_displayDigit+1
  5703  0C3D  0820               	movf	??_displayDigit,w
  5704  0C3E  0084               	movwf	4
  5705  0C3F  1783               	bsf	3,7
  5706  0C40  1C21               	btfss	??_displayDigit+1,0
  5707  0C41  1383               	bcf	3,7
  5708  0C42  0A00               	incf	0,w
  5709  0C43  00A2               	movwf	??_displayDigit+2
  5710  0C44  3001               	movlw	1
  5711  0C45  00A3               	movwf	??_displayDigit+3
  5712  0C46  3000               	movlw	0
  5713  0C47  00A4               	movwf	??_displayDigit+4
  5714  0C48  2C4C               	goto	u2314
  5715  0C49                     u2315:	
  5716  0C49  1003               	clrc
  5717  0C4A  0DA3               	rlf	??_displayDigit+3,f
  5718  0C4B  0DA4               	rlf	??_displayDigit+4,f
  5719  0C4C                     u2314:	
  5720  0C4C  0BA2               	decfsz	??_displayDigit+2,f
  5721  0C4D  2C49               	goto	u2315
  5722  0C4E  087B               	movf	displayDigit@D1,w
  5723  0C4F  0084               	movwf	4
  5724  0C50  1783               	bsf	3,7
  5725  0C51  1C7C               	btfss	displayDigit@D1+1,0
  5726  0C52  1383               	bcf	3,7
  5727  0C53  0800               	movf	0,w
  5728  0C54  00A5               	movwf	??_displayDigit+5
  5729  0C55  0A84               	incf	4,f
  5730  0C56  0800               	movf	0,w
  5731  0C57  00A6               	movwf	??_displayDigit+6
  5732  0C58  0825               	movf	??_displayDigit+5,w
  5733  0C59  0084               	movwf	4
  5734  0C5A  1783               	bsf	3,7
  5735  0C5B  1C26               	btfss	??_displayDigit+6,0
  5736  0C5C  1383               	bcf	3,7
  5737  0C5D  0823               	movf	??_displayDigit+3,w
  5738  0C5E  0480               	iorwf	0,f
  5739  0C5F  0A84               	incf	4,f
  5740  0C60  0824               	movf	??_displayDigit+4,w
  5741  0C61  0480               	iorwf	0,f
  5742                           
  5743                           ;lcd.c: 114: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  5744  0C62  3010               	movlw	16
  5745  0C63  077B               	addwf	displayDigit@D1,w
  5746  0C64  00A0               	movwf	??_displayDigit
  5747  0C65  087C               	movf	displayDigit@D1+1,w
  5748  0C66  1803               	skipnc
  5749  0C67  3E01               	addlw	1
  5750  0C68  00A1               	movwf	??_displayDigit+1
  5751  0C69  0820               	movf	??_displayDigit,w
  5752  0C6A  0084               	movwf	4
  5753  0C6B  1783               	bsf	3,7
  5754  0C6C  1C21               	btfss	??_displayDigit+1,0
  5755  0C6D  1383               	bcf	3,7
  5756  0C6E  0A00               	incf	0,w
  5757  0C6F  00A2               	movwf	??_displayDigit+2
  5758  0C70  3001               	movlw	1
  5759  0C71  00A3               	movwf	??_displayDigit+3
  5760  0C72  3000               	movlw	0
  5761  0C73  00A4               	movwf	??_displayDigit+4
  5762  0C74  2C78               	goto	u2324
  5763  0C75                     u2325:	
  5764  0C75  1003               	clrc
  5765  0C76  0DA3               	rlf	??_displayDigit+3,f
  5766  0C77  0DA4               	rlf	??_displayDigit+4,f
  5767  0C78                     u2324:	
  5768  0C78  0BA2               	decfsz	??_displayDigit+2,f
  5769  0C79  2C75               	goto	u2325
  5770  0C7A  3002               	movlw	2
  5771  0C7B  077B               	addwf	displayDigit@D1,w
  5772  0C7C  00A5               	movwf	??_displayDigit+5
  5773  0C7D  087C               	movf	displayDigit@D1+1,w
  5774  0C7E  1803               	skipnc
  5775  0C7F  3E01               	addlw	1
  5776  0C80  00A6               	movwf	??_displayDigit+6
  5777  0C81  0825               	movf	??_displayDigit+5,w
  5778  0C82  0084               	movwf	4
  5779  0C83  1783               	bsf	3,7
  5780  0C84  1C26               	btfss	??_displayDigit+6,0
  5781  0C85  1383               	bcf	3,7
  5782  0C86  0800               	movf	0,w
  5783  0C87  00A7               	movwf	??_displayDigit+7
  5784  0C88  0A84               	incf	4,f
  5785  0C89  0800               	movf	0,w
  5786  0C8A  00A8               	movwf	??_displayDigit+8
  5787  0C8B  0827               	movf	??_displayDigit+7,w
  5788  0C8C  0084               	movwf	4
  5789  0C8D  1783               	bsf	3,7
  5790  0C8E  1C28               	btfss	??_displayDigit+8,0
  5791  0C8F  1383               	bcf	3,7
  5792  0C90  0823               	movf	??_displayDigit+3,w
  5793  0C91  0480               	iorwf	0,f
  5794  0C92  0A84               	incf	4,f
  5795  0C93  0824               	movf	??_displayDigit+4,w
  5796  0C94  0480               	iorwf	0,f
  5797                           
  5798                           ;lcd.c: 115: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  5799  0C95  3012               	movlw	18
  5800  0C96  077B               	addwf	displayDigit@D1,w
  5801  0C97  00A0               	movwf	??_displayDigit
  5802  0C98  087C               	movf	displayDigit@D1+1,w
  5803  0C99  1803               	skipnc
  5804  0C9A  3E01               	addlw	1
  5805  0C9B  00A1               	movwf	??_displayDigit+1
  5806  0C9C  0820               	movf	??_displayDigit,w
  5807  0C9D  0084               	movwf	4
  5808  0C9E  1783               	bsf	3,7
  5809  0C9F  1C21               	btfss	??_displayDigit+1,0
  5810  0CA0  1383               	bcf	3,7
  5811  0CA1  0A00               	incf	0,w
  5812  0CA2  00A2               	movwf	??_displayDigit+2
  5813  0CA3  3001               	movlw	1
  5814  0CA4  00A3               	movwf	??_displayDigit+3
  5815  0CA5  3000               	movlw	0
  5816  0CA6  00A4               	movwf	??_displayDigit+4
  5817  0CA7  2CAB               	goto	u2334
  5818  0CA8                     u2335:	
  5819  0CA8  1003               	clrc
  5820  0CA9  0DA3               	rlf	??_displayDigit+3,f
  5821  0CAA  0DA4               	rlf	??_displayDigit+4,f
  5822  0CAB                     u2334:	
  5823  0CAB  0BA2               	decfsz	??_displayDigit+2,f
  5824  0CAC  2CA8               	goto	u2335
  5825  0CAD  3004               	movlw	4
  5826  0CAE  077B               	addwf	displayDigit@D1,w
  5827  0CAF  00A5               	movwf	??_displayDigit+5
  5828  0CB0  087C               	movf	displayDigit@D1+1,w
  5829  0CB1  1803               	skipnc
  5830  0CB2  3E01               	addlw	1
  5831  0CB3  00A6               	movwf	??_displayDigit+6
  5832  0CB4  0825               	movf	??_displayDigit+5,w
  5833  0CB5  0084               	movwf	4
  5834  0CB6  1783               	bsf	3,7
  5835  0CB7  1C26               	btfss	??_displayDigit+6,0
  5836  0CB8  1383               	bcf	3,7
  5837  0CB9  0800               	movf	0,w
  5838  0CBA  00A7               	movwf	??_displayDigit+7
  5839  0CBB  0A84               	incf	4,f
  5840  0CBC  0800               	movf	0,w
  5841  0CBD  00A8               	movwf	??_displayDigit+8
  5842  0CBE  0827               	movf	??_displayDigit+7,w
  5843  0CBF  0084               	movwf	4
  5844  0CC0  1783               	bsf	3,7
  5845  0CC1  1C28               	btfss	??_displayDigit+8,0
  5846  0CC2  1383               	bcf	3,7
  5847  0CC3  0823               	movf	??_displayDigit+3,w
  5848  0CC4  0480               	iorwf	0,f
  5849  0CC5  0A84               	incf	4,f
  5850  0CC6  0824               	movf	??_displayDigit+4,w
  5851  0CC7  0480               	iorwf	0,f
  5852                           
  5853                           ;lcd.c: 116: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  5854  0CC8  3014               	movlw	20
  5855  0CC9  077B               	addwf	displayDigit@D1,w
  5856  0CCA  00A0               	movwf	??_displayDigit
  5857  0CCB  087C               	movf	displayDigit@D1+1,w
  5858  0CCC  1803               	skipnc
  5859  0CCD  3E01               	addlw	1
  5860  0CCE  00A1               	movwf	??_displayDigit+1
  5861  0CCF  0820               	movf	??_displayDigit,w
  5862  0CD0  0084               	movwf	4
  5863  0CD1  1783               	bsf	3,7
  5864  0CD2  1C21               	btfss	??_displayDigit+1,0
  5865  0CD3  1383               	bcf	3,7
  5866  0CD4  0A00               	incf	0,w
  5867  0CD5  00A2               	movwf	??_displayDigit+2
  5868  0CD6  3001               	movlw	1
  5869  0CD7  00A3               	movwf	??_displayDigit+3
  5870  0CD8  3000               	movlw	0
  5871  0CD9  00A4               	movwf	??_displayDigit+4
  5872  0CDA  2CDE               	goto	u2344
  5873  0CDB                     u2345:	
  5874  0CDB  1003               	clrc
  5875  0CDC  0DA3               	rlf	??_displayDigit+3,f
  5876  0CDD  0DA4               	rlf	??_displayDigit+4,f
  5877  0CDE                     u2344:	
  5878  0CDE  0BA2               	decfsz	??_displayDigit+2,f
  5879  0CDF  2CDB               	goto	u2345
  5880  0CE0  3006               	movlw	6
  5881  0CE1  077B               	addwf	displayDigit@D1,w
  5882  0CE2  00A5               	movwf	??_displayDigit+5
  5883  0CE3  087C               	movf	displayDigit@D1+1,w
  5884  0CE4  1803               	skipnc
  5885  0CE5  3E01               	addlw	1
  5886  0CE6  00A6               	movwf	??_displayDigit+6
  5887  0CE7  0825               	movf	??_displayDigit+5,w
  5888  0CE8  0084               	movwf	4
  5889  0CE9  1783               	bsf	3,7
  5890  0CEA  1C26               	btfss	??_displayDigit+6,0
  5891  0CEB  1383               	bcf	3,7
  5892  0CEC  0800               	movf	0,w
  5893  0CED  00A7               	movwf	??_displayDigit+7
  5894  0CEE  0A84               	incf	4,f
  5895  0CEF  0800               	movf	0,w
  5896  0CF0  00A8               	movwf	??_displayDigit+8
  5897  0CF1  0827               	movf	??_displayDigit+7,w
  5898  0CF2  0084               	movwf	4
  5899  0CF3  1783               	bsf	3,7
  5900  0CF4  1C28               	btfss	??_displayDigit+8,0
  5901  0CF5  1383               	bcf	3,7
  5902  0CF6  0823               	movf	??_displayDigit+3,w
  5903  0CF7  0480               	iorwf	0,f
  5904  0CF8  0A84               	incf	4,f
  5905  0CF9  0824               	movf	??_displayDigit+4,w
  5906  0CFA  0480               	iorwf	0,f
  5907                           
  5908                           ;lcd.c: 117: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  5909  0CFB  3016               	movlw	22
  5910  0CFC  077B               	addwf	displayDigit@D1,w
  5911  0CFD  00A0               	movwf	??_displayDigit
  5912  0CFE  087C               	movf	displayDigit@D1+1,w
  5913  0CFF  1803               	skipnc
  5914  0D00  3E01               	addlw	1
  5915  0D01  00A1               	movwf	??_displayDigit+1
  5916  0D02  0820               	movf	??_displayDigit,w
  5917  0D03  0084               	movwf	4
  5918  0D04  1783               	bsf	3,7
  5919  0D05  1C21               	btfss	??_displayDigit+1,0
  5920  0D06  1383               	bcf	3,7
  5921  0D07  0A00               	incf	0,w
  5922  0D08  00A2               	movwf	??_displayDigit+2
  5923  0D09  3001               	movlw	1
  5924  0D0A  00A3               	movwf	??_displayDigit+3
  5925  0D0B  3000               	movlw	0
  5926  0D0C  00A4               	movwf	??_displayDigit+4
  5927  0D0D  160A  118A  293E   	goto	u2354
  5928                           
  5929                           	psect	text5_split_5
  5930  113B                     u2355:	
  5931  113B  1003               	clrc
  5932  113C  0DA3               	rlf	??_displayDigit+3,f
  5933  113D  0DA4               	rlf	??_displayDigit+4,f
  5934  113E                     u2354:	
  5935  113E  0BA2               	decfsz	??_displayDigit+2,f
  5936  113F  293B               	goto	u2355
  5937  1140  09A3               	comf	??_displayDigit+3,f
  5938  1141  09A4               	comf	??_displayDigit+4,f
  5939  1142  3008               	movlw	8
  5940  1143  077B               	addwf	displayDigit@D1,w
  5941  1144  00A5               	movwf	??_displayDigit+5
  5942  1145  087C               	movf	displayDigit@D1+1,w
  5943  1146  1803               	skipnc
  5944  1147  3E01               	addlw	1
  5945  1148  00A6               	movwf	??_displayDigit+6
  5946  1149  0825               	movf	??_displayDigit+5,w
  5947  114A  0084               	movwf	4
  5948  114B  1783               	bsf	3,7
  5949  114C  1C26               	btfss	??_displayDigit+6,0
  5950  114D  1383               	bcf	3,7
  5951  114E  0800               	movf	0,w
  5952  114F  00A7               	movwf	??_displayDigit+7
  5953  1150  0A84               	incf	4,f
  5954  1151  0800               	movf	0,w
  5955  1152  00A8               	movwf	??_displayDigit+8
  5956  1153  0827               	movf	??_displayDigit+7,w
  5957  1154  0084               	movwf	4
  5958  1155  1783               	bsf	3,7
  5959  1156  1C28               	btfss	??_displayDigit+8,0
  5960  1157  1383               	bcf	3,7
  5961  1158  0823               	movf	??_displayDigit+3,w
  5962  1159  0580               	andwf	0,f
  5963  115A  0A84               	incf	4,f
  5964  115B  0824               	movf	??_displayDigit+4,w
  5965  115C  0580               	andwf	0,f
  5966                           
  5967                           ;lcd.c: 118: ((*D1->sf) &= ~((1UL) << (D1->bits[5])));
  5968  115D  3018               	movlw	24
  5969  115E  077B               	addwf	displayDigit@D1,w
  5970  115F  00A0               	movwf	??_displayDigit
  5971  1160  087C               	movf	displayDigit@D1+1,w
  5972  1161  1803               	skipnc
  5973  1162  3E01               	addlw	1
  5974  1163  00A1               	movwf	??_displayDigit+1
  5975  1164  0820               	movf	??_displayDigit,w
  5976  1165  0084               	movwf	4
  5977  1166  1783               	bsf	3,7
  5978  1167  1C21               	btfss	??_displayDigit+1,0
  5979  1168  1383               	bcf	3,7
  5980  1169  0A00               	incf	0,w
  5981  116A  00A2               	movwf	??_displayDigit+2
  5982  116B  3001               	movlw	1
  5983  116C  00A3               	movwf	??_displayDigit+3
  5984  116D  3000               	movlw	0
  5985  116E  00A4               	movwf	??_displayDigit+4
  5986  116F  2973               	goto	u2364
  5987  1170                     u2365:	
  5988  1170  1003               	clrc
  5989  1171  0DA3               	rlf	??_displayDigit+3,f
  5990  1172  0DA4               	rlf	??_displayDigit+4,f
  5991  1173                     u2364:	
  5992  1173  0BA2               	decfsz	??_displayDigit+2,f
  5993  1174  2970               	goto	u2365
  5994  1175  09A3               	comf	??_displayDigit+3,f
  5995  1176  09A4               	comf	??_displayDigit+4,f
  5996  1177  300A               	movlw	10
  5997  1178  077B               	addwf	displayDigit@D1,w
  5998  1179  00A5               	movwf	??_displayDigit+5
  5999  117A  087C               	movf	displayDigit@D1+1,w
  6000  117B  1803               	skipnc
  6001  117C  3E01               	addlw	1
  6002  117D  00A6               	movwf	??_displayDigit+6
  6003  117E  0825               	movf	??_displayDigit+5,w
  6004  117F  0084               	movwf	4
  6005  1180  1783               	bsf	3,7
  6006  1181  1C26               	btfss	??_displayDigit+6,0
  6007  1182  1383               	bcf	3,7
  6008  1183  0800               	movf	0,w
  6009  1184  00A7               	movwf	??_displayDigit+7
  6010  1185  0A84               	incf	4,f
  6011  1186  0800               	movf	0,w
  6012  1187  00A8               	movwf	??_displayDigit+8
  6013  1188  0827               	movf	??_displayDigit+7,w
  6014  1189  0084               	movwf	4
  6015  118A  1783               	bsf	3,7
  6016  118B  1C28               	btfss	??_displayDigit+8,0
  6017  118C  1383               	bcf	3,7
  6018  118D  0823               	movf	??_displayDigit+3,w
  6019  118E  0580               	andwf	0,f
  6020  118F  0A84               	incf	4,f
  6021  1190  0824               	movf	??_displayDigit+4,w
  6022  1191  0580               	andwf	0,f
  6023                           
  6024                           ;lcd.c: 119: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  6025  1192  301A               	movlw	26
  6026  1193  077B               	addwf	displayDigit@D1,w
  6027  1194  00A0               	movwf	??_displayDigit
  6028  1195  087C               	movf	displayDigit@D1+1,w
  6029  1196  1803               	skipnc
  6030  1197  3E01               	addlw	1
  6031  1198  00A1               	movwf	??_displayDigit+1
  6032  1199  0820               	movf	??_displayDigit,w
  6033  119A  0084               	movwf	4
  6034  119B  1783               	bsf	3,7
  6035  119C  1C21               	btfss	??_displayDigit+1,0
  6036  119D  1383               	bcf	3,7
  6037  119E  0A00               	incf	0,w
  6038  119F  00A2               	movwf	??_displayDigit+2
  6039  11A0  3001               	movlw	1
  6040  11A1  00A3               	movwf	??_displayDigit+3
  6041  11A2  3000               	movlw	0
  6042  11A3  00A4               	movwf	??_displayDigit+4
  6043  11A4  29A8               	goto	u2374
  6044  11A5                     u2375:	
  6045  11A5  1003               	clrc
  6046  11A6  0DA3               	rlf	??_displayDigit+3,f
  6047  11A7  0DA4               	rlf	??_displayDigit+4,f
  6048  11A8                     u2374:	
  6049  11A8  0BA2               	decfsz	??_displayDigit+2,f
  6050  11A9  29A5               	goto	u2375
  6051  11AA  300C               	movlw	12
  6052  11AB  077B               	addwf	displayDigit@D1,w
  6053  11AC  00A5               	movwf	??_displayDigit+5
  6054  11AD  087C               	movf	displayDigit@D1+1,w
  6055  11AE  1803               	skipnc
  6056  11AF  3E01               	addlw	1
  6057  11B0  00A6               	movwf	??_displayDigit+6
  6058  11B1  0825               	movf	??_displayDigit+5,w
  6059  11B2  0084               	movwf	4
  6060  11B3  1783               	bsf	3,7
  6061  11B4  1C26               	btfss	??_displayDigit+6,0
  6062  11B5  1383               	bcf	3,7
  6063  11B6  0800               	movf	0,w
  6064  11B7  00A7               	movwf	??_displayDigit+7
  6065  11B8  0A84               	incf	4,f
  6066  11B9  0800               	movf	0,w
  6067  11BA  00A8               	movwf	??_displayDigit+8
  6068  11BB  0827               	movf	??_displayDigit+7,w
  6069  11BC  0084               	movwf	4
  6070  11BD  1783               	bsf	3,7
  6071  11BE  1C28               	btfss	??_displayDigit+8,0
  6072  11BF  1383               	bcf	3,7
  6073  11C0  0823               	movf	??_displayDigit+3,w
  6074  11C1  0480               	iorwf	0,f
  6075  11C2  0A84               	incf	4,f
  6076  11C3  0824               	movf	??_displayDigit+4,w
  6077  11C4  0480               	iorwf	0,f
  6078                           
  6079                           ;lcd.c: 120: break;
  6080  11C5  0008               	return
  6081                           
  6082                           	psect	text5_split_6
  6083  0997                     l1344:	
  6084                           ;lcd.c: 121: case 4:
  6085                           
  6086                           
  6087                           ;lcd.c: 122: ((*D1->sa) &= ~((1UL) << (D1->bits[0])));
  6088  0997  300E               	movlw	14
  6089  0998  077B               	addwf	displayDigit@D1,w
  6090  0999  1283               	bcf	3,5	;RP0=0, select bank0
  6091  099A  1303               	bcf	3,6	;RP1=0, select bank0
  6092  099B  00A0               	movwf	??_displayDigit
  6093  099C  087C               	movf	displayDigit@D1+1,w
  6094  099D  1803               	skipnc
  6095  099E  3E01               	addlw	1
  6096  099F  00A1               	movwf	??_displayDigit+1
  6097  09A0  0820               	movf	??_displayDigit,w
  6098  09A1  0084               	movwf	4
  6099  09A2  1783               	bsf	3,7
  6100  09A3  1C21               	btfss	??_displayDigit+1,0
  6101  09A4  1383               	bcf	3,7
  6102  09A5  0A00               	incf	0,w
  6103  09A6  00A2               	movwf	??_displayDigit+2
  6104  09A7  3001               	movlw	1
  6105  09A8  00A3               	movwf	??_displayDigit+3
  6106  09A9  3000               	movlw	0
  6107  09AA  00A4               	movwf	??_displayDigit+4
  6108  09AB  29AF               	goto	u2384
  6109  09AC                     u2385:	
  6110  09AC  1003               	clrc
  6111  09AD  0DA3               	rlf	??_displayDigit+3,f
  6112  09AE  0DA4               	rlf	??_displayDigit+4,f
  6113  09AF                     u2384:	
  6114  09AF  0BA2               	decfsz	??_displayDigit+2,f
  6115  09B0  29AC               	goto	u2385
  6116  09B1  09A3               	comf	??_displayDigit+3,f
  6117  09B2  09A4               	comf	??_displayDigit+4,f
  6118  09B3  087B               	movf	displayDigit@D1,w
  6119  09B4  0084               	movwf	4
  6120  09B5  1783               	bsf	3,7
  6121  09B6  1C7C               	btfss	displayDigit@D1+1,0
  6122  09B7  1383               	bcf	3,7
  6123  09B8  0800               	movf	0,w
  6124  09B9  00A5               	movwf	??_displayDigit+5
  6125  09BA  0A84               	incf	4,f
  6126  09BB  0800               	movf	0,w
  6127  09BC  00A6               	movwf	??_displayDigit+6
  6128  09BD  0825               	movf	??_displayDigit+5,w
  6129  09BE  0084               	movwf	4
  6130  09BF  1783               	bsf	3,7
  6131  09C0  1C26               	btfss	??_displayDigit+6,0
  6132  09C1  1383               	bcf	3,7
  6133  09C2  0823               	movf	??_displayDigit+3,w
  6134  09C3  0580               	andwf	0,f
  6135  09C4  0A84               	incf	4,f
  6136  09C5  0824               	movf	??_displayDigit+4,w
  6137  09C6  0580               	andwf	0,f
  6138                           
  6139                           ;lcd.c: 123: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  6140  09C7  3010               	movlw	16
  6141  09C8  077B               	addwf	displayDigit@D1,w
  6142  09C9  00A0               	movwf	??_displayDigit
  6143  09CA  087C               	movf	displayDigit@D1+1,w
  6144  09CB  1803               	skipnc
  6145  09CC  3E01               	addlw	1
  6146  09CD  00A1               	movwf	??_displayDigit+1
  6147  09CE  0820               	movf	??_displayDigit,w
  6148  09CF  0084               	movwf	4
  6149  09D0  1783               	bsf	3,7
  6150  09D1  1C21               	btfss	??_displayDigit+1,0
  6151  09D2  1383               	bcf	3,7
  6152  09D3  0A00               	incf	0,w
  6153  09D4  00A2               	movwf	??_displayDigit+2
  6154  09D5  3001               	movlw	1
  6155  09D6  00A3               	movwf	??_displayDigit+3
  6156  09D7  3000               	movlw	0
  6157  09D8  00A4               	movwf	??_displayDigit+4
  6158  09D9  29DD               	goto	u2394
  6159  09DA                     u2395:	
  6160  09DA  1003               	clrc
  6161  09DB  0DA3               	rlf	??_displayDigit+3,f
  6162  09DC  0DA4               	rlf	??_displayDigit+4,f
  6163  09DD                     u2394:	
  6164  09DD  0BA2               	decfsz	??_displayDigit+2,f
  6165  09DE  29DA               	goto	u2395
  6166  09DF  3002               	movlw	2
  6167  09E0  077B               	addwf	displayDigit@D1,w
  6168  09E1  00A5               	movwf	??_displayDigit+5
  6169  09E2  087C               	movf	displayDigit@D1+1,w
  6170  09E3  1803               	skipnc
  6171  09E4  3E01               	addlw	1
  6172  09E5  00A6               	movwf	??_displayDigit+6
  6173  09E6  0825               	movf	??_displayDigit+5,w
  6174  09E7  0084               	movwf	4
  6175  09E8  1783               	bsf	3,7
  6176  09E9  1C26               	btfss	??_displayDigit+6,0
  6177  09EA  1383               	bcf	3,7
  6178  09EB  0800               	movf	0,w
  6179  09EC  00A7               	movwf	??_displayDigit+7
  6180  09ED  0A84               	incf	4,f
  6181  09EE  0800               	movf	0,w
  6182  09EF  00A8               	movwf	??_displayDigit+8
  6183  09F0  0827               	movf	??_displayDigit+7,w
  6184  09F1  0084               	movwf	4
  6185  09F2  1783               	bsf	3,7
  6186  09F3  1C28               	btfss	??_displayDigit+8,0
  6187  09F4  1383               	bcf	3,7
  6188  09F5  0823               	movf	??_displayDigit+3,w
  6189  09F6  0480               	iorwf	0,f
  6190  09F7  0A84               	incf	4,f
  6191  09F8  0824               	movf	??_displayDigit+4,w
  6192  09F9  0480               	iorwf	0,f
  6193                           
  6194                           ;lcd.c: 124: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  6195  09FA  3012               	movlw	18
  6196  09FB  077B               	addwf	displayDigit@D1,w
  6197  09FC  00A0               	movwf	??_displayDigit
  6198  09FD  087C               	movf	displayDigit@D1+1,w
  6199  09FE  1803               	skipnc
  6200  09FF  3E01               	addlw	1
  6201  0A00  00A1               	movwf	??_displayDigit+1
  6202  0A01  0820               	movf	??_displayDigit,w
  6203  0A02  0084               	movwf	4
  6204  0A03  1783               	bsf	3,7
  6205  0A04  1C21               	btfss	??_displayDigit+1,0
  6206  0A05  1383               	bcf	3,7
  6207  0A06  0A00               	incf	0,w
  6208  0A07  00A2               	movwf	??_displayDigit+2
  6209  0A08  3001               	movlw	1
  6210  0A09  00A3               	movwf	??_displayDigit+3
  6211  0A0A  3000               	movlw	0
  6212  0A0B  00A4               	movwf	??_displayDigit+4
  6213  0A0C  2A10               	goto	u2404
  6214  0A0D                     u2405:	
  6215  0A0D  1003               	clrc
  6216  0A0E  0DA3               	rlf	??_displayDigit+3,f
  6217  0A0F  0DA4               	rlf	??_displayDigit+4,f
  6218  0A10                     u2404:	
  6219  0A10  0BA2               	decfsz	??_displayDigit+2,f
  6220  0A11  2A0D               	goto	u2405
  6221  0A12  3004               	movlw	4
  6222  0A13  077B               	addwf	displayDigit@D1,w
  6223  0A14  00A5               	movwf	??_displayDigit+5
  6224  0A15  087C               	movf	displayDigit@D1+1,w
  6225  0A16  1803               	skipnc
  6226  0A17  3E01               	addlw	1
  6227  0A18  00A6               	movwf	??_displayDigit+6
  6228  0A19  0825               	movf	??_displayDigit+5,w
  6229  0A1A  0084               	movwf	4
  6230  0A1B  1783               	bsf	3,7
  6231  0A1C  1C26               	btfss	??_displayDigit+6,0
  6232  0A1D  1383               	bcf	3,7
  6233  0A1E  0800               	movf	0,w
  6234  0A1F  00A7               	movwf	??_displayDigit+7
  6235  0A20  0A84               	incf	4,f
  6236  0A21  0800               	movf	0,w
  6237  0A22  00A8               	movwf	??_displayDigit+8
  6238  0A23  0827               	movf	??_displayDigit+7,w
  6239  0A24  0084               	movwf	4
  6240  0A25  1783               	bsf	3,7
  6241  0A26  1C28               	btfss	??_displayDigit+8,0
  6242  0A27  1383               	bcf	3,7
  6243  0A28  0823               	movf	??_displayDigit+3,w
  6244  0A29  0480               	iorwf	0,f
  6245  0A2A  0A84               	incf	4,f
  6246  0A2B  0824               	movf	??_displayDigit+4,w
  6247  0A2C  0480               	iorwf	0,f
  6248                           
  6249                           ;lcd.c: 125: ((*D1->sd) &= ~((1UL) << (D1->bits[3])));
  6250  0A2D  3014               	movlw	20
  6251  0A2E  077B               	addwf	displayDigit@D1,w
  6252  0A2F  00A0               	movwf	??_displayDigit
  6253  0A30  087C               	movf	displayDigit@D1+1,w
  6254  0A31  1803               	skipnc
  6255  0A32  3E01               	addlw	1
  6256  0A33  00A1               	movwf	??_displayDigit+1
  6257  0A34  0820               	movf	??_displayDigit,w
  6258  0A35  0084               	movwf	4
  6259  0A36  1783               	bsf	3,7
  6260  0A37  1C21               	btfss	??_displayDigit+1,0
  6261  0A38  1383               	bcf	3,7
  6262  0A39  0A00               	incf	0,w
  6263  0A3A  00A2               	movwf	??_displayDigit+2
  6264  0A3B  3001               	movlw	1
  6265  0A3C  00A3               	movwf	??_displayDigit+3
  6266  0A3D  3000               	movlw	0
  6267  0A3E  00A4               	movwf	??_displayDigit+4
  6268  0A3F  2A43               	goto	u2414
  6269  0A40                     u2415:	
  6270  0A40  1003               	clrc
  6271  0A41  0DA3               	rlf	??_displayDigit+3,f
  6272  0A42  0DA4               	rlf	??_displayDigit+4,f
  6273  0A43                     u2414:	
  6274  0A43  0BA2               	decfsz	??_displayDigit+2,f
  6275  0A44  2A40               	goto	u2415
  6276  0A45  09A3               	comf	??_displayDigit+3,f
  6277  0A46  09A4               	comf	??_displayDigit+4,f
  6278  0A47  3006               	movlw	6
  6279  0A48  077B               	addwf	displayDigit@D1,w
  6280  0A49  00A5               	movwf	??_displayDigit+5
  6281  0A4A  087C               	movf	displayDigit@D1+1,w
  6282  0A4B  1803               	skipnc
  6283  0A4C  3E01               	addlw	1
  6284  0A4D  00A6               	movwf	??_displayDigit+6
  6285  0A4E  0825               	movf	??_displayDigit+5,w
  6286  0A4F  0084               	movwf	4
  6287  0A50  1783               	bsf	3,7
  6288  0A51  1C26               	btfss	??_displayDigit+6,0
  6289  0A52  1383               	bcf	3,7
  6290  0A53  0800               	movf	0,w
  6291  0A54  00A7               	movwf	??_displayDigit+7
  6292  0A55  0A84               	incf	4,f
  6293  0A56  0800               	movf	0,w
  6294  0A57  00A8               	movwf	??_displayDigit+8
  6295  0A58  0827               	movf	??_displayDigit+7,w
  6296  0A59  0084               	movwf	4
  6297  0A5A  1783               	bsf	3,7
  6298  0A5B  1C28               	btfss	??_displayDigit+8,0
  6299  0A5C  1383               	bcf	3,7
  6300  0A5D  0823               	movf	??_displayDigit+3,w
  6301  0A5E  0580               	andwf	0,f
  6302  0A5F  0A84               	incf	4,f
  6303  0A60  0824               	movf	??_displayDigit+4,w
  6304  0A61  0580               	andwf	0,f
  6305                           
  6306                           ;lcd.c: 126: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  6307  0A62  3016               	movlw	22
  6308  0A63  077B               	addwf	displayDigit@D1,w
  6309  0A64  00A0               	movwf	??_displayDigit
  6310  0A65  087C               	movf	displayDigit@D1+1,w
  6311  0A66  1803               	skipnc
  6312  0A67  3E01               	addlw	1
  6313  0A68  00A1               	movwf	??_displayDigit+1
  6314  0A69  0820               	movf	??_displayDigit,w
  6315  0A6A  0084               	movwf	4
  6316  0A6B  1783               	bsf	3,7
  6317  0A6C  1C21               	btfss	??_displayDigit+1,0
  6318  0A6D  1383               	bcf	3,7
  6319  0A6E  0A00               	incf	0,w
  6320  0A6F  00A2               	movwf	??_displayDigit+2
  6321  0A70  3001               	movlw	1
  6322  0A71  00A3               	movwf	??_displayDigit+3
  6323  0A72  3000               	movlw	0
  6324  0A73  00A4               	movwf	??_displayDigit+4
  6325  0A74  2A78               	goto	u2424
  6326  0A75                     u2425:	
  6327  0A75  1003               	clrc
  6328  0A76  0DA3               	rlf	??_displayDigit+3,f
  6329  0A77  0DA4               	rlf	??_displayDigit+4,f
  6330  0A78                     u2424:	
  6331  0A78  0BA2               	decfsz	??_displayDigit+2,f
  6332  0A79  2A75               	goto	u2425
  6333  0A7A  09A3               	comf	??_displayDigit+3,f
  6334  0A7B  09A4               	comf	??_displayDigit+4,f
  6335  0A7C  3008               	movlw	8
  6336  0A7D  077B               	addwf	displayDigit@D1,w
  6337  0A7E  00A5               	movwf	??_displayDigit+5
  6338  0A7F  087C               	movf	displayDigit@D1+1,w
  6339  0A80  1803               	skipnc
  6340  0A81  3E01               	addlw	1
  6341  0A82  00A6               	movwf	??_displayDigit+6
  6342  0A83  0825               	movf	??_displayDigit+5,w
  6343  0A84  0084               	movwf	4
  6344  0A85  1783               	bsf	3,7
  6345  0A86  1C26               	btfss	??_displayDigit+6,0
  6346  0A87  1383               	bcf	3,7
  6347  0A88  0800               	movf	0,w
  6348  0A89  00A7               	movwf	??_displayDigit+7
  6349  0A8A  0A84               	incf	4,f
  6350  0A8B  0800               	movf	0,w
  6351  0A8C  00A8               	movwf	??_displayDigit+8
  6352  0A8D  0827               	movf	??_displayDigit+7,w
  6353  0A8E  0084               	movwf	4
  6354  0A8F  1783               	bsf	3,7
  6355  0A90  1C28               	btfss	??_displayDigit+8,0
  6356  0A91  1383               	bcf	3,7
  6357  0A92  0823               	movf	??_displayDigit+3,w
  6358  0A93  0580               	andwf	0,f
  6359  0A94  0A84               	incf	4,f
  6360  0A95  0824               	movf	??_displayDigit+4,w
  6361  0A96  0580               	andwf	0,f
  6362                           
  6363                           ;lcd.c: 127: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  6364  0A97  3018               	movlw	24
  6365  0A98  077B               	addwf	displayDigit@D1,w
  6366  0A99  00A0               	movwf	??_displayDigit
  6367  0A9A  087C               	movf	displayDigit@D1+1,w
  6368  0A9B  1803               	skipnc
  6369  0A9C  3E01               	addlw	1
  6370  0A9D  00A1               	movwf	??_displayDigit+1
  6371  0A9E  0820               	movf	??_displayDigit,w
  6372  0A9F  0084               	movwf	4
  6373  0AA0  1783               	bsf	3,7
  6374  0AA1  1C21               	btfss	??_displayDigit+1,0
  6375  0AA2  1383               	bcf	3,7
  6376  0AA3  0A00               	incf	0,w
  6377  0AA4  00A2               	movwf	??_displayDigit+2
  6378  0AA5  3001               	movlw	1
  6379  0AA6  00A3               	movwf	??_displayDigit+3
  6380  0AA7  3000               	movlw	0
  6381  0AA8  00A4               	movwf	??_displayDigit+4
  6382  0AA9  120A  158A  2AAF   	goto	u2434
  6383                           
  6384                           	psect	text5_split_7
  6385  0AAC                     u2435:	
  6386  0AAC  1003               	clrc
  6387  0AAD  0DA3               	rlf	??_displayDigit+3,f
  6388  0AAE  0DA4               	rlf	??_displayDigit+4,f
  6389  0AAF                     u2434:	
  6390  0AAF  0BA2               	decfsz	??_displayDigit+2,f
  6391  0AB0  2AAC               	goto	u2435
  6392  0AB1  300A               	movlw	10
  6393  0AB2  077B               	addwf	displayDigit@D1,w
  6394  0AB3  00A5               	movwf	??_displayDigit+5
  6395  0AB4  087C               	movf	displayDigit@D1+1,w
  6396  0AB5  1803               	skipnc
  6397  0AB6  3E01               	addlw	1
  6398  0AB7  00A6               	movwf	??_displayDigit+6
  6399  0AB8  0825               	movf	??_displayDigit+5,w
  6400  0AB9  0084               	movwf	4
  6401  0ABA  1783               	bsf	3,7
  6402  0ABB  1C26               	btfss	??_displayDigit+6,0
  6403  0ABC  1383               	bcf	3,7
  6404  0ABD  0800               	movf	0,w
  6405  0ABE  00A7               	movwf	??_displayDigit+7
  6406  0ABF  0A84               	incf	4,f
  6407  0AC0  0800               	movf	0,w
  6408  0AC1  00A8               	movwf	??_displayDigit+8
  6409  0AC2  0827               	movf	??_displayDigit+7,w
  6410  0AC3  0084               	movwf	4
  6411  0AC4  1783               	bsf	3,7
  6412  0AC5  1C28               	btfss	??_displayDigit+8,0
  6413  0AC6  1383               	bcf	3,7
  6414  0AC7  0823               	movf	??_displayDigit+3,w
  6415  0AC8  0480               	iorwf	0,f
  6416  0AC9  0A84               	incf	4,f
  6417  0ACA  0824               	movf	??_displayDigit+4,w
  6418  0ACB  0480               	iorwf	0,f
  6419                           
  6420                           ;lcd.c: 128: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  6421  0ACC  301A               	movlw	26
  6422  0ACD  077B               	addwf	displayDigit@D1,w
  6423  0ACE  00A0               	movwf	??_displayDigit
  6424  0ACF  087C               	movf	displayDigit@D1+1,w
  6425  0AD0  1803               	skipnc
  6426  0AD1  3E01               	addlw	1
  6427  0AD2  00A1               	movwf	??_displayDigit+1
  6428  0AD3  0820               	movf	??_displayDigit,w
  6429  0AD4  0084               	movwf	4
  6430  0AD5  1783               	bsf	3,7
  6431  0AD6  1C21               	btfss	??_displayDigit+1,0
  6432  0AD7  1383               	bcf	3,7
  6433  0AD8  0A00               	incf	0,w
  6434  0AD9  00A2               	movwf	??_displayDigit+2
  6435  0ADA  3001               	movlw	1
  6436  0ADB  00A3               	movwf	??_displayDigit+3
  6437  0ADC  3000               	movlw	0
  6438  0ADD  00A4               	movwf	??_displayDigit+4
  6439  0ADE  2AE2               	goto	u2444
  6440  0ADF                     u2445:	
  6441  0ADF  1003               	clrc
  6442  0AE0  0DA3               	rlf	??_displayDigit+3,f
  6443  0AE1  0DA4               	rlf	??_displayDigit+4,f
  6444  0AE2                     u2444:	
  6445  0AE2  0BA2               	decfsz	??_displayDigit+2,f
  6446  0AE3  2ADF               	goto	u2445
  6447  0AE4  300C               	movlw	12
  6448  0AE5  077B               	addwf	displayDigit@D1,w
  6449  0AE6  00A5               	movwf	??_displayDigit+5
  6450  0AE7  087C               	movf	displayDigit@D1+1,w
  6451  0AE8  1803               	skipnc
  6452  0AE9  3E01               	addlw	1
  6453  0AEA  00A6               	movwf	??_displayDigit+6
  6454  0AEB  0825               	movf	??_displayDigit+5,w
  6455  0AEC  0084               	movwf	4
  6456  0AED  1783               	bsf	3,7
  6457  0AEE  1C26               	btfss	??_displayDigit+6,0
  6458  0AEF  1383               	bcf	3,7
  6459  0AF0  0800               	movf	0,w
  6460  0AF1  00A7               	movwf	??_displayDigit+7
  6461  0AF2  0A84               	incf	4,f
  6462  0AF3  0800               	movf	0,w
  6463  0AF4  00A8               	movwf	??_displayDigit+8
  6464  0AF5  0827               	movf	??_displayDigit+7,w
  6465  0AF6  0084               	movwf	4
  6466  0AF7  1783               	bsf	3,7
  6467  0AF8  1C28               	btfss	??_displayDigit+8,0
  6468  0AF9  1383               	bcf	3,7
  6469  0AFA  0823               	movf	??_displayDigit+3,w
  6470  0AFB  0480               	iorwf	0,f
  6471  0AFC  0A84               	incf	4,f
  6472  0AFD  0824               	movf	??_displayDigit+4,w
  6473  0AFE  0480               	iorwf	0,f
  6474                           
  6475                           ;lcd.c: 129: break;
  6476  0AFF  0008               	return
  6477  0B00                     l1346:	
  6478                           ;lcd.c: 130: case 5:
  6479                           
  6480                           
  6481                           ;lcd.c: 131: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  6482  0B00  300E               	movlw	14
  6483  0B01  077B               	addwf	displayDigit@D1,w
  6484  0B02  1283               	bcf	3,5	;RP0=0, select bank0
  6485  0B03  1303               	bcf	3,6	;RP1=0, select bank0
  6486  0B04  00A0               	movwf	??_displayDigit
  6487  0B05  087C               	movf	displayDigit@D1+1,w
  6488  0B06  1803               	skipnc
  6489  0B07  3E01               	addlw	1
  6490  0B08  00A1               	movwf	??_displayDigit+1
  6491  0B09  0820               	movf	??_displayDigit,w
  6492  0B0A  0084               	movwf	4
  6493  0B0B  1783               	bsf	3,7
  6494  0B0C  1C21               	btfss	??_displayDigit+1,0
  6495  0B0D  1383               	bcf	3,7
  6496  0B0E  0A00               	incf	0,w
  6497  0B0F  00A2               	movwf	??_displayDigit+2
  6498  0B10  3001               	movlw	1
  6499  0B11  00A3               	movwf	??_displayDigit+3
  6500  0B12  3000               	movlw	0
  6501  0B13  00A4               	movwf	??_displayDigit+4
  6502  0B14  2B18               	goto	u2454
  6503  0B15                     u2455:	
  6504  0B15  1003               	clrc
  6505  0B16  0DA3               	rlf	??_displayDigit+3,f
  6506  0B17  0DA4               	rlf	??_displayDigit+4,f
  6507  0B18                     u2454:	
  6508  0B18  0BA2               	decfsz	??_displayDigit+2,f
  6509  0B19  2B15               	goto	u2455
  6510  0B1A  087B               	movf	displayDigit@D1,w
  6511  0B1B  0084               	movwf	4
  6512  0B1C  1783               	bsf	3,7
  6513  0B1D  1C7C               	btfss	displayDigit@D1+1,0
  6514  0B1E  1383               	bcf	3,7
  6515  0B1F  0800               	movf	0,w
  6516  0B20  00A5               	movwf	??_displayDigit+5
  6517  0B21  0A84               	incf	4,f
  6518  0B22  0800               	movf	0,w
  6519  0B23  00A6               	movwf	??_displayDigit+6
  6520  0B24  0825               	movf	??_displayDigit+5,w
  6521  0B25  0084               	movwf	4
  6522  0B26  1783               	bsf	3,7
  6523  0B27  1C26               	btfss	??_displayDigit+6,0
  6524  0B28  1383               	bcf	3,7
  6525  0B29  0823               	movf	??_displayDigit+3,w
  6526  0B2A  0480               	iorwf	0,f
  6527  0B2B  0A84               	incf	4,f
  6528  0B2C  0824               	movf	??_displayDigit+4,w
  6529  0B2D  0480               	iorwf	0,f
  6530                           
  6531                           ;lcd.c: 132: ((*D1->sb) &= ~((1UL) << (D1->bits[1])));
  6532  0B2E  3010               	movlw	16
  6533  0B2F  077B               	addwf	displayDigit@D1,w
  6534  0B30  00A0               	movwf	??_displayDigit
  6535  0B31  087C               	movf	displayDigit@D1+1,w
  6536  0B32  1803               	skipnc
  6537  0B33  3E01               	addlw	1
  6538  0B34  00A1               	movwf	??_displayDigit+1
  6539  0B35  0820               	movf	??_displayDigit,w
  6540  0B36  0084               	movwf	4
  6541  0B37  1783               	bsf	3,7
  6542  0B38  1C21               	btfss	??_displayDigit+1,0
  6543  0B39  1383               	bcf	3,7
  6544  0B3A  0A00               	incf	0,w
  6545  0B3B  00A2               	movwf	??_displayDigit+2
  6546  0B3C  3001               	movlw	1
  6547  0B3D  00A3               	movwf	??_displayDigit+3
  6548  0B3E  3000               	movlw	0
  6549  0B3F  00A4               	movwf	??_displayDigit+4
  6550  0B40  2B44               	goto	u2464
  6551  0B41                     u2465:	
  6552  0B41  1003               	clrc
  6553  0B42  0DA3               	rlf	??_displayDigit+3,f
  6554  0B43  0DA4               	rlf	??_displayDigit+4,f
  6555  0B44                     u2464:	
  6556  0B44  0BA2               	decfsz	??_displayDigit+2,f
  6557  0B45  2B41               	goto	u2465
  6558  0B46  09A3               	comf	??_displayDigit+3,f
  6559  0B47  09A4               	comf	??_displayDigit+4,f
  6560  0B48  3002               	movlw	2
  6561  0B49  077B               	addwf	displayDigit@D1,w
  6562  0B4A  00A5               	movwf	??_displayDigit+5
  6563  0B4B  087C               	movf	displayDigit@D1+1,w
  6564  0B4C  1803               	skipnc
  6565  0B4D  3E01               	addlw	1
  6566  0B4E  00A6               	movwf	??_displayDigit+6
  6567  0B4F  0825               	movf	??_displayDigit+5,w
  6568  0B50  0084               	movwf	4
  6569  0B51  1783               	bsf	3,7
  6570  0B52  1C26               	btfss	??_displayDigit+6,0
  6571  0B53  1383               	bcf	3,7
  6572  0B54  0800               	movf	0,w
  6573  0B55  00A7               	movwf	??_displayDigit+7
  6574  0B56  0A84               	incf	4,f
  6575  0B57  0800               	movf	0,w
  6576  0B58  00A8               	movwf	??_displayDigit+8
  6577  0B59  0827               	movf	??_displayDigit+7,w
  6578  0B5A  0084               	movwf	4
  6579  0B5B  1783               	bsf	3,7
  6580  0B5C  1C28               	btfss	??_displayDigit+8,0
  6581  0B5D  1383               	bcf	3,7
  6582  0B5E  0823               	movf	??_displayDigit+3,w
  6583  0B5F  0580               	andwf	0,f
  6584  0B60  0A84               	incf	4,f
  6585  0B61  0824               	movf	??_displayDigit+4,w
  6586  0B62  0580               	andwf	0,f
  6587                           
  6588                           ;lcd.c: 133: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  6589  0B63  3012               	movlw	18
  6590  0B64  077B               	addwf	displayDigit@D1,w
  6591  0B65  00A0               	movwf	??_displayDigit
  6592  0B66  087C               	movf	displayDigit@D1+1,w
  6593  0B67  1803               	skipnc
  6594  0B68  3E01               	addlw	1
  6595  0B69  00A1               	movwf	??_displayDigit+1
  6596  0B6A  0820               	movf	??_displayDigit,w
  6597  0B6B  0084               	movwf	4
  6598  0B6C  1783               	bsf	3,7
  6599  0B6D  1C21               	btfss	??_displayDigit+1,0
  6600  0B6E  1383               	bcf	3,7
  6601  0B6F  0A00               	incf	0,w
  6602  0B70  00A2               	movwf	??_displayDigit+2
  6603  0B71  3001               	movlw	1
  6604  0B72  00A3               	movwf	??_displayDigit+3
  6605  0B73  3000               	movlw	0
  6606  0B74  00A4               	movwf	??_displayDigit+4
  6607  0B75  2B79               	goto	u2474
  6608  0B76                     u2475:	
  6609  0B76  1003               	clrc
  6610  0B77  0DA3               	rlf	??_displayDigit+3,f
  6611  0B78  0DA4               	rlf	??_displayDigit+4,f
  6612  0B79                     u2474:	
  6613  0B79  0BA2               	decfsz	??_displayDigit+2,f
  6614  0B7A  2B76               	goto	u2475
  6615  0B7B  3004               	movlw	4
  6616  0B7C  077B               	addwf	displayDigit@D1,w
  6617  0B7D  00A5               	movwf	??_displayDigit+5
  6618  0B7E  087C               	movf	displayDigit@D1+1,w
  6619  0B7F  1803               	skipnc
  6620  0B80  3E01               	addlw	1
  6621  0B81  00A6               	movwf	??_displayDigit+6
  6622  0B82  0825               	movf	??_displayDigit+5,w
  6623  0B83  0084               	movwf	4
  6624  0B84  1783               	bsf	3,7
  6625  0B85  1C26               	btfss	??_displayDigit+6,0
  6626  0B86  1383               	bcf	3,7
  6627  0B87  0800               	movf	0,w
  6628  0B88  00A7               	movwf	??_displayDigit+7
  6629  0B89  0A84               	incf	4,f
  6630  0B8A  0800               	movf	0,w
  6631  0B8B  00A8               	movwf	??_displayDigit+8
  6632  0B8C  0827               	movf	??_displayDigit+7,w
  6633  0B8D  0084               	movwf	4
  6634  0B8E  1783               	bsf	3,7
  6635  0B8F  1C28               	btfss	??_displayDigit+8,0
  6636  0B90  1383               	bcf	3,7
  6637  0B91  0823               	movf	??_displayDigit+3,w
  6638  0B92  0480               	iorwf	0,f
  6639  0B93  0A84               	incf	4,f
  6640  0B94  0824               	movf	??_displayDigit+4,w
  6641  0B95  0480               	iorwf	0,f
  6642                           
  6643                           ;lcd.c: 134: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  6644  0B96  3014               	movlw	20
  6645  0B97  077B               	addwf	displayDigit@D1,w
  6646  0B98  00A0               	movwf	??_displayDigit
  6647  0B99  087C               	movf	displayDigit@D1+1,w
  6648  0B9A  1803               	skipnc
  6649  0B9B  3E01               	addlw	1
  6650  0B9C  00A1               	movwf	??_displayDigit+1
  6651  0B9D  0820               	movf	??_displayDigit,w
  6652  0B9E  0084               	movwf	4
  6653  0B9F  1783               	bsf	3,7
  6654  0BA0  1C21               	btfss	??_displayDigit+1,0
  6655  0BA1  1383               	bcf	3,7
  6656  0BA2  0A00               	incf	0,w
  6657  0BA3  00A2               	movwf	??_displayDigit+2
  6658  0BA4  3001               	movlw	1
  6659  0BA5  00A3               	movwf	??_displayDigit+3
  6660  0BA6  3000               	movlw	0
  6661  0BA7  00A4               	movwf	??_displayDigit+4
  6662  0BA8  2BAC               	goto	u2484
  6663  0BA9                     u2485:	
  6664  0BA9  1003               	clrc
  6665  0BAA  0DA3               	rlf	??_displayDigit+3,f
  6666  0BAB  0DA4               	rlf	??_displayDigit+4,f
  6667  0BAC                     u2484:	
  6668  0BAC  0BA2               	decfsz	??_displayDigit+2,f
  6669  0BAD  2BA9               	goto	u2485
  6670  0BAE  3006               	movlw	6
  6671  0BAF  077B               	addwf	displayDigit@D1,w
  6672  0BB0  00A5               	movwf	??_displayDigit+5
  6673  0BB1  087C               	movf	displayDigit@D1+1,w
  6674  0BB2  1803               	skipnc
  6675  0BB3  3E01               	addlw	1
  6676  0BB4  00A6               	movwf	??_displayDigit+6
  6677  0BB5  0825               	movf	??_displayDigit+5,w
  6678  0BB6  0084               	movwf	4
  6679  0BB7  1783               	bsf	3,7
  6680  0BB8  1C26               	btfss	??_displayDigit+6,0
  6681  0BB9  1383               	bcf	3,7
  6682  0BBA  0800               	movf	0,w
  6683  0BBB  00A7               	movwf	??_displayDigit+7
  6684  0BBC  0A84               	incf	4,f
  6685  0BBD  0800               	movf	0,w
  6686  0BBE  00A8               	movwf	??_displayDigit+8
  6687  0BBF  0827               	movf	??_displayDigit+7,w
  6688  0BC0  0084               	movwf	4
  6689  0BC1  1783               	bsf	3,7
  6690  0BC2  1C28               	btfss	??_displayDigit+8,0
  6691  0BC3  1383               	bcf	3,7
  6692  0BC4  0823               	movf	??_displayDigit+3,w
  6693  0BC5  0480               	iorwf	0,f
  6694  0BC6  0A84               	incf	4,f
  6695  0BC7  0824               	movf	??_displayDigit+4,w
  6696  0BC8  0480               	iorwf	0,f
  6697                           
  6698                           ;lcd.c: 135: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  6699  0BC9  3016               	movlw	22
  6700  0BCA  077B               	addwf	displayDigit@D1,w
  6701  0BCB  00A0               	movwf	??_displayDigit
  6702  0BCC  087C               	movf	displayDigit@D1+1,w
  6703  0BCD  1803               	skipnc
  6704  0BCE  3E01               	addlw	1
  6705  0BCF  00A1               	movwf	??_displayDigit+1
  6706  0BD0  0820               	movf	??_displayDigit,w
  6707  0BD1  0084               	movwf	4
  6708  0BD2  1783               	bsf	3,7
  6709  0BD3  1C21               	btfss	??_displayDigit+1,0
  6710  0BD4  1383               	bcf	3,7
  6711  0BD5  0A00               	incf	0,w
  6712  0BD6  00A2               	movwf	??_displayDigit+2
  6713  0BD7  3001               	movlw	1
  6714  0BD8  00A3               	movwf	??_displayDigit+3
  6715  0BD9  3000               	movlw	0
  6716  0BDA  00A4               	movwf	??_displayDigit+4
  6717  0BDB  120A  118A  283C   	goto	u2494
  6718                           
  6719                           	psect	text5_split_8
  6720  0039                     u2495:	
  6721  0039  1003               	clrc
  6722  003A  0DA3               	rlf	??_displayDigit+3,f
  6723  003B  0DA4               	rlf	??_displayDigit+4,f
  6724  003C                     u2494:	
  6725  003C  0BA2               	decfsz	??_displayDigit+2,f
  6726  003D  2839               	goto	u2495
  6727  003E  09A3               	comf	??_displayDigit+3,f
  6728  003F  09A4               	comf	??_displayDigit+4,f
  6729  0040  3008               	movlw	8
  6730  0041  077B               	addwf	displayDigit@D1,w
  6731  0042  00A5               	movwf	??_displayDigit+5
  6732  0043  087C               	movf	displayDigit@D1+1,w
  6733  0044  1803               	skipnc
  6734  0045  3E01               	addlw	1
  6735  0046  00A6               	movwf	??_displayDigit+6
  6736  0047  0825               	movf	??_displayDigit+5,w
  6737  0048  0084               	movwf	4
  6738  0049  1783               	bsf	3,7
  6739  004A  1C26               	btfss	??_displayDigit+6,0
  6740  004B  1383               	bcf	3,7
  6741  004C  0800               	movf	0,w
  6742  004D  00A7               	movwf	??_displayDigit+7
  6743  004E  0A84               	incf	4,f
  6744  004F  0800               	movf	0,w
  6745  0050  00A8               	movwf	??_displayDigit+8
  6746  0051  0827               	movf	??_displayDigit+7,w
  6747  0052  0084               	movwf	4
  6748  0053  1783               	bsf	3,7
  6749  0054  1C28               	btfss	??_displayDigit+8,0
  6750  0055  1383               	bcf	3,7
  6751  0056  0823               	movf	??_displayDigit+3,w
  6752  0057  0580               	andwf	0,f
  6753  0058  0A84               	incf	4,f
  6754  0059  0824               	movf	??_displayDigit+4,w
  6755  005A  0580               	andwf	0,f
  6756                           
  6757                           ;lcd.c: 136: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  6758  005B  3018               	movlw	24
  6759  005C  077B               	addwf	displayDigit@D1,w
  6760  005D  00A0               	movwf	??_displayDigit
  6761  005E  087C               	movf	displayDigit@D1+1,w
  6762  005F  1803               	skipnc
  6763  0060  3E01               	addlw	1
  6764  0061  00A1               	movwf	??_displayDigit+1
  6765  0062  0820               	movf	??_displayDigit,w
  6766  0063  0084               	movwf	4
  6767  0064  1783               	bsf	3,7
  6768  0065  1C21               	btfss	??_displayDigit+1,0
  6769  0066  1383               	bcf	3,7
  6770  0067  0A00               	incf	0,w
  6771  0068  00A2               	movwf	??_displayDigit+2
  6772  0069  3001               	movlw	1
  6773  006A  00A3               	movwf	??_displayDigit+3
  6774  006B  3000               	movlw	0
  6775  006C  00A4               	movwf	??_displayDigit+4
  6776  006D  2871               	goto	u2504
  6777  006E                     u2505:	
  6778  006E  1003               	clrc
  6779  006F  0DA3               	rlf	??_displayDigit+3,f
  6780  0070  0DA4               	rlf	??_displayDigit+4,f
  6781  0071                     u2504:	
  6782  0071  0BA2               	decfsz	??_displayDigit+2,f
  6783  0072  286E               	goto	u2505
  6784  0073  300A               	movlw	10
  6785  0074  077B               	addwf	displayDigit@D1,w
  6786  0075  00A5               	movwf	??_displayDigit+5
  6787  0076  087C               	movf	displayDigit@D1+1,w
  6788  0077  1803               	skipnc
  6789  0078  3E01               	addlw	1
  6790  0079  00A6               	movwf	??_displayDigit+6
  6791  007A  0825               	movf	??_displayDigit+5,w
  6792  007B  0084               	movwf	4
  6793  007C  1783               	bsf	3,7
  6794  007D  1C26               	btfss	??_displayDigit+6,0
  6795  007E  1383               	bcf	3,7
  6796  007F  0800               	movf	0,w
  6797  0080  00A7               	movwf	??_displayDigit+7
  6798  0081  0A84               	incf	4,f
  6799  0082  0800               	movf	0,w
  6800  0083  00A8               	movwf	??_displayDigit+8
  6801  0084  0827               	movf	??_displayDigit+7,w
  6802  0085  0084               	movwf	4
  6803  0086  1783               	bsf	3,7
  6804  0087  1C28               	btfss	??_displayDigit+8,0
  6805  0088  1383               	bcf	3,7
  6806  0089  0823               	movf	??_displayDigit+3,w
  6807  008A  0480               	iorwf	0,f
  6808  008B  0A84               	incf	4,f
  6809  008C  0824               	movf	??_displayDigit+4,w
  6810  008D  0480               	iorwf	0,f
  6811                           
  6812                           ;lcd.c: 137: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  6813  008E  301A               	movlw	26
  6814  008F  077B               	addwf	displayDigit@D1,w
  6815  0090  00A0               	movwf	??_displayDigit
  6816  0091  087C               	movf	displayDigit@D1+1,w
  6817  0092  1803               	skipnc
  6818  0093  3E01               	addlw	1
  6819  0094  00A1               	movwf	??_displayDigit+1
  6820  0095  0820               	movf	??_displayDigit,w
  6821  0096  0084               	movwf	4
  6822  0097  1783               	bsf	3,7
  6823  0098  1C21               	btfss	??_displayDigit+1,0
  6824  0099  1383               	bcf	3,7
  6825  009A  0A00               	incf	0,w
  6826  009B  00A2               	movwf	??_displayDigit+2
  6827  009C  3001               	movlw	1
  6828  009D  00A3               	movwf	??_displayDigit+3
  6829  009E  3000               	movlw	0
  6830  009F  00A4               	movwf	??_displayDigit+4
  6831  00A0  28A4               	goto	u2514
  6832  00A1                     u2515:	
  6833  00A1  1003               	clrc
  6834  00A2  0DA3               	rlf	??_displayDigit+3,f
  6835  00A3  0DA4               	rlf	??_displayDigit+4,f
  6836  00A4                     u2514:	
  6837  00A4  0BA2               	decfsz	??_displayDigit+2,f
  6838  00A5  28A1               	goto	u2515
  6839  00A6  300C               	movlw	12
  6840  00A7  077B               	addwf	displayDigit@D1,w
  6841  00A8  00A5               	movwf	??_displayDigit+5
  6842  00A9  087C               	movf	displayDigit@D1+1,w
  6843  00AA  1803               	skipnc
  6844  00AB  3E01               	addlw	1
  6845  00AC  00A6               	movwf	??_displayDigit+6
  6846  00AD  0825               	movf	??_displayDigit+5,w
  6847  00AE  0084               	movwf	4
  6848  00AF  1783               	bsf	3,7
  6849  00B0  1C26               	btfss	??_displayDigit+6,0
  6850  00B1  1383               	bcf	3,7
  6851  00B2  0800               	movf	0,w
  6852  00B3  00A7               	movwf	??_displayDigit+7
  6853  00B4  0A84               	incf	4,f
  6854  00B5  0800               	movf	0,w
  6855  00B6  00A8               	movwf	??_displayDigit+8
  6856  00B7  0827               	movf	??_displayDigit+7,w
  6857  00B8  0084               	movwf	4
  6858  00B9  1783               	bsf	3,7
  6859  00BA  1C28               	btfss	??_displayDigit+8,0
  6860  00BB  1383               	bcf	3,7
  6861  00BC  0823               	movf	??_displayDigit+3,w
  6862  00BD  0480               	iorwf	0,f
  6863  00BE  0A84               	incf	4,f
  6864  00BF  0824               	movf	??_displayDigit+4,w
  6865  00C0  0480               	iorwf	0,f
  6866                           
  6867                           ;lcd.c: 138: break;
  6868  00C1  0008               	return
  6869  00C2                     l1348:	
  6870                           ;lcd.c: 139: case 6:
  6871                           
  6872                           
  6873                           ;lcd.c: 140: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  6874  00C2  300E               	movlw	14
  6875  00C3  077B               	addwf	displayDigit@D1,w
  6876  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  6877  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  6878  00C6  00A0               	movwf	??_displayDigit
  6879  00C7  087C               	movf	displayDigit@D1+1,w
  6880  00C8  1803               	skipnc
  6881  00C9  3E01               	addlw	1
  6882  00CA  00A1               	movwf	??_displayDigit+1
  6883  00CB  0820               	movf	??_displayDigit,w
  6884  00CC  0084               	movwf	4
  6885  00CD  1783               	bsf	3,7
  6886  00CE  1C21               	btfss	??_displayDigit+1,0
  6887  00CF  1383               	bcf	3,7
  6888  00D0  0A00               	incf	0,w
  6889  00D1  00A2               	movwf	??_displayDigit+2
  6890  00D2  3001               	movlw	1
  6891  00D3  00A3               	movwf	??_displayDigit+3
  6892  00D4  3000               	movlw	0
  6893  00D5  00A4               	movwf	??_displayDigit+4
  6894  00D6  28DA               	goto	u2524
  6895  00D7                     u2525:	
  6896  00D7  1003               	clrc
  6897  00D8  0DA3               	rlf	??_displayDigit+3,f
  6898  00D9  0DA4               	rlf	??_displayDigit+4,f
  6899  00DA                     u2524:	
  6900  00DA  0BA2               	decfsz	??_displayDigit+2,f
  6901  00DB  28D7               	goto	u2525
  6902  00DC  087B               	movf	displayDigit@D1,w
  6903  00DD  0084               	movwf	4
  6904  00DE  1783               	bsf	3,7
  6905  00DF  1C7C               	btfss	displayDigit@D1+1,0
  6906  00E0  1383               	bcf	3,7
  6907  00E1  0800               	movf	0,w
  6908  00E2  00A5               	movwf	??_displayDigit+5
  6909  00E3  0A84               	incf	4,f
  6910  00E4  0800               	movf	0,w
  6911  00E5  00A6               	movwf	??_displayDigit+6
  6912  00E6  0825               	movf	??_displayDigit+5,w
  6913  00E7  0084               	movwf	4
  6914  00E8  1783               	bsf	3,7
  6915  00E9  1C26               	btfss	??_displayDigit+6,0
  6916  00EA  1383               	bcf	3,7
  6917  00EB  0823               	movf	??_displayDigit+3,w
  6918  00EC  0480               	iorwf	0,f
  6919  00ED  0A84               	incf	4,f
  6920  00EE  0824               	movf	??_displayDigit+4,w
  6921  00EF  0480               	iorwf	0,f
  6922                           
  6923                           ;lcd.c: 141: ((*D1->sb) &= ~((1UL) << (D1->bits[1])));
  6924  00F0  3010               	movlw	16
  6925  00F1  077B               	addwf	displayDigit@D1,w
  6926  00F2  00A0               	movwf	??_displayDigit
  6927  00F3  087C               	movf	displayDigit@D1+1,w
  6928  00F4  1803               	skipnc
  6929  00F5  3E01               	addlw	1
  6930  00F6  00A1               	movwf	??_displayDigit+1
  6931  00F7  0820               	movf	??_displayDigit,w
  6932  00F8  0084               	movwf	4
  6933  00F9  1783               	bsf	3,7
  6934  00FA  1C21               	btfss	??_displayDigit+1,0
  6935  00FB  1383               	bcf	3,7
  6936  00FC  0A00               	incf	0,w
  6937  00FD  00A2               	movwf	??_displayDigit+2
  6938  00FE  3001               	movlw	1
  6939  00FF  00A3               	movwf	??_displayDigit+3
  6940  0100  3000               	movlw	0
  6941  0101  00A4               	movwf	??_displayDigit+4
  6942  0102  2906               	goto	u2534
  6943  0103                     u2535:	
  6944  0103  1003               	clrc
  6945  0104  0DA3               	rlf	??_displayDigit+3,f
  6946  0105  0DA4               	rlf	??_displayDigit+4,f
  6947  0106                     u2534:	
  6948  0106  0BA2               	decfsz	??_displayDigit+2,f
  6949  0107  2903               	goto	u2535
  6950  0108  09A3               	comf	??_displayDigit+3,f
  6951  0109  09A4               	comf	??_displayDigit+4,f
  6952  010A  3002               	movlw	2
  6953  010B  077B               	addwf	displayDigit@D1,w
  6954  010C  00A5               	movwf	??_displayDigit+5
  6955  010D  087C               	movf	displayDigit@D1+1,w
  6956  010E  1803               	skipnc
  6957  010F  3E01               	addlw	1
  6958  0110  00A6               	movwf	??_displayDigit+6
  6959  0111  0825               	movf	??_displayDigit+5,w
  6960  0112  0084               	movwf	4
  6961  0113  1783               	bsf	3,7
  6962  0114  1C26               	btfss	??_displayDigit+6,0
  6963  0115  1383               	bcf	3,7
  6964  0116  0800               	movf	0,w
  6965  0117  00A7               	movwf	??_displayDigit+7
  6966  0118  0A84               	incf	4,f
  6967  0119  0800               	movf	0,w
  6968  011A  00A8               	movwf	??_displayDigit+8
  6969  011B  0827               	movf	??_displayDigit+7,w
  6970  011C  0084               	movwf	4
  6971  011D  1783               	bsf	3,7
  6972  011E  1C28               	btfss	??_displayDigit+8,0
  6973  011F  1383               	bcf	3,7
  6974  0120  0823               	movf	??_displayDigit+3,w
  6975  0121  0580               	andwf	0,f
  6976  0122  0A84               	incf	4,f
  6977  0123  0824               	movf	??_displayDigit+4,w
  6978  0124  0580               	andwf	0,f
  6979                           
  6980                           ;lcd.c: 142: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  6981  0125  3012               	movlw	18
  6982  0126  077B               	addwf	displayDigit@D1,w
  6983  0127  00A0               	movwf	??_displayDigit
  6984  0128  087C               	movf	displayDigit@D1+1,w
  6985  0129  1803               	skipnc
  6986  012A  3E01               	addlw	1
  6987  012B  00A1               	movwf	??_displayDigit+1
  6988  012C  0820               	movf	??_displayDigit,w
  6989  012D  0084               	movwf	4
  6990  012E  1783               	bsf	3,7
  6991  012F  1C21               	btfss	??_displayDigit+1,0
  6992  0130  1383               	bcf	3,7
  6993  0131  0A00               	incf	0,w
  6994  0132  00A2               	movwf	??_displayDigit+2
  6995  0133  3001               	movlw	1
  6996  0134  00A3               	movwf	??_displayDigit+3
  6997  0135  3000               	movlw	0
  6998  0136  00A4               	movwf	??_displayDigit+4
  6999  0137  293B               	goto	u2544
  7000  0138                     u2545:	
  7001  0138  1003               	clrc
  7002  0139  0DA3               	rlf	??_displayDigit+3,f
  7003  013A  0DA4               	rlf	??_displayDigit+4,f
  7004  013B                     u2544:	
  7005  013B  0BA2               	decfsz	??_displayDigit+2,f
  7006  013C  2938               	goto	u2545
  7007  013D  3004               	movlw	4
  7008  013E  077B               	addwf	displayDigit@D1,w
  7009  013F  00A5               	movwf	??_displayDigit+5
  7010  0140  087C               	movf	displayDigit@D1+1,w
  7011  0141  1803               	skipnc
  7012  0142  3E01               	addlw	1
  7013  0143  00A6               	movwf	??_displayDigit+6
  7014  0144  0825               	movf	??_displayDigit+5,w
  7015  0145  0084               	movwf	4
  7016  0146  1783               	bsf	3,7
  7017  0147  1C26               	btfss	??_displayDigit+6,0
  7018  0148  1383               	bcf	3,7
  7019  0149  0800               	movf	0,w
  7020  014A  00A7               	movwf	??_displayDigit+7
  7021  014B  0A84               	incf	4,f
  7022  014C  0800               	movf	0,w
  7023  014D  00A8               	movwf	??_displayDigit+8
  7024  014E  0827               	movf	??_displayDigit+7,w
  7025  014F  0084               	movwf	4
  7026  0150  1783               	bsf	3,7
  7027  0151  1C28               	btfss	??_displayDigit+8,0
  7028  0152  1383               	bcf	3,7
  7029  0153  0823               	movf	??_displayDigit+3,w
  7030  0154  0480               	iorwf	0,f
  7031  0155  0A84               	incf	4,f
  7032  0156  0824               	movf	??_displayDigit+4,w
  7033  0157  0480               	iorwf	0,f
  7034                           
  7035                           ;lcd.c: 143: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  7036  0158  3014               	movlw	20
  7037  0159  077B               	addwf	displayDigit@D1,w
  7038  015A  00A0               	movwf	??_displayDigit
  7039  015B  087C               	movf	displayDigit@D1+1,w
  7040  015C  1803               	skipnc
  7041  015D  3E01               	addlw	1
  7042  015E  00A1               	movwf	??_displayDigit+1
  7043  015F  0820               	movf	??_displayDigit,w
  7044  0160  0084               	movwf	4
  7045  0161  1783               	bsf	3,7
  7046  0162  1C21               	btfss	??_displayDigit+1,0
  7047  0163  1383               	bcf	3,7
  7048  0164  0A00               	incf	0,w
  7049  0165  00A2               	movwf	??_displayDigit+2
  7050  0166  3001               	movlw	1
  7051  0167  00A3               	movwf	??_displayDigit+3
  7052  0168  3000               	movlw	0
  7053  0169  00A4               	movwf	??_displayDigit+4
  7054  016A  296E               	goto	u2554
  7055  016B                     u2555:	
  7056  016B  1003               	clrc
  7057  016C  0DA3               	rlf	??_displayDigit+3,f
  7058  016D  0DA4               	rlf	??_displayDigit+4,f
  7059  016E                     u2554:	
  7060  016E  0BA2               	decfsz	??_displayDigit+2,f
  7061  016F  296B               	goto	u2555
  7062  0170  3006               	movlw	6
  7063  0171  077B               	addwf	displayDigit@D1,w
  7064  0172  00A5               	movwf	??_displayDigit+5
  7065  0173  087C               	movf	displayDigit@D1+1,w
  7066  0174  1803               	skipnc
  7067  0175  3E01               	addlw	1
  7068  0176  00A6               	movwf	??_displayDigit+6
  7069  0177  0825               	movf	??_displayDigit+5,w
  7070  0178  0084               	movwf	4
  7071  0179  1783               	bsf	3,7
  7072  017A  1C26               	btfss	??_displayDigit+6,0
  7073  017B  1383               	bcf	3,7
  7074  017C  0800               	movf	0,w
  7075  017D  00A7               	movwf	??_displayDigit+7
  7076  017E  0A84               	incf	4,f
  7077  017F  0800               	movf	0,w
  7078  0180  00A8               	movwf	??_displayDigit+8
  7079  0181  0827               	movf	??_displayDigit+7,w
  7080  0182  0084               	movwf	4
  7081  0183  1783               	bsf	3,7
  7082  0184  1C28               	btfss	??_displayDigit+8,0
  7083  0185  1383               	bcf	3,7
  7084  0186  0823               	movf	??_displayDigit+3,w
  7085  0187  0480               	iorwf	0,f
  7086  0188  0A84               	incf	4,f
  7087  0189  0824               	movf	??_displayDigit+4,w
  7088  018A  0480               	iorwf	0,f
  7089                           
  7090                           ;lcd.c: 144: ((*D1->se) |= (1UL) << (D1->bits[4]));
  7091  018B  3016               	movlw	22
  7092  018C  077B               	addwf	displayDigit@D1,w
  7093  018D  00A0               	movwf	??_displayDigit
  7094  018E  087C               	movf	displayDigit@D1+1,w
  7095  018F  1803               	skipnc
  7096  0190  3E01               	addlw	1
  7097  0191  00A1               	movwf	??_displayDigit+1
  7098  0192  0820               	movf	??_displayDigit,w
  7099  0193  0084               	movwf	4
  7100  0194  1783               	bsf	3,7
  7101  0195  1C21               	btfss	??_displayDigit+1,0
  7102  0196  1383               	bcf	3,7
  7103  0197  0A00               	incf	0,w
  7104  0198  00A2               	movwf	??_displayDigit+2
  7105  0199  3001               	movlw	1
  7106  019A  00A3               	movwf	??_displayDigit+3
  7107  019B  3000               	movlw	0
  7108  019C  00A4               	movwf	??_displayDigit+4
  7109  019D  29A1               	goto	u2564
  7110  019E                     u2565:	
  7111  019E  1003               	clrc
  7112  019F  0DA3               	rlf	??_displayDigit+3,f
  7113  01A0  0DA4               	rlf	??_displayDigit+4,f
  7114  01A1                     u2564:	
  7115  01A1  0BA2               	decfsz	??_displayDigit+2,f
  7116  01A2  299E               	goto	u2565
  7117  01A3  3008               	movlw	8
  7118  01A4  077B               	addwf	displayDigit@D1,w
  7119  01A5  00A5               	movwf	??_displayDigit+5
  7120  01A6  087C               	movf	displayDigit@D1+1,w
  7121  01A7  1803               	skipnc
  7122  01A8  3E01               	addlw	1
  7123  01A9  00A6               	movwf	??_displayDigit+6
  7124  01AA  0825               	movf	??_displayDigit+5,w
  7125  01AB  0084               	movwf	4
  7126  01AC  1783               	bsf	3,7
  7127  01AD  1C26               	btfss	??_displayDigit+6,0
  7128  01AE  1383               	bcf	3,7
  7129  01AF  0800               	movf	0,w
  7130  01B0  00A7               	movwf	??_displayDigit+7
  7131  01B1  0A84               	incf	4,f
  7132  01B2  0800               	movf	0,w
  7133  01B3  00A8               	movwf	??_displayDigit+8
  7134  01B4  0827               	movf	??_displayDigit+7,w
  7135  01B5  0084               	movwf	4
  7136  01B6  1783               	bsf	3,7
  7137  01B7  1C28               	btfss	??_displayDigit+8,0
  7138  01B8  1383               	bcf	3,7
  7139  01B9  0823               	movf	??_displayDigit+3,w
  7140  01BA  0480               	iorwf	0,f
  7141  01BB  0A84               	incf	4,f
  7142  01BC  0824               	movf	??_displayDigit+4,w
  7143  01BD  0480               	iorwf	0,f
  7144                           
  7145                           ;lcd.c: 145: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  7146  01BE  3018               	movlw	24
  7147  01BF  077B               	addwf	displayDigit@D1,w
  7148  01C0  00A0               	movwf	??_displayDigit
  7149  01C1  087C               	movf	displayDigit@D1+1,w
  7150  01C2  1803               	skipnc
  7151  01C3  3E01               	addlw	1
  7152  01C4  00A1               	movwf	??_displayDigit+1
  7153  01C5  0820               	movf	??_displayDigit,w
  7154  01C6  0084               	movwf	4
  7155  01C7  1783               	bsf	3,7
  7156  01C8  1C21               	btfss	??_displayDigit+1,0
  7157  01C9  1383               	bcf	3,7
  7158  01CA  0A00               	incf	0,w
  7159  01CB  00A2               	movwf	??_displayDigit+2
  7160  01CC  3001               	movlw	1
  7161  01CD  00A3               	movwf	??_displayDigit+3
  7162  01CE  3000               	movlw	0
  7163  01CF  00A4               	movwf	??_displayDigit+4
  7164  01D0  29D4               	goto	u2574
  7165  01D1                     u2575:	
  7166  01D1  1003               	clrc
  7167  01D2  0DA3               	rlf	??_displayDigit+3,f
  7168  01D3  0DA4               	rlf	??_displayDigit+4,f
  7169  01D4                     u2574:	
  7170  01D4  0BA2               	decfsz	??_displayDigit+2,f
  7171  01D5  29D1               	goto	u2575
  7172  01D6  300A               	movlw	10
  7173  01D7  077B               	addwf	displayDigit@D1,w
  7174  01D8  00A5               	movwf	??_displayDigit+5
  7175  01D9  087C               	movf	displayDigit@D1+1,w
  7176  01DA  1803               	skipnc
  7177  01DB  3E01               	addlw	1
  7178  01DC  00A6               	movwf	??_displayDigit+6
  7179  01DD  0825               	movf	??_displayDigit+5,w
  7180  01DE  0084               	movwf	4
  7181  01DF  1783               	bsf	3,7
  7182  01E0  1C26               	btfss	??_displayDigit+6,0
  7183  01E1  1383               	bcf	3,7
  7184  01E2  0800               	movf	0,w
  7185  01E3  00A7               	movwf	??_displayDigit+7
  7186  01E4  0A84               	incf	4,f
  7187  01E5  0800               	movf	0,w
  7188  01E6  00A8               	movwf	??_displayDigit+8
  7189  01E7  0827               	movf	??_displayDigit+7,w
  7190  01E8  0084               	movwf	4
  7191  01E9  1783               	bsf	3,7
  7192  01EA  1C28               	btfss	??_displayDigit+8,0
  7193  01EB  1383               	bcf	3,7
  7194  01EC  0823               	movf	??_displayDigit+3,w
  7195  01ED  0480               	iorwf	0,f
  7196  01EE  0A84               	incf	4,f
  7197  01EF  0824               	movf	??_displayDigit+4,w
  7198  01F0  0480               	iorwf	0,f
  7199                           
  7200                           ;lcd.c: 146: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  7201  01F1  301A               	movlw	26
  7202  01F2  077B               	addwf	displayDigit@D1,w
  7203  01F3  00A0               	movwf	??_displayDigit
  7204  01F4  087C               	movf	displayDigit@D1+1,w
  7205  01F5  1803               	skipnc
  7206  01F6  3E01               	addlw	1
  7207  01F7  00A1               	movwf	??_displayDigit+1
  7208  01F8  0820               	movf	??_displayDigit,w
  7209  01F9  0084               	movwf	4
  7210  01FA  1783               	bsf	3,7
  7211  01FB  1C21               	btfss	??_displayDigit+1,0
  7212  01FC  1383               	bcf	3,7
  7213  01FD  0A00               	incf	0,w
  7214  01FE  00A2               	movwf	??_displayDigit+2
  7215  01FF  3001               	movlw	1
  7216  0200  00A3               	movwf	??_displayDigit+3
  7217  0201  3000               	movlw	0
  7218  0202  00A4               	movwf	??_displayDigit+4
  7219  0203  2A07               	goto	u2584
  7220  0204                     u2585:	
  7221  0204  1003               	clrc
  7222  0205  0DA3               	rlf	??_displayDigit+3,f
  7223  0206  0DA4               	rlf	??_displayDigit+4,f
  7224  0207                     u2584:	
  7225  0207  0BA2               	decfsz	??_displayDigit+2,f
  7226  0208  2A04               	goto	u2585
  7227  0209  300C               	movlw	12
  7228  020A  077B               	addwf	displayDigit@D1,w
  7229  020B  00A5               	movwf	??_displayDigit+5
  7230  020C  087C               	movf	displayDigit@D1+1,w
  7231  020D  1803               	skipnc
  7232  020E  3E01               	addlw	1
  7233  020F  00A6               	movwf	??_displayDigit+6
  7234  0210  0825               	movf	??_displayDigit+5,w
  7235  0211  0084               	movwf	4
  7236  0212  1783               	bsf	3,7
  7237  0213  1C26               	btfss	??_displayDigit+6,0
  7238  0214  1383               	bcf	3,7
  7239  0215  0800               	movf	0,w
  7240  0216  00A7               	movwf	??_displayDigit+7
  7241  0217  0A84               	incf	4,f
  7242  0218  0800               	movf	0,w
  7243  0219  00A8               	movwf	??_displayDigit+8
  7244  021A  0827               	movf	??_displayDigit+7,w
  7245  021B  0084               	movwf	4
  7246  021C  1783               	bsf	3,7
  7247  021D  1C28               	btfss	??_displayDigit+8,0
  7248  021E  1383               	bcf	3,7
  7249  021F  0823               	movf	??_displayDigit+3,w
  7250  0220  0480               	iorwf	0,f
  7251  0221  0A84               	incf	4,f
  7252  0222  0824               	movf	??_displayDigit+4,w
  7253  0223  0480               	iorwf	0,f
  7254                           
  7255                           ;lcd.c: 147: break;
  7256  0224  0008               	return
  7257  0225                     l1350:	
  7258                           ;lcd.c: 148: case 7:
  7259                           
  7260                           
  7261                           ;lcd.c: 149: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  7262  0225  300E               	movlw	14
  7263  0226  077B               	addwf	displayDigit@D1,w
  7264  0227  1283               	bcf	3,5	;RP0=0, select bank0
  7265  0228  1303               	bcf	3,6	;RP1=0, select bank0
  7266  0229  00A0               	movwf	??_displayDigit
  7267  022A  087C               	movf	displayDigit@D1+1,w
  7268  022B  1803               	skipnc
  7269  022C  3E01               	addlw	1
  7270  022D  00A1               	movwf	??_displayDigit+1
  7271  022E  0820               	movf	??_displayDigit,w
  7272  022F  0084               	movwf	4
  7273  0230  1783               	bsf	3,7
  7274  0231  1C21               	btfss	??_displayDigit+1,0
  7275  0232  1383               	bcf	3,7
  7276  0233  0A00               	incf	0,w
  7277  0234  00A2               	movwf	??_displayDigit+2
  7278  0235  3001               	movlw	1
  7279  0236  00A3               	movwf	??_displayDigit+3
  7280  0237  3000               	movlw	0
  7281  0238  00A4               	movwf	??_displayDigit+4
  7282  0239  2A3D               	goto	u2594
  7283  023A                     u2595:	
  7284  023A  1003               	clrc
  7285  023B  0DA3               	rlf	??_displayDigit+3,f
  7286  023C  0DA4               	rlf	??_displayDigit+4,f
  7287  023D                     u2594:	
  7288  023D  0BA2               	decfsz	??_displayDigit+2,f
  7289  023E  2A3A               	goto	u2595
  7290  023F  087B               	movf	displayDigit@D1,w
  7291  0240  0084               	movwf	4
  7292  0241  1783               	bsf	3,7
  7293  0242  1C7C               	btfss	displayDigit@D1+1,0
  7294  0243  1383               	bcf	3,7
  7295  0244  0800               	movf	0,w
  7296  0245  00A5               	movwf	??_displayDigit+5
  7297  0246  0A84               	incf	4,f
  7298  0247  0800               	movf	0,w
  7299  0248  00A6               	movwf	??_displayDigit+6
  7300  0249  0825               	movf	??_displayDigit+5,w
  7301  024A  0084               	movwf	4
  7302  024B  1783               	bsf	3,7
  7303  024C  1C26               	btfss	??_displayDigit+6,0
  7304  024D  1383               	bcf	3,7
  7305  024E  0823               	movf	??_displayDigit+3,w
  7306  024F  0480               	iorwf	0,f
  7307  0250  0A84               	incf	4,f
  7308  0251  0824               	movf	??_displayDigit+4,w
  7309  0252  0480               	iorwf	0,f
  7310                           
  7311                           ;lcd.c: 150: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  7312  0253  3010               	movlw	16
  7313  0254  077B               	addwf	displayDigit@D1,w
  7314  0255  00A0               	movwf	??_displayDigit
  7315  0256  087C               	movf	displayDigit@D1+1,w
  7316  0257  1803               	skipnc
  7317  0258  3E01               	addlw	1
  7318  0259  00A1               	movwf	??_displayDigit+1
  7319  025A  0820               	movf	??_displayDigit,w
  7320  025B  0084               	movwf	4
  7321  025C  1783               	bsf	3,7
  7322  025D  1C21               	btfss	??_displayDigit+1,0
  7323  025E  1383               	bcf	3,7
  7324  025F  0A00               	incf	0,w
  7325  0260  00A2               	movwf	??_displayDigit+2
  7326  0261  3001               	movlw	1
  7327  0262  00A3               	movwf	??_displayDigit+3
  7328  0263  3000               	movlw	0
  7329  0264  00A4               	movwf	??_displayDigit+4
  7330  0265  2A69               	goto	u2604
  7331  0266                     u2605:	
  7332  0266  1003               	clrc
  7333  0267  0DA3               	rlf	??_displayDigit+3,f
  7334  0268  0DA4               	rlf	??_displayDigit+4,f
  7335  0269                     u2604:	
  7336  0269  0BA2               	decfsz	??_displayDigit+2,f
  7337  026A  2A66               	goto	u2605
  7338  026B  3002               	movlw	2
  7339  026C  077B               	addwf	displayDigit@D1,w
  7340  026D  00A5               	movwf	??_displayDigit+5
  7341  026E  087C               	movf	displayDigit@D1+1,w
  7342  026F  1803               	skipnc
  7343  0270  3E01               	addlw	1
  7344  0271  00A6               	movwf	??_displayDigit+6
  7345  0272  0825               	movf	??_displayDigit+5,w
  7346  0273  0084               	movwf	4
  7347  0274  1783               	bsf	3,7
  7348  0275  1C26               	btfss	??_displayDigit+6,0
  7349  0276  1383               	bcf	3,7
  7350  0277  0800               	movf	0,w
  7351  0278  00A7               	movwf	??_displayDigit+7
  7352  0279  0A84               	incf	4,f
  7353  027A  0800               	movf	0,w
  7354  027B  00A8               	movwf	??_displayDigit+8
  7355  027C  0827               	movf	??_displayDigit+7,w
  7356  027D  0084               	movwf	4
  7357  027E  1783               	bsf	3,7
  7358  027F  1C28               	btfss	??_displayDigit+8,0
  7359  0280  1383               	bcf	3,7
  7360  0281  0823               	movf	??_displayDigit+3,w
  7361  0282  0480               	iorwf	0,f
  7362  0283  0A84               	incf	4,f
  7363  0284  0824               	movf	??_displayDigit+4,w
  7364  0285  0480               	iorwf	0,f
  7365                           
  7366                           ;lcd.c: 151: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  7367  0286  3012               	movlw	18
  7368  0287  077B               	addwf	displayDigit@D1,w
  7369  0288  00A0               	movwf	??_displayDigit
  7370  0289  087C               	movf	displayDigit@D1+1,w
  7371  028A  1803               	skipnc
  7372  028B  3E01               	addlw	1
  7373  028C  00A1               	movwf	??_displayDigit+1
  7374  028D  0820               	movf	??_displayDigit,w
  7375  028E  0084               	movwf	4
  7376  028F  1783               	bsf	3,7
  7377  0290  1C21               	btfss	??_displayDigit+1,0
  7378  0291  1383               	bcf	3,7
  7379  0292  0A00               	incf	0,w
  7380  0293  00A2               	movwf	??_displayDigit+2
  7381  0294  3001               	movlw	1
  7382  0295  00A3               	movwf	??_displayDigit+3
  7383  0296  3000               	movlw	0
  7384  0297  00A4               	movwf	??_displayDigit+4
  7385  0298  2A9C               	goto	u2614
  7386  0299                     u2615:	
  7387  0299  1003               	clrc
  7388  029A  0DA3               	rlf	??_displayDigit+3,f
  7389  029B  0DA4               	rlf	??_displayDigit+4,f
  7390  029C                     u2614:	
  7391  029C  0BA2               	decfsz	??_displayDigit+2,f
  7392  029D  2A99               	goto	u2615
  7393  029E  3004               	movlw	4
  7394  029F  077B               	addwf	displayDigit@D1,w
  7395  02A0  00A5               	movwf	??_displayDigit+5
  7396  02A1  087C               	movf	displayDigit@D1+1,w
  7397  02A2  1803               	skipnc
  7398  02A3  3E01               	addlw	1
  7399  02A4  00A6               	movwf	??_displayDigit+6
  7400  02A5  0825               	movf	??_displayDigit+5,w
  7401  02A6  0084               	movwf	4
  7402  02A7  1783               	bsf	3,7
  7403  02A8  1C26               	btfss	??_displayDigit+6,0
  7404  02A9  1383               	bcf	3,7
  7405  02AA  0800               	movf	0,w
  7406  02AB  00A7               	movwf	??_displayDigit+7
  7407  02AC  0A84               	incf	4,f
  7408  02AD  0800               	movf	0,w
  7409  02AE  00A8               	movwf	??_displayDigit+8
  7410  02AF  0827               	movf	??_displayDigit+7,w
  7411  02B0  0084               	movwf	4
  7412  02B1  1783               	bsf	3,7
  7413  02B2  1C28               	btfss	??_displayDigit+8,0
  7414  02B3  1383               	bcf	3,7
  7415  02B4  0823               	movf	??_displayDigit+3,w
  7416  02B5  0480               	iorwf	0,f
  7417  02B6  0A84               	incf	4,f
  7418  02B7  0824               	movf	??_displayDigit+4,w
  7419  02B8  0480               	iorwf	0,f
  7420                           
  7421                           ;lcd.c: 152: ((*D1->sd) &= ~((1UL) << (D1->bits[3])));
  7422  02B9  3014               	movlw	20
  7423  02BA  077B               	addwf	displayDigit@D1,w
  7424  02BB  00A0               	movwf	??_displayDigit
  7425  02BC  087C               	movf	displayDigit@D1+1,w
  7426  02BD  1803               	skipnc
  7427  02BE  3E01               	addlw	1
  7428  02BF  00A1               	movwf	??_displayDigit+1
  7429  02C0  0820               	movf	??_displayDigit,w
  7430  02C1  0084               	movwf	4
  7431  02C2  1783               	bsf	3,7
  7432  02C3  1C21               	btfss	??_displayDigit+1,0
  7433  02C4  1383               	bcf	3,7
  7434  02C5  0A00               	incf	0,w
  7435  02C6  00A2               	movwf	??_displayDigit+2
  7436  02C7  3001               	movlw	1
  7437  02C8  00A3               	movwf	??_displayDigit+3
  7438  02C9  3000               	movlw	0
  7439  02CA  00A4               	movwf	??_displayDigit+4
  7440  02CB  2ACF               	goto	u2624
  7441  02CC                     u2625:	
  7442  02CC  1003               	clrc
  7443  02CD  0DA3               	rlf	??_displayDigit+3,f
  7444  02CE  0DA4               	rlf	??_displayDigit+4,f
  7445  02CF                     u2624:	
  7446  02CF  0BA2               	decfsz	??_displayDigit+2,f
  7447  02D0  2ACC               	goto	u2625
  7448  02D1  09A3               	comf	??_displayDigit+3,f
  7449  02D2  09A4               	comf	??_displayDigit+4,f
  7450  02D3  3006               	movlw	6
  7451  02D4  077B               	addwf	displayDigit@D1,w
  7452  02D5  00A5               	movwf	??_displayDigit+5
  7453  02D6  087C               	movf	displayDigit@D1+1,w
  7454  02D7  1803               	skipnc
  7455  02D8  3E01               	addlw	1
  7456  02D9  00A6               	movwf	??_displayDigit+6
  7457  02DA  0825               	movf	??_displayDigit+5,w
  7458  02DB  0084               	movwf	4
  7459  02DC  1783               	bsf	3,7
  7460  02DD  1C26               	btfss	??_displayDigit+6,0
  7461  02DE  1383               	bcf	3,7
  7462  02DF  0800               	movf	0,w
  7463  02E0  00A7               	movwf	??_displayDigit+7
  7464  02E1  0A84               	incf	4,f
  7465  02E2  0800               	movf	0,w
  7466  02E3  00A8               	movwf	??_displayDigit+8
  7467  02E4  0827               	movf	??_displayDigit+7,w
  7468  02E5  0084               	movwf	4
  7469  02E6  1783               	bsf	3,7
  7470  02E7  1C28               	btfss	??_displayDigit+8,0
  7471  02E8  1383               	bcf	3,7
  7472  02E9  0823               	movf	??_displayDigit+3,w
  7473  02EA  0580               	andwf	0,f
  7474  02EB  0A84               	incf	4,f
  7475  02EC  0824               	movf	??_displayDigit+4,w
  7476  02ED  0580               	andwf	0,f
  7477                           
  7478                           ;lcd.c: 153: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  7479  02EE  3016               	movlw	22
  7480  02EF  077B               	addwf	displayDigit@D1,w
  7481  02F0  00A0               	movwf	??_displayDigit
  7482  02F1  087C               	movf	displayDigit@D1+1,w
  7483  02F2  1803               	skipnc
  7484  02F3  3E01               	addlw	1
  7485  02F4  00A1               	movwf	??_displayDigit+1
  7486  02F5  0820               	movf	??_displayDigit,w
  7487  02F6  0084               	movwf	4
  7488  02F7  1783               	bsf	3,7
  7489  02F8  1C21               	btfss	??_displayDigit+1,0
  7490  02F9  1383               	bcf	3,7
  7491  02FA  0A00               	incf	0,w
  7492  02FB  00A2               	movwf	??_displayDigit+2
  7493  02FC  3001               	movlw	1
  7494  02FD  00A3               	movwf	??_displayDigit+3
  7495  02FE  3000               	movlw	0
  7496  02FF  00A4               	movwf	??_displayDigit+4
  7497  0300  2B04               	goto	u2634
  7498  0301                     u2635:	
  7499  0301  1003               	clrc
  7500  0302  0DA3               	rlf	??_displayDigit+3,f
  7501  0303  0DA4               	rlf	??_displayDigit+4,f
  7502  0304                     u2634:	
  7503  0304  0BA2               	decfsz	??_displayDigit+2,f
  7504  0305  2B01               	goto	u2635
  7505  0306  09A3               	comf	??_displayDigit+3,f
  7506  0307  09A4               	comf	??_displayDigit+4,f
  7507  0308  3008               	movlw	8
  7508  0309  077B               	addwf	displayDigit@D1,w
  7509  030A  00A5               	movwf	??_displayDigit+5
  7510  030B  087C               	movf	displayDigit@D1+1,w
  7511  030C  1803               	skipnc
  7512  030D  3E01               	addlw	1
  7513  030E  00A6               	movwf	??_displayDigit+6
  7514  030F  0825               	movf	??_displayDigit+5,w
  7515  0310  0084               	movwf	4
  7516  0311  1783               	bsf	3,7
  7517  0312  1C26               	btfss	??_displayDigit+6,0
  7518  0313  1383               	bcf	3,7
  7519  0314  0800               	movf	0,w
  7520  0315  00A7               	movwf	??_displayDigit+7
  7521  0316  0A84               	incf	4,f
  7522  0317  0800               	movf	0,w
  7523  0318  00A8               	movwf	??_displayDigit+8
  7524  0319  0827               	movf	??_displayDigit+7,w
  7525  031A  0084               	movwf	4
  7526  031B  1783               	bsf	3,7
  7527  031C  1C28               	btfss	??_displayDigit+8,0
  7528  031D  1383               	bcf	3,7
  7529  031E  0823               	movf	??_displayDigit+3,w
  7530  031F  0580               	andwf	0,f
  7531  0320  0A84               	incf	4,f
  7532  0321  0824               	movf	??_displayDigit+4,w
  7533  0322  0580               	andwf	0,f
  7534                           
  7535                           ;lcd.c: 154: ((*D1->sf) &= ~((1UL) << (D1->bits[5])));
  7536  0323  3018               	movlw	24
  7537  0324  077B               	addwf	displayDigit@D1,w
  7538  0325  00A0               	movwf	??_displayDigit
  7539  0326  087C               	movf	displayDigit@D1+1,w
  7540  0327  1803               	skipnc
  7541  0328  3E01               	addlw	1
  7542  0329  00A1               	movwf	??_displayDigit+1
  7543  032A  0820               	movf	??_displayDigit,w
  7544  032B  0084               	movwf	4
  7545  032C  1783               	bsf	3,7
  7546  032D  1C21               	btfss	??_displayDigit+1,0
  7547  032E  1383               	bcf	3,7
  7548  032F  0A00               	incf	0,w
  7549  0330  00A2               	movwf	??_displayDigit+2
  7550  0331  3001               	movlw	1
  7551  0332  00A3               	movwf	??_displayDigit+3
  7552  0333  3000               	movlw	0
  7553  0334  00A4               	movwf	??_displayDigit+4
  7554  0335  2B39               	goto	u2644
  7555  0336                     u2645:	
  7556  0336  1003               	clrc
  7557  0337  0DA3               	rlf	??_displayDigit+3,f
  7558  0338  0DA4               	rlf	??_displayDigit+4,f
  7559  0339                     u2644:	
  7560  0339  0BA2               	decfsz	??_displayDigit+2,f
  7561  033A  2B36               	goto	u2645
  7562  033B  09A3               	comf	??_displayDigit+3,f
  7563  033C  09A4               	comf	??_displayDigit+4,f
  7564  033D  300A               	movlw	10
  7565  033E  077B               	addwf	displayDigit@D1,w
  7566  033F  00A5               	movwf	??_displayDigit+5
  7567  0340  087C               	movf	displayDigit@D1+1,w
  7568  0341  1803               	skipnc
  7569  0342  3E01               	addlw	1
  7570  0343  00A6               	movwf	??_displayDigit+6
  7571  0344  0825               	movf	??_displayDigit+5,w
  7572  0345  0084               	movwf	4
  7573  0346  1783               	bsf	3,7
  7574  0347  1C26               	btfss	??_displayDigit+6,0
  7575  0348  1383               	bcf	3,7
  7576  0349  0800               	movf	0,w
  7577  034A  00A7               	movwf	??_displayDigit+7
  7578  034B  0A84               	incf	4,f
  7579  034C  0800               	movf	0,w
  7580  034D  00A8               	movwf	??_displayDigit+8
  7581  034E  0827               	movf	??_displayDigit+7,w
  7582  034F  0084               	movwf	4
  7583  0350  1783               	bsf	3,7
  7584  0351  1C28               	btfss	??_displayDigit+8,0
  7585  0352  1383               	bcf	3,7
  7586  0353  0823               	movf	??_displayDigit+3,w
  7587  0354  0580               	andwf	0,f
  7588  0355  0A84               	incf	4,f
  7589  0356  0824               	movf	??_displayDigit+4,w
  7590  0357  0580               	andwf	0,f
  7591                           
  7592                           ;lcd.c: 155: ((*D1->sg) &= ~((1UL) << (D1->bits[6])));
  7593  0358  301A               	movlw	26
  7594  0359  077B               	addwf	displayDigit@D1,w
  7595  035A  00A0               	movwf	??_displayDigit
  7596  035B  087C               	movf	displayDigit@D1+1,w
  7597  035C  1803               	skipnc
  7598  035D  3E01               	addlw	1
  7599  035E  00A1               	movwf	??_displayDigit+1
  7600  035F  0820               	movf	??_displayDigit,w
  7601  0360  0084               	movwf	4
  7602  0361  1783               	bsf	3,7
  7603  0362  1C21               	btfss	??_displayDigit+1,0
  7604  0363  1383               	bcf	3,7
  7605  0364  0A00               	incf	0,w
  7606  0365  00A2               	movwf	??_displayDigit+2
  7607  0366  3001               	movlw	1
  7608  0367  00A3               	movwf	??_displayDigit+3
  7609  0368  3000               	movlw	0
  7610  0369  00A4               	movwf	??_displayDigit+4
  7611  036A  2B6E               	goto	u2654
  7612  036B                     u2655:	
  7613  036B  1003               	clrc
  7614  036C  0DA3               	rlf	??_displayDigit+3,f
  7615  036D  0DA4               	rlf	??_displayDigit+4,f
  7616  036E                     u2654:	
  7617  036E  0BA2               	decfsz	??_displayDigit+2,f
  7618  036F  2B6B               	goto	u2655
  7619  0370  09A3               	comf	??_displayDigit+3,f
  7620  0371  09A4               	comf	??_displayDigit+4,f
  7621  0372  300C               	movlw	12
  7622  0373  077B               	addwf	displayDigit@D1,w
  7623  0374  00A5               	movwf	??_displayDigit+5
  7624  0375  087C               	movf	displayDigit@D1+1,w
  7625  0376  1803               	skipnc
  7626  0377  3E01               	addlw	1
  7627  0378  00A6               	movwf	??_displayDigit+6
  7628  0379  0825               	movf	??_displayDigit+5,w
  7629  037A  0084               	movwf	4
  7630  037B  1783               	bsf	3,7
  7631  037C  1C26               	btfss	??_displayDigit+6,0
  7632  037D  1383               	bcf	3,7
  7633  037E  0800               	movf	0,w
  7634  037F  00A7               	movwf	??_displayDigit+7
  7635  0380  0A84               	incf	4,f
  7636  0381  0800               	movf	0,w
  7637  0382  00A8               	movwf	??_displayDigit+8
  7638  0383  0827               	movf	??_displayDigit+7,w
  7639  0384  0084               	movwf	4
  7640  0385  1783               	bsf	3,7
  7641  0386  1C28               	btfss	??_displayDigit+8,0
  7642  0387  1383               	bcf	3,7
  7643  0388  0823               	movf	??_displayDigit+3,w
  7644  0389  0580               	andwf	0,f
  7645  038A  0A84               	incf	4,f
  7646  038B  0824               	movf	??_displayDigit+4,w
  7647  038C  0580               	andwf	0,f
  7648                           
  7649                           ;lcd.c: 156: break;
  7650  038D  0008               	return
  7651  038E                     l1352:	
  7652                           ;lcd.c: 157: case 8:
  7653                           
  7654                           
  7655                           ;lcd.c: 158: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  7656  038E  300E               	movlw	14
  7657  038F  077B               	addwf	displayDigit@D1,w
  7658  0390  1283               	bcf	3,5	;RP0=0, select bank0
  7659  0391  1303               	bcf	3,6	;RP1=0, select bank0
  7660  0392  00A0               	movwf	??_displayDigit
  7661  0393  087C               	movf	displayDigit@D1+1,w
  7662  0394  1803               	skipnc
  7663  0395  3E01               	addlw	1
  7664  0396  00A1               	movwf	??_displayDigit+1
  7665  0397  0820               	movf	??_displayDigit,w
  7666  0398  0084               	movwf	4
  7667  0399  1783               	bsf	3,7
  7668  039A  1C21               	btfss	??_displayDigit+1,0
  7669  039B  1383               	bcf	3,7
  7670  039C  0A00               	incf	0,w
  7671  039D  00A2               	movwf	??_displayDigit+2
  7672  039E  3001               	movlw	1
  7673  039F  00A3               	movwf	??_displayDigit+3
  7674  03A0  3000               	movlw	0
  7675  03A1  00A4               	movwf	??_displayDigit+4
  7676  03A2  2BA6               	goto	u2664
  7677  03A3                     u2665:	
  7678  03A3  1003               	clrc
  7679  03A4  0DA3               	rlf	??_displayDigit+3,f
  7680  03A5  0DA4               	rlf	??_displayDigit+4,f
  7681  03A6                     u2664:	
  7682  03A6  0BA2               	decfsz	??_displayDigit+2,f
  7683  03A7  2BA3               	goto	u2665
  7684  03A8  087B               	movf	displayDigit@D1,w
  7685  03A9  0084               	movwf	4
  7686  03AA  1783               	bsf	3,7
  7687  03AB  1C7C               	btfss	displayDigit@D1+1,0
  7688  03AC  1383               	bcf	3,7
  7689  03AD  0800               	movf	0,w
  7690  03AE  00A5               	movwf	??_displayDigit+5
  7691  03AF  0A84               	incf	4,f
  7692  03B0  0800               	movf	0,w
  7693  03B1  00A6               	movwf	??_displayDigit+6
  7694  03B2  0825               	movf	??_displayDigit+5,w
  7695  03B3  0084               	movwf	4
  7696  03B4  1783               	bsf	3,7
  7697  03B5  1C26               	btfss	??_displayDigit+6,0
  7698  03B6  1383               	bcf	3,7
  7699  03B7  0823               	movf	??_displayDigit+3,w
  7700  03B8  0480               	iorwf	0,f
  7701  03B9  0A84               	incf	4,f
  7702  03BA  0824               	movf	??_displayDigit+4,w
  7703  03BB  0480               	iorwf	0,f
  7704                           
  7705                           ;lcd.c: 159: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  7706  03BC  3010               	movlw	16
  7707  03BD  077B               	addwf	displayDigit@D1,w
  7708  03BE  00A0               	movwf	??_displayDigit
  7709  03BF  087C               	movf	displayDigit@D1+1,w
  7710  03C0  1803               	skipnc
  7711  03C1  3E01               	addlw	1
  7712  03C2  00A1               	movwf	??_displayDigit+1
  7713  03C3  0820               	movf	??_displayDigit,w
  7714  03C4  0084               	movwf	4
  7715  03C5  1783               	bsf	3,7
  7716  03C6  1C21               	btfss	??_displayDigit+1,0
  7717  03C7  1383               	bcf	3,7
  7718  03C8  0A00               	incf	0,w
  7719  03C9  00A2               	movwf	??_displayDigit+2
  7720  03CA  3001               	movlw	1
  7721  03CB  00A3               	movwf	??_displayDigit+3
  7722  03CC  3000               	movlw	0
  7723  03CD  00A4               	movwf	??_displayDigit+4
  7724  03CE  2BD2               	goto	u2674
  7725  03CF                     u2675:	
  7726  03CF  1003               	clrc
  7727  03D0  0DA3               	rlf	??_displayDigit+3,f
  7728  03D1  0DA4               	rlf	??_displayDigit+4,f
  7729  03D2                     u2674:	
  7730  03D2  0BA2               	decfsz	??_displayDigit+2,f
  7731  03D3  2BCF               	goto	u2675
  7732  03D4  3002               	movlw	2
  7733  03D5  077B               	addwf	displayDigit@D1,w
  7734  03D6  00A5               	movwf	??_displayDigit+5
  7735  03D7  087C               	movf	displayDigit@D1+1,w
  7736  03D8  1803               	skipnc
  7737  03D9  3E01               	addlw	1
  7738  03DA  00A6               	movwf	??_displayDigit+6
  7739  03DB  0825               	movf	??_displayDigit+5,w
  7740  03DC  0084               	movwf	4
  7741  03DD  1783               	bsf	3,7
  7742  03DE  1C26               	btfss	??_displayDigit+6,0
  7743  03DF  1383               	bcf	3,7
  7744  03E0  0800               	movf	0,w
  7745  03E1  00A7               	movwf	??_displayDigit+7
  7746  03E2  0A84               	incf	4,f
  7747  03E3  0800               	movf	0,w
  7748  03E4  00A8               	movwf	??_displayDigit+8
  7749  03E5  0827               	movf	??_displayDigit+7,w
  7750  03E6  0084               	movwf	4
  7751  03E7  1783               	bsf	3,7
  7752  03E8  1C28               	btfss	??_displayDigit+8,0
  7753  03E9  1383               	bcf	3,7
  7754  03EA  0823               	movf	??_displayDigit+3,w
  7755  03EB  0480               	iorwf	0,f
  7756  03EC  0A84               	incf	4,f
  7757  03ED  0824               	movf	??_displayDigit+4,w
  7758  03EE  0480               	iorwf	0,f
  7759                           
  7760                           ;lcd.c: 160: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  7761  03EF  3012               	movlw	18
  7762  03F0  077B               	addwf	displayDigit@D1,w
  7763  03F1  00A0               	movwf	??_displayDigit
  7764  03F2  087C               	movf	displayDigit@D1+1,w
  7765  03F3  1803               	skipnc
  7766  03F4  3E01               	addlw	1
  7767  03F5  00A1               	movwf	??_displayDigit+1
  7768  03F6  0820               	movf	??_displayDigit,w
  7769  03F7  0084               	movwf	4
  7770  03F8  1783               	bsf	3,7
  7771  03F9  1C21               	btfss	??_displayDigit+1,0
  7772  03FA  1383               	bcf	3,7
  7773  03FB  0A00               	incf	0,w
  7774  03FC  00A2               	movwf	??_displayDigit+2
  7775  03FD  3001               	movlw	1
  7776  03FE  00A3               	movwf	??_displayDigit+3
  7777  03FF  3000               	movlw	0
  7778  0400  00A4               	movwf	??_displayDigit+4
  7779  0401  2C05               	goto	u2684
  7780  0402                     u2685:	
  7781  0402  1003               	clrc
  7782  0403  0DA3               	rlf	??_displayDigit+3,f
  7783  0404  0DA4               	rlf	??_displayDigit+4,f
  7784  0405                     u2684:	
  7785  0405  0BA2               	decfsz	??_displayDigit+2,f
  7786  0406  2C02               	goto	u2685
  7787  0407  3004               	movlw	4
  7788  0408  077B               	addwf	displayDigit@D1,w
  7789  0409  00A5               	movwf	??_displayDigit+5
  7790  040A  087C               	movf	displayDigit@D1+1,w
  7791  040B  1803               	skipnc
  7792  040C  3E01               	addlw	1
  7793  040D  00A6               	movwf	??_displayDigit+6
  7794  040E  0825               	movf	??_displayDigit+5,w
  7795  040F  0084               	movwf	4
  7796  0410  1783               	bsf	3,7
  7797  0411  1C26               	btfss	??_displayDigit+6,0
  7798  0412  1383               	bcf	3,7
  7799  0413  0800               	movf	0,w
  7800  0414  00A7               	movwf	??_displayDigit+7
  7801  0415  0A84               	incf	4,f
  7802  0416  0800               	movf	0,w
  7803  0417  00A8               	movwf	??_displayDigit+8
  7804  0418  0827               	movf	??_displayDigit+7,w
  7805  0419  0084               	movwf	4
  7806  041A  1783               	bsf	3,7
  7807  041B  1C28               	btfss	??_displayDigit+8,0
  7808  041C  1383               	bcf	3,7
  7809  041D  0823               	movf	??_displayDigit+3,w
  7810  041E  0480               	iorwf	0,f
  7811  041F  0A84               	incf	4,f
  7812  0420  0824               	movf	??_displayDigit+4,w
  7813  0421  0480               	iorwf	0,f
  7814                           
  7815                           ;lcd.c: 161: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  7816  0422  3014               	movlw	20
  7817  0423  077B               	addwf	displayDigit@D1,w
  7818  0424  00A0               	movwf	??_displayDigit
  7819  0425  087C               	movf	displayDigit@D1+1,w
  7820  0426  1803               	skipnc
  7821  0427  3E01               	addlw	1
  7822  0428  00A1               	movwf	??_displayDigit+1
  7823  0429  0820               	movf	??_displayDigit,w
  7824  042A  0084               	movwf	4
  7825  042B  1783               	bsf	3,7
  7826  042C  1C21               	btfss	??_displayDigit+1,0
  7827  042D  1383               	bcf	3,7
  7828  042E  0A00               	incf	0,w
  7829  042F  00A2               	movwf	??_displayDigit+2
  7830  0430  3001               	movlw	1
  7831  0431  00A3               	movwf	??_displayDigit+3
  7832  0432  3000               	movlw	0
  7833  0433  00A4               	movwf	??_displayDigit+4
  7834  0434  2C38               	goto	u2694
  7835  0435                     u2695:	
  7836  0435  1003               	clrc
  7837  0436  0DA3               	rlf	??_displayDigit+3,f
  7838  0437  0DA4               	rlf	??_displayDigit+4,f
  7839  0438                     u2694:	
  7840  0438  0BA2               	decfsz	??_displayDigit+2,f
  7841  0439  2C35               	goto	u2695
  7842  043A  3006               	movlw	6
  7843  043B  077B               	addwf	displayDigit@D1,w
  7844  043C  00A5               	movwf	??_displayDigit+5
  7845  043D  087C               	movf	displayDigit@D1+1,w
  7846  043E  1803               	skipnc
  7847  043F  3E01               	addlw	1
  7848  0440  00A6               	movwf	??_displayDigit+6
  7849  0441  0825               	movf	??_displayDigit+5,w
  7850  0442  0084               	movwf	4
  7851  0443  1783               	bsf	3,7
  7852  0444  1C26               	btfss	??_displayDigit+6,0
  7853  0445  1383               	bcf	3,7
  7854  0446  0800               	movf	0,w
  7855  0447  00A7               	movwf	??_displayDigit+7
  7856  0448  0A84               	incf	4,f
  7857  0449  0800               	movf	0,w
  7858  044A  00A8               	movwf	??_displayDigit+8
  7859  044B  0827               	movf	??_displayDigit+7,w
  7860  044C  0084               	movwf	4
  7861  044D  1783               	bsf	3,7
  7862  044E  1C28               	btfss	??_displayDigit+8,0
  7863  044F  1383               	bcf	3,7
  7864  0450  0823               	movf	??_displayDigit+3,w
  7865  0451  0480               	iorwf	0,f
  7866  0452  0A84               	incf	4,f
  7867  0453  0824               	movf	??_displayDigit+4,w
  7868  0454  0480               	iorwf	0,f
  7869                           
  7870                           ;lcd.c: 162: ((*D1->se) |= (1UL) << (D1->bits[4]));
  7871  0455  3016               	movlw	22
  7872  0456  077B               	addwf	displayDigit@D1,w
  7873  0457  00A0               	movwf	??_displayDigit
  7874  0458  087C               	movf	displayDigit@D1+1,w
  7875  0459  1803               	skipnc
  7876  045A  3E01               	addlw	1
  7877  045B  00A1               	movwf	??_displayDigit+1
  7878  045C  0820               	movf	??_displayDigit,w
  7879  045D  0084               	movwf	4
  7880  045E  1783               	bsf	3,7
  7881  045F  1C21               	btfss	??_displayDigit+1,0
  7882  0460  1383               	bcf	3,7
  7883  0461  0A00               	incf	0,w
  7884  0462  00A2               	movwf	??_displayDigit+2
  7885  0463  3001               	movlw	1
  7886  0464  00A3               	movwf	??_displayDigit+3
  7887  0465  3000               	movlw	0
  7888  0466  00A4               	movwf	??_displayDigit+4
  7889  0467  2C6B               	goto	u2704
  7890  0468                     u2705:	
  7891  0468  1003               	clrc
  7892  0469  0DA3               	rlf	??_displayDigit+3,f
  7893  046A  0DA4               	rlf	??_displayDigit+4,f
  7894  046B                     u2704:	
  7895  046B  0BA2               	decfsz	??_displayDigit+2,f
  7896  046C  2C68               	goto	u2705
  7897  046D  3008               	movlw	8
  7898  046E  077B               	addwf	displayDigit@D1,w
  7899  046F  00A5               	movwf	??_displayDigit+5
  7900  0470  087C               	movf	displayDigit@D1+1,w
  7901  0471  1803               	skipnc
  7902  0472  3E01               	addlw	1
  7903  0473  00A6               	movwf	??_displayDigit+6
  7904  0474  0825               	movf	??_displayDigit+5,w
  7905  0475  0084               	movwf	4
  7906  0476  1783               	bsf	3,7
  7907  0477  1C26               	btfss	??_displayDigit+6,0
  7908  0478  1383               	bcf	3,7
  7909  0479  0800               	movf	0,w
  7910  047A  00A7               	movwf	??_displayDigit+7
  7911  047B  0A84               	incf	4,f
  7912  047C  0800               	movf	0,w
  7913  047D  00A8               	movwf	??_displayDigit+8
  7914  047E  0827               	movf	??_displayDigit+7,w
  7915  047F  0084               	movwf	4
  7916  0480  1783               	bsf	3,7
  7917  0481  1C28               	btfss	??_displayDigit+8,0
  7918  0482  1383               	bcf	3,7
  7919  0483  0823               	movf	??_displayDigit+3,w
  7920  0484  0480               	iorwf	0,f
  7921  0485  0A84               	incf	4,f
  7922  0486  0824               	movf	??_displayDigit+4,w
  7923  0487  0480               	iorwf	0,f
  7924                           
  7925                           ;lcd.c: 163: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  7926  0488  3018               	movlw	24
  7927  0489  077B               	addwf	displayDigit@D1,w
  7928  048A  00A0               	movwf	??_displayDigit
  7929  048B  087C               	movf	displayDigit@D1+1,w
  7930  048C  1803               	skipnc
  7931  048D  3E01               	addlw	1
  7932  048E  00A1               	movwf	??_displayDigit+1
  7933  048F  0820               	movf	??_displayDigit,w
  7934  0490  0084               	movwf	4
  7935  0491  1783               	bsf	3,7
  7936  0492  1C21               	btfss	??_displayDigit+1,0
  7937  0493  1383               	bcf	3,7
  7938  0494  0A00               	incf	0,w
  7939  0495  00A2               	movwf	??_displayDigit+2
  7940  0496  3001               	movlw	1
  7941  0497  00A3               	movwf	??_displayDigit+3
  7942  0498  3000               	movlw	0
  7943  0499  00A4               	movwf	??_displayDigit+4
  7944  049A  2C9E               	goto	u2714
  7945  049B                     u2715:	
  7946  049B  1003               	clrc
  7947  049C  0DA3               	rlf	??_displayDigit+3,f
  7948  049D  0DA4               	rlf	??_displayDigit+4,f
  7949  049E                     u2714:	
  7950  049E  0BA2               	decfsz	??_displayDigit+2,f
  7951  049F  2C9B               	goto	u2715
  7952  04A0  300A               	movlw	10
  7953  04A1  077B               	addwf	displayDigit@D1,w
  7954  04A2  00A5               	movwf	??_displayDigit+5
  7955  04A3  087C               	movf	displayDigit@D1+1,w
  7956  04A4  1803               	skipnc
  7957  04A5  3E01               	addlw	1
  7958  04A6  00A6               	movwf	??_displayDigit+6
  7959  04A7  0825               	movf	??_displayDigit+5,w
  7960  04A8  0084               	movwf	4
  7961  04A9  1783               	bsf	3,7
  7962  04AA  1C26               	btfss	??_displayDigit+6,0
  7963  04AB  1383               	bcf	3,7
  7964  04AC  0800               	movf	0,w
  7965  04AD  00A7               	movwf	??_displayDigit+7
  7966  04AE  0A84               	incf	4,f
  7967  04AF  0800               	movf	0,w
  7968  04B0  00A8               	movwf	??_displayDigit+8
  7969  04B1  0827               	movf	??_displayDigit+7,w
  7970  04B2  0084               	movwf	4
  7971  04B3  1783               	bsf	3,7
  7972  04B4  1C28               	btfss	??_displayDigit+8,0
  7973  04B5  1383               	bcf	3,7
  7974  04B6  0823               	movf	??_displayDigit+3,w
  7975  04B7  0480               	iorwf	0,f
  7976  04B8  0A84               	incf	4,f
  7977  04B9  0824               	movf	??_displayDigit+4,w
  7978  04BA  0480               	iorwf	0,f
  7979                           
  7980                           ;lcd.c: 164: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  7981  04BB  301A               	movlw	26
  7982  04BC  077B               	addwf	displayDigit@D1,w
  7983  04BD  00A0               	movwf	??_displayDigit
  7984  04BE  087C               	movf	displayDigit@D1+1,w
  7985  04BF  1803               	skipnc
  7986  04C0  3E01               	addlw	1
  7987  04C1  00A1               	movwf	??_displayDigit+1
  7988  04C2  0820               	movf	??_displayDigit,w
  7989  04C3  0084               	movwf	4
  7990  04C4  1783               	bsf	3,7
  7991  04C5  1C21               	btfss	??_displayDigit+1,0
  7992  04C6  1383               	bcf	3,7
  7993  04C7  0A00               	incf	0,w
  7994  04C8  00A2               	movwf	??_displayDigit+2
  7995  04C9  3001               	movlw	1
  7996  04CA  00A3               	movwf	??_displayDigit+3
  7997  04CB  3000               	movlw	0
  7998  04CC  00A4               	movwf	??_displayDigit+4
  7999  04CD  2CD1               	goto	u2724
  8000  04CE                     u2725:	
  8001  04CE  1003               	clrc
  8002  04CF  0DA3               	rlf	??_displayDigit+3,f
  8003  04D0  0DA4               	rlf	??_displayDigit+4,f
  8004  04D1                     u2724:	
  8005  04D1  0BA2               	decfsz	??_displayDigit+2,f
  8006  04D2  2CCE               	goto	u2725
  8007  04D3  300C               	movlw	12
  8008  04D4  077B               	addwf	displayDigit@D1,w
  8009  04D5  00A5               	movwf	??_displayDigit+5
  8010  04D6  087C               	movf	displayDigit@D1+1,w
  8011  04D7  1803               	skipnc
  8012  04D8  3E01               	addlw	1
  8013  04D9  00A6               	movwf	??_displayDigit+6
  8014  04DA  0825               	movf	??_displayDigit+5,w
  8015  04DB  0084               	movwf	4
  8016  04DC  1783               	bsf	3,7
  8017  04DD  1C26               	btfss	??_displayDigit+6,0
  8018  04DE  1383               	bcf	3,7
  8019  04DF  0800               	movf	0,w
  8020  04E0  00A7               	movwf	??_displayDigit+7
  8021  04E1  0A84               	incf	4,f
  8022  04E2  0800               	movf	0,w
  8023  04E3  00A8               	movwf	??_displayDigit+8
  8024  04E4  0827               	movf	??_displayDigit+7,w
  8025  04E5  0084               	movwf	4
  8026  04E6  1783               	bsf	3,7
  8027  04E7  1C28               	btfss	??_displayDigit+8,0
  8028  04E8  1383               	bcf	3,7
  8029  04E9  0823               	movf	??_displayDigit+3,w
  8030  04EA  0480               	iorwf	0,f
  8031  04EB  0A84               	incf	4,f
  8032  04EC  0824               	movf	??_displayDigit+4,w
  8033  04ED  0480               	iorwf	0,f
  8034                           
  8035                           ;lcd.c: 165: break;
  8036  04EE  0008               	return
  8037  04EF                     l1354:	
  8038                           ;lcd.c: 166: case 9:
  8039                           
  8040                           
  8041                           ;lcd.c: 167: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  8042  04EF  300E               	movlw	14
  8043  04F0  077B               	addwf	displayDigit@D1,w
  8044  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  8045  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  8046  04F3  00A0               	movwf	??_displayDigit
  8047  04F4  087C               	movf	displayDigit@D1+1,w
  8048  04F5  1803               	skipnc
  8049  04F6  3E01               	addlw	1
  8050  04F7  00A1               	movwf	??_displayDigit+1
  8051  04F8  0820               	movf	??_displayDigit,w
  8052  04F9  0084               	movwf	4
  8053  04FA  1783               	bsf	3,7
  8054  04FB  1C21               	btfss	??_displayDigit+1,0
  8055  04FC  1383               	bcf	3,7
  8056  04FD  0A00               	incf	0,w
  8057  04FE  00A2               	movwf	??_displayDigit+2
  8058  04FF  3001               	movlw	1
  8059  0500  00A3               	movwf	??_displayDigit+3
  8060  0501  3000               	movlw	0
  8061  0502  00A4               	movwf	??_displayDigit+4
  8062  0503  2D07               	goto	u2734
  8063  0504                     u2735:	
  8064  0504  1003               	clrc
  8065  0505  0DA3               	rlf	??_displayDigit+3,f
  8066  0506  0DA4               	rlf	??_displayDigit+4,f
  8067  0507                     u2734:	
  8068  0507  0BA2               	decfsz	??_displayDigit+2,f
  8069  0508  2D04               	goto	u2735
  8070  0509  087B               	movf	displayDigit@D1,w
  8071  050A  0084               	movwf	4
  8072  050B  1783               	bsf	3,7
  8073  050C  1C7C               	btfss	displayDigit@D1+1,0
  8074  050D  1383               	bcf	3,7
  8075  050E  0800               	movf	0,w
  8076  050F  00A5               	movwf	??_displayDigit+5
  8077  0510  0A84               	incf	4,f
  8078  0511  0800               	movf	0,w
  8079  0512  00A6               	movwf	??_displayDigit+6
  8080  0513  0825               	movf	??_displayDigit+5,w
  8081  0514  0084               	movwf	4
  8082  0515  1783               	bsf	3,7
  8083  0516  1C26               	btfss	??_displayDigit+6,0
  8084  0517  1383               	bcf	3,7
  8085  0518  0823               	movf	??_displayDigit+3,w
  8086  0519  0480               	iorwf	0,f
  8087  051A  0A84               	incf	4,f
  8088  051B  0824               	movf	??_displayDigit+4,w
  8089  051C  0480               	iorwf	0,f
  8090                           
  8091                           ;lcd.c: 168: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  8092  051D  3010               	movlw	16
  8093  051E  077B               	addwf	displayDigit@D1,w
  8094  051F  00A0               	movwf	??_displayDigit
  8095  0520  087C               	movf	displayDigit@D1+1,w
  8096  0521  1803               	skipnc
  8097  0522  3E01               	addlw	1
  8098  0523  00A1               	movwf	??_displayDigit+1
  8099  0524  0820               	movf	??_displayDigit,w
  8100  0525  0084               	movwf	4
  8101  0526  1783               	bsf	3,7
  8102  0527  1C21               	btfss	??_displayDigit+1,0
  8103  0528  1383               	bcf	3,7
  8104  0529  0A00               	incf	0,w
  8105  052A  00A2               	movwf	??_displayDigit+2
  8106  052B  3001               	movlw	1
  8107  052C  00A3               	movwf	??_displayDigit+3
  8108  052D  3000               	movlw	0
  8109  052E  00A4               	movwf	??_displayDigit+4
  8110  052F  2D33               	goto	u2744
  8111  0530                     u2745:	
  8112  0530  1003               	clrc
  8113  0531  0DA3               	rlf	??_displayDigit+3,f
  8114  0532  0DA4               	rlf	??_displayDigit+4,f
  8115  0533                     u2744:	
  8116  0533  0BA2               	decfsz	??_displayDigit+2,f
  8117  0534  2D30               	goto	u2745
  8118  0535  3002               	movlw	2
  8119  0536  077B               	addwf	displayDigit@D1,w
  8120  0537  00A5               	movwf	??_displayDigit+5
  8121  0538  087C               	movf	displayDigit@D1+1,w
  8122  0539  1803               	skipnc
  8123  053A  3E01               	addlw	1
  8124  053B  00A6               	movwf	??_displayDigit+6
  8125  053C  0825               	movf	??_displayDigit+5,w
  8126  053D  0084               	movwf	4
  8127  053E  1783               	bsf	3,7
  8128  053F  1C26               	btfss	??_displayDigit+6,0
  8129  0540  1383               	bcf	3,7
  8130  0541  0800               	movf	0,w
  8131  0542  00A7               	movwf	??_displayDigit+7
  8132  0543  0A84               	incf	4,f
  8133  0544  0800               	movf	0,w
  8134  0545  00A8               	movwf	??_displayDigit+8
  8135  0546  0827               	movf	??_displayDigit+7,w
  8136  0547  0084               	movwf	4
  8137  0548  1783               	bsf	3,7
  8138  0549  1C28               	btfss	??_displayDigit+8,0
  8139  054A  1383               	bcf	3,7
  8140  054B  0823               	movf	??_displayDigit+3,w
  8141  054C  0480               	iorwf	0,f
  8142  054D  0A84               	incf	4,f
  8143  054E  0824               	movf	??_displayDigit+4,w
  8144  054F  0480               	iorwf	0,f
  8145                           
  8146                           ;lcd.c: 169: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  8147  0550  3012               	movlw	18
  8148  0551  077B               	addwf	displayDigit@D1,w
  8149  0552  00A0               	movwf	??_displayDigit
  8150  0553  087C               	movf	displayDigit@D1+1,w
  8151  0554  1803               	skipnc
  8152  0555  3E01               	addlw	1
  8153  0556  00A1               	movwf	??_displayDigit+1
  8154  0557  0820               	movf	??_displayDigit,w
  8155  0558  0084               	movwf	4
  8156  0559  1783               	bsf	3,7
  8157  055A  1C21               	btfss	??_displayDigit+1,0
  8158  055B  1383               	bcf	3,7
  8159  055C  0A00               	incf	0,w
  8160  055D  00A2               	movwf	??_displayDigit+2
  8161  055E  3001               	movlw	1
  8162  055F  00A3               	movwf	??_displayDigit+3
  8163  0560  3000               	movlw	0
  8164  0561  00A4               	movwf	??_displayDigit+4
  8165  0562  2D66               	goto	u2754
  8166  0563                     u2755:	
  8167  0563  1003               	clrc
  8168  0564  0DA3               	rlf	??_displayDigit+3,f
  8169  0565  0DA4               	rlf	??_displayDigit+4,f
  8170  0566                     u2754:	
  8171  0566  0BA2               	decfsz	??_displayDigit+2,f
  8172  0567  2D63               	goto	u2755
  8173  0568  3004               	movlw	4
  8174  0569  077B               	addwf	displayDigit@D1,w
  8175  056A  00A5               	movwf	??_displayDigit+5
  8176  056B  087C               	movf	displayDigit@D1+1,w
  8177  056C  1803               	skipnc
  8178  056D  3E01               	addlw	1
  8179  056E  00A6               	movwf	??_displayDigit+6
  8180  056F  0825               	movf	??_displayDigit+5,w
  8181  0570  0084               	movwf	4
  8182  0571  1783               	bsf	3,7
  8183  0572  1C26               	btfss	??_displayDigit+6,0
  8184  0573  1383               	bcf	3,7
  8185  0574  0800               	movf	0,w
  8186  0575  00A7               	movwf	??_displayDigit+7
  8187  0576  0A84               	incf	4,f
  8188  0577  0800               	movf	0,w
  8189  0578  00A8               	movwf	??_displayDigit+8
  8190  0579  0827               	movf	??_displayDigit+7,w
  8191  057A  0084               	movwf	4
  8192  057B  1783               	bsf	3,7
  8193  057C  1C28               	btfss	??_displayDigit+8,0
  8194  057D  1383               	bcf	3,7
  8195  057E  0823               	movf	??_displayDigit+3,w
  8196  057F  0480               	iorwf	0,f
  8197  0580  0A84               	incf	4,f
  8198  0581  0824               	movf	??_displayDigit+4,w
  8199  0582  0480               	iorwf	0,f
  8200                           
  8201                           ;lcd.c: 170: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  8202  0583  3014               	movlw	20
  8203  0584  077B               	addwf	displayDigit@D1,w
  8204  0585  00A0               	movwf	??_displayDigit
  8205  0586  087C               	movf	displayDigit@D1+1,w
  8206  0587  1803               	skipnc
  8207  0588  3E01               	addlw	1
  8208  0589  00A1               	movwf	??_displayDigit+1
  8209  058A  0820               	movf	??_displayDigit,w
  8210  058B  0084               	movwf	4
  8211  058C  1783               	bsf	3,7
  8212  058D  1C21               	btfss	??_displayDigit+1,0
  8213  058E  1383               	bcf	3,7
  8214  058F  0A00               	incf	0,w
  8215  0590  00A2               	movwf	??_displayDigit+2
  8216  0591  3001               	movlw	1
  8217  0592  00A3               	movwf	??_displayDigit+3
  8218  0593  3000               	movlw	0
  8219  0594  00A4               	movwf	??_displayDigit+4
  8220  0595  2D99               	goto	u2764
  8221  0596                     u2765:	
  8222  0596  1003               	clrc
  8223  0597  0DA3               	rlf	??_displayDigit+3,f
  8224  0598  0DA4               	rlf	??_displayDigit+4,f
  8225  0599                     u2764:	
  8226  0599  0BA2               	decfsz	??_displayDigit+2,f
  8227  059A  2D96               	goto	u2765
  8228  059B  3006               	movlw	6
  8229  059C  077B               	addwf	displayDigit@D1,w
  8230  059D  00A5               	movwf	??_displayDigit+5
  8231  059E  087C               	movf	displayDigit@D1+1,w
  8232  059F  1803               	skipnc
  8233  05A0  3E01               	addlw	1
  8234  05A1  00A6               	movwf	??_displayDigit+6
  8235  05A2  0825               	movf	??_displayDigit+5,w
  8236  05A3  0084               	movwf	4
  8237  05A4  1783               	bsf	3,7
  8238  05A5  1C26               	btfss	??_displayDigit+6,0
  8239  05A6  1383               	bcf	3,7
  8240  05A7  0800               	movf	0,w
  8241  05A8  00A7               	movwf	??_displayDigit+7
  8242  05A9  0A84               	incf	4,f
  8243  05AA  0800               	movf	0,w
  8244  05AB  00A8               	movwf	??_displayDigit+8
  8245  05AC  0827               	movf	??_displayDigit+7,w
  8246  05AD  0084               	movwf	4
  8247  05AE  1783               	bsf	3,7
  8248  05AF  1C28               	btfss	??_displayDigit+8,0
  8249  05B0  1383               	bcf	3,7
  8250  05B1  0823               	movf	??_displayDigit+3,w
  8251  05B2  0480               	iorwf	0,f
  8252  05B3  0A84               	incf	4,f
  8253  05B4  0824               	movf	??_displayDigit+4,w
  8254  05B5  0480               	iorwf	0,f
  8255                           
  8256                           ;lcd.c: 171: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  8257  05B6  3016               	movlw	22
  8258  05B7  077B               	addwf	displayDigit@D1,w
  8259  05B8  00A0               	movwf	??_displayDigit
  8260  05B9  087C               	movf	displayDigit@D1+1,w
  8261  05BA  1803               	skipnc
  8262  05BB  3E01               	addlw	1
  8263  05BC  00A1               	movwf	??_displayDigit+1
  8264  05BD  0820               	movf	??_displayDigit,w
  8265  05BE  0084               	movwf	4
  8266  05BF  1783               	bsf	3,7
  8267  05C0  1C21               	btfss	??_displayDigit+1,0
  8268  05C1  1383               	bcf	3,7
  8269  05C2  0A00               	incf	0,w
  8270  05C3  00A2               	movwf	??_displayDigit+2
  8271  05C4  3001               	movlw	1
  8272  05C5  00A3               	movwf	??_displayDigit+3
  8273  05C6  3000               	movlw	0
  8274  05C7  00A4               	movwf	??_displayDigit+4
  8275  05C8  2DCC               	goto	u2774
  8276  05C9                     u2775:	
  8277  05C9  1003               	clrc
  8278  05CA  0DA3               	rlf	??_displayDigit+3,f
  8279  05CB  0DA4               	rlf	??_displayDigit+4,f
  8280  05CC                     u2774:	
  8281  05CC  0BA2               	decfsz	??_displayDigit+2,f
  8282  05CD  2DC9               	goto	u2775
  8283  05CE  09A3               	comf	??_displayDigit+3,f
  8284  05CF  09A4               	comf	??_displayDigit+4,f
  8285  05D0  3008               	movlw	8
  8286  05D1  077B               	addwf	displayDigit@D1,w
  8287  05D2  00A5               	movwf	??_displayDigit+5
  8288  05D3  087C               	movf	displayDigit@D1+1,w
  8289  05D4  1803               	skipnc
  8290  05D5  3E01               	addlw	1
  8291  05D6  00A6               	movwf	??_displayDigit+6
  8292  05D7  0825               	movf	??_displayDigit+5,w
  8293  05D8  0084               	movwf	4
  8294  05D9  1783               	bsf	3,7
  8295  05DA  1C26               	btfss	??_displayDigit+6,0
  8296  05DB  1383               	bcf	3,7
  8297  05DC  0800               	movf	0,w
  8298  05DD  00A7               	movwf	??_displayDigit+7
  8299  05DE  0A84               	incf	4,f
  8300  05DF  0800               	movf	0,w
  8301  05E0  00A8               	movwf	??_displayDigit+8
  8302  05E1  0827               	movf	??_displayDigit+7,w
  8303  05E2  0084               	movwf	4
  8304  05E3  1783               	bsf	3,7
  8305  05E4  1C28               	btfss	??_displayDigit+8,0
  8306  05E5  1383               	bcf	3,7
  8307  05E6  0823               	movf	??_displayDigit+3,w
  8308  05E7  0580               	andwf	0,f
  8309  05E8  0A84               	incf	4,f
  8310  05E9  0824               	movf	??_displayDigit+4,w
  8311  05EA  0580               	andwf	0,f
  8312                           
  8313                           ;lcd.c: 172: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  8314  05EB  3018               	movlw	24
  8315  05EC  077B               	addwf	displayDigit@D1,w
  8316  05ED  00A0               	movwf	??_displayDigit
  8317  05EE  087C               	movf	displayDigit@D1+1,w
  8318  05EF  1803               	skipnc
  8319  05F0  3E01               	addlw	1
  8320  05F1  00A1               	movwf	??_displayDigit+1
  8321  05F2  0820               	movf	??_displayDigit,w
  8322  05F3  0084               	movwf	4
  8323  05F4  1783               	bsf	3,7
  8324  05F5  1C21               	btfss	??_displayDigit+1,0
  8325  05F6  1383               	bcf	3,7
  8326  05F7  0A00               	incf	0,w
  8327  05F8  00A2               	movwf	??_displayDigit+2
  8328  05F9  3001               	movlw	1
  8329  05FA  00A3               	movwf	??_displayDigit+3
  8330  05FB  3000               	movlw	0
  8331  05FC  00A4               	movwf	??_displayDigit+4
  8332  05FD  2E01               	goto	u2784
  8333  05FE                     u2785:	
  8334  05FE  1003               	clrc
  8335  05FF  0DA3               	rlf	??_displayDigit+3,f
  8336  0600  0DA4               	rlf	??_displayDigit+4,f
  8337  0601                     u2784:	
  8338  0601  0BA2               	decfsz	??_displayDigit+2,f
  8339  0602  2DFE               	goto	u2785
  8340  0603  300A               	movlw	10
  8341  0604  077B               	addwf	displayDigit@D1,w
  8342  0605  00A5               	movwf	??_displayDigit+5
  8343  0606  087C               	movf	displayDigit@D1+1,w
  8344  0607  1803               	skipnc
  8345  0608  3E01               	addlw	1
  8346  0609  00A6               	movwf	??_displayDigit+6
  8347  060A  0825               	movf	??_displayDigit+5,w
  8348  060B  0084               	movwf	4
  8349  060C  1783               	bsf	3,7
  8350  060D  1C26               	btfss	??_displayDigit+6,0
  8351  060E  1383               	bcf	3,7
  8352  060F  0800               	movf	0,w
  8353  0610  00A7               	movwf	??_displayDigit+7
  8354  0611  0A84               	incf	4,f
  8355  0612  0800               	movf	0,w
  8356  0613  00A8               	movwf	??_displayDigit+8
  8357  0614  0827               	movf	??_displayDigit+7,w
  8358  0615  0084               	movwf	4
  8359  0616  1783               	bsf	3,7
  8360  0617  1C28               	btfss	??_displayDigit+8,0
  8361  0618  1383               	bcf	3,7
  8362  0619  0823               	movf	??_displayDigit+3,w
  8363  061A  0480               	iorwf	0,f
  8364  061B  0A84               	incf	4,f
  8365  061C  0824               	movf	??_displayDigit+4,w
  8366  061D  0480               	iorwf	0,f
  8367                           
  8368                           ;lcd.c: 173: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  8369  061E  301A               	movlw	26
  8370  061F  077B               	addwf	displayDigit@D1,w
  8371  0620  00A0               	movwf	??_displayDigit
  8372  0621  087C               	movf	displayDigit@D1+1,w
  8373  0622  1803               	skipnc
  8374  0623  3E01               	addlw	1
  8375  0624  00A1               	movwf	??_displayDigit+1
  8376  0625  0820               	movf	??_displayDigit,w
  8377  0626  0084               	movwf	4
  8378  0627  1783               	bsf	3,7
  8379  0628  1C21               	btfss	??_displayDigit+1,0
  8380  0629  1383               	bcf	3,7
  8381  062A  0A00               	incf	0,w
  8382  062B  00A2               	movwf	??_displayDigit+2
  8383  062C  3001               	movlw	1
  8384  062D  00A3               	movwf	??_displayDigit+3
  8385  062E  3000               	movlw	0
  8386  062F  00A4               	movwf	??_displayDigit+4
  8387  0630  2E34               	goto	u2794
  8388  0631                     u2795:	
  8389  0631  1003               	clrc
  8390  0632  0DA3               	rlf	??_displayDigit+3,f
  8391  0633  0DA4               	rlf	??_displayDigit+4,f
  8392  0634                     u2794:	
  8393  0634  0BA2               	decfsz	??_displayDigit+2,f
  8394  0635  2E31               	goto	u2795
  8395  0636  300C               	movlw	12
  8396  0637  077B               	addwf	displayDigit@D1,w
  8397  0638  00A5               	movwf	??_displayDigit+5
  8398  0639  087C               	movf	displayDigit@D1+1,w
  8399  063A  1803               	skipnc
  8400  063B  3E01               	addlw	1
  8401  063C  00A6               	movwf	??_displayDigit+6
  8402  063D  0825               	movf	??_displayDigit+5,w
  8403  063E  0084               	movwf	4
  8404  063F  1783               	bsf	3,7
  8405  0640  1C26               	btfss	??_displayDigit+6,0
  8406  0641  1383               	bcf	3,7
  8407  0642  0800               	movf	0,w
  8408  0643  00A7               	movwf	??_displayDigit+7
  8409  0644  0A84               	incf	4,f
  8410  0645  0800               	movf	0,w
  8411  0646  00A8               	movwf	??_displayDigit+8
  8412  0647  0827               	movf	??_displayDigit+7,w
  8413  0648  0084               	movwf	4
  8414  0649  1783               	bsf	3,7
  8415  064A  1C28               	btfss	??_displayDigit+8,0
  8416  064B  1383               	bcf	3,7
  8417  064C  0823               	movf	??_displayDigit+3,w
  8418  064D  0480               	iorwf	0,f
  8419  064E  0A84               	incf	4,f
  8420  064F  0824               	movf	??_displayDigit+4,w
  8421  0650  0480               	iorwf	0,f
  8422                           
  8423                           ;lcd.c: 174: break;
  8424  0651  0008               	return
  8425  0652                     l1356:	
  8426                           ;lcd.c: 175: case 'C':
  8427                           
  8428                           
  8429                           ;lcd.c: 176: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  8430  0652  300E               	movlw	14
  8431  0653  077B               	addwf	displayDigit@D1,w
  8432  0654  1283               	bcf	3,5	;RP0=0, select bank0
  8433  0655  1303               	bcf	3,6	;RP1=0, select bank0
  8434  0656  00A0               	movwf	??_displayDigit
  8435  0657  087C               	movf	displayDigit@D1+1,w
  8436  0658  1803               	skipnc
  8437  0659  3E01               	addlw	1
  8438  065A  00A1               	movwf	??_displayDigit+1
  8439  065B  0820               	movf	??_displayDigit,w
  8440  065C  0084               	movwf	4
  8441  065D  1783               	bsf	3,7
  8442  065E  1C21               	btfss	??_displayDigit+1,0
  8443  065F  1383               	bcf	3,7
  8444  0660  0A00               	incf	0,w
  8445  0661  00A2               	movwf	??_displayDigit+2
  8446  0662  3001               	movlw	1
  8447  0663  00A3               	movwf	??_displayDigit+3
  8448  0664  3000               	movlw	0
  8449  0665  00A4               	movwf	??_displayDigit+4
  8450  0666  2E6A               	goto	u2804
  8451  0667                     u2805:	
  8452  0667  1003               	clrc
  8453  0668  0DA3               	rlf	??_displayDigit+3,f
  8454  0669  0DA4               	rlf	??_displayDigit+4,f
  8455  066A                     u2804:	
  8456  066A  0BA2               	decfsz	??_displayDigit+2,f
  8457  066B  2E67               	goto	u2805
  8458  066C  087B               	movf	displayDigit@D1,w
  8459  066D  0084               	movwf	4
  8460  066E  1783               	bsf	3,7
  8461  066F  1C7C               	btfss	displayDigit@D1+1,0
  8462  0670  1383               	bcf	3,7
  8463  0671  0800               	movf	0,w
  8464  0672  00A5               	movwf	??_displayDigit+5
  8465  0673  0A84               	incf	4,f
  8466  0674  0800               	movf	0,w
  8467  0675  00A6               	movwf	??_displayDigit+6
  8468  0676  0825               	movf	??_displayDigit+5,w
  8469  0677  0084               	movwf	4
  8470  0678  1783               	bsf	3,7
  8471  0679  1C26               	btfss	??_displayDigit+6,0
  8472  067A  1383               	bcf	3,7
  8473  067B  0823               	movf	??_displayDigit+3,w
  8474  067C  0480               	iorwf	0,f
  8475  067D  0A84               	incf	4,f
  8476  067E  0824               	movf	??_displayDigit+4,w
  8477  067F  0480               	iorwf	0,f
  8478                           
  8479                           ;lcd.c: 177: ((*D1->sb) &= ~((1UL) << (D1->bits[1])));
  8480  0680  3010               	movlw	16
  8481  0681  077B               	addwf	displayDigit@D1,w
  8482  0682  00A0               	movwf	??_displayDigit
  8483  0683  087C               	movf	displayDigit@D1+1,w
  8484  0684  1803               	skipnc
  8485  0685  3E01               	addlw	1
  8486  0686  00A1               	movwf	??_displayDigit+1
  8487  0687  0820               	movf	??_displayDigit,w
  8488  0688  0084               	movwf	4
  8489  0689  1783               	bsf	3,7
  8490  068A  1C21               	btfss	??_displayDigit+1,0
  8491  068B  1383               	bcf	3,7
  8492  068C  0A00               	incf	0,w
  8493  068D  00A2               	movwf	??_displayDigit+2
  8494  068E  3001               	movlw	1
  8495  068F  00A3               	movwf	??_displayDigit+3
  8496  0690  3000               	movlw	0
  8497  0691  00A4               	movwf	??_displayDigit+4
  8498  0692  2E96               	goto	u2814
  8499  0693                     u2815:	
  8500  0693  1003               	clrc
  8501  0694  0DA3               	rlf	??_displayDigit+3,f
  8502  0695  0DA4               	rlf	??_displayDigit+4,f
  8503  0696                     u2814:	
  8504  0696  0BA2               	decfsz	??_displayDigit+2,f
  8505  0697  2E93               	goto	u2815
  8506  0698  09A3               	comf	??_displayDigit+3,f
  8507  0699  09A4               	comf	??_displayDigit+4,f
  8508  069A  3002               	movlw	2
  8509  069B  077B               	addwf	displayDigit@D1,w
  8510  069C  00A5               	movwf	??_displayDigit+5
  8511  069D  087C               	movf	displayDigit@D1+1,w
  8512  069E  1803               	skipnc
  8513  069F  3E01               	addlw	1
  8514  06A0  00A6               	movwf	??_displayDigit+6
  8515  06A1  0825               	movf	??_displayDigit+5,w
  8516  06A2  0084               	movwf	4
  8517  06A3  1783               	bsf	3,7
  8518  06A4  1C26               	btfss	??_displayDigit+6,0
  8519  06A5  1383               	bcf	3,7
  8520  06A6  0800               	movf	0,w
  8521  06A7  00A7               	movwf	??_displayDigit+7
  8522  06A8  0A84               	incf	4,f
  8523  06A9  0800               	movf	0,w
  8524  06AA  00A8               	movwf	??_displayDigit+8
  8525  06AB  0827               	movf	??_displayDigit+7,w
  8526  06AC  0084               	movwf	4
  8527  06AD  1783               	bsf	3,7
  8528  06AE  1C28               	btfss	??_displayDigit+8,0
  8529  06AF  1383               	bcf	3,7
  8530  06B0  0823               	movf	??_displayDigit+3,w
  8531  06B1  0580               	andwf	0,f
  8532  06B2  0A84               	incf	4,f
  8533  06B3  0824               	movf	??_displayDigit+4,w
  8534  06B4  0580               	andwf	0,f
  8535                           
  8536                           ;lcd.c: 178: ((*D1->sc) &= ~((1UL) << (D1->bits[2])));
  8537  06B5  3012               	movlw	18
  8538  06B6  077B               	addwf	displayDigit@D1,w
  8539  06B7  00A0               	movwf	??_displayDigit
  8540  06B8  087C               	movf	displayDigit@D1+1,w
  8541  06B9  1803               	skipnc
  8542  06BA  3E01               	addlw	1
  8543  06BB  00A1               	movwf	??_displayDigit+1
  8544  06BC  0820               	movf	??_displayDigit,w
  8545  06BD  0084               	movwf	4
  8546  06BE  1783               	bsf	3,7
  8547  06BF  1C21               	btfss	??_displayDigit+1,0
  8548  06C0  1383               	bcf	3,7
  8549  06C1  0A00               	incf	0,w
  8550  06C2  00A2               	movwf	??_displayDigit+2
  8551  06C3  3001               	movlw	1
  8552  06C4  00A3               	movwf	??_displayDigit+3
  8553  06C5  3000               	movlw	0
  8554  06C6  00A4               	movwf	??_displayDigit+4
  8555  06C7  2ECB               	goto	u2824
  8556  06C8                     u2825:	
  8557  06C8  1003               	clrc
  8558  06C9  0DA3               	rlf	??_displayDigit+3,f
  8559  06CA  0DA4               	rlf	??_displayDigit+4,f
  8560  06CB                     u2824:	
  8561  06CB  0BA2               	decfsz	??_displayDigit+2,f
  8562  06CC  2EC8               	goto	u2825
  8563  06CD  09A3               	comf	??_displayDigit+3,f
  8564  06CE  09A4               	comf	??_displayDigit+4,f
  8565  06CF  3004               	movlw	4
  8566  06D0  077B               	addwf	displayDigit@D1,w
  8567  06D1  00A5               	movwf	??_displayDigit+5
  8568  06D2  087C               	movf	displayDigit@D1+1,w
  8569  06D3  1803               	skipnc
  8570  06D4  3E01               	addlw	1
  8571  06D5  00A6               	movwf	??_displayDigit+6
  8572  06D6  0825               	movf	??_displayDigit+5,w
  8573  06D7  0084               	movwf	4
  8574  06D8  1783               	bsf	3,7
  8575  06D9  1C26               	btfss	??_displayDigit+6,0
  8576  06DA  1383               	bcf	3,7
  8577  06DB  0800               	movf	0,w
  8578  06DC  00A7               	movwf	??_displayDigit+7
  8579  06DD  0A84               	incf	4,f
  8580  06DE  0800               	movf	0,w
  8581  06DF  00A8               	movwf	??_displayDigit+8
  8582  06E0  0827               	movf	??_displayDigit+7,w
  8583  06E1  0084               	movwf	4
  8584  06E2  1783               	bsf	3,7
  8585  06E3  1C28               	btfss	??_displayDigit+8,0
  8586  06E4  1383               	bcf	3,7
  8587  06E5  0823               	movf	??_displayDigit+3,w
  8588  06E6  0580               	andwf	0,f
  8589  06E7  0A84               	incf	4,f
  8590  06E8  0824               	movf	??_displayDigit+4,w
  8591  06E9  0580               	andwf	0,f
  8592                           
  8593                           ;lcd.c: 179: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  8594  06EA  3014               	movlw	20
  8595  06EB  077B               	addwf	displayDigit@D1,w
  8596  06EC  00A0               	movwf	??_displayDigit
  8597  06ED  087C               	movf	displayDigit@D1+1,w
  8598  06EE  1803               	skipnc
  8599  06EF  3E01               	addlw	1
  8600  06F0  00A1               	movwf	??_displayDigit+1
  8601  06F1  0820               	movf	??_displayDigit,w
  8602  06F2  0084               	movwf	4
  8603  06F3  1783               	bsf	3,7
  8604  06F4  1C21               	btfss	??_displayDigit+1,0
  8605  06F5  1383               	bcf	3,7
  8606  06F6  0A00               	incf	0,w
  8607  06F7  00A2               	movwf	??_displayDigit+2
  8608  06F8  3001               	movlw	1
  8609  06F9  00A3               	movwf	??_displayDigit+3
  8610  06FA  3000               	movlw	0
  8611  06FB  00A4               	movwf	??_displayDigit+4
  8612  06FC  2F00               	goto	u2834
  8613  06FD                     u2835:	
  8614  06FD  1003               	clrc
  8615  06FE  0DA3               	rlf	??_displayDigit+3,f
  8616  06FF  0DA4               	rlf	??_displayDigit+4,f
  8617  0700                     u2834:	
  8618  0700  0BA2               	decfsz	??_displayDigit+2,f
  8619  0701  2EFD               	goto	u2835
  8620  0702  3006               	movlw	6
  8621  0703  077B               	addwf	displayDigit@D1,w
  8622  0704  00A5               	movwf	??_displayDigit+5
  8623  0705  087C               	movf	displayDigit@D1+1,w
  8624  0706  1803               	skipnc
  8625  0707  3E01               	addlw	1
  8626  0708  00A6               	movwf	??_displayDigit+6
  8627  0709  0825               	movf	??_displayDigit+5,w
  8628  070A  0084               	movwf	4
  8629  070B  1783               	bsf	3,7
  8630  070C  1C26               	btfss	??_displayDigit+6,0
  8631  070D  1383               	bcf	3,7
  8632  070E  0800               	movf	0,w
  8633  070F  00A7               	movwf	??_displayDigit+7
  8634  0710  0A84               	incf	4,f
  8635  0711  0800               	movf	0,w
  8636  0712  00A8               	movwf	??_displayDigit+8
  8637  0713  0827               	movf	??_displayDigit+7,w
  8638  0714  0084               	movwf	4
  8639  0715  1783               	bsf	3,7
  8640  0716  1C28               	btfss	??_displayDigit+8,0
  8641  0717  1383               	bcf	3,7
  8642  0718  0823               	movf	??_displayDigit+3,w
  8643  0719  0480               	iorwf	0,f
  8644  071A  0A84               	incf	4,f
  8645  071B  0824               	movf	??_displayDigit+4,w
  8646  071C  0480               	iorwf	0,f
  8647                           
  8648                           ;lcd.c: 180: ((*D1->se) |= (1UL) << (D1->bits[4]));
  8649  071D  3016               	movlw	22
  8650  071E  077B               	addwf	displayDigit@D1,w
  8651  071F  00A0               	movwf	??_displayDigit
  8652  0720  087C               	movf	displayDigit@D1+1,w
  8653  0721  1803               	skipnc
  8654  0722  3E01               	addlw	1
  8655  0723  00A1               	movwf	??_displayDigit+1
  8656  0724  0820               	movf	??_displayDigit,w
  8657  0725  0084               	movwf	4
  8658  0726  1783               	bsf	3,7
  8659  0727  1C21               	btfss	??_displayDigit+1,0
  8660  0728  1383               	bcf	3,7
  8661  0729  0A00               	incf	0,w
  8662  072A  00A2               	movwf	??_displayDigit+2
  8663  072B  3001               	movlw	1
  8664  072C  00A3               	movwf	??_displayDigit+3
  8665  072D  3000               	movlw	0
  8666  072E  00A4               	movwf	??_displayDigit+4
  8667  072F  2F33               	goto	u2844
  8668  0730                     u2845:	
  8669  0730  1003               	clrc
  8670  0731  0DA3               	rlf	??_displayDigit+3,f
  8671  0732  0DA4               	rlf	??_displayDigit+4,f
  8672  0733                     u2844:	
  8673  0733  0BA2               	decfsz	??_displayDigit+2,f
  8674  0734  2F30               	goto	u2845
  8675  0735  3008               	movlw	8
  8676  0736  077B               	addwf	displayDigit@D1,w
  8677  0737  00A5               	movwf	??_displayDigit+5
  8678  0738  087C               	movf	displayDigit@D1+1,w
  8679  0739  1803               	skipnc
  8680  073A  3E01               	addlw	1
  8681  073B  00A6               	movwf	??_displayDigit+6
  8682  073C  0825               	movf	??_displayDigit+5,w
  8683  073D  0084               	movwf	4
  8684  073E  1783               	bsf	3,7
  8685  073F  1C26               	btfss	??_displayDigit+6,0
  8686  0740  1383               	bcf	3,7
  8687  0741  0800               	movf	0,w
  8688  0742  00A7               	movwf	??_displayDigit+7
  8689  0743  0A84               	incf	4,f
  8690  0744  0800               	movf	0,w
  8691  0745  00A8               	movwf	??_displayDigit+8
  8692  0746  0827               	movf	??_displayDigit+7,w
  8693  0747  0084               	movwf	4
  8694  0748  1783               	bsf	3,7
  8695  0749  1C28               	btfss	??_displayDigit+8,0
  8696  074A  1383               	bcf	3,7
  8697  074B  0823               	movf	??_displayDigit+3,w
  8698  074C  0480               	iorwf	0,f
  8699  074D  0A84               	incf	4,f
  8700  074E  0824               	movf	??_displayDigit+4,w
  8701  074F  0480               	iorwf	0,f
  8702                           
  8703                           ;lcd.c: 181: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  8704  0750  3018               	movlw	24
  8705  0751  077B               	addwf	displayDigit@D1,w
  8706  0752  00A0               	movwf	??_displayDigit
  8707  0753  087C               	movf	displayDigit@D1+1,w
  8708  0754  1803               	skipnc
  8709  0755  3E01               	addlw	1
  8710  0756  00A1               	movwf	??_displayDigit+1
  8711  0757  0820               	movf	??_displayDigit,w
  8712  0758  0084               	movwf	4
  8713  0759  1783               	bsf	3,7
  8714  075A  1C21               	btfss	??_displayDigit+1,0
  8715  075B  1383               	bcf	3,7
  8716  075C  0A00               	incf	0,w
  8717  075D  00A2               	movwf	??_displayDigit+2
  8718  075E  3001               	movlw	1
  8719  075F  00A3               	movwf	??_displayDigit+3
  8720  0760  3000               	movlw	0
  8721  0761  00A4               	movwf	??_displayDigit+4
  8722  0762  2F66               	goto	u2854
  8723  0763                     u2855:	
  8724  0763  1003               	clrc
  8725  0764  0DA3               	rlf	??_displayDigit+3,f
  8726  0765  0DA4               	rlf	??_displayDigit+4,f
  8727  0766                     u2854:	
  8728  0766  0BA2               	decfsz	??_displayDigit+2,f
  8729  0767  2F63               	goto	u2855
  8730  0768  300A               	movlw	10
  8731  0769  077B               	addwf	displayDigit@D1,w
  8732  076A  00A5               	movwf	??_displayDigit+5
  8733  076B  087C               	movf	displayDigit@D1+1,w
  8734  076C  1803               	skipnc
  8735  076D  3E01               	addlw	1
  8736  076E  00A6               	movwf	??_displayDigit+6
  8737  076F  0825               	movf	??_displayDigit+5,w
  8738  0770  0084               	movwf	4
  8739  0771  1783               	bsf	3,7
  8740  0772  1C26               	btfss	??_displayDigit+6,0
  8741  0773  1383               	bcf	3,7
  8742  0774  0800               	movf	0,w
  8743  0775  00A7               	movwf	??_displayDigit+7
  8744  0776  0A84               	incf	4,f
  8745  0777  0800               	movf	0,w
  8746  0778  00A8               	movwf	??_displayDigit+8
  8747  0779  0827               	movf	??_displayDigit+7,w
  8748  077A  0084               	movwf	4
  8749  077B  1783               	bsf	3,7
  8750  077C  1C28               	btfss	??_displayDigit+8,0
  8751  077D  1383               	bcf	3,7
  8752  077E  0823               	movf	??_displayDigit+3,w
  8753  077F  0480               	iorwf	0,f
  8754  0780  0A84               	incf	4,f
  8755  0781  0824               	movf	??_displayDigit+4,w
  8756  0782  0480               	iorwf	0,f
  8757                           
  8758                           ;lcd.c: 182: ((*D1->sg) &= ~((1UL) << (D1->bits[6])));
  8759  0783  301A               	movlw	26
  8760  0784  077B               	addwf	displayDigit@D1,w
  8761  0785  00A0               	movwf	??_displayDigit
  8762  0786  087C               	movf	displayDigit@D1+1,w
  8763  0787  1803               	skipnc
  8764  0788  3E01               	addlw	1
  8765  0789  00A1               	movwf	??_displayDigit+1
  8766  078A  0820               	movf	??_displayDigit,w
  8767  078B  0084               	movwf	4
  8768  078C  1783               	bsf	3,7
  8769  078D  1C21               	btfss	??_displayDigit+1,0
  8770  078E  1383               	bcf	3,7
  8771  078F  0A00               	incf	0,w
  8772  0790  00A2               	movwf	??_displayDigit+2
  8773  0791  3001               	movlw	1
  8774  0792  00A3               	movwf	??_displayDigit+3
  8775  0793  3000               	movlw	0
  8776  0794  00A4               	movwf	??_displayDigit+4
  8777  0795  2F99               	goto	u2864
  8778  0796                     u2865:	
  8779  0796  1003               	clrc
  8780  0797  0DA3               	rlf	??_displayDigit+3,f
  8781  0798  0DA4               	rlf	??_displayDigit+4,f
  8782  0799                     u2864:	
  8783  0799  0BA2               	decfsz	??_displayDigit+2,f
  8784  079A  2F96               	goto	u2865
  8785  079B  09A3               	comf	??_displayDigit+3,f
  8786  079C  09A4               	comf	??_displayDigit+4,f
  8787  079D  300C               	movlw	12
  8788  079E  077B               	addwf	displayDigit@D1,w
  8789  079F  00A5               	movwf	??_displayDigit+5
  8790  07A0  087C               	movf	displayDigit@D1+1,w
  8791  07A1  1803               	skipnc
  8792  07A2  3E01               	addlw	1
  8793  07A3  00A6               	movwf	??_displayDigit+6
  8794  07A4  0825               	movf	??_displayDigit+5,w
  8795  07A5  0084               	movwf	4
  8796  07A6  1783               	bsf	3,7
  8797  07A7  1C26               	btfss	??_displayDigit+6,0
  8798  07A8  1383               	bcf	3,7
  8799  07A9  0800               	movf	0,w
  8800  07AA  00A7               	movwf	??_displayDigit+7
  8801  07AB  0A84               	incf	4,f
  8802  07AC  0800               	movf	0,w
  8803  07AD  00A8               	movwf	??_displayDigit+8
  8804  07AE  0827               	movf	??_displayDigit+7,w
  8805  07AF  0084               	movwf	4
  8806  07B0  1783               	bsf	3,7
  8807  07B1  1C28               	btfss	??_displayDigit+8,0
  8808  07B2  1383               	bcf	3,7
  8809  07B3  0823               	movf	??_displayDigit+3,w
  8810  07B4  0580               	andwf	0,f
  8811  07B5  0A84               	incf	4,f
  8812  07B6  0824               	movf	??_displayDigit+4,w
  8813  07B7  0580               	andwf	0,f
  8814                           
  8815                           ;lcd.c: 184: }
  8816                           
  8817                           ;lcd.c: 183: break;
  8818  07B8  0008               	return
  8819  07B9                     l1360:	
  8820                           
  8821                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8822                           ; Switch size 1, requested type "space"
  8823                           ; Number of cases is 1, Range of values is 0 to 0
  8824                           ; switch strategies available:
  8825                           ; Name         Instructions Cycles
  8826                           ; simple_byte            4     3 (average)
  8827                           ; direct_byte           11     8 (fixed)
  8828                           ; jumptable            260     6 (fixed)
  8829                           ;	Chosen strategy is simple_byte
  8830  07B9  087A               	movf	displayDigit@digito+1,w
  8831  07BA  3A00               	xorlw	0	; case 0
  8832  07BB  1903               	skipnz
  8833  07BC  2FBE               	goto	l1900
  8834  07BD  2FE1               	goto	l161
  8835  07BE                     l1900:	
  8836                           
  8837                           ; Switch size 1, requested type "space"
  8838                           ; Number of cases is 11, Range of values is 0 to 67
  8839                           ; switch strategies available:
  8840                           ; Name         Instructions Cycles
  8841                           ; simple_byte           34    18 (average)
  8842                           ; direct_byte          212     8 (fixed)
  8843                           ; jumptable            260     6 (fixed)
  8844                           ;	Chosen strategy is simple_byte
  8845  07BE  0879               	movf	displayDigit@digito,w
  8846  07BF  3A00               	xorlw	0	; case 0
  8847  07C0  1903               	skipnz
  8848  07C1  2FE2               	goto	L1
  8849  07C2  3A01               	xorlw	1	; case 1
  8850  07C3  1903               	skipnz
  8851  07C4  2FE5               	goto	L3
  8852  07C5  3A03               	xorlw	3	; case 2
  8853  07C6  1903               	skipnz
  8854  07C7  2FE8               	goto	L5
  8855  07C8  3A01               	xorlw	1	; case 3
  8856  07C9  1903               	skipnz
  8857  07CA  2FEB               	goto	L7
  8858  07CB  3A07               	xorlw	7	; case 4
  8859  07CC  1903               	skipnz
  8860  07CD  2FEE               	goto	L9
  8861  07CE  3A01               	xorlw	1	; case 5
  8862  07CF  1903               	skipnz
  8863  07D0  2FF1               	goto	L11
  8864  07D1  3A03               	xorlw	3	; case 6
  8865  07D2  1903               	skipnz
  8866  07D3  28C2               	goto	l1348
  8867  07D4  3A01               	xorlw	1	; case 7
  8868  07D5  1903               	skipnz
  8869  07D6  2A25               	goto	l1350
  8870  07D7  3A0F               	xorlw	15	; case 8
  8871  07D8  1903               	skipnz
  8872  07D9  2B8E               	goto	l1352
  8873  07DA  3A01               	xorlw	1	; case 9
  8874  07DB  1903               	skipnz
  8875  07DC  2CEF               	goto	l1354
  8876  07DD  3A4A               	xorlw	74	; case 67
  8877  07DE  1903               	skipnz
  8878  07DF  2E52               	goto	l1356
  8879  07E0  2FE1               	goto	l161
  8880  07E1                     l161:	
  8881  07E1  0008               	return
  8882  07E2                     L1:	
  8883  07E2                     __end_of_displayDigit:	
  8884  07E2  120A  158A  2888   	ljmp	l1336
  8885  07E5                     L3:	
  8886  07E5                     L2:	
  8887  07E5  120A  158A  2D66   	ljmp	l1338
  8888  07E8                     L5:	
  8889  07E8                     L4:	
  8890  07E8  160A  118A  2EEF   	ljmp	l1340
  8891  07EB                     L7:	
  8892  07EB                     L6:	
  8893  07EB  120A  158A  2C34   	ljmp	l1342
  8894  07EE                     L9:	
  8895  07EE                     L8:	
  8896  07EE  120A  158A  2997   	ljmp	l1344
  8897  07F1                     L11:	
  8898  07F1                     L10:	
  8899  07F1  120A  158A  2B00   	ljmp	l1346


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     62      77
    BANK1            80     61      61
    BANK3            96     56      56
    BANK2            80      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 33
		 -> main@str(BANK1[33]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 0

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 33
		 -> main@str(BANK1[33]), 

    displayDigit@D1.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    displayDigit@D1.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    displayDigit@D1.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    displayDigit@D1.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    displayDigit@D1.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    displayDigit@D1.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    displayDigit@D1.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    displayDigit@D1	PTR struct . size(2) Largest target is 28
		 -> main@D3(BANK3[28]), main@D2(BANK3[28]), main@D1(BANK1[28]), 

    displayNumber@D1	PTR struct . size(1) Largest target is 28
		 -> main@D1(BANK1[28]), 

    displayNumber@D2	PTR struct . size(1) Largest target is 28
		 -> main@D2(BANK3[28]), 

    displayNumber@D3	PTR struct . size(1) Largest target is 28
		 -> main@D3(BANK3[28]), 

    LCD_mapping@D3.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D3.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D3.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D3.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    LCD_mapping@D3.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D3.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D3.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D3	PTR struct . size(1) Largest target is 28
		 -> main@D3(BANK3[28]), 

    LCD_mapping@D2.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D2.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D2.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D2.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    LCD_mapping@D2.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D2.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D2.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D2	PTR struct . size(1) Largest target is 28
		 -> main@D2(BANK3[28]), 

    LCD_mapping@D1.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D1.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D1.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D1.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    LCD_mapping@D1.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D1.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D1.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D1	PTR struct . size(1) Largest target is 28
		 -> main@D1(BANK1[28]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 33
		 -> main@str(BANK1[33]), 

    D3.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    D3.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    D3.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    D3.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    D3.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    D3.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    D3.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    D2.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    D2.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    D2.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    D2.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    D2.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    D2.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    D2.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    S19$sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    D1.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    S19$sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    D1.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    S19$se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    D1.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    S19$sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    D1.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    S19$sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    D1.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    S19$sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    D1.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    S19$sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    D1.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 


Critical Paths under _main in COMMON

    _utoa->___lwdiv
    _displayNumber->_displayDigit
    _displayDigit->___awdiv
    _UART_Write_Text->_UART_Write
    _UART_Init->___aldiv
    _PID->___awtoft
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_PID
    _displayNumber->_displayDigit
    _UART_Init->___aldiv
    _PID->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               125   125      0   16456
                                             54 BANK0      8     8      0
                                              0 BANK1     61    61      0
                                              0 BANK3     56    56      0
                           _LCD_init
                        _LCD_mapping
                                _PID
                           _PID_init
                          _UART_Init
                         _UART_Write
                    _UART_Write_Text
                      _displayNumber
                               _utoa
 ---------------------------------------------------------------------------------
 (1) _utoa                                                 9     5      4    1181
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _displayNumber                                        5     0      5    5138
                                              9 BANK0      5     0      5
                            ___awdiv
                            ___awmod
                       _displayDigit
 ---------------------------------------------------------------------------------
 (2) _displayDigit                                        13     9      4    3728
                                              9 COMMON     4     0      4
                                              0 BANK0      9     9      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     508
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     512
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      4     4      0     139
                                              1 COMMON     4     4      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     526
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _PID_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PID                                                 11     7      4    7575
                                             43 BANK0     11     7      4
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                             29 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2312
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    2800
                                             16 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1918
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _LCD_mapping                                          5     3      2    1057
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
   _LCD_mapping
   _PID
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _PID_init
   _UART_Init
     ___aldiv
   _UART_Write
   _UART_Write_Text
     _UART_Write
   _displayNumber
     ___awdiv
     ___awmod
     _displayDigit
       ___awdiv (ARG)
   _utoa
     ___lwdiv
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50     3E      4D       4       96.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50     3D      3D       6       76.3%
BITBANK3            60      0       0       7        0.0%
BANK3               60     38      38       8       58.3%
BANK2               50      0       0       9        0.0%
ABS                  0      0      D0      10        0.0%
BITBANK2            50      0       0      11        0.0%
DATA                 0      0      D0      12        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sun Oct 22 19:08:42 2017

                       _D 0067                         _I 0069                         _P 006B  
             __CFG_CP$OFF 0000              ___awdiv@sign 0076                        _kd 0061  
                      _ki 0064                        _kp 005E             ?_displayDigit 0079  
            ___ftadd@exp1 003C              ___ftadd@exp2 003B              ___ftadd@sign 003A  
                     l161 07E1                       l191 0807                       l345 12F3  
                     l451 1FCA                       l542 12C7                       l458 1FDF  
                     l482 168E                       l459 1FE7                       l557 10B1  
                     _RC5 003D                       _RD7 0047                       _PR2 0092  
                     _PID 1370              __CFG_CPD$OFF 0000                       fsr0 0004  
                     indf 0000              ___awmod@sign 0076              __CFG_IESO$ON 0000  
          ?_displayNumber 0029                      ?_PID 004B                      l1310 1FB4  
                    l1302 1F9C                      l1306 1FA3                      l1402 1367  
                    l1316 1FCF                      l1308 1FAF                      l1420 1017  
                    l1340 16EF                      l1318 1FD9                      l1510 1616  
                    l1430 101F                      l1414 100C                      l1350 0225  
                    l1342 0C34                      l1432 102D                      l1352 038E  
                    l1344 0997                      l1336 0888                      l1360 07B9  
                    l1506 160F                      l1610 14CE                      l1442 104E  
                    l1354 04EF                      l1346 0B00                      l1338 0D66  
                    l1540 1669                      l1516 1625                      l1356 0652  
                    l1348 00C2                      l1534 1654                      l1606 14BE  
                    l1446 1056                      l1438 1043                      l1470 1F60  
                    l1462 1F5A                      l1702 0029                      l1552 16A0  
                    l1536 1660                      l1528 163F                      l1384 1314  
                    l1376 1304                      l1472 1F6E                      l1480 1F87  
                    l1546 167E                      l1538 1665                      l1626 126D  
                    l1394 134C                      l1386 1324                      l1458 1F53  
                    l1706 0034                      l1802 1083                      l1556 16B2  
                    l1548 168A                      l1652 12BC                      l1644 129F  
                    l1484 1F8F                      l1476 1F7C                      l1900 07BE  
                    l1566 16D5                      l1582 1457                      l1654 12CA  
                    l1646 12AF                      l1398 1359                      l1496 1EF6  
                    l1576 1441                      l1680 1F39                      l1672 1F15  
                    l1594 1496                      l1658 12D8                      l1826 1ED0  
                    l1674 1F23                      l1684 1F44                      l1598 14A6  
                    l1862 158A                      l1696 000D                      l1792 1062  
                    l1698 001B                      _BRGH 04C2                      _CREN 00C4  
                    u2015 1FC3                      u2104 08A0                      u2105 089D  
                    u2114 08CC                      u2035 1FD2                      u2115 08C9  
                    u2204 0E12                      u2124 08FF                      u3005 1022  
                    u2205 0E0F                      u2125 08FC                      u2214 11C9  
                    u2134 0932                      u2215 11C6                      u2135 092F  
                    u2304 0C16                      u2224 11FE                      u2144 0965  
                    u3025 102E                      u3105 1F63                      u2305 0C13  
                    u2225 11FB                      u2145 0962                      u2314 0C4C  
                    u2234 1233                      u2154 0D13                      u2075 1FEE  
                    u3035 103A                      u2315 0C49                      u2235 1230  
                    u2155 0D10                      u2404 0A10                      u2324 0C78  
                    u2244 1707                      u2164 0D46                      u3045 1044  
                    u3125 1F74                      u2405 0A0D                      u2325 0C75  
                    u2245 1704                      u2165 0D43                      u2414 0A43  
                    u2334 0CAB                      u2254 1733                      u2174 0D7E  
                    u3135 1F7D                      u2415 0A40                      u2335 0CA8  
                    u2255 1730                      u2175 0D7B                      u2504 0071  
                    u2424 0A78                      u2344 0CDE                      u2264 1766  
                    u2184 0DAC                      u2505 006E                      u2425 0A75  
                    u2345 0CDB                      u2265 1763                      u2185 0DA9  
                    u2514 00A4                      u2434 0AAF                      u2354 113E  
                    u2274 179B                      u2194 0DDF                      u2515 00A1  
                    u2435 0AAC                      u2355 113B                      u2275 1798  
                    u2195 0DDC                      u2604 0269                      u2524 00DA  
                    u2444 0AE2                      u2364 1173                      u2284 17CE  
                    u3325 166A                      u2605 0266                      u2525 00D7  
                    u2445 0ADF                      u2365 1170                      u2285 17CB  
                    u2614 029C                      u2534 0106                      u2454 0B18  
                    u2374 11A8                      u2294 0BE1                      u2615 0299  
                    u2535 0103                      u2455 0B15                      u2375 11A5  
                    u2295 0BDE                      u2704 046B                      u2624 02CF  
                    u2544 013B                      u2464 0B44                      u2384 09AF  
                    u3265 1640                      u2705 0468                      u2625 02CC  
                    u2545 0138                      u2465 0B41                      u2385 09AC  
                    u2714 049E                      u2634 0304                      u2554 016E  
                    u2474 0B79                      u2394 09DD                      u3355 167F  
                    u3435 1463                      u2715 049B                      u2635 0301  
                    u2555 016B                      u2475 0B76                      u2395 09DA  
                    u2804 066A                      u2724 04D1                      u2644 0339  
                    u2564 01A1                      u2484 0BAC                      u3525 14CF  
                    u3445 1475                      u2805 0667                      u2725 04CE  
                    u2645 0336                      u2565 019E                      u2485 0BA9  
                    u2814 0696                      u2734 0507                      u2654 036E  
                    u2574 01D4                      u2494 003C                      u3295 1655  
                    u3535 14D7                      u2815 0693                      u2735 0504  
                    u2655 036B                      u2575 01D1                      u2495 0039  
                    u2824 06CB                      u2744 0533                      u2664 03A6  
                    u2584 0207                      u3625 12BE                      u2905 1318  
                    u2825 06C8                      u2745 0530                      u2665 03A3  
                    u2585 0204                      u3705 1F3A                      u3810 110D  
                    u2834 0700                      u2754 0566                      u2674 03D2  
                    u2594 023D                      u3475 14A7                      u3811 110E  
                    u2835 06FD                      u2755 0563                      u2675 03CF  
                    u2595 023A                      u3812 1113                      u2844 0733  
                    u2764 0599                      u2684 0405                      u3485 14AF  
                    u3565 1274                      u2925 1326                      u3813 1114  
                    u3805 10F3                      u2845 0730                      u2765 0596  
                    u2685 0402                      u2854 0766                      u2774 05CC  
                    u2694 0438                      u2935 133B                      u2855 0763  
                    u2775 05C9                      u2695 0435                      u3735 0010  
                    u2864 0799                      u2784 0601                      u3904 1581  
                    u2945 134D                      u2865 0796                      u2785 05FE  
                    u3665 1F18                      u3905 157F                      u2794 0634  
                    u1995 1FA8                      u3595 12A0                      u2795 0631  
                    u3755 0021                      _RCIF 0065                      u3685 1F24  
                    u3765 002A                      u3917 15DE                      u3695 1F30  
                    u3864 1543                      u3865 1541                      u3874 1557  
                    u3795 10D2                      u3875 1555                      u3884 1563  
                    u3885 1561                      u3894 156F                      u3895 156D  
                    _SPEN 00C7                      _TRMT 04C1                      _TXEN 04C5  
                    _SYNC 04C4              ?_LCD_mapping 0070             __CFG_FCMEN$ON 0000  
                    _main 14FC              ___ftpack@arg 0070              ___ftpack@exp 0073  
                    btemp 007E                      _utoa 105B             __CFG_BOREN$ON 0000  
                    start 0000             __CFG_MCLRE$ON 0000              ___ftmul@cntr 002E  
            ___ftmul@sign 002F   __end_of_UART_Write_Text 1EEC                     ??_PID 004F  
            ___fttol@exp1 004A              ___fttol@lval 0046            ??_displayDigit 0020  
        __end_of_LCD_init 1EB2           __end_of___aldiv 1370                     ?_main 0070  
         __end_of___awdiv 105B           __end_of___ftadd 16EF             __CFG_WDTE$OFF 0000  
         __end_of___awmod 1F94                     _ANSEL 0091                     ?_utoa 0078  
         __end_of___ftmul 14FC           ___awdiv@divisor 0070                     _T1CON 0010  
         __end_of___fttol 12E1                     _T2CON 0012                     _LCDPS 0108  
         __end_of___lwdiv 1F49           __end_of___lwmod 0039           ___awdiv@counter 0075  
                   _RCREG 001A                     _TMR1H 000F                     _TMR1L 000E  
                   _SPBRG 0099                     _PORTD 0008                     _TRISA 0085  
                   _TRISC 0087                     _TRISD 0088                     _TXREG 0019  
        __end_of_PID_init 1ECD               ?_UART_Write 0070        __size_of_UART_Init 0074  
           ___awtoft@sign 007D             ___ftpack@sign 0074              main@setpoint 005A  
                   utoa@c 0022                     utoa@v 0020                     status 0003  
                   wtemp0 007E           __initialization 07F4              __end_of_main 15E6  
            __end_of_utoa 10C7                    ??_main 0056             ___fttol@sign1 0045  
                  ??_utoa 007C           ??_displayNumber 007D                    _ADCON0 001F  
                  _ADCON1 009F                    _ADRESH 001E                    _ADRESL 009E  
                  _CCPR2L 001B          ___awdiv@dividend 0072          __end_of___awtoft 1F0D  
        __end_of___ftpack 2000                    _LCDCON 0107                    _LCDSE0 011C  
                  _LCDSE1 011D                    _LCDSE2 011E                    _T1SYNC 0082  
                  _INTCON 000B                    _OSCCON 008F                    _TMR1CS 0081  
                  _TMR1ON 0080                    _TRISC6 043E                    _TRISC7 043F  
          __CFG_PWRTE$OFF 0000         __end_of_UART_Init 113B       __size_of_UART_Write 000A  
               ??___aldiv 0078                 ??___awdiv 0074                 ??___ftadd 0036  
               ??___awmod 0074          ?_UART_Write_Text 0070                 ??___ftmul 0026  
               ??___fttol 0041                 ??___lwdiv 0074                 ??___lwmod 0074  
        ___awdiv@quotient 0077           ___awmod@divisor 0070                    main@D1 00C1  
                  main@D2 0190                    main@D3 01AC           ___awmod@counter 0075  
   ___ftmul@f3_as_product 002B      __end_of_displayDigit 07E2   __end_of__initialization 07FC  
              ___ftadd@f1 0030                ___ftadd@f2 0033                 ?_LCD_init 0070  
    __size_of_LCD_mapping 01BA               PID@setpoint 004B                ___awtoft@c 0078  
              ___ftmul@f1 0020                ___ftmul@f2 0023                ___fttol@f1 003D  
          __pcstackCOMMON 0070                 ?_PID_init 0070                __pbssBANK0 0067  
              ??_LCD_init 0070                   PID@read 004D                __pmaintext 14FC  
              ??_PID_init 0070                   _CCP2CON 001D                 ?___awtoft 0078  
               ?___ftpack 0070                   _PID$656 0051              ??_UART_Write 0070  
          displayDigit@D1 007B                   ___aldiv 12E1                   ___awdiv 1002  
                 ___ftadd 15E6                   ___awmod 1F49        __end_of_UART_Write 0810  
                 ___ftmul 1429                   ___fttol 1253                   ___lwdiv 1F0D  
                 ___lwmod 0007                 _LCDDATA10 011A                 _LCDDATA11 011B  
              ??___awtoft 007B                ??___ftpack 0075                   __ptext1 105B  
                 __ptext2 0007                   __ptext3 1F0D                   __ptext4 0810  
                 __ptext5 0885                   __ptext6 1F49                   __ptext7 1002  
                 __ptext8 1ECD                   __ptext9 0806              __size_of_PID 00B9  
        ___awmod@dividend 0072          ___aldiv@dividend 0074     __size_of_displayDigit FF5D  
                 main@str 00A0      end_of_initialization 07FC          ___aldiv@quotient 0022  
                 psplit$0 E001E                   psplit$1 1E001F                   psplit$2 1F0020  
                 psplit$3 200021                   psplit$4 210022                   psplit$5 220023  
                 psplit$6 230024                   psplit$7 240025                   utoa@buf 0023  
                 utoa@val 0078                 _UART_Init 10C7              _displayDigit 0885  
          UART_Write@data 0070     __end_of_displayNumber 0885        displayDigit@digito 0079  
              main@timer1 005C         __size_of_LCD_init 0019               ___ftmul@exp 002A  
           LCD_mapping@D1 0074             LCD_mapping@D2 0070             LCD_mapping@D3 0071  
       __size_of_PID_init 001B                ?_UART_Init 0026  __size_of_UART_Write_Text 001F  
     start_initialization 07F4               __end_of_PID 1429         pnum$text5_split_1 001E  
       pnum$text5_split_2 001F         pnum$text5_split_3 0020         pnum$text5_split_4 0021  
       pnum$text5_split_5 0022         pnum$text5_split_6 0023         pnum$text5_split_7 0024  
       pnum$text5_split_8 0025             ??_LCD_mapping 0072         __size_of___awtoft 0021  
       __size_of___ftpack 006C                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0             __pcstackBANK3 0190                  PID@error 0054  
               __pnvBANK0 005E          ___lwdiv@dividend 0072       __end_of_LCD_mapping 1000  
                ?___aldiv 0070                  ?___awdiv 0070                  ?___ftadd 0030  
                ?___awmod 0070                  ?___ftmul 0020                  ?___fttol 003D  
                ?___lwdiv 0070                  ?___lwmod 0070               ??_UART_Init 002A  
        ___lwdiv@quotient 0075                  _LCDDATA0 0110                  _LCDDATA1 0111  
                _LCDDATA2 0112                  _LCDDATA3 0113                  _LCDDATA4 0114  
                _LCDDATA5 0115                  _LCDDATA6 0116                  _LCDDATA7 0117  
                _LCDDATA8 0118                  _LCDDATA9 0119                UART_Init@x 0079  
       ??_UART_Write_Text 0071           ___aldiv@divisor 0070           ___aldiv@counter 0020  
                _LCD_init 1E99                  _GO_nDONE 00F9                  _PID_init 1EB2  
       UART_Init@baudrate 0026          displayNumber@num 0029               _LCD_mapping 0E46  
        __size_of___aldiv 008F          __size_of___awdiv 0059          __size_of___ftadd 0109  
        __size_of___awmod 004B          __size_of___ftmul 00D3          __size_of___fttol 008E  
        __size_of___lwdiv 003C          __size_of___lwmod 0032                  ___awtoft 1EEC  
                ___ftpack 1F94           ___lwdiv@divisor 0070           ___lwdiv@counter 0077  
                __ptext10 10C7                  __ptext11 12E1                  __ptext20 1E99  
                __ptext12 1EB2                  __ptext13 1370                  __ptext14 1253  
                __ptext15 1429                  __ptext16 15E6                  __ptext17 1EEC  
                __ptext18 1F94                  __ptext19 0E46       UART_Write_Text@text 0074  
           __size_of_main 00EA                 pnum$text5 000E             __size_of_utoa 006C  
  __size_of_displayNumber 0075           displayNumber@D1 002B           displayNumber@D2 002C  
         displayNumber@D3 002D          ___lwmod@dividend 0072                  utoa@base 007A  
         _UART_Write_Text 1ECD           ___lwmod@divisor 0070           ___lwmod@counter 0075  
            ___aldiv@sign 0021                _UART_Write 0806             _displayNumber 0810  
      __CFG_FOSC$INTOSCIO 0000          UART_Write_Text@i 0072  
