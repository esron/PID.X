

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sun Oct 22 14:55:56 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F917
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text5_split_1,local,class=CODE,merge=1,delta=2
    33                           	psect	text5_split_2,local,class=CODE,merge=1,delta=2
    34                           	psect	text5_split_3,local,class=CODE,merge=1,delta=2
    35                           	psect	text5_split_4,local,class=CODE,merge=1,delta=2
    36                           	psect	text5_split_5,local,class=CODE,merge=1,delta=2
    37                           	psect	text5_split_6,local,class=CODE,merge=1,delta=2
    38                           	psect	text5_split_7,local,class=CODE,merge=1,delta=2
    39                           	psect	text5_split_8,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 1.43
    43                           ; Generated 25/07/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F917 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  008F                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  0105                     	;# 
   138  0107                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0110                     	;# 
   148  0111                     	;# 
   149  0112                     	;# 
   150  0113                     	;# 
   151  0114                     	;# 
   152  0115                     	;# 
   153  0116                     	;# 
   154  0117                     	;# 
   155  0118                     	;# 
   156  0119                     	;# 
   157  011A                     	;# 
   158  011B                     	;# 
   159  011C                     	;# 
   160  011D                     	;# 
   161  011E                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  000D                     	;# 
   178  000E                     	;# 
   179  000E                     	;# 
   180  000F                     	;# 
   181  0010                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0013                     	;# 
   185  0014                     	;# 
   186  0015                     	;# 
   187  0015                     	;# 
   188  0016                     	;# 
   189  0017                     	;# 
   190  0018                     	;# 
   191  0019                     	;# 
   192  001A                     	;# 
   193  001B                     	;# 
   194  001B                     	;# 
   195  001C                     	;# 
   196  001D                     	;# 
   197  001E                     	;# 
   198  001F                     	;# 
   199  0081                     	;# 
   200  0085                     	;# 
   201  0086                     	;# 
   202  0087                     	;# 
   203  0088                     	;# 
   204  0089                     	;# 
   205  008C                     	;# 
   206  008D                     	;# 
   207  008E                     	;# 
   208  008F                     	;# 
   209  0090                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0095                     	;# 
   215  0095                     	;# 
   216  0096                     	;# 
   217  0096                     	;# 
   218  0097                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  009F                     	;# 
   225  0105                     	;# 
   226  0107                     	;# 
   227  0108                     	;# 
   228  0109                     	;# 
   229  010C                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  0110                     	;# 
   236  0111                     	;# 
   237  0112                     	;# 
   238  0113                     	;# 
   239  0114                     	;# 
   240  0115                     	;# 
   241  0116                     	;# 
   242  0117                     	;# 
   243  0118                     	;# 
   244  0119                     	;# 
   245  011A                     	;# 
   246  011B                     	;# 
   247  011C                     	;# 
   248  011D                     	;# 
   249  011E                     	;# 
   250  018C                     	;# 
   251  018D                     	;# 
   252  0000                     	;# 
   253  0001                     	;# 
   254  0002                     	;# 
   255  0003                     	;# 
   256  0004                     	;# 
   257  0005                     	;# 
   258  0006                     	;# 
   259  0007                     	;# 
   260  0008                     	;# 
   261  0009                     	;# 
   262  000A                     	;# 
   263  000B                     	;# 
   264  000C                     	;# 
   265  000D                     	;# 
   266  000E                     	;# 
   267  000E                     	;# 
   268  000F                     	;# 
   269  0010                     	;# 
   270  0011                     	;# 
   271  0012                     	;# 
   272  0013                     	;# 
   273  0014                     	;# 
   274  0015                     	;# 
   275  0015                     	;# 
   276  0016                     	;# 
   277  0017                     	;# 
   278  0018                     	;# 
   279  0019                     	;# 
   280  001A                     	;# 
   281  001B                     	;# 
   282  001B                     	;# 
   283  001C                     	;# 
   284  001D                     	;# 
   285  001E                     	;# 
   286  001F                     	;# 
   287  0081                     	;# 
   288  0085                     	;# 
   289  0086                     	;# 
   290  0087                     	;# 
   291  0088                     	;# 
   292  0089                     	;# 
   293  008C                     	;# 
   294  008D                     	;# 
   295  008E                     	;# 
   296  008F                     	;# 
   297  0090                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0093                     	;# 
   301  0094                     	;# 
   302  0095                     	;# 
   303  0095                     	;# 
   304  0096                     	;# 
   305  0096                     	;# 
   306  0097                     	;# 
   307  0098                     	;# 
   308  0099                     	;# 
   309  009C                     	;# 
   310  009D                     	;# 
   311  009E                     	;# 
   312  009F                     	;# 
   313  0105                     	;# 
   314  0107                     	;# 
   315  0108                     	;# 
   316  0109                     	;# 
   317  010C                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  010D                     	;# 
   321  010E                     	;# 
   322  010F                     	;# 
   323  0110                     	;# 
   324  0111                     	;# 
   325  0112                     	;# 
   326  0113                     	;# 
   327  0114                     	;# 
   328  0115                     	;# 
   329  0116                     	;# 
   330  0117                     	;# 
   331  0118                     	;# 
   332  0119                     	;# 
   333  011A                     	;# 
   334  011B                     	;# 
   335  011C                     	;# 
   336  011D                     	;# 
   337  011E                     	;# 
   338  018C                     	;# 
   339  018D                     	;# 
   340                           
   341                           	psect	idataBANK3
   342  0806                     __pidataBANK3:	
   343                           
   344                           ;initializer for main@F2791
   345  0806  3439               	retlw	57
   346  0807  3439               	retlw	57
   347  0808  3439               	retlw	57
   348  0809  3439               	retlw	57
   349  080A  3439               	retlw	57
   350  080B  3439               	retlw	57
   351  080C  3439               	retlw	57
   352  080D  3439               	retlw	57
   353  080E  3439               	retlw	57
   354  080F  3439               	retlw	57
   355  0810  3439               	retlw	57
   356  0811  3439               	retlw	57
   357  0812  3439               	retlw	57
   358  0813  3439               	retlw	57
   359  0814  3439               	retlw	57
   360  0815  3439               	retlw	57
   361  0816  3400               	retlw	0
   362  001E                     _ADRESH	set	30
   363  001F                     _ADCON0	set	31
   364  000E                     _TMR1L	set	14
   365  000F                     _TMR1H	set	15
   366  0008                     _PORTD	set	8
   367  0010                     _T1CON	set	16
   368  0012                     _T2CON	set	18
   369  001D                     _CCP2CON	set	29
   370  001B                     _CCPR2L	set	27
   371  000B                     _INTCON	set	11
   372  001A                     _RCREG	set	26
   373  0019                     _TXREG	set	25
   374  00F9                     _GO_nDONE	set	249
   375  0047                     _RD7	set	71
   376  0082                     _T1SYNC	set	130
   377  0081                     _TMR1CS	set	129
   378  0080                     _TMR1ON	set	128
   379  0065                     _RCIF	set	101
   380  00C4                     _CREN	set	196
   381  00C7                     _SPEN	set	199
   382  009E                     _ADRESL	set	158
   383  009F                     _ADCON1	set	159
   384  0091                     _ANSEL	set	145
   385  0087                     _TRISC	set	135
   386  009C                     _CMCON0	set	156
   387  0092                     _PR2	set	146
   388  008F                     _OSCCON	set	143
   389  0085                     _TRISA	set	133
   390  0088                     _TRISD	set	136
   391  0099                     _SPBRG	set	153
   392  04C1                     _TRMT	set	1217
   393  04C5                     _TXEN	set	1221
   394  043E                     _TRISC6	set	1086
   395  043F                     _TRISC7	set	1087
   396  04C4                     _SYNC	set	1220
   397  04C2                     _BRGH	set	1218
   398  0107                     _LCDCON	set	263
   399  0108                     _LCDPS	set	264
   400  011A                     _LCDDATA10	set	282
   401  011E                     _LCDSE2	set	286
   402  011D                     _LCDSE1	set	285
   403  011C                     _LCDSE0	set	284
   404  0114                     _LCDDATA4	set	276
   405  0117                     _LCDDATA7	set	279
   406  0111                     _LCDDATA1	set	273
   407  0113                     _LCDDATA3	set	275
   408  0116                     _LCDDATA6	set	278
   409  0119                     _LCDDATA9	set	281
   410  0110                     _LCDDATA0	set	272
   411  0115                     _LCDDATA5	set	277
   412  011B                     _LCDDATA11	set	283
   413  0118                     _LCDDATA8	set	280
   414  0112                     _LCDDATA2	set	274
   415                           
   416                           ; #config settings
   417  0000                     
   418                           	psect	cinit
   419  07E5                     start_initialization:	
   420  07E5                     __initialization:	
   421                           
   422                           ; Initialize objects allocated to BANK3
   423  07E5  1783               	bsf	3,7	;select IRP bank2
   424  07E6  30BD               	movlw	low (__pdataBANK3+17)
   425  07E7  00FD               	movwf	btemp+-1
   426  07E8  3008               	movlw	high __pidataBANK3
   427  07E9  00FE               	movwf	btemp
   428  07EA  3006               	movlw	low __pidataBANK3
   429  07EB  00FF               	movwf	btemp+1
   430  07EC  30AC               	movlw	low __pdataBANK3
   431  07ED  0084               	movwf	4
   432  07EE  160A  158A  262A   	fcall	init_ram0
   433                           
   434                           ; Clear objects allocated to BANK1
   435  07F1  1683               	bsf	3,5	;RP0=1, select bank1
   436  07F2  1303               	bcf	3,6	;RP1=0, select bank1
   437  07F3  01E4               	clrf	__pbssBANK1& (0+127)
   438  07F4  01E5               	clrf	(__pbssBANK1+1)& (0+127)
   439  07F5  01E6               	clrf	(__pbssBANK1+2)& (0+127)
   440  07F6  01E7               	clrf	(__pbssBANK1+3)& (0+127)
   441  07F7  01E8               	clrf	(__pbssBANK1+4)& (0+127)
   442  07F8  01E9               	clrf	(__pbssBANK1+5)& (0+127)
   443  07F9  01EA               	clrf	(__pbssBANK1+6)& (0+127)
   444  07FA  01EB               	clrf	(__pbssBANK1+7)& (0+127)
   445  07FB  01EC               	clrf	(__pbssBANK1+8)& (0+127)
   446  07FC                     end_of_initialization:	
   447                           ;End of C runtime variable initialization code
   448                           
   449  07FC                     __end_of__initialization:	
   450  07FC  0183               	clrf	3
   451  07FD  120A  158A  2DFA   	ljmp	_main	;jump to C main() function
   452                           
   453                           	psect	bssBANK1
   454  00E4                     __pbssBANK1:	
   455  00E4                     _kp:	
   456  00E4                     	ds	3
   457  00E7                     _kd:	
   458  00E7                     	ds	3
   459  00EA                     _ki:	
   460  00EA                     	ds	3
   461                           
   462                           	psect	dataBANK3
   463  01AC                     __pdataBANK3:	
   464  01AC                     main@F2791:	
   465  01AC                     	ds	17
   466                           
   467                           	psect	inittext
   468  1E26                     init_fetch0:	
   469                           ;	Called with low address in FSR and high address in W
   470                           
   471  1E26  087E               	movf	126,w
   472  1E27  008A               	movwf	10
   473  1E28  087F               	movf	127,w
   474  1E29  0082               	movwf	2
   475  1E2A                     init_ram0:	
   476                           ;Called with:
   477                           ;	high address of idata address in btemp 
   478                           ;	low address of idata address in btemp+1 
   479                           ;	low address of data in FSR
   480                           ;	high address + 1 of data in btemp-1
   481                           
   482  1E2A  2626  160A  158A   	fcall	init_fetch0
   483  1E2D  0080               	movwf	0
   484  1E2E  0A84               	incf	4,f
   485  1E2F  0804               	movf	4,w
   486  1E30  067D               	xorwf	125,w
   487  1E31  1903               	btfsc	3,2
   488  1E32  3400               	retlw	0
   489  1E33  0AFF               	incf	127,f
   490  1E34  1903               	btfsc	3,2
   491  1E35  0AFE               	incf	126,f
   492  1E36  2E2A               	goto	init_ram0
   493                           
   494                           	psect	cstackBANK3
   495  0190                     __pcstackBANK3:	
   496  0190                     main@D3:	
   497                           
   498                           ; 28 bytes @ 0x0
   499  0190                     	ds	28
   500                           
   501                           	psect	cstackBANK1
   502  00A0                     __pcstackBANK1:	
   503  00A0                     main@P:	
   504                           
   505                           ; 2 bytes @ 0x0
   506  00A0                     	ds	2
   507  00A2                     main@D:	
   508                           
   509                           ; 2 bytes @ 0x2
   510  00A2                     	ds	2
   511  00A4                     main@PID_v:	
   512                           
   513                           ; 2 bytes @ 0x4
   514  00A4                     	ds	2
   515  00A6                     main@I:	
   516                           
   517                           ; 2 bytes @ 0x6
   518  00A6                     	ds	2
   519  00A8                     main@error:	
   520                           
   521                           ; 2 bytes @ 0x8
   522  00A8                     	ds	2
   523  00AA                     main@timer1:	
   524                           
   525                           ; 2 bytes @ 0xA
   526  00AA                     	ds	2
   527  00AC                     main@D1:	
   528                           
   529                           ; 28 bytes @ 0xC
   530  00AC                     	ds	28
   531  00C8                     main@D2:	
   532                           
   533                           ; 28 bytes @ 0x28
   534  00C8                     	ds	28
   535                           
   536                           	psect	cstackCOMMON
   537  0070                     __pcstackCOMMON:	
   538  0070                     ?_LCD_init:	
   539  0070                     ??_LCD_init:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_LCD_mapping:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_UART_Write:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ??_UART_Write:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_UART_Write_Text:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ?_main:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?___awdiv:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?___awmod:	
   561                           ; 2 bytes @ 0x0
   562                           
   563  0070                     ?___lwdiv:	
   564                           ; 2 bytes @ 0x0
   565                           
   566  0070                     ?___lwmod:	
   567                           ; 2 bytes @ 0x0
   568                           
   569  0070                     ?___ftpack:	
   570                           ; 2 bytes @ 0x0
   571                           
   572  0070                     ?___aldiv:	
   573                           ; 3 bytes @ 0x0
   574                           
   575  0070                     UART_Write@data:	
   576                           ; 4 bytes @ 0x0
   577                           
   578  0070                     LCD_mapping@D2:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ___awdiv@divisor:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ___awmod@divisor:	
   585                           ; 2 bytes @ 0x0
   586                           
   587  0070                     ___lwdiv@divisor:	
   588                           ; 2 bytes @ 0x0
   589                           
   590  0070                     ___lwmod@divisor:	
   591                           ; 2 bytes @ 0x0
   592                           
   593  0070                     ___ftpack@arg:	
   594                           ; 2 bytes @ 0x0
   595                           
   596  0070                     ___aldiv@divisor:	
   597                           ; 3 bytes @ 0x0
   598                           
   599                           
   600                           ; 4 bytes @ 0x0
   601  0070                     	ds	1
   602  0071                     ??_UART_Write_Text:	
   603  0071                     LCD_mapping@D3:	
   604                           ; 1 bytes @ 0x1
   605                           
   606                           
   607                           ; 1 bytes @ 0x1
   608  0071                     	ds	1
   609  0072                     ??_LCD_mapping:	
   610  0072                     UART_Write_Text@i:	
   611                           ; 1 bytes @ 0x2
   612                           
   613  0072                     ___awdiv@dividend:	
   614                           ; 2 bytes @ 0x2
   615                           
   616  0072                     ___awmod@dividend:	
   617                           ; 2 bytes @ 0x2
   618                           
   619  0072                     ___lwdiv@dividend:	
   620                           ; 2 bytes @ 0x2
   621                           
   622  0072                     ___lwmod@dividend:	
   623                           ; 2 bytes @ 0x2
   624                           
   625                           
   626                           ; 2 bytes @ 0x2
   627  0072                     	ds	1
   628  0073                     ___ftpack@exp:	
   629                           
   630                           ; 1 bytes @ 0x3
   631  0073                     	ds	1
   632  0074                     ??___awdiv:	
   633  0074                     ??___awmod:	
   634                           ; 1 bytes @ 0x4
   635                           
   636  0074                     ??___lwdiv:	
   637                           ; 1 bytes @ 0x4
   638                           
   639  0074                     ??___lwmod:	
   640                           ; 1 bytes @ 0x4
   641                           
   642  0074                     UART_Write_Text@text:	
   643                           ; 1 bytes @ 0x4
   644                           
   645  0074                     LCD_mapping@D1:	
   646                           ; 1 bytes @ 0x4
   647                           
   648  0074                     ___ftpack@sign:	
   649                           ; 1 bytes @ 0x4
   650                           
   651  0074                     ___aldiv@dividend:	
   652                           ; 1 bytes @ 0x4
   653                           
   654                           
   655                           ; 4 bytes @ 0x4
   656  0074                     	ds	1
   657  0075                     ??___ftpack:	
   658  0075                     ___awdiv@counter:	
   659                           ; 1 bytes @ 0x5
   660                           
   661  0075                     ___awmod@counter:	
   662                           ; 1 bytes @ 0x5
   663                           
   664  0075                     ___lwmod@counter:	
   665                           ; 1 bytes @ 0x5
   666                           
   667  0075                     ___lwdiv@quotient:	
   668                           ; 1 bytes @ 0x5
   669                           
   670                           
   671                           ; 2 bytes @ 0x5
   672  0075                     	ds	1
   673  0076                     ___awdiv@sign:	
   674  0076                     ___awmod@sign:	
   675                           ; 1 bytes @ 0x6
   676                           
   677                           
   678                           ; 1 bytes @ 0x6
   679  0076                     	ds	1
   680  0077                     ___lwdiv@counter:	
   681  0077                     ___awdiv@quotient:	
   682                           ; 1 bytes @ 0x7
   683                           
   684                           
   685                           ; 2 bytes @ 0x7
   686  0077                     	ds	1
   687  0078                     ?_utoa:	
   688  0078                     ??___aldiv:	
   689                           ; 1 bytes @ 0x8
   690                           
   691  0078                     ?___awtoft:	
   692                           ; 1 bytes @ 0x8
   693                           
   694  0078                     ___awtoft@c:	
   695                           ; 3 bytes @ 0x8
   696                           
   697  0078                     utoa@val:	
   698                           ; 2 bytes @ 0x8
   699                           
   700                           
   701                           ; 2 bytes @ 0x8
   702  0078                     	ds	1
   703  0079                     ?_displayDigit:	
   704  0079                     UART_Init@x:	
   705                           ; 1 bytes @ 0x9
   706                           
   707  0079                     displayDigit@digito:	
   708                           ; 2 bytes @ 0x9
   709                           
   710                           
   711                           ; 2 bytes @ 0x9
   712  0079                     	ds	1
   713  007A                     utoa@base:	
   714                           
   715                           ; 2 bytes @ 0xA
   716  007A                     	ds	1
   717  007B                     ??___awtoft:	
   718  007B                     displayDigit@D1:	
   719                           ; 1 bytes @ 0xB
   720                           
   721                           
   722                           ; 2 bytes @ 0xB
   723  007B                     	ds	1
   724  007C                     ??_utoa:	
   725                           
   726                           ; 1 bytes @ 0xC
   727  007C                     	ds	1
   728  007D                     ??_displayNumber:	
   729  007D                     ___awtoft@sign:	
   730                           ; 1 bytes @ 0xD
   731                           
   732                           
   733                           ; 1 bytes @ 0xD
   734  007D                     	ds	1
   735                           
   736                           	psect	cstackBANK0
   737  0020                     __pcstackBANK0:	
   738  0020                     ??_displayDigit:	
   739  0020                     ?___ftmul:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0020                     ___aldiv@counter:	
   743                           ; 3 bytes @ 0x0
   744                           
   745  0020                     utoa@v:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0020                     ___ftmul@f1:	
   749                           ; 2 bytes @ 0x0
   750                           
   751                           
   752                           ; 3 bytes @ 0x0
   753  0020                     	ds	1
   754  0021                     ___aldiv@sign:	
   755                           
   756                           ; 1 bytes @ 0x1
   757  0021                     	ds	1
   758  0022                     utoa@c:	
   759  0022                     ___aldiv@quotient:	
   760                           ; 1 bytes @ 0x2
   761                           
   762                           
   763                           ; 4 bytes @ 0x2
   764  0022                     	ds	1
   765  0023                     utoa@buf:	
   766  0023                     ___ftmul@f2:	
   767                           ; 1 bytes @ 0x3
   768                           
   769                           
   770                           ; 3 bytes @ 0x3
   771  0023                     	ds	3
   772  0026                     ?_UART_Init:	
   773  0026                     ??___ftmul:	
   774                           ; 1 bytes @ 0x6
   775                           
   776  0026                     UART_Init@baudrate:	
   777                           ; 1 bytes @ 0x6
   778                           
   779                           
   780                           ; 4 bytes @ 0x6
   781  0026                     	ds	3
   782  0029                     ?_displayNumber:	
   783  0029                     displayNumber@num:	
   784                           ; 1 bytes @ 0x9
   785                           
   786                           
   787                           ; 2 bytes @ 0x9
   788  0029                     	ds	1
   789  002A                     ??_UART_Init:	
   790  002A                     ___ftmul@exp:	
   791                           ; 1 bytes @ 0xA
   792                           
   793                           
   794                           ; 1 bytes @ 0xA
   795  002A                     	ds	1
   796  002B                     displayNumber@D1:	
   797  002B                     ___ftmul@f3_as_product:	
   798                           ; 1 bytes @ 0xB
   799                           
   800                           
   801                           ; 3 bytes @ 0xB
   802  002B                     	ds	1
   803  002C                     displayNumber@D2:	
   804                           
   805                           ; 1 bytes @ 0xC
   806  002C                     	ds	1
   807  002D                     displayNumber@D3:	
   808                           
   809                           ; 1 bytes @ 0xD
   810  002D                     	ds	1
   811  002E                     ___ftmul@cntr:	
   812                           
   813                           ; 1 bytes @ 0xE
   814  002E                     	ds	1
   815  002F                     ___ftmul@sign:	
   816                           
   817                           ; 1 bytes @ 0xF
   818  002F                     	ds	1
   819  0030                     ?___ftadd:	
   820  0030                     ___ftadd@f1:	
   821                           ; 3 bytes @ 0x10
   822                           
   823                           
   824                           ; 3 bytes @ 0x10
   825  0030                     	ds	3
   826  0033                     ___ftadd@f2:	
   827                           
   828                           ; 3 bytes @ 0x13
   829  0033                     	ds	3
   830  0036                     ??___ftadd:	
   831                           
   832                           ; 1 bytes @ 0x16
   833  0036                     	ds	4
   834  003A                     ___ftadd@sign:	
   835                           
   836                           ; 1 bytes @ 0x1A
   837  003A                     	ds	1
   838  003B                     ___ftadd@exp2:	
   839                           
   840                           ; 1 bytes @ 0x1B
   841  003B                     	ds	1
   842  003C                     ___ftadd@exp1:	
   843                           
   844                           ; 1 bytes @ 0x1C
   845  003C                     	ds	1
   846  003D                     ?___fttol:	
   847  003D                     ___fttol@f1:	
   848                           ; 4 bytes @ 0x1D
   849                           
   850                           
   851                           ; 3 bytes @ 0x1D
   852  003D                     	ds	4
   853  0041                     ??___fttol:	
   854                           
   855                           ; 1 bytes @ 0x21
   856  0041                     	ds	4
   857  0045                     ___fttol@sign1:	
   858                           
   859                           ; 1 bytes @ 0x25
   860  0045                     	ds	1
   861  0046                     ___fttol@lval:	
   862                           
   863                           ; 4 bytes @ 0x26
   864  0046                     	ds	4
   865  004A                     ___fttol@exp1:	
   866                           
   867                           ; 1 bytes @ 0x2A
   868  004A                     	ds	1
   869  004B                     ??_main:	
   870                           
   871                           ; 1 bytes @ 0x2B
   872  004B                     	ds	4
   873  004F                     main@str:	
   874                           
   875                           ; 17 bytes @ 0x2F
   876  004F                     	ds	17
   877  0060                     main@duty_cycle:	
   878                           
   879                           ; 1 bytes @ 0x40
   880  0060                     	ds	1
   881  0061                     main@ki:	
   882                           
   883                           ; 3 bytes @ 0x41
   884  0061                     	ds	3
   885  0064                     main@kd:	
   886                           
   887                           ; 3 bytes @ 0x44
   888  0064                     	ds	3
   889  0067                     main@kp:	
   890                           
   891                           ; 3 bytes @ 0x47
   892  0067                     	ds	3
   893  006A                     _main$659:	
   894                           
   895                           ; 3 bytes @ 0x4A
   896  006A                     	ds	3
   897  006D                     main@desejado:	
   898                           
   899                           ; 2 bytes @ 0x4D
   900  006D                     	ds	2
   901                           
   902                           	psect	maintext
   903  0DFA                     __pmaintext:	
   904 ;;
   905 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   906 ;;
   907 ;; *************** function _main *****************
   908 ;; Defined at:
   909 ;;		line 72 in file "main.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;  D3             28    0[BANK3 ] struct .
   914 ;;  D2             28   40[BANK1 ] struct .
   915 ;;  D1             28   12[BANK1 ] struct .
   916 ;;  str            17   47[BANK0 ] unsigned char [17]
   917 ;;  kp              3   71[BANK0 ] float 
   918 ;;  kd              3   68[BANK0 ] float 
   919 ;;  ki              3   65[BANK0 ] float 
   920 ;;  timer1          2   10[BANK1 ] unsigned int 
   921 ;;  error           2    8[BANK1 ] int 
   922 ;;  I               2    6[BANK1 ] int 
   923 ;;  PID_v           2    4[BANK1 ] int 
   924 ;;  D               2    2[BANK1 ] int 
   925 ;;  P               2    0[BANK1 ] int 
   926 ;;  desejado        2   77[BANK0 ] int 
   927 ;;  duty_cycle      1   64[BANK0 ] unsigned char 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : B00/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   937 ;;      Params:         0       0       0       0       0
   938 ;;      Locals:         0      32      68      28       0
   939 ;;      Temps:          0       4       0       0       0
   940 ;;      Totals:         0      36      68      28       0
   941 ;;Total ram usage:      132 bytes
   942 ;; Hardware stack levels required when called:    2
   943 ;; This function calls:
   944 ;;		_LCD_init
   945 ;;		_LCD_mapping
   946 ;;		_UART_Init
   947 ;;		_UART_Write
   948 ;;		_UART_Write_Text
   949 ;;		___awtoft
   950 ;;		___ftadd
   951 ;;		___ftmul
   952 ;;		___fttol
   953 ;;		_displayNumber
   954 ;;		_utoa
   955 ;; This function is called by:
   956 ;;		Startup code after reset
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           
   961                           ;psect for function _main
   962  0DFA                     _main:	
   963                           
   964                           ;main.c: 73: MAPKEY D1, D2, D3;
   965                           ;main.c: 74: float ki, kd, kp;
   966                           ;main.c: 75: int desejado, error, P, I, D, PID_v;
   967                           ;main.c: 76: unsigned char duty_cycle =30;
   968                           
   969                           ;incstack = 0
   970                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   971  0DFA  301E               	movlw	30
   972  0DFB  1283               	bcf	3,5	;RP0=0, select bank0
   973  0DFC  1303               	bcf	3,6	;RP1=0, select bank0
   974  0DFD  00CB               	movwf	??_main
   975  0DFE  084B               	movf	??_main,w
   976  0DFF  00E0               	movwf	main@duty_cycle
   977                           
   978                           ;main.c: 77: unsigned int timer1 = 0;
   979  0E00  1683               	bsf	3,5	;RP0=1, select bank1
   980  0E01  1303               	bcf	3,6	;RP1=0, select bank1
   981  0E02  01AA               	clrf	main@timer1^(0+128)
   982  0E03  01AB               	clrf	(main@timer1+1)^(0+128)
   983                           
   984                           ;main.c: 78: char str [] = "9999999999999999";
   985  0E04  304F               	movlw	main@str& (0+255)
   986  0E05  0084               	movwf	4
   987  0E06  30AC               	movlw	low main@F2791
   988  0E07  1283               	bcf	3,5	;RP0=0, select bank0
   989  0E08  1303               	bcf	3,6	;RP1=0, select bank0
   990  0E09  00CB               	movwf	??_main
   991  0E0A  0804               	movf	4,w
   992  0E0B  00CC               	movwf	??_main+1
   993  0E0C  3011               	movlw	17
   994  0E0D  00CD               	movwf	??_main+2
   995  0E0E                     u3860:	
   996  0E0E  084B               	movf	??_main,w
   997  0E0F  0084               	movwf	4
   998  0E10  1783               	bsf	3,7	;select IRP bank3
   999  0E11  0800               	movf	0,w
  1000  0E12  00CE               	movwf	??_main+3
  1001  0E13  0ACB               	incf	??_main,f
  1002  0E14  084C               	movf	??_main+1,w
  1003  0E15  0084               	movwf	4
  1004  0E16  1383               	bcf	3,7	;select IRP bank0
  1005  0E17  084E               	movf	??_main+3,w
  1006  0E18  0080               	movwf	0
  1007  0E19  0ACC               	incf	??_main+1,f
  1008  0E1A  0BCD               	decfsz	??_main+2,f
  1009  0E1B  2E0E               	goto	u3860
  1010                           
  1011                           ;main.c: 81: LCD_init();
  1012  0E1C  160A  158A  2637  120A  158A  	fcall	_LCD_init
  1013                           
  1014                           ;main.c: 82: LCD_mapping(&D1,&D2,&D3);
  1015  0E21  30C8               	movlw	(low (main@D2| 0))& (0+255)
  1016  0E22  1283               	bcf	3,5	;RP0=0, select bank0
  1017  0E23  1303               	bcf	3,6	;RP1=0, select bank0
  1018  0E24  00CB               	movwf	??_main
  1019  0E25  084B               	movf	??_main,w
  1020  0E26  00F0               	movwf	LCD_mapping@D2
  1021  0E27  3090               	movlw	(low (main@D3| (0+256)))& (0+255)
  1022  0E28  00CC               	movwf	??_main+1
  1023  0E29  084C               	movf	??_main+1,w
  1024  0E2A  00F1               	movwf	LCD_mapping@D3
  1025  0E2B  30AC               	movlw	(low (main@D1| 0))& (0+255)
  1026  0E2C  120A  158A  2440  120A  158A  	fcall	_LCD_mapping
  1027                           
  1028                           ;main.c: 83: UART_Init(9600);
  1029  0E31  3000               	movlw	0
  1030  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  1031  0E33  1303               	bcf	3,6	;RP1=0, select bank0
  1032  0E34  00A9               	movwf	UART_Init@baudrate+3
  1033  0E35  3000               	movlw	0
  1034  0E36  00A8               	movwf	UART_Init@baudrate+2
  1035  0E37  3025               	movlw	37
  1036  0E38  00A7               	movwf	UART_Init@baudrate+1
  1037  0E39  3080               	movlw	128
  1038  0E3A  00A6               	movwf	UART_Init@baudrate
  1039  0E3B  160A  118A  205D  120A  158A  	fcall	_UART_Init
  1040                           
  1041                           ;main.c: 86: TRISD = 0x00;
  1042  0E40  1683               	bsf	3,5	;RP0=1, select bank1
  1043  0E41  1303               	bcf	3,6	;RP1=0, select bank1
  1044  0E42  0188               	clrf	8	;volatile
  1045                           
  1046                           ;main.c: 87: TRISA |= 0x01;
  1047  0E43  1405               	bsf	5,0	;volatile
  1048                           
  1049                           ;main.c: 88: OSCCON = 0x70;
  1050  0E44  3070               	movlw	112
  1051  0E45  008F               	movwf	15	;volatile
  1052                           
  1053                           ;main.c: 89: PR2 = 0x3F;
  1054  0E46  303F               	movlw	63
  1055  0E47  0092               	movwf	18	;volatile
  1056                           
  1057                           ;main.c: 90: CMCON0 = 0x07;
  1058  0E48  3007               	movlw	7
  1059  0E49  009C               	movwf	28	;volatile
  1060                           
  1061                           ;main.c: 91: INTCON = 0;
  1062  0E4A  018B               	clrf	11	;volatile
  1063                           
  1064                           ;main.c: 92: CCPR2L = 0;
  1065  0E4B  1283               	bcf	3,5	;RP0=0, select bank0
  1066  0E4C  1303               	bcf	3,6	;RP1=0, select bank0
  1067  0E4D  019B               	clrf	27	;volatile
  1068                           
  1069                           ;main.c: 93: CCP2CON = 0x0C;
  1070  0E4E  300C               	movlw	12
  1071  0E4F  009D               	movwf	29	;volatile
  1072                           
  1073                           ;main.c: 94: T2CON = 0x04;
  1074  0E50  3004               	movlw	4
  1075  0E51  0092               	movwf	18	;volatile
  1076                           
  1077                           ;main.c: 97: TRISC |= (1 << 5);
  1078  0E52  1683               	bsf	3,5	;RP0=1, select bank1
  1079  0E53  1303               	bcf	3,6	;RP1=0, select bank1
  1080  0E54  1687               	bsf	7,5	;volatile
  1081                           
  1082                           ;main.c: 100: T1CON |= (1 << TMR1ON) | (1 << TMR1CS) | (1 << T1SYNC);
  1083  0E55  3001               	movlw	1
  1084  0E56  1283               	bcf	3,5	;RP0=0, select bank0
  1085  0E57  1303               	bcf	3,6	;RP1=0, select bank0
  1086  0E58  00CB               	movwf	??_main
  1087  0E59  3000               	movlw	0
  1088  0E5A  1910               	btfsc	16,2	;volatile
  1089  0E5B  3001               	movlw	1
  1090  0E5C  3E01               	addlw	1
  1091  0E5D  2E60               	goto	u3874
  1092  0E5E                     u3875:	
  1093  0E5E  1003               	clrc
  1094  0E5F  0DCB               	rlf	??_main,f
  1095  0E60                     u3874:	
  1096  0E60  3EFF               	addlw	-1
  1097  0E61  1D03               	skipz
  1098  0E62  2E5E               	goto	u3875
  1099  0E63  3001               	movlw	1
  1100  0E64  00CC               	movwf	??_main+1
  1101  0E65  3000               	movlw	0
  1102  0E66  1890               	btfsc	16,1	;volatile
  1103  0E67  3001               	movlw	1
  1104  0E68  3E01               	addlw	1
  1105  0E69  2E6C               	goto	u3884
  1106  0E6A                     u3885:	
  1107  0E6A  1003               	clrc
  1108  0E6B  0DCC               	rlf	??_main+1,f
  1109  0E6C                     u3884:	
  1110  0E6C  3EFF               	addlw	-1
  1111  0E6D  1D03               	skipz
  1112  0E6E  2E6A               	goto	u3885
  1113  0E6F  3001               	movlw	1
  1114  0E70  00CD               	movwf	??_main+2
  1115  0E71  3000               	movlw	0
  1116  0E72  1810               	btfsc	16,0	;volatile
  1117  0E73  3001               	movlw	1
  1118  0E74  3E01               	addlw	1
  1119  0E75  2E78               	goto	u3894
  1120  0E76                     u3895:	
  1121  0E76  1003               	clrc
  1122  0E77  0DCD               	rlf	??_main+2,f
  1123  0E78                     u3894:	
  1124  0E78  3EFF               	addlw	-1
  1125  0E79  1D03               	skipz
  1126  0E7A  2E76               	goto	u3895
  1127  0E7B  084D               	movf	??_main+2,w
  1128  0E7C  044C               	iorwf	??_main+1,w
  1129  0E7D  044B               	iorwf	??_main,w
  1130  0E7E  00CE               	movwf	??_main+3
  1131  0E7F  084E               	movf	??_main+3,w
  1132  0E80  0490               	iorwf	16,f	;volatile
  1133                           
  1134                           ;main.c: 102: PORTD |= (1 << RD7);
  1135  0E81  3001               	movlw	1
  1136  0E82  00CB               	movwf	??_main
  1137  0E83  3000               	movlw	0
  1138  0E84  1B88               	btfsc	8,7	;volatile
  1139  0E85  3001               	movlw	1
  1140  0E86  3E01               	addlw	1
  1141  0E87  2E8A               	goto	u3904
  1142  0E88                     u3905:	
  1143  0E88  1003               	clrc
  1144  0E89  0DCB               	rlf	??_main,f
  1145  0E8A                     u3904:	
  1146  0E8A  3EFF               	addlw	-1
  1147  0E8B  1D03               	skipz
  1148  0E8C  2E88               	goto	u3905
  1149  0E8D  084B               	movf	??_main,w
  1150  0E8E  00CC               	movwf	??_main+1
  1151  0E8F  084C               	movf	??_main+1,w
  1152  0E90  0488               	iorwf	8,f	;volatile
  1153                           
  1154                           ;main.c: 104: TMR1H = 0;
  1155  0E91  018F               	clrf	15	;volatile
  1156                           
  1157                           ;main.c: 105: TMR1L = 0;
  1158  0E92  018E               	clrf	14	;volatile
  1159                           
  1160                           ;main.c: 107: CCPR2L = 0;
  1161  0E93  019B               	clrf	27	;volatile
  1162                           
  1163                           ;main.c: 110: kp = 0.001;
  1164  0E94  3012               	movlw	18
  1165  0E95  00E7               	movwf	main@kp
  1166  0E96  3083               	movlw	131
  1167  0E97  00E8               	movwf	main@kp+1
  1168  0E98  303A               	movlw	58
  1169  0E99  00E9               	movwf	main@kp+2
  1170                           
  1171                           ;main.c: 111: ki = 1;
  1172  0E9A  3000               	movlw	0
  1173  0E9B  00E1               	movwf	main@ki
  1174  0E9C  3080               	movlw	128
  1175  0E9D  00E2               	movwf	main@ki+1
  1176  0E9E  303F               	movlw	63
  1177  0E9F  00E3               	movwf	main@ki+2
  1178                           
  1179                           ;main.c: 112: kd = 1;
  1180  0EA0  3000               	movlw	0
  1181  0EA1  00E4               	movwf	main@kd
  1182  0EA2  3080               	movlw	128
  1183  0EA3  00E5               	movwf	main@kd+1
  1184  0EA4  303F               	movlw	63
  1185  0EA5  00E6               	movwf	main@kd+2
  1186                           
  1187                           ;main.c: 114: P = 0;
  1188  0EA6  1683               	bsf	3,5	;RP0=1, select bank1
  1189  0EA7  1303               	bcf	3,6	;RP1=0, select bank1
  1190  0EA8  01A0               	clrf	main@P^(0+128)
  1191  0EA9  01A1               	clrf	(main@P+1)^(0+128)
  1192                           
  1193                           ;main.c: 115: I = 0;
  1194  0EAA  01A6               	clrf	main@I^(0+128)
  1195  0EAB  01A7               	clrf	(main@I+1)^(0+128)
  1196                           
  1197                           ;main.c: 116: D = 0;
  1198  0EAC  01A2               	clrf	main@D^(0+128)
  1199  0EAD  01A3               	clrf	(main@D+1)^(0+128)
  1200                           
  1201                           ;main.c: 117: PID_v = 0;
  1202  0EAE  01A4               	clrf	main@PID_v^(0+128)
  1203  0EAF  01A5               	clrf	(main@PID_v+1)^(0+128)
  1204                           
  1205                           ;main.c: 119: desejado = 30;
  1206  0EB0  301E               	movlw	30
  1207  0EB1  1283               	bcf	3,5	;RP0=0, select bank0
  1208  0EB2  1303               	bcf	3,6	;RP1=0, select bank0
  1209  0EB3  00ED               	movwf	main@desejado
  1210  0EB4  3000               	movlw	0
  1211  0EB5  00EE               	movwf	main@desejado+1
  1212                           
  1213                           ;main.c: 120: CCPR2L = 0;
  1214  0EB6  019B               	clrf	27	;volatile
  1215  0EB7                     l1893:	
  1216                           ;main.c: 122: while(1) {
  1217                           
  1218                           
  1219                           ;main.c: 123: timer1 = (TMR1H << 8) + TMR1L;
  1220  0EB7  1283               	bcf	3,5	;RP0=0, select bank0
  1221  0EB8  1303               	bcf	3,6	;RP1=0, select bank0
  1222  0EB9  080F               	movf	15,w	;volatile
  1223  0EBA  1683               	bsf	3,5	;RP0=1, select bank1
  1224  0EBB  1303               	bcf	3,6	;RP1=0, select bank1
  1225  0EBC  00AB               	movwf	(main@timer1+1)^(0+128)
  1226  0EBD  1283               	bcf	3,5	;RP0=0, select bank0
  1227  0EBE  1303               	bcf	3,6	;RP1=0, select bank0
  1228  0EBF  080E               	movf	14,w	;volatile
  1229  0EC0  1683               	bsf	3,5	;RP0=1, select bank1
  1230  0EC1  1303               	bcf	3,6	;RP1=0, select bank1
  1231  0EC2  00AA               	movwf	main@timer1^(0+128)
  1232                           
  1233                           ;main.c: 125: displayNumber(timer1, &D1, &D2, &D3);
  1234  0EC3  082B               	movf	(main@timer1+1)^(0+128),w
  1235  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  1236  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  1237  0EC6  00AA               	movwf	displayNumber@num+1
  1238  0EC7  1683               	bsf	3,5	;RP0=1, select bank1
  1239  0EC8  1303               	bcf	3,6	;RP1=0, select bank1
  1240  0EC9  082A               	movf	main@timer1^(0+128),w
  1241  0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  1242  0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  1243  0ECC  00A9               	movwf	displayNumber@num
  1244  0ECD  30AC               	movlw	(low (main@D1| 0))& (0+255)
  1245  0ECE  00CB               	movwf	??_main
  1246  0ECF  084B               	movf	??_main,w
  1247  0ED0  00AB               	movwf	displayNumber@D1
  1248  0ED1  30C8               	movlw	(low (main@D2| 0))& (0+255)
  1249  0ED2  00CC               	movwf	??_main+1
  1250  0ED3  084C               	movf	??_main+1,w
  1251  0ED4  00AC               	movwf	displayNumber@D2
  1252  0ED5  3090               	movlw	(low (main@D3| (0+256)))& (0+255)
  1253  0ED6  00CD               	movwf	??_main+2
  1254  0ED7  084D               	movf	??_main+2,w
  1255  0ED8  00AD               	movwf	displayNumber@D3
  1256  0ED9  160A  118A  20D1  120A  158A  	fcall	_displayNumber
  1257                           
  1258                           ;main.c: 127: error = desejado - timer1;
  1259  0EDE  1683               	bsf	3,5	;RP0=1, select bank1
  1260  0EDF  1303               	bcf	3,6	;RP1=0, select bank1
  1261  0EE0  092A               	comf	main@timer1^(0+128),w
  1262  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  1263  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  1264  0EE3  00CB               	movwf	??_main
  1265  0EE4  1683               	bsf	3,5	;RP0=1, select bank1
  1266  0EE5  1303               	bcf	3,6	;RP1=0, select bank1
  1267  0EE6  092B               	comf	(main@timer1+1)^(0+128),w
  1268  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  1269  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  1270  0EE9  00CC               	movwf	??_main+1
  1271  0EEA  0ACB               	incf	??_main,f
  1272  0EEB  1903               	skipnz
  1273  0EEC  0ACC               	incf	??_main+1,f
  1274  0EED  086D               	movf	main@desejado,w
  1275  0EEE  074B               	addwf	??_main,w
  1276  0EEF  1683               	bsf	3,5	;RP0=1, select bank1
  1277  0EF0  1303               	bcf	3,6	;RP1=0, select bank1
  1278  0EF1  00A8               	movwf	main@error^(0+128)
  1279  0EF2  1283               	bcf	3,5	;RP0=0, select bank0
  1280  0EF3  1303               	bcf	3,6	;RP1=0, select bank0
  1281  0EF4  086E               	movf	main@desejado+1,w
  1282  0EF5  1803               	skipnc
  1283  0EF6  0A6E               	incf	main@desejado+1,w
  1284  0EF7  074C               	addwf	??_main+1,w
  1285  0EF8  1683               	bsf	3,5	;RP0=1, select bank1
  1286  0EF9  1303               	bcf	3,6	;RP1=0, select bank1
  1287  0EFA  00A9               	movwf	(main@error+1)^(0+128)
  1288                           
  1289                           ;main.c: 129: P = error;
  1290  0EFB  0829               	movf	(main@error+1)^(0+128),w
  1291  0EFC  00A1               	movwf	(main@P+1)^(0+128)
  1292  0EFD  0828               	movf	main@error^(0+128),w
  1293  0EFE  00A0               	movwf	main@P^(0+128)
  1294                           
  1295                           ;main.c: 130: I = I + error;
  1296  0EFF  0828               	movf	main@error^(0+128),w
  1297  0F00  0726               	addwf	main@I^(0+128),w
  1298  0F01  00A6               	movwf	main@I^(0+128)
  1299  0F02  0829               	movf	(main@error+1)^(0+128),w
  1300  0F03  1803               	skipnc
  1301  0F04  0A29               	incf	(main@error+1)^(0+128),w
  1302  0F05  0727               	addwf	(main@I+1)^(0+128),w
  1303  0F06  00A7               	movwf	(main@I+1)^(0+128)
  1304                           
  1305                           ;main.c: 131: D = 0;
  1306  0F07  01A2               	clrf	main@D^(0+128)
  1307  0F08  01A3               	clrf	(main@D+1)^(0+128)
  1308                           
  1309                           ;main.c: 133: PID_v = kp*P + ki*I + kd*D;
  1310  0F09  0821               	movf	(main@P+1)^(0+128),w
  1311  0F0A  00F9               	movwf	___awtoft@c+1
  1312  0F0B  0820               	movf	main@P^(0+128),w
  1313  0F0C  00F8               	movwf	___awtoft@c
  1314  0F0D  120A  118A  2009  120A  158A  	fcall	___awtoft
  1315  0F12  0878               	movf	?___awtoft,w
  1316  0F13  1283               	bcf	3,5	;RP0=0, select bank0
  1317  0F14  1303               	bcf	3,6	;RP1=0, select bank0
  1318  0F15  00A3               	movwf	___ftmul@f2
  1319  0F16  0879               	movf	?___awtoft+1,w
  1320  0F17  00A4               	movwf	___ftmul@f2+1
  1321  0F18  087A               	movf	?___awtoft+2,w
  1322  0F19  00A5               	movwf	___ftmul@f2+2
  1323  0F1A  0867               	movf	main@kp,w
  1324  0F1B  00A0               	movwf	___ftmul@f1
  1325  0F1C  0868               	movf	main@kp+1,w
  1326  0F1D  00A1               	movwf	___ftmul@f1+1
  1327  0F1E  0869               	movf	main@kp+2,w
  1328  0F1F  00A2               	movwf	___ftmul@f1+2
  1329  0F20  160A  118A  22EC  120A  158A  	fcall	___ftmul
  1330  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  1331  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  1332  0F27  0820               	movf	?___ftmul,w
  1333  0F28  00B3               	movwf	___ftadd@f2
  1334  0F29  0821               	movf	?___ftmul+1,w
  1335  0F2A  00B4               	movwf	___ftadd@f2+1
  1336  0F2B  0822               	movf	?___ftmul+2,w
  1337  0F2C  00B5               	movwf	___ftadd@f2+2
  1338  0F2D  1683               	bsf	3,5	;RP0=1, select bank1
  1339  0F2E  1303               	bcf	3,6	;RP1=0, select bank1
  1340  0F2F  0827               	movf	(main@I+1)^(0+128),w
  1341  0F30  00F9               	movwf	___awtoft@c+1
  1342  0F31  0826               	movf	main@I^(0+128),w
  1343  0F32  00F8               	movwf	___awtoft@c
  1344  0F33  120A  118A  2009  120A  158A  	fcall	___awtoft
  1345  0F38  0878               	movf	?___awtoft,w
  1346  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  1347  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  1348  0F3B  00A3               	movwf	___ftmul@f2
  1349  0F3C  0879               	movf	?___awtoft+1,w
  1350  0F3D  00A4               	movwf	___ftmul@f2+1
  1351  0F3E  087A               	movf	?___awtoft+2,w
  1352  0F3F  00A5               	movwf	___ftmul@f2+2
  1353  0F40  0861               	movf	main@ki,w
  1354  0F41  00A0               	movwf	___ftmul@f1
  1355  0F42  0862               	movf	main@ki+1,w
  1356  0F43  00A1               	movwf	___ftmul@f1+1
  1357  0F44  0863               	movf	main@ki+2,w
  1358  0F45  00A2               	movwf	___ftmul@f1+2
  1359  0F46  160A  118A  22EC  120A  158A  	fcall	___ftmul
  1360  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  1361  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  1362  0F4D  0820               	movf	?___ftmul,w
  1363  0F4E  00B0               	movwf	___ftadd@f1
  1364  0F4F  0821               	movf	?___ftmul+1,w
  1365  0F50  00B1               	movwf	___ftadd@f1+1
  1366  0F51  0822               	movf	?___ftmul+2,w
  1367  0F52  00B2               	movwf	___ftadd@f1+2
  1368  0F53  160A  118A  23BF  120A  158A  	fcall	___ftadd
  1369  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  1370  0F59  1303               	bcf	3,6	;RP1=0, select bank0
  1371  0F5A  0830               	movf	?___ftadd,w
  1372  0F5B  00EA               	movwf	_main$659
  1373  0F5C  0831               	movf	?___ftadd+1,w
  1374  0F5D  00EB               	movwf	_main$659+1
  1375  0F5E  0832               	movf	?___ftadd+2,w
  1376  0F5F  00EC               	movwf	_main$659+2
  1377                           
  1378                           ;main.c: 133: PID_v = kp*P + ki*I + kd*D;
  1379  0F60  086A               	movf	_main$659,w
  1380  0F61  00B3               	movwf	___ftadd@f2
  1381  0F62  086B               	movf	_main$659+1,w
  1382  0F63  00B4               	movwf	___ftadd@f2+1
  1383  0F64  086C               	movf	_main$659+2,w
  1384  0F65  00B5               	movwf	___ftadd@f2+2
  1385  0F66  1683               	bsf	3,5	;RP0=1, select bank1
  1386  0F67  1303               	bcf	3,6	;RP1=0, select bank1
  1387  0F68  0823               	movf	(main@D+1)^(0+128),w
  1388  0F69  00F9               	movwf	___awtoft@c+1
  1389  0F6A  0822               	movf	main@D^(0+128),w
  1390  0F6B  00F8               	movwf	___awtoft@c
  1391  0F6C  120A  118A  2009  120A  158A  	fcall	___awtoft
  1392  0F71  0878               	movf	?___awtoft,w
  1393  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  1394  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  1395  0F74  00A3               	movwf	___ftmul@f2
  1396  0F75  0879               	movf	?___awtoft+1,w
  1397  0F76  00A4               	movwf	___ftmul@f2+1
  1398  0F77  087A               	movf	?___awtoft+2,w
  1399  0F78  00A5               	movwf	___ftmul@f2+2
  1400  0F79  0864               	movf	main@kd,w
  1401  0F7A  00A0               	movwf	___ftmul@f1
  1402  0F7B  0865               	movf	main@kd+1,w
  1403  0F7C  00A1               	movwf	___ftmul@f1+1
  1404  0F7D  0866               	movf	main@kd+2,w
  1405  0F7E  00A2               	movwf	___ftmul@f1+2
  1406  0F7F  160A  118A  22EC  120A  158A  	fcall	___ftmul
  1407  0F84  1283               	bcf	3,5	;RP0=0, select bank0
  1408  0F85  1303               	bcf	3,6	;RP1=0, select bank0
  1409  0F86  0820               	movf	?___ftmul,w
  1410  0F87  00B0               	movwf	___ftadd@f1
  1411  0F88  0821               	movf	?___ftmul+1,w
  1412  0F89  00B1               	movwf	___ftadd@f1+1
  1413  0F8A  0822               	movf	?___ftmul+2,w
  1414  0F8B  00B2               	movwf	___ftadd@f1+2
  1415  0F8C  160A  118A  23BF  120A  158A  	fcall	___ftadd
  1416  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  1417  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  1418  0F93  0830               	movf	?___ftadd,w
  1419  0F94  00BD               	movwf	___fttol@f1
  1420  0F95  0831               	movf	?___ftadd+1,w
  1421  0F96  00BE               	movwf	___fttol@f1+1
  1422  0F97  0832               	movf	?___ftadd+2,w
  1423  0F98  00BF               	movwf	___fttol@f1+2
  1424  0F99  160A  118A  225E  120A  158A  	fcall	___fttol
  1425  0F9E  1283               	bcf	3,5	;RP0=0, select bank0
  1426  0F9F  1303               	bcf	3,6	;RP1=0, select bank0
  1427  0FA0  083E               	movf	?___fttol+1,w
  1428  0FA1  1683               	bsf	3,5	;RP0=1, select bank1
  1429  0FA2  1303               	bcf	3,6	;RP1=0, select bank1
  1430  0FA3  00A5               	movwf	(main@PID_v+1)^(0+128)
  1431  0FA4  1283               	bcf	3,5	;RP0=0, select bank0
  1432  0FA5  1303               	bcf	3,6	;RP1=0, select bank0
  1433  0FA6  083D               	movf	?___fttol,w
  1434  0FA7  1683               	bsf	3,5	;RP0=1, select bank1
  1435  0FA8  1303               	bcf	3,6	;RP1=0, select bank1
  1436  0FA9  00A4               	movwf	main@PID_v^(0+128)
  1437                           
  1438                           ;main.c: 135: if(error)
  1439  0FAA  0828               	movf	main@error^(0+128),w
  1440  0FAB  0429               	iorwf	(main@error+1)^(0+128),w
  1441  0FAC  1903               	btfsc	3,2
  1442  0FAD  2FB2               	goto	l1913
  1443                           
  1444                           ;main.c: 136: CCPR2L = PID_v;
  1445  0FAE  0824               	movf	main@PID_v^(0+128),w
  1446  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  1447  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  1448  0FB1  009B               	movwf	27	;volatile
  1449  0FB2                     l1913:	
  1450                           
  1451                           ;main.c: 138: utoa(str, CCPR2L, 10);
  1452  0FB2  1283               	bcf	3,5	;RP0=0, select bank0
  1453  0FB3  081B               	movf	27,w	;volatile
  1454  0FB4  00CB               	movwf	??_main
  1455  0FB5  01CC               	clrf	??_main+1
  1456  0FB6  084B               	movf	??_main,w
  1457  0FB7  00F8               	movwf	utoa@val
  1458  0FB8  084C               	movf	??_main+1,w
  1459  0FB9  00F9               	movwf	utoa@val+1
  1460  0FBA  300A               	movlw	10
  1461  0FBB  00FA               	movwf	utoa@base
  1462  0FBC  3000               	movlw	0
  1463  0FBD  00FB               	movwf	utoa@base+1
  1464  0FBE  304F               	movlw	(low (main@str| 0))& (0+255)
  1465  0FBF  160A  158A  2794  120A  158A  	fcall	_utoa
  1466                           
  1467                           ;main.c: 139: UART_Write_Text(str);
  1468  0FC4  304F               	movlw	(low (main@str| 0))& (0+255)
  1469  0FC5  160A  158A  2650  120A  158A  	fcall	_UART_Write_Text
  1470                           
  1471                           ;main.c: 140: UART_Write('\n');
  1472  0FCA  300A               	movlw	10
  1473  0FCB  160A  158A  261C  120A  158A  	fcall	_UART_Write
  1474                           
  1475                           ;main.c: 142: utoa(str, timer1, 10);
  1476  0FD0  1683               	bsf	3,5	;RP0=1, select bank1
  1477  0FD1  1303               	bcf	3,6	;RP1=0, select bank1
  1478  0FD2  082B               	movf	(main@timer1+1)^(0+128),w
  1479  0FD3  00F9               	movwf	utoa@val+1
  1480  0FD4  082A               	movf	main@timer1^(0+128),w
  1481  0FD5  00F8               	movwf	utoa@val
  1482  0FD6  300A               	movlw	10
  1483  0FD7  00FA               	movwf	utoa@base
  1484  0FD8  3000               	movlw	0
  1485  0FD9  00FB               	movwf	utoa@base+1
  1486  0FDA  304F               	movlw	(low (main@str| 0))& (0+255)
  1487  0FDB  160A  158A  2794  120A  158A  	fcall	_utoa
  1488                           
  1489                           ;main.c: 143: UART_Write_Text(str);
  1490  0FE0  304F               	movlw	(low (main@str| 0))& (0+255)
  1491  0FE1  160A  158A  2650  120A  158A  	fcall	_UART_Write_Text
  1492                           
  1493                           ;main.c: 144: UART_Write('\n');
  1494  0FE6  300A               	movlw	10
  1495  0FE7  160A  158A  261C  120A  158A  	fcall	_UART_Write
  1496                           
  1497                           ;main.c: 147: TMR1H = 0;
  1498  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  1499  0FED  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0FEE  018F               	clrf	15	;volatile
  1501                           
  1502                           ;main.c: 148: TMR1L = 0;
  1503  0FEF  018E               	clrf	14	;volatile
  1504                           
  1505                           ;main.c: 150: _delay((unsigned long)((600)*(8000000/4000.0)));
  1506  0FF0  3007               	movlw	7
  1507  0FF1  1283               	bcf	3,5	;RP0=0, select bank0
  1508  0FF2  1303               	bcf	3,6	;RP1=0, select bank0
  1509  0FF3  00CD               	movwf	??_main+2
  1510  0FF4  3017               	movlw	23
  1511  0FF5  00CC               	movwf	??_main+1
  1512  0FF6  3069               	movlw	105
  1513  0FF7  00CB               	movwf	??_main
  1514  0FF8                     u3927:	
  1515  0FF8  0BCB               	decfsz	??_main,f
  1516  0FF9  2FF8               	goto	u3927
  1517  0FFA  0BCC               	decfsz	??_main+1,f
  1518  0FFB  2FF8               	goto	u3927
  1519  0FFC  0BCD               	decfsz	??_main+2,f
  1520  0FFD  2FF8               	goto	u3927
  1521  0FFE  2FFF               	nop2
  1522  0FFF  2EB7               	goto	l1893
  1523  1000                     __end_of_main:	
  1524                           ;main.c: 151: }
  1525                           ;main.c: 153: return;
  1526                           
  1527                           
  1528                           	psect	text1
  1529  1F94                     __ptext1:	
  1530 ;; *************** function _utoa *****************
  1531 ;; Defined at:
  1532 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\itoa.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  buf             1    wreg     PTR unsigned char 
  1535 ;;		 -> main@str(17), 
  1536 ;;  val             2    8[COMMON] unsigned int 
  1537 ;;  base            2   10[COMMON] int 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  1540 ;;		 -> main@str(17), 
  1541 ;;  v               2    0[BANK0 ] unsigned int 
  1542 ;;  c               1    2[BANK0 ] unsigned char 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      PTR unsigned char 
  1545 ;; Registers used:
  1546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1552 ;;      Params:         4       0       0       0       0
  1553 ;;      Locals:         0       4       0       0       0
  1554 ;;      Temps:          1       0       0       0       0
  1555 ;;      Totals:         5       4       0       0       0
  1556 ;;Total ram usage:        9 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:    1
  1559 ;; This function calls:
  1560 ;;		___lwdiv
  1561 ;;		___lwmod
  1562 ;; This function is called by:
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           
  1568                           ;psect for function _utoa
  1569  1F94                     _utoa:	
  1570                           
  1571                           ;incstack = 0
  1572                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1573                           ;utoa@buf stored from wreg
  1574  1F94  1283               	bcf	3,5	;RP0=0, select bank0
  1575  1F95  1303               	bcf	3,6	;RP1=0, select bank0
  1576  1F96  00A3               	movwf	utoa@buf
  1577  1F97  0879               	movf	utoa@val+1,w
  1578  1F98  00A1               	movwf	utoa@v+1
  1579  1F99  0878               	movf	utoa@val,w
  1580  1F9A  00A0               	movwf	utoa@v
  1581  1F9B                     l1631:	
  1582  1F9B  087B               	movf	utoa@base+1,w
  1583  1F9C  00F1               	movwf	___lwdiv@divisor+1
  1584  1F9D  087A               	movf	utoa@base,w
  1585  1F9E  00F0               	movwf	___lwdiv@divisor
  1586  1F9F  0821               	movf	utoa@v+1,w
  1587  1FA0  00F3               	movwf	___lwdiv@dividend+1
  1588  1FA1  0820               	movf	utoa@v,w
  1589  1FA2  00F2               	movwf	___lwdiv@dividend
  1590  1FA3  160A  158A  26A1  160A  158A  	fcall	___lwdiv
  1591  1FA8  0871               	movf	?___lwdiv+1,w
  1592  1FA9  1283               	bcf	3,5	;RP0=0, select bank0
  1593  1FAA  1303               	bcf	3,6	;RP1=0, select bank0
  1594  1FAB  00A1               	movwf	utoa@v+1
  1595  1FAC  0870               	movf	?___lwdiv,w
  1596  1FAD  00A0               	movwf	utoa@v
  1597  1FAE  3001               	movlw	1
  1598  1FAF  00FC               	movwf	??_utoa
  1599  1FB0  087C               	movf	??_utoa,w
  1600  1FB1  07A3               	addwf	utoa@buf,f
  1601  1FB2  0820               	movf	utoa@v,w
  1602  1FB3  0421               	iorwf	utoa@v+1,w
  1603  1FB4  1D03               	btfss	3,2
  1604  1FB5  2F9B               	goto	l1631
  1605  1FB6  0823               	movf	utoa@buf,w
  1606  1FB7  0084               	movwf	4
  1607  1FB8  1383               	bcf	3,7	;select IRP bank0
  1608  1FB9  0180               	clrf	0
  1609  1FBA  3001               	movlw	1
  1610  1FBB  02A3               	subwf	utoa@buf,f
  1611  1FBC                     l1641:	
  1612  1FBC  087B               	movf	utoa@base+1,w
  1613  1FBD  00F1               	movwf	___lwmod@divisor+1
  1614  1FBE  087A               	movf	utoa@base,w
  1615  1FBF  00F0               	movwf	___lwmod@divisor
  1616  1FC0  0879               	movf	utoa@val+1,w
  1617  1FC1  00F3               	movwf	___lwmod@dividend+1
  1618  1FC2  0878               	movf	utoa@val,w
  1619  1FC3  00F2               	movwf	___lwmod@dividend
  1620  1FC4  160A  158A  266F  160A  158A  	fcall	___lwmod
  1621  1FC9  0870               	movf	?___lwmod,w
  1622  1FCA  00FC               	movwf	??_utoa
  1623  1FCB  087C               	movf	??_utoa,w
  1624  1FCC  1283               	bcf	3,5	;RP0=0, select bank0
  1625  1FCD  1303               	bcf	3,6	;RP1=0, select bank0
  1626  1FCE  00A2               	movwf	utoa@c
  1627  1FCF  087B               	movf	utoa@base+1,w
  1628  1FD0  00F1               	movwf	___lwdiv@divisor+1
  1629  1FD1  087A               	movf	utoa@base,w
  1630  1FD2  00F0               	movwf	___lwdiv@divisor
  1631  1FD3  0879               	movf	utoa@val+1,w
  1632  1FD4  00F3               	movwf	___lwdiv@dividend+1
  1633  1FD5  0878               	movf	utoa@val,w
  1634  1FD6  00F2               	movwf	___lwdiv@dividend
  1635  1FD7  160A  158A  26A1  160A  158A  	fcall	___lwdiv
  1636  1FDC  0871               	movf	?___lwdiv+1,w
  1637  1FDD  00F9               	movwf	utoa@val+1
  1638  1FDE  0870               	movf	?___lwdiv,w
  1639  1FDF  00F8               	movwf	utoa@val
  1640  1FE0  300A               	movlw	10
  1641  1FE1  1283               	bcf	3,5	;RP0=0, select bank0
  1642  1FE2  1303               	bcf	3,6	;RP1=0, select bank0
  1643  1FE3  0222               	subwf	utoa@c,w
  1644  1FE4  1C03               	skipc
  1645  1FE5  2FEA               	goto	l552
  1646  1FE6  3007               	movlw	7
  1647  1FE7  00FC               	movwf	??_utoa
  1648  1FE8  087C               	movf	??_utoa,w
  1649  1FE9  07A2               	addwf	utoa@c,f
  1650  1FEA                     l552:	
  1651  1FEA  3030               	movlw	48
  1652  1FEB  00FC               	movwf	??_utoa
  1653  1FEC  087C               	movf	??_utoa,w
  1654  1FED  07A2               	addwf	utoa@c,f
  1655  1FEE  0822               	movf	utoa@c,w
  1656  1FEF  00FC               	movwf	??_utoa
  1657  1FF0  0823               	movf	utoa@buf,w
  1658  1FF1  0084               	movwf	4
  1659  1FF2  087C               	movf	??_utoa,w
  1660  1FF3  1383               	bcf	3,7	;select IRP bank0
  1661  1FF4  0080               	movwf	0
  1662  1FF5  3001               	movlw	1
  1663  1FF6  02A3               	subwf	utoa@buf,f
  1664  1FF7  0878               	movf	utoa@val,w
  1665  1FF8  0479               	iorwf	utoa@val+1,w
  1666  1FF9  1D03               	btfss	3,2
  1667  1FFA  2FBC               	goto	l1641
  1668                           
  1669                           ;	Return value of _utoa is never used
  1670  1FFB  3001               	movlw	1
  1671  1FFC  00FC               	movwf	??_utoa
  1672  1FFD  087C               	movf	??_utoa,w
  1673  1FFE  07A3               	addwf	utoa@buf,f
  1674  1FFF  0008               	return
  1675  2000                     __end_of_utoa:	
  1676                           
  1677                           	psect	text2
  1678  1E6F                     __ptext2:	
  1679 ;; *************** function ___lwmod *****************
  1680 ;; Defined at:
  1681 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  divisor         2    0[COMMON] unsigned int 
  1684 ;;  dividend        2    2[COMMON] unsigned int 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  counter         1    5[COMMON] unsigned char 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  2    0[COMMON] unsigned int 
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1696 ;;      Params:         4       0       0       0       0
  1697 ;;      Locals:         1       0       0       0       0
  1698 ;;      Temps:          1       0       0       0       0
  1699 ;;      Totals:         6       0       0       0       0
  1700 ;;Total ram usage:        6 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; This function calls:
  1703 ;;		Nothing
  1704 ;; This function is called by:
  1705 ;;		_utoa
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           
  1710                           ;psect for function ___lwmod
  1711  1E6F                     ___lwmod:	
  1712                           
  1713                           ;incstack = 0
  1714                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1715  1E6F  0870               	movf	___lwmod@divisor,w
  1716  1E70  0471               	iorwf	___lwmod@divisor+1,w
  1717  1E71  1903               	btfsc	3,2
  1718  1E72  2E9C               	goto	l1559
  1719  1E73  01F5               	clrf	___lwmod@counter
  1720  1E74  0AF5               	incf	___lwmod@counter,f
  1721  1E75                     l1549:	
  1722  1E75  1BF1               	btfsc	___lwmod@divisor+1,7
  1723  1E76  2E83               	goto	l1551
  1724  1E77  3001               	movlw	1
  1725  1E78                     u3255:	
  1726  1E78  1003               	clrc
  1727  1E79  0DF0               	rlf	___lwmod@divisor,f
  1728  1E7A  0DF1               	rlf	___lwmod@divisor+1,f
  1729  1E7B  3EFF               	addlw	-1
  1730  1E7C  1D03               	skipz
  1731  1E7D  2E78               	goto	u3255
  1732  1E7E  3001               	movlw	1
  1733  1E7F  00F4               	movwf	??___lwmod
  1734  1E80  0874               	movf	??___lwmod,w
  1735  1E81  07F5               	addwf	___lwmod@counter,f
  1736  1E82  2E75               	goto	l1549
  1737  1E83                     l1551:	
  1738  1E83  0871               	movf	___lwmod@divisor+1,w
  1739  1E84  0273               	subwf	___lwmod@dividend+1,w
  1740  1E85  1D03               	skipz
  1741  1E86  2E89               	goto	u3275
  1742  1E87  0870               	movf	___lwmod@divisor,w
  1743  1E88  0272               	subwf	___lwmod@dividend,w
  1744  1E89                     u3275:	
  1745  1E89  1C03               	skipc
  1746  1E8A  2E91               	goto	l1555
  1747  1E8B  0870               	movf	___lwmod@divisor,w
  1748  1E8C  02F2               	subwf	___lwmod@dividend,f
  1749  1E8D  0871               	movf	___lwmod@divisor+1,w
  1750  1E8E  1C03               	skipc
  1751  1E8F  03F3               	decf	___lwmod@dividend+1,f
  1752  1E90  02F3               	subwf	___lwmod@dividend+1,f
  1753  1E91                     l1555:	
  1754  1E91  3001               	movlw	1
  1755  1E92                     u3285:	
  1756  1E92  1003               	clrc
  1757  1E93  0CF1               	rrf	___lwmod@divisor+1,f
  1758  1E94  0CF0               	rrf	___lwmod@divisor,f
  1759  1E95  3EFF               	addlw	-1
  1760  1E96  1D03               	skipz
  1761  1E97  2E92               	goto	u3285
  1762  1E98  3001               	movlw	1
  1763  1E99  02F5               	subwf	___lwmod@counter,f
  1764  1E9A  1D03               	btfss	3,2
  1765  1E9B  2E83               	goto	l1551
  1766  1E9C                     l1559:	
  1767  1E9C  0873               	movf	___lwmod@dividend+1,w
  1768  1E9D  00F1               	movwf	?___lwmod+1
  1769  1E9E  0872               	movf	___lwmod@dividend,w
  1770  1E9F  00F0               	movwf	?___lwmod
  1771  1EA0  0008               	return
  1772  1EA1                     __end_of___lwmod:	
  1773                           
  1774                           	psect	text3
  1775  1EA1                     __ptext3:	
  1776 ;; *************** function ___lwdiv *****************
  1777 ;; Defined at:
  1778 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  divisor         2    0[COMMON] unsigned int 
  1781 ;;  dividend        2    2[COMMON] unsigned int 
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  quotient        2    5[COMMON] unsigned int 
  1784 ;;  counter         1    7[COMMON] unsigned char 
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  2    0[COMMON] unsigned int 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, status,0
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1794 ;;      Params:         4       0       0       0       0
  1795 ;;      Locals:         3       0       0       0       0
  1796 ;;      Temps:          1       0       0       0       0
  1797 ;;      Totals:         8       0       0       0       0
  1798 ;;Total ram usage:        8 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; This function calls:
  1801 ;;		Nothing
  1802 ;; This function is called by:
  1803 ;;		_utoa
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           
  1808                           ;psect for function ___lwdiv
  1809  1EA1                     ___lwdiv:	
  1810                           
  1811                           ;incstack = 0
  1812                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1813  1EA1  01F5               	clrf	___lwdiv@quotient
  1814  1EA2  01F6               	clrf	___lwdiv@quotient+1
  1815  1EA3  0870               	movf	___lwdiv@divisor,w
  1816  1EA4  0471               	iorwf	___lwdiv@divisor+1,w
  1817  1EA5  1903               	btfsc	3,2
  1818  1EA6  2ED8               	goto	l1537
  1819  1EA7  01F7               	clrf	___lwdiv@counter
  1820  1EA8  0AF7               	incf	___lwdiv@counter,f
  1821  1EA9                     l1525:	
  1822  1EA9  1BF1               	btfsc	___lwdiv@divisor+1,7
  1823  1EAA  2EB7               	goto	l1527
  1824  1EAB  3001               	movlw	1
  1825  1EAC                     u3185:	
  1826  1EAC  1003               	clrc
  1827  1EAD  0DF0               	rlf	___lwdiv@divisor,f
  1828  1EAE  0DF1               	rlf	___lwdiv@divisor+1,f
  1829  1EAF  3EFF               	addlw	-1
  1830  1EB0  1D03               	skipz
  1831  1EB1  2EAC               	goto	u3185
  1832  1EB2  3001               	movlw	1
  1833  1EB3  00F4               	movwf	??___lwdiv
  1834  1EB4  0874               	movf	??___lwdiv,w
  1835  1EB5  07F7               	addwf	___lwdiv@counter,f
  1836  1EB6  2EA9               	goto	l1525
  1837  1EB7                     l1527:	
  1838  1EB7  3001               	movlw	1
  1839  1EB8                     u3205:	
  1840  1EB8  1003               	clrc
  1841  1EB9  0DF5               	rlf	___lwdiv@quotient,f
  1842  1EBA  0DF6               	rlf	___lwdiv@quotient+1,f
  1843  1EBB  3EFF               	addlw	-1
  1844  1EBC  1D03               	skipz
  1845  1EBD  2EB8               	goto	u3205
  1846  1EBE  0871               	movf	___lwdiv@divisor+1,w
  1847  1EBF  0273               	subwf	___lwdiv@dividend+1,w
  1848  1EC0  1D03               	skipz
  1849  1EC1  2EC4               	goto	u3215
  1850  1EC2  0870               	movf	___lwdiv@divisor,w
  1851  1EC3  0272               	subwf	___lwdiv@dividend,w
  1852  1EC4                     u3215:	
  1853  1EC4  1C03               	skipc
  1854  1EC5  2ECD               	goto	l1533
  1855  1EC6  0870               	movf	___lwdiv@divisor,w
  1856  1EC7  02F2               	subwf	___lwdiv@dividend,f
  1857  1EC8  0871               	movf	___lwdiv@divisor+1,w
  1858  1EC9  1C03               	skipc
  1859  1ECA  03F3               	decf	___lwdiv@dividend+1,f
  1860  1ECB  02F3               	subwf	___lwdiv@dividend+1,f
  1861  1ECC  1475               	bsf	___lwdiv@quotient,0
  1862  1ECD                     l1533:	
  1863  1ECD  3001               	movlw	1
  1864  1ECE                     u3225:	
  1865  1ECE  1003               	clrc
  1866  1ECF  0CF1               	rrf	___lwdiv@divisor+1,f
  1867  1ED0  0CF0               	rrf	___lwdiv@divisor,f
  1868  1ED1  3EFF               	addlw	-1
  1869  1ED2  1D03               	skipz
  1870  1ED3  2ECE               	goto	u3225
  1871  1ED4  3001               	movlw	1
  1872  1ED5  02F7               	subwf	___lwdiv@counter,f
  1873  1ED6  1D03               	btfss	3,2
  1874  1ED7  2EB7               	goto	l1527
  1875  1ED8                     l1537:	
  1876  1ED8  0876               	movf	___lwdiv@quotient+1,w
  1877  1ED9  00F1               	movwf	?___lwdiv+1
  1878  1EDA  0875               	movf	___lwdiv@quotient,w
  1879  1EDB  00F0               	movwf	?___lwdiv
  1880  1EDC  0008               	return
  1881  1EDD                     __end_of___lwdiv:	
  1882                           
  1883                           	psect	text4
  1884  10D1                     __ptext4:	
  1885 ;; *************** function _displayNumber *****************
  1886 ;; Defined at:
  1887 ;;		line 69 in file "lcd.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  num             2    9[BANK0 ] int 
  1890 ;;  D1              1   11[BANK0 ] PTR struct .
  1891 ;;		 -> main@D1(28), 
  1892 ;;  D2              1   12[BANK0 ] PTR struct .
  1893 ;;		 -> main@D2(28), 
  1894 ;;  D3              1   13[BANK0 ] PTR struct .
  1895 ;;		 -> main@D3(28), 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;		None
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1907 ;;      Params:         0       5       0       0       0
  1908 ;;      Locals:         0       0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0
  1910 ;;      Totals:         0       5       0       0       0
  1911 ;;Total ram usage:        5 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; Hardware stack levels required when called:    1
  1914 ;; This function calls:
  1915 ;;		___awdiv
  1916 ;;		___awmod
  1917 ;;		_displayDigit
  1918 ;; This function is called by:
  1919 ;;		_main
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           
  1924                           ;psect for function _displayNumber
  1925  10D1                     _displayNumber:	
  1926                           
  1927                           ;lcd.c: 71: displayDigit(num/100, D3 );
  1928                           
  1929                           ;incstack = 0
  1930                           ; Regs used in _displayNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1931  10D1  3064               	movlw	100
  1932  10D2  00F0               	movwf	___awdiv@divisor
  1933  10D3  3000               	movlw	0
  1934  10D4  00F1               	movwf	___awdiv@divisor+1
  1935  10D5  1283               	bcf	3,5	;RP0=0, select bank0
  1936  10D6  1303               	bcf	3,6	;RP1=0, select bank0
  1937  10D7  082A               	movf	displayNumber@num+1,w
  1938  10D8  00F3               	movwf	___awdiv@dividend+1
  1939  10D9  0829               	movf	displayNumber@num,w
  1940  10DA  00F2               	movwf	___awdiv@dividend
  1941  10DB  160A  118A  2004  160A  118A  	fcall	___awdiv
  1942  10E0  0871               	movf	?___awdiv+1,w
  1943  10E1  00FA               	movwf	displayDigit@digito+1
  1944  10E2  0870               	movf	?___awdiv,w
  1945  10E3  00F9               	movwf	displayDigit@digito
  1946  10E4  1283               	bcf	3,5	;RP0=0, select bank0
  1947  10E5  1303               	bcf	3,6	;RP1=0, select bank0
  1948  10E6  082D               	movf	displayNumber@D3,w
  1949  10E7  00FB               	movwf	displayDigit@D1
  1950  10E8  3001               	movlw	1
  1951  10E9  00FC               	movwf	displayDigit@D1+1
  1952  10EA  160A  118A  25D9  160A  118A  	fcall	_displayDigit
  1953                           
  1954                           ;lcd.c: 72: num %=100;
  1955  10EF  3064               	movlw	100
  1956  10F0  00F0               	movwf	___awmod@divisor
  1957  10F1  3000               	movlw	0
  1958  10F2  00F1               	movwf	___awmod@divisor+1
  1959  10F3  1283               	bcf	3,5	;RP0=0, select bank0
  1960  10F4  1303               	bcf	3,6	;RP1=0, select bank0
  1961  10F5  082A               	movf	displayNumber@num+1,w
  1962  10F6  00F3               	movwf	___awmod@dividend+1
  1963  10F7  0829               	movf	displayNumber@num,w
  1964  10F8  00F2               	movwf	___awmod@dividend
  1965  10F9  160A  158A  26DD  160A  118A  	fcall	___awmod
  1966  10FE  0871               	movf	?___awmod+1,w
  1967  10FF  1283               	bcf	3,5	;RP0=0, select bank0
  1968  1100  1303               	bcf	3,6	;RP1=0, select bank0
  1969  1101  00AA               	movwf	displayNumber@num+1
  1970  1102  0870               	movf	?___awmod,w
  1971  1103  00A9               	movwf	displayNumber@num
  1972                           
  1973                           ;lcd.c: 74: displayDigit(num/10, D2);
  1974  1104  300A               	movlw	10
  1975  1105  00F0               	movwf	___awdiv@divisor
  1976  1106  3000               	movlw	0
  1977  1107  00F1               	movwf	___awdiv@divisor+1
  1978  1108  082A               	movf	displayNumber@num+1,w
  1979  1109  00F3               	movwf	___awdiv@dividend+1
  1980  110A  0829               	movf	displayNumber@num,w
  1981  110B  00F2               	movwf	___awdiv@dividend
  1982  110C  160A  118A  2004  160A  118A  	fcall	___awdiv
  1983  1111  0871               	movf	?___awdiv+1,w
  1984  1112  00FA               	movwf	displayDigit@digito+1
  1985  1113  0870               	movf	?___awdiv,w
  1986  1114  00F9               	movwf	displayDigit@digito
  1987  1115  1283               	bcf	3,5	;RP0=0, select bank0
  1988  1116  1303               	bcf	3,6	;RP1=0, select bank0
  1989  1117  082C               	movf	displayNumber@D2,w
  1990  1118  00FB               	movwf	displayDigit@D1
  1991  1119  3000               	movlw	0
  1992  111A  00FC               	movwf	displayDigit@D1+1
  1993  111B  160A  118A  25D9  160A  118A  	fcall	_displayDigit
  1994                           
  1995                           ;lcd.c: 75: num %=10;
  1996  1120  300A               	movlw	10
  1997  1121  00F0               	movwf	___awmod@divisor
  1998  1122  3000               	movlw	0
  1999  1123  00F1               	movwf	___awmod@divisor+1
  2000  1124  1283               	bcf	3,5	;RP0=0, select bank0
  2001  1125  1303               	bcf	3,6	;RP1=0, select bank0
  2002  1126  082A               	movf	displayNumber@num+1,w
  2003  1127  00F3               	movwf	___awmod@dividend+1
  2004  1128  0829               	movf	displayNumber@num,w
  2005  1129  00F2               	movwf	___awmod@dividend
  2006  112A  160A  158A  26DD  160A  118A  	fcall	___awmod
  2007  112F  0871               	movf	?___awmod+1,w
  2008  1130  1283               	bcf	3,5	;RP0=0, select bank0
  2009  1131  1303               	bcf	3,6	;RP1=0, select bank0
  2010  1132  00AA               	movwf	displayNumber@num+1
  2011  1133  0870               	movf	?___awmod,w
  2012  1134  00A9               	movwf	displayNumber@num
  2013                           
  2014                           ;lcd.c: 76: ((LCDDATA10) |= (1UL) << (3));
  2015  1135  1283               	bcf	3,5	;RP0=0, select bank2
  2016  1136  1703               	bsf	3,6	;RP1=1, select bank2
  2017  1137  159A               	bsf	26,3	;volatile
  2018                           
  2019                           ;lcd.c: 78: displayDigit(num, D1);
  2020  1138  1283               	bcf	3,5	;RP0=0, select bank0
  2021  1139  1303               	bcf	3,6	;RP1=0, select bank0
  2022  113A  082A               	movf	displayNumber@num+1,w
  2023  113B  00FA               	movwf	displayDigit@digito+1
  2024  113C  0829               	movf	displayNumber@num,w
  2025  113D  00F9               	movwf	displayDigit@digito
  2026  113E  082B               	movf	displayNumber@D1,w
  2027  113F  00FB               	movwf	displayDigit@D1
  2028  1140  3000               	movlw	0
  2029  1141  00FC               	movwf	displayDigit@D1+1
  2030  1142  160A  118A  25D9   	fcall	_displayDigit
  2031  1145  0008               	return
  2032  1146                     __end_of_displayNumber:	
  2033                           
  2034                           	psect	text5
  2035  15D9                     __ptext5:	
  2036 ;; *************** function _displayDigit *****************
  2037 ;; Defined at:
  2038 ;;		line 83 in file "lcd.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;  digito          2    9[COMMON] int 
  2041 ;;  D1              2   11[COMMON] PTR struct .
  2042 ;;		 -> main@D3(28), main@D2(28), main@D1(28), 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;		None
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2054 ;;      Params:         4       0       0       0       0
  2055 ;;      Locals:         0       0       0       0       0
  2056 ;;      Temps:          0       9       0       0       0
  2057 ;;      Totals:         4       9       0       0       0
  2058 ;;Total ram usage:       13 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_displayNumber
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           
  2068                           ;psect for function _displayDigit
  2069  15D9                     _displayDigit:	
  2070                           
  2071                           ;lcd.c: 84: switch(digito){
  2072                           
  2073                           ;incstack = 0
  2074                           ; Regs used in _displayDigit: [wreg-fsr0h+status,2+status,0]
  2075  15D9  120A  118A  2FAA   	goto	l1355
  2076  15DC                     l1331:	
  2077                           ;lcd.c: 85: case 0:
  2078                           
  2079                           
  2080                           ;lcd.c: 86: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  2081  15DC  300E               	movlw	14
  2082  15DD  077B               	addwf	displayDigit@D1,w
  2083  15DE  1283               	bcf	3,5	;RP0=0, select bank0
  2084  15DF  1303               	bcf	3,6	;RP1=0, select bank0
  2085  15E0  00A0               	movwf	??_displayDigit
  2086  15E1  087C               	movf	displayDigit@D1+1,w
  2087  15E2  1803               	skipnc
  2088  15E3  3E01               	addlw	1
  2089  15E4  00A1               	movwf	??_displayDigit+1
  2090  15E5  0820               	movf	??_displayDigit,w
  2091  15E6  0084               	movwf	4
  2092  15E7  1783               	bsf	3,7
  2093  15E8  1C21               	btfss	??_displayDigit+1,0
  2094  15E9  1383               	bcf	3,7
  2095  15EA  0A00               	incf	0,w
  2096  15EB  00A2               	movwf	??_displayDigit+2
  2097  15EC  3001               	movlw	1
  2098  15ED  00A3               	movwf	??_displayDigit+3
  2099  15EE  3000               	movlw	0
  2100  15EF  00A4               	movwf	??_displayDigit+4
  2101  15F0  2DF4               	goto	u1994
  2102  15F1                     u1995:	
  2103  15F1  1003               	clrc
  2104  15F2  0DA3               	rlf	??_displayDigit+3,f
  2105  15F3  0DA4               	rlf	??_displayDigit+4,f
  2106  15F4                     u1994:	
  2107  15F4  0BA2               	decfsz	??_displayDigit+2,f
  2108  15F5  2DF1               	goto	u1995
  2109  15F6  087B               	movf	displayDigit@D1,w
  2110  15F7  0084               	movwf	4
  2111  15F8  1783               	bsf	3,7
  2112  15F9  1C7C               	btfss	displayDigit@D1+1,0
  2113  15FA  1383               	bcf	3,7
  2114  15FB  0800               	movf	0,w
  2115  15FC  00A5               	movwf	??_displayDigit+5
  2116  15FD  0A84               	incf	4,f
  2117  15FE  0800               	movf	0,w
  2118  15FF  00A6               	movwf	??_displayDigit+6
  2119  1600  0825               	movf	??_displayDigit+5,w
  2120  1601  0084               	movwf	4
  2121  1602  1783               	bsf	3,7
  2122  1603  1C26               	btfss	??_displayDigit+6,0
  2123  1604  1383               	bcf	3,7
  2124  1605  0823               	movf	??_displayDigit+3,w
  2125  1606  0480               	iorwf	0,f
  2126  1607  0A84               	incf	4,f
  2127  1608  0824               	movf	??_displayDigit+4,w
  2128  1609  0480               	iorwf	0,f
  2129                           
  2130                           ;lcd.c: 87: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  2131  160A  3010               	movlw	16
  2132  160B  077B               	addwf	displayDigit@D1,w
  2133  160C  00A0               	movwf	??_displayDigit
  2134  160D  087C               	movf	displayDigit@D1+1,w
  2135  160E  1803               	skipnc
  2136  160F  3E01               	addlw	1
  2137  1610  00A1               	movwf	??_displayDigit+1
  2138  1611  0820               	movf	??_displayDigit,w
  2139  1612  0084               	movwf	4
  2140  1613  1783               	bsf	3,7
  2141  1614  1C21               	btfss	??_displayDigit+1,0
  2142  1615  1383               	bcf	3,7
  2143  1616  0A00               	incf	0,w
  2144  1617  00A2               	movwf	??_displayDigit+2
  2145  1618  3001               	movlw	1
  2146  1619  00A3               	movwf	??_displayDigit+3
  2147  161A  3000               	movlw	0
  2148  161B  00A4               	movwf	??_displayDigit+4
  2149  161C  2E20               	goto	u2004
  2150  161D                     u2005:	
  2151  161D  1003               	clrc
  2152  161E  0DA3               	rlf	??_displayDigit+3,f
  2153  161F  0DA4               	rlf	??_displayDigit+4,f
  2154  1620                     u2004:	
  2155  1620  0BA2               	decfsz	??_displayDigit+2,f
  2156  1621  2E1D               	goto	u2005
  2157  1622  3002               	movlw	2
  2158  1623  077B               	addwf	displayDigit@D1,w
  2159  1624  00A5               	movwf	??_displayDigit+5
  2160  1625  087C               	movf	displayDigit@D1+1,w
  2161  1626  1803               	skipnc
  2162  1627  3E01               	addlw	1
  2163  1628  00A6               	movwf	??_displayDigit+6
  2164  1629  0825               	movf	??_displayDigit+5,w
  2165  162A  0084               	movwf	4
  2166  162B  1783               	bsf	3,7
  2167  162C  1C26               	btfss	??_displayDigit+6,0
  2168  162D  1383               	bcf	3,7
  2169  162E  0800               	movf	0,w
  2170  162F  00A7               	movwf	??_displayDigit+7
  2171  1630  0A84               	incf	4,f
  2172  1631  0800               	movf	0,w
  2173  1632  00A8               	movwf	??_displayDigit+8
  2174  1633  0827               	movf	??_displayDigit+7,w
  2175  1634  0084               	movwf	4
  2176  1635  1783               	bsf	3,7
  2177  1636  1C28               	btfss	??_displayDigit+8,0
  2178  1637  1383               	bcf	3,7
  2179  1638  0823               	movf	??_displayDigit+3,w
  2180  1639  0480               	iorwf	0,f
  2181  163A  0A84               	incf	4,f
  2182  163B  0824               	movf	??_displayDigit+4,w
  2183  163C  0480               	iorwf	0,f
  2184                           
  2185                           ;lcd.c: 88: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  2186  163D  3012               	movlw	18
  2187  163E  077B               	addwf	displayDigit@D1,w
  2188  163F  00A0               	movwf	??_displayDigit
  2189  1640  087C               	movf	displayDigit@D1+1,w
  2190  1641  1803               	skipnc
  2191  1642  3E01               	addlw	1
  2192  1643  00A1               	movwf	??_displayDigit+1
  2193  1644  0820               	movf	??_displayDigit,w
  2194  1645  0084               	movwf	4
  2195  1646  1783               	bsf	3,7
  2196  1647  1C21               	btfss	??_displayDigit+1,0
  2197  1648  1383               	bcf	3,7
  2198  1649  0A00               	incf	0,w
  2199  164A  00A2               	movwf	??_displayDigit+2
  2200  164B  3001               	movlw	1
  2201  164C  00A3               	movwf	??_displayDigit+3
  2202  164D  3000               	movlw	0
  2203  164E  00A4               	movwf	??_displayDigit+4
  2204  164F  2E53               	goto	u2014
  2205  1650                     u2015:	
  2206  1650  1003               	clrc
  2207  1651  0DA3               	rlf	??_displayDigit+3,f
  2208  1652  0DA4               	rlf	??_displayDigit+4,f
  2209  1653                     u2014:	
  2210  1653  0BA2               	decfsz	??_displayDigit+2,f
  2211  1654  2E50               	goto	u2015
  2212  1655  3004               	movlw	4
  2213  1656  077B               	addwf	displayDigit@D1,w
  2214  1657  00A5               	movwf	??_displayDigit+5
  2215  1658  087C               	movf	displayDigit@D1+1,w
  2216  1659  1803               	skipnc
  2217  165A  3E01               	addlw	1
  2218  165B  00A6               	movwf	??_displayDigit+6
  2219  165C  0825               	movf	??_displayDigit+5,w
  2220  165D  0084               	movwf	4
  2221  165E  1783               	bsf	3,7
  2222  165F  1C26               	btfss	??_displayDigit+6,0
  2223  1660  1383               	bcf	3,7
  2224  1661  0800               	movf	0,w
  2225  1662  00A7               	movwf	??_displayDigit+7
  2226  1663  0A84               	incf	4,f
  2227  1664  0800               	movf	0,w
  2228  1665  00A8               	movwf	??_displayDigit+8
  2229  1666  0827               	movf	??_displayDigit+7,w
  2230  1667  0084               	movwf	4
  2231  1668  1783               	bsf	3,7
  2232  1669  1C28               	btfss	??_displayDigit+8,0
  2233  166A  1383               	bcf	3,7
  2234  166B  0823               	movf	??_displayDigit+3,w
  2235  166C  0480               	iorwf	0,f
  2236  166D  0A84               	incf	4,f
  2237  166E  0824               	movf	??_displayDigit+4,w
  2238  166F  0480               	iorwf	0,f
  2239                           
  2240                           ;lcd.c: 89: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  2241  1670  3014               	movlw	20
  2242  1671  077B               	addwf	displayDigit@D1,w
  2243  1672  00A0               	movwf	??_displayDigit
  2244  1673  087C               	movf	displayDigit@D1+1,w
  2245  1674  1803               	skipnc
  2246  1675  3E01               	addlw	1
  2247  1676  00A1               	movwf	??_displayDigit+1
  2248  1677  0820               	movf	??_displayDigit,w
  2249  1678  0084               	movwf	4
  2250  1679  1783               	bsf	3,7
  2251  167A  1C21               	btfss	??_displayDigit+1,0
  2252  167B  1383               	bcf	3,7
  2253  167C  0A00               	incf	0,w
  2254  167D  00A2               	movwf	??_displayDigit+2
  2255  167E  3001               	movlw	1
  2256  167F  00A3               	movwf	??_displayDigit+3
  2257  1680  3000               	movlw	0
  2258  1681  00A4               	movwf	??_displayDigit+4
  2259  1682  2E86               	goto	u2024
  2260  1683                     u2025:	
  2261  1683  1003               	clrc
  2262  1684  0DA3               	rlf	??_displayDigit+3,f
  2263  1685  0DA4               	rlf	??_displayDigit+4,f
  2264  1686                     u2024:	
  2265  1686  0BA2               	decfsz	??_displayDigit+2,f
  2266  1687  2E83               	goto	u2025
  2267  1688  3006               	movlw	6
  2268  1689  077B               	addwf	displayDigit@D1,w
  2269  168A  00A5               	movwf	??_displayDigit+5
  2270  168B  087C               	movf	displayDigit@D1+1,w
  2271  168C  1803               	skipnc
  2272  168D  3E01               	addlw	1
  2273  168E  00A6               	movwf	??_displayDigit+6
  2274  168F  0825               	movf	??_displayDigit+5,w
  2275  1690  0084               	movwf	4
  2276  1691  1783               	bsf	3,7
  2277  1692  1C26               	btfss	??_displayDigit+6,0
  2278  1693  1383               	bcf	3,7
  2279  1694  0800               	movf	0,w
  2280  1695  00A7               	movwf	??_displayDigit+7
  2281  1696  0A84               	incf	4,f
  2282  1697  0800               	movf	0,w
  2283  1698  00A8               	movwf	??_displayDigit+8
  2284  1699  0827               	movf	??_displayDigit+7,w
  2285  169A  0084               	movwf	4
  2286  169B  1783               	bsf	3,7
  2287  169C  1C28               	btfss	??_displayDigit+8,0
  2288  169D  1383               	bcf	3,7
  2289  169E  0823               	movf	??_displayDigit+3,w
  2290  169F  0480               	iorwf	0,f
  2291  16A0  0A84               	incf	4,f
  2292  16A1  0824               	movf	??_displayDigit+4,w
  2293  16A2  0480               	iorwf	0,f
  2294                           
  2295                           ;lcd.c: 90: ((*D1->se) |= (1UL) << (D1->bits[4]));
  2296  16A3  3016               	movlw	22
  2297  16A4  077B               	addwf	displayDigit@D1,w
  2298  16A5  00A0               	movwf	??_displayDigit
  2299  16A6  087C               	movf	displayDigit@D1+1,w
  2300  16A7  1803               	skipnc
  2301  16A8  3E01               	addlw	1
  2302  16A9  00A1               	movwf	??_displayDigit+1
  2303  16AA  0820               	movf	??_displayDigit,w
  2304  16AB  0084               	movwf	4
  2305  16AC  1783               	bsf	3,7
  2306  16AD  1C21               	btfss	??_displayDigit+1,0
  2307  16AE  1383               	bcf	3,7
  2308  16AF  0A00               	incf	0,w
  2309  16B0  00A2               	movwf	??_displayDigit+2
  2310  16B1  3001               	movlw	1
  2311  16B2  00A3               	movwf	??_displayDigit+3
  2312  16B3  3000               	movlw	0
  2313  16B4  00A4               	movwf	??_displayDigit+4
  2314  16B5  2EB9               	goto	u2034
  2315  16B6                     u2035:	
  2316  16B6  1003               	clrc
  2317  16B7  0DA3               	rlf	??_displayDigit+3,f
  2318  16B8  0DA4               	rlf	??_displayDigit+4,f
  2319  16B9                     u2034:	
  2320  16B9  0BA2               	decfsz	??_displayDigit+2,f
  2321  16BA  2EB6               	goto	u2035
  2322  16BB  3008               	movlw	8
  2323  16BC  077B               	addwf	displayDigit@D1,w
  2324  16BD  00A5               	movwf	??_displayDigit+5
  2325  16BE  087C               	movf	displayDigit@D1+1,w
  2326  16BF  1803               	skipnc
  2327  16C0  3E01               	addlw	1
  2328  16C1  00A6               	movwf	??_displayDigit+6
  2329  16C2  0825               	movf	??_displayDigit+5,w
  2330  16C3  0084               	movwf	4
  2331  16C4  1783               	bsf	3,7
  2332  16C5  1C26               	btfss	??_displayDigit+6,0
  2333  16C6  1383               	bcf	3,7
  2334  16C7  0800               	movf	0,w
  2335  16C8  00A7               	movwf	??_displayDigit+7
  2336  16C9  0A84               	incf	4,f
  2337  16CA  0800               	movf	0,w
  2338  16CB  00A8               	movwf	??_displayDigit+8
  2339  16CC  0827               	movf	??_displayDigit+7,w
  2340  16CD  0084               	movwf	4
  2341  16CE  1783               	bsf	3,7
  2342  16CF  1C28               	btfss	??_displayDigit+8,0
  2343  16D0  1383               	bcf	3,7
  2344  16D1  0823               	movf	??_displayDigit+3,w
  2345  16D2  0480               	iorwf	0,f
  2346  16D3  0A84               	incf	4,f
  2347  16D4  0824               	movf	??_displayDigit+4,w
  2348  16D5  0480               	iorwf	0,f
  2349                           
  2350                           ;lcd.c: 91: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  2351  16D6  3018               	movlw	24
  2352  16D7  077B               	addwf	displayDigit@D1,w
  2353  16D8  00A0               	movwf	??_displayDigit
  2354  16D9  087C               	movf	displayDigit@D1+1,w
  2355  16DA  1803               	skipnc
  2356  16DB  3E01               	addlw	1
  2357  16DC  00A1               	movwf	??_displayDigit+1
  2358  16DD  0820               	movf	??_displayDigit,w
  2359  16DE  0084               	movwf	4
  2360  16DF  1783               	bsf	3,7
  2361  16E0  1C21               	btfss	??_displayDigit+1,0
  2362  16E1  1383               	bcf	3,7
  2363  16E2  0A00               	incf	0,w
  2364  16E3  00A2               	movwf	??_displayDigit+2
  2365  16E4  3001               	movlw	1
  2366  16E5  00A3               	movwf	??_displayDigit+3
  2367  16E6  3000               	movlw	0
  2368  16E7  00A4               	movwf	??_displayDigit+4
  2369  16E8  120A  158A  2B0D   	goto	u2044
  2370                           
  2371                           	psect	text6
  2372  1EDD                     __ptext6:	
  2373 ;; *************** function ___awmod *****************
  2374 ;; Defined at:
  2375 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awmod.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  divisor         2    0[COMMON] int 
  2378 ;;  dividend        2    2[COMMON] int 
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;  sign            1    6[COMMON] unsigned char 
  2381 ;;  counter         1    5[COMMON] unsigned char 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  2    0[COMMON] int 
  2384 ;; Registers used:
  2385 ;;		wreg, status,2, status,0
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2391 ;;      Params:         4       0       0       0       0
  2392 ;;      Locals:         2       0       0       0       0
  2393 ;;      Temps:          1       0       0       0       0
  2394 ;;      Totals:         7       0       0       0       0
  2395 ;;Total ram usage:        7 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; This function calls:
  2398 ;;		Nothing
  2399 ;; This function is called by:
  2400 ;;		_displayNumber
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           
  2405                           ;psect for function ___awmod
  2406  1EDD                     ___awmod:	
  2407                           
  2408                           ;incstack = 0
  2409                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2410  1EDD  01F6               	clrf	___awmod@sign
  2411  1EDE  1FF3               	btfss	___awmod@dividend+1,7
  2412  1EDF  2EE7               	goto	l1485
  2413  1EE0  09F2               	comf	___awmod@dividend,f
  2414  1EE1  09F3               	comf	___awmod@dividend+1,f
  2415  1EE2  0AF2               	incf	___awmod@dividend,f
  2416  1EE3  1903               	skipnz
  2417  1EE4  0AF3               	incf	___awmod@dividend+1,f
  2418  1EE5  01F6               	clrf	___awmod@sign
  2419  1EE6  0AF6               	incf	___awmod@sign,f
  2420  1EE7                     l1485:	
  2421  1EE7  1FF1               	btfss	___awmod@divisor+1,7
  2422  1EE8  2EEE               	goto	l1489
  2423  1EE9  09F0               	comf	___awmod@divisor,f
  2424  1EEA  09F1               	comf	___awmod@divisor+1,f
  2425  1EEB  0AF0               	incf	___awmod@divisor,f
  2426  1EEC  1903               	skipnz
  2427  1EED  0AF1               	incf	___awmod@divisor+1,f
  2428  1EEE                     l1489:	
  2429  1EEE  0870               	movf	___awmod@divisor,w
  2430  1EEF  0471               	iorwf	___awmod@divisor+1,w
  2431  1EF0  1903               	btfsc	3,2
  2432  1EF1  2F1B               	goto	l1507
  2433  1EF2  01F5               	clrf	___awmod@counter
  2434  1EF3  0AF5               	incf	___awmod@counter,f
  2435  1EF4                     l1497:	
  2436  1EF4  1BF1               	btfsc	___awmod@divisor+1,7
  2437  1EF5  2F02               	goto	l1499
  2438  1EF6  3001               	movlw	1
  2439  1EF7                     u3115:	
  2440  1EF7  1003               	clrc
  2441  1EF8  0DF0               	rlf	___awmod@divisor,f
  2442  1EF9  0DF1               	rlf	___awmod@divisor+1,f
  2443  1EFA  3EFF               	addlw	-1
  2444  1EFB  1D03               	skipz
  2445  1EFC  2EF7               	goto	u3115
  2446  1EFD  3001               	movlw	1
  2447  1EFE  00F4               	movwf	??___awmod
  2448  1EFF  0874               	movf	??___awmod,w
  2449  1F00  07F5               	addwf	___awmod@counter,f
  2450  1F01  2EF4               	goto	l1497
  2451  1F02                     l1499:	
  2452  1F02  0871               	movf	___awmod@divisor+1,w
  2453  1F03  0273               	subwf	___awmod@dividend+1,w
  2454  1F04  1D03               	skipz
  2455  1F05  2F08               	goto	u3135
  2456  1F06  0870               	movf	___awmod@divisor,w
  2457  1F07  0272               	subwf	___awmod@dividend,w
  2458  1F08                     u3135:	
  2459  1F08  1C03               	skipc
  2460  1F09  2F10               	goto	l1503
  2461  1F0A  0870               	movf	___awmod@divisor,w
  2462  1F0B  02F2               	subwf	___awmod@dividend,f
  2463  1F0C  0871               	movf	___awmod@divisor+1,w
  2464  1F0D  1C03               	skipc
  2465  1F0E  03F3               	decf	___awmod@dividend+1,f
  2466  1F0F  02F3               	subwf	___awmod@dividend+1,f
  2467  1F10                     l1503:	
  2468  1F10  3001               	movlw	1
  2469  1F11                     u3145:	
  2470  1F11  1003               	clrc
  2471  1F12  0CF1               	rrf	___awmod@divisor+1,f
  2472  1F13  0CF0               	rrf	___awmod@divisor,f
  2473  1F14  3EFF               	addlw	-1
  2474  1F15  1D03               	skipz
  2475  1F16  2F11               	goto	u3145
  2476  1F17  3001               	movlw	1
  2477  1F18  02F5               	subwf	___awmod@counter,f
  2478  1F19  1D03               	btfss	3,2
  2479  1F1A  2F02               	goto	l1499
  2480  1F1B                     l1507:	
  2481  1F1B  0876               	movf	___awmod@sign,w
  2482  1F1C  1903               	btfsc	3,2
  2483  1F1D  2F23               	goto	l1511
  2484  1F1E  09F2               	comf	___awmod@dividend,f
  2485  1F1F  09F3               	comf	___awmod@dividend+1,f
  2486  1F20  0AF2               	incf	___awmod@dividend,f
  2487  1F21  1903               	skipnz
  2488  1F22  0AF3               	incf	___awmod@dividend+1,f
  2489  1F23                     l1511:	
  2490  1F23  0873               	movf	___awmod@dividend+1,w
  2491  1F24  00F1               	movwf	?___awmod+1
  2492  1F25  0872               	movf	___awmod@dividend,w
  2493  1F26  00F0               	movwf	?___awmod
  2494  1F27  0008               	return
  2495  1F28                     __end_of___awmod:	
  2496                           
  2497                           	psect	text7
  2498  1004                     __ptext7:	
  2499 ;; *************** function ___awdiv *****************
  2500 ;; Defined at:
  2501 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  divisor         2    0[COMMON] int 
  2504 ;;  dividend        2    2[COMMON] int 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;  quotient        2    7[COMMON] int 
  2507 ;;  sign            1    6[COMMON] unsigned char 
  2508 ;;  counter         1    5[COMMON] unsigned char 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  2    0[COMMON] int 
  2511 ;; Registers used:
  2512 ;;		wreg, status,2, status,0
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2518 ;;      Params:         4       0       0       0       0
  2519 ;;      Locals:         4       0       0       0       0
  2520 ;;      Temps:          1       0       0       0       0
  2521 ;;      Totals:         9       0       0       0       0
  2522 ;;Total ram usage:        9 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_displayNumber
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           
  2532                           ;psect for function ___awdiv
  2533  1004                     ___awdiv:	
  2534                           
  2535                           ;incstack = 0
  2536                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2537  1004  01F6               	clrf	___awdiv@sign
  2538  1005  1FF1               	btfss	___awdiv@divisor+1,7
  2539  1006  280E               	goto	l1441
  2540  1007  09F0               	comf	___awdiv@divisor,f
  2541  1008  09F1               	comf	___awdiv@divisor+1,f
  2542  1009  0AF0               	incf	___awdiv@divisor,f
  2543  100A  1903               	skipnz
  2544  100B  0AF1               	incf	___awdiv@divisor+1,f
  2545  100C  01F6               	clrf	___awdiv@sign
  2546  100D  0AF6               	incf	___awdiv@sign,f
  2547  100E                     l1441:	
  2548  100E  1FF3               	btfss	___awdiv@dividend+1,7
  2549  100F  2819               	goto	l1447
  2550  1010  09F2               	comf	___awdiv@dividend,f
  2551  1011  09F3               	comf	___awdiv@dividend+1,f
  2552  1012  0AF2               	incf	___awdiv@dividend,f
  2553  1013  1903               	skipnz
  2554  1014  0AF3               	incf	___awdiv@dividend+1,f
  2555  1015  3001               	movlw	1
  2556  1016  00F4               	movwf	??___awdiv
  2557  1017  0874               	movf	??___awdiv,w
  2558  1018  06F6               	xorwf	___awdiv@sign,f
  2559  1019                     l1447:	
  2560  1019  01F7               	clrf	___awdiv@quotient
  2561  101A  01F8               	clrf	___awdiv@quotient+1
  2562  101B  0870               	movf	___awdiv@divisor,w
  2563  101C  0471               	iorwf	___awdiv@divisor+1,w
  2564  101D  1903               	btfsc	3,2
  2565  101E  2850               	goto	l1469
  2566  101F  01F5               	clrf	___awdiv@counter
  2567  1020  0AF5               	incf	___awdiv@counter,f
  2568  1021                     l1457:	
  2569  1021  1BF1               	btfsc	___awdiv@divisor+1,7
  2570  1022  282F               	goto	l1459
  2571  1023  3001               	movlw	1
  2572  1024                     u3015:	
  2573  1024  1003               	clrc
  2574  1025  0DF0               	rlf	___awdiv@divisor,f
  2575  1026  0DF1               	rlf	___awdiv@divisor+1,f
  2576  1027  3EFF               	addlw	-1
  2577  1028  1D03               	skipz
  2578  1029  2824               	goto	u3015
  2579  102A  3001               	movlw	1
  2580  102B  00F4               	movwf	??___awdiv
  2581  102C  0874               	movf	??___awdiv,w
  2582  102D  07F5               	addwf	___awdiv@counter,f
  2583  102E  2821               	goto	l1457
  2584  102F                     l1459:	
  2585  102F  3001               	movlw	1
  2586  1030                     u3035:	
  2587  1030  1003               	clrc
  2588  1031  0DF7               	rlf	___awdiv@quotient,f
  2589  1032  0DF8               	rlf	___awdiv@quotient+1,f
  2590  1033  3EFF               	addlw	-1
  2591  1034  1D03               	skipz
  2592  1035  2830               	goto	u3035
  2593  1036  0871               	movf	___awdiv@divisor+1,w
  2594  1037  0273               	subwf	___awdiv@dividend+1,w
  2595  1038  1D03               	skipz
  2596  1039  283C               	goto	u3045
  2597  103A  0870               	movf	___awdiv@divisor,w
  2598  103B  0272               	subwf	___awdiv@dividend,w
  2599  103C                     u3045:	
  2600  103C  1C03               	skipc
  2601  103D  2845               	goto	l1465
  2602  103E  0870               	movf	___awdiv@divisor,w
  2603  103F  02F2               	subwf	___awdiv@dividend,f
  2604  1040  0871               	movf	___awdiv@divisor+1,w
  2605  1041  1C03               	skipc
  2606  1042  03F3               	decf	___awdiv@dividend+1,f
  2607  1043  02F3               	subwf	___awdiv@dividend+1,f
  2608  1044  1477               	bsf	___awdiv@quotient,0
  2609  1045                     l1465:	
  2610  1045  3001               	movlw	1
  2611  1046                     u3055:	
  2612  1046  1003               	clrc
  2613  1047  0CF1               	rrf	___awdiv@divisor+1,f
  2614  1048  0CF0               	rrf	___awdiv@divisor,f
  2615  1049  3EFF               	addlw	-1
  2616  104A  1D03               	skipz
  2617  104B  2846               	goto	u3055
  2618  104C  3001               	movlw	1
  2619  104D  02F5               	subwf	___awdiv@counter,f
  2620  104E  1D03               	btfss	3,2
  2621  104F  282F               	goto	l1459
  2622  1050                     l1469:	
  2623  1050  0876               	movf	___awdiv@sign,w
  2624  1051  1903               	btfsc	3,2
  2625  1052  2858               	goto	l1473
  2626  1053  09F7               	comf	___awdiv@quotient,f
  2627  1054  09F8               	comf	___awdiv@quotient+1,f
  2628  1055  0AF7               	incf	___awdiv@quotient,f
  2629  1056  1903               	skipnz
  2630  1057  0AF8               	incf	___awdiv@quotient+1,f
  2631  1058                     l1473:	
  2632  1058  0878               	movf	___awdiv@quotient+1,w
  2633  1059  00F1               	movwf	?___awdiv+1
  2634  105A  0877               	movf	___awdiv@quotient,w
  2635  105B  00F0               	movwf	?___awdiv
  2636  105C  0008               	return
  2637  105D                     __end_of___awdiv:	
  2638                           
  2639                           	psect	text8
  2640  125E                     __ptext8:	
  2641 ;; *************** function ___fttol *****************
  2642 ;; Defined at:
  2643 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fttol.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  f1              3   29[BANK0 ] float 
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  lval            4   38[BANK0 ] unsigned long 
  2648 ;;  exp1            1   42[BANK0 ] unsigned char 
  2649 ;;  sign1           1   37[BANK0 ] unsigned char 
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  4   29[BANK0 ] long 
  2652 ;; Registers used:
  2653 ;;		wreg, status,2, status,0
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2659 ;;      Params:         0       4       0       0       0
  2660 ;;      Locals:         0       6       0       0       0
  2661 ;;      Temps:          0       4       0       0       0
  2662 ;;      Totals:         0      14       0       0       0
  2663 ;;Total ram usage:       14 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; This function calls:
  2666 ;;		Nothing
  2667 ;; This function is called by:
  2668 ;;		_main
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           
  2673                           ;psect for function ___fttol
  2674  125E                     ___fttol:	
  2675                           
  2676                           ;incstack = 0
  2677                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2678  125E  1283               	bcf	3,5	;RP0=0, select bank0
  2679  125F  1303               	bcf	3,6	;RP1=0, select bank0
  2680  1260  083D               	movf	___fttol@f1,w
  2681  1261  00C1               	movwf	??___fttol
  2682  1262  083E               	movf	___fttol@f1+1,w
  2683  1263  00C2               	movwf	??___fttol+1
  2684  1264  083F               	movf	___fttol@f1+2,w
  2685  1265  00C3               	movwf	??___fttol+2
  2686  1266  1003               	clrc
  2687  1267  0D42               	rlf	??___fttol+1,w
  2688  1268  0D43               	rlf	??___fttol+2,w
  2689  1269  00C4               	movwf	??___fttol+3
  2690  126A  0844               	movf	??___fttol+3,w
  2691  126B  00CA               	movwf	___fttol@exp1
  2692  126C  084A               	movf	___fttol@exp1,w
  2693  126D  1D03               	btfss	3,2
  2694  126E  2A78               	goto	l1797
  2695  126F  3000               	movlw	0
  2696  1270  00C0               	movwf	?___fttol+3
  2697  1271  3000               	movlw	0
  2698  1272  00BF               	movwf	?___fttol+2
  2699  1273  3000               	movlw	0
  2700  1274  00BE               	movwf	?___fttol+1
  2701  1275  3000               	movlw	0
  2702  1276  00BD               	movwf	?___fttol
  2703  1277  0008               	return
  2704  1278                     l1797:	
  2705  1278  083D               	movf	___fttol@f1,w
  2706  1279  00C1               	movwf	??___fttol
  2707  127A  083E               	movf	___fttol@f1+1,w
  2708  127B  00C2               	movwf	??___fttol+1
  2709  127C  083F               	movf	___fttol@f1+2,w
  2710  127D  00C3               	movwf	??___fttol+2
  2711  127E  3017               	movlw	23
  2712  127F                     u3775:	
  2713  127F  1003               	clrc
  2714  1280  0CC3               	rrf	??___fttol+2,f
  2715  1281  0CC2               	rrf	??___fttol+1,f
  2716  1282  0CC1               	rrf	??___fttol,f
  2717  1283  3EFF               	addlw	-1
  2718  1284  1D03               	skipz
  2719  1285  2A7F               	goto	u3775
  2720  1286  0841               	movf	??___fttol,w
  2721  1287  00C4               	movwf	??___fttol+3
  2722  1288  0844               	movf	??___fttol+3,w
  2723  1289  00C5               	movwf	___fttol@sign1
  2724  128A  17BE               	bsf	___fttol@f1+1,7
  2725  128B  30FF               	movlw	255
  2726  128C  05BD               	andwf	___fttol@f1,f
  2727  128D  30FF               	movlw	255
  2728  128E  05BE               	andwf	___fttol@f1+1,f
  2729  128F  3000               	movlw	0
  2730  1290  05BF               	andwf	___fttol@f1+2,f
  2731  1291  083D               	movf	___fttol@f1,w
  2732  1292  00C6               	movwf	___fttol@lval
  2733  1293  083E               	movf	___fttol@f1+1,w
  2734  1294  00C7               	movwf	___fttol@lval+1
  2735  1295  083F               	movf	___fttol@f1+2,w
  2736  1296  00C8               	movwf	___fttol@lval+2
  2737  1297  01C9               	clrf	___fttol@lval+3
  2738  1298  308E               	movlw	142
  2739  1299  02CA               	subwf	___fttol@exp1,f
  2740  129A  1FCA               	btfss	___fttol@exp1,7
  2741  129B  2ABA               	goto	l1817
  2742  129C  084A               	movf	___fttol@exp1,w
  2743  129D  3A80               	xorlw	128
  2744  129E  3E8F               	addlw	143
  2745  129F  1803               	skipnc
  2746  12A0  2AAA               	goto	l1815
  2747  12A1  3000               	movlw	0
  2748  12A2  00C0               	movwf	?___fttol+3
  2749  12A3  3000               	movlw	0
  2750  12A4  00BF               	movwf	?___fttol+2
  2751  12A5  3000               	movlw	0
  2752  12A6  00BE               	movwf	?___fttol+1
  2753  12A7  3000               	movlw	0
  2754  12A8  00BD               	movwf	?___fttol
  2755  12A9  0008               	return
  2756  12AA                     l1815:	
  2757  12AA  3001               	movlw	1
  2758  12AB                     u3805:	
  2759  12AB  1003               	clrc
  2760  12AC  0CC9               	rrf	___fttol@lval+3,f
  2761  12AD  0CC8               	rrf	___fttol@lval+2,f
  2762  12AE  0CC7               	rrf	___fttol@lval+1,f
  2763  12AF  0CC6               	rrf	___fttol@lval,f
  2764  12B0  3EFF               	addlw	-1
  2765  12B1  1D03               	skipz
  2766  12B2  2AAB               	goto	u3805
  2767  12B3  3001               	movlw	1
  2768  12B4  00C1               	movwf	??___fttol
  2769  12B5  0841               	movf	??___fttol,w
  2770  12B6  07CA               	addwf	___fttol@exp1,f
  2771  12B7  1903               	btfsc	3,2
  2772  12B8  2AD5               	goto	l1825
  2773  12B9  2AAA               	goto	l1815
  2774  12BA                     l1817:	
  2775  12BA  3018               	movlw	24
  2776  12BB  024A               	subwf	___fttol@exp1,w
  2777  12BC  1C03               	skipc
  2778  12BD  2AD2               	goto	l537
  2779  12BE  3000               	movlw	0
  2780  12BF  00C0               	movwf	?___fttol+3
  2781  12C0  3000               	movlw	0
  2782  12C1  00BF               	movwf	?___fttol+2
  2783  12C2  3000               	movlw	0
  2784  12C3  00BE               	movwf	?___fttol+1
  2785  12C4  3000               	movlw	0
  2786  12C5  00BD               	movwf	?___fttol
  2787  12C6  0008               	return
  2788  12C7                     l1823:	
  2789  12C7  3001               	movlw	1
  2790  12C8  00C1               	movwf	??___fttol
  2791  12C9                     u3835:	
  2792  12C9  1003               	clrc
  2793  12CA  0DC6               	rlf	___fttol@lval,f
  2794  12CB  0DC7               	rlf	___fttol@lval+1,f
  2795  12CC  0DC8               	rlf	___fttol@lval+2,f
  2796  12CD  0DC9               	rlf	___fttol@lval+3,f
  2797  12CE  0BC1               	decfsz	??___fttol,f
  2798  12CF  2AC9               	goto	u3835
  2799  12D0  3001               	movlw	1
  2800  12D1  02CA               	subwf	___fttol@exp1,f
  2801  12D2                     l537:	
  2802  12D2  084A               	movf	___fttol@exp1,w
  2803  12D3  1D03               	btfss	3,2
  2804  12D4  2AC7               	goto	l1823
  2805  12D5                     l1825:	
  2806  12D5  0845               	movf	___fttol@sign1,w
  2807  12D6  1903               	btfsc	3,2
  2808  12D7  2AE3               	goto	l1829
  2809  12D8  09C6               	comf	___fttol@lval,f
  2810  12D9  09C7               	comf	___fttol@lval+1,f
  2811  12DA  09C8               	comf	___fttol@lval+2,f
  2812  12DB  09C9               	comf	___fttol@lval+3,f
  2813  12DC  0AC6               	incf	___fttol@lval,f
  2814  12DD  1903               	skipnz
  2815  12DE  0AC7               	incf	___fttol@lval+1,f
  2816  12DF  1903               	skipnz
  2817  12E0  0AC8               	incf	___fttol@lval+2,f
  2818  12E1  1903               	skipnz
  2819  12E2  0AC9               	incf	___fttol@lval+3,f
  2820  12E3                     l1829:	
  2821  12E3  0849               	movf	___fttol@lval+3,w
  2822  12E4  00C0               	movwf	?___fttol+3
  2823  12E5  0848               	movf	___fttol@lval+2,w
  2824  12E6  00BF               	movwf	?___fttol+2
  2825  12E7  0847               	movf	___fttol@lval+1,w
  2826  12E8  00BE               	movwf	?___fttol+1
  2827  12E9  0846               	movf	___fttol@lval,w
  2828  12EA  00BD               	movwf	?___fttol
  2829  12EB  0008               	return
  2830  12EC                     __end_of___fttol:	
  2831                           
  2832                           	psect	text9
  2833  12EC                     __ptext9:	
  2834 ;; *************** function ___ftmul *****************
  2835 ;; Defined at:
  2836 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  f1              3    0[BANK0 ] float 
  2839 ;;  f2              3    3[BANK0 ] float 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  2842 ;;  sign            1   15[BANK0 ] unsigned char 
  2843 ;;  cntr            1   14[BANK0 ] unsigned char 
  2844 ;;  exp             1   10[BANK0 ] unsigned char 
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  3    0[BANK0 ] float 
  2847 ;; Registers used:
  2848 ;;		wreg, status,2, status,0, pclath, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2854 ;;      Params:         0       6       0       0       0
  2855 ;;      Locals:         0       6       0       0       0
  2856 ;;      Temps:          0       4       0       0       0
  2857 ;;      Totals:         0      16       0       0       0
  2858 ;;Total ram usage:       16 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    1
  2861 ;; This function calls:
  2862 ;;		___ftpack
  2863 ;; This function is called by:
  2864 ;;		_main
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           
  2869                           ;psect for function ___ftmul
  2870  12EC                     ___ftmul:	
  2871                           
  2872                           ;incstack = 0
  2873                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2874  12EC  1283               	bcf	3,5	;RP0=0, select bank0
  2875  12ED  1303               	bcf	3,6	;RP1=0, select bank0
  2876  12EE  0820               	movf	___ftmul@f1,w
  2877  12EF  00A6               	movwf	??___ftmul
  2878  12F0  0821               	movf	___ftmul@f1+1,w
  2879  12F1  00A7               	movwf	??___ftmul+1
  2880  12F2  0822               	movf	___ftmul@f1+2,w
  2881  12F3  00A8               	movwf	??___ftmul+2
  2882  12F4  1003               	clrc
  2883  12F5  0D27               	rlf	??___ftmul+1,w
  2884  12F6  0D28               	rlf	??___ftmul+2,w
  2885  12F7  00A9               	movwf	??___ftmul+3
  2886  12F8  0829               	movf	??___ftmul+3,w
  2887  12F9  00AA               	movwf	___ftmul@exp
  2888  12FA  082A               	movf	___ftmul@exp,w
  2889  12FB  1D03               	btfss	3,2
  2890  12FC  2B04               	goto	l1747
  2891  12FD  3000               	movlw	0
  2892  12FE  00A0               	movwf	?___ftmul
  2893  12FF  3000               	movlw	0
  2894  1300  00A1               	movwf	?___ftmul+1
  2895  1301  3000               	movlw	0
  2896  1302  00A2               	movwf	?___ftmul+2
  2897  1303  0008               	return
  2898  1304                     l1747:	
  2899  1304  0823               	movf	___ftmul@f2,w
  2900  1305  00A6               	movwf	??___ftmul
  2901  1306  0824               	movf	___ftmul@f2+1,w
  2902  1307  00A7               	movwf	??___ftmul+1
  2903  1308  0825               	movf	___ftmul@f2+2,w
  2904  1309  00A8               	movwf	??___ftmul+2
  2905  130A  1003               	clrc
  2906  130B  0D27               	rlf	??___ftmul+1,w
  2907  130C  0D28               	rlf	??___ftmul+2,w
  2908  130D  00A9               	movwf	??___ftmul+3
  2909  130E  0829               	movf	??___ftmul+3,w
  2910  130F  00AF               	movwf	___ftmul@sign
  2911  1310  082F               	movf	___ftmul@sign,w
  2912  1311  1D03               	btfss	3,2
  2913  1312  2B1A               	goto	l1753
  2914  1313  3000               	movlw	0
  2915  1314  00A0               	movwf	?___ftmul
  2916  1315  3000               	movlw	0
  2917  1316  00A1               	movwf	?___ftmul+1
  2918  1317  3000               	movlw	0
  2919  1318  00A2               	movwf	?___ftmul+2
  2920  1319  0008               	return
  2921  131A                     l1753:	
  2922  131A  082F               	movf	___ftmul@sign,w
  2923  131B  3E7B               	addlw	123
  2924  131C  00A6               	movwf	??___ftmul
  2925  131D  0826               	movf	??___ftmul,w
  2926  131E  07AA               	addwf	___ftmul@exp,f
  2927  131F  0820               	movf	___ftmul@f1,w
  2928  1320  00A6               	movwf	??___ftmul
  2929  1321  0821               	movf	___ftmul@f1+1,w
  2930  1322  00A7               	movwf	??___ftmul+1
  2931  1323  0822               	movf	___ftmul@f1+2,w
  2932  1324  00A8               	movwf	??___ftmul+2
  2933  1325  3010               	movlw	16
  2934  1326                     u3645:	
  2935  1326  1003               	clrc
  2936  1327  0CA8               	rrf	??___ftmul+2,f
  2937  1328  0CA7               	rrf	??___ftmul+1,f
  2938  1329  0CA6               	rrf	??___ftmul,f
  2939  132A  3EFF               	addlw	-1
  2940  132B  1D03               	skipz
  2941  132C  2B26               	goto	u3645
  2942  132D  0826               	movf	??___ftmul,w
  2943  132E  00A9               	movwf	??___ftmul+3
  2944  132F  0829               	movf	??___ftmul+3,w
  2945  1330  00AF               	movwf	___ftmul@sign
  2946  1331  0823               	movf	___ftmul@f2,w
  2947  1332  00A6               	movwf	??___ftmul
  2948  1333  0824               	movf	___ftmul@f2+1,w
  2949  1334  00A7               	movwf	??___ftmul+1
  2950  1335  0825               	movf	___ftmul@f2+2,w
  2951  1336  00A8               	movwf	??___ftmul+2
  2952  1337  3010               	movlw	16
  2953  1338                     u3655:	
  2954  1338  1003               	clrc
  2955  1339  0CA8               	rrf	??___ftmul+2,f
  2956  133A  0CA7               	rrf	??___ftmul+1,f
  2957  133B  0CA6               	rrf	??___ftmul,f
  2958  133C  3EFF               	addlw	-1
  2959  133D  1D03               	skipz
  2960  133E  2B38               	goto	u3655
  2961  133F  0826               	movf	??___ftmul,w
  2962  1340  00A9               	movwf	??___ftmul+3
  2963  1341  0829               	movf	??___ftmul+3,w
  2964  1342  06AF               	xorwf	___ftmul@sign,f
  2965  1343  3080               	movlw	128
  2966  1344  00A6               	movwf	??___ftmul
  2967  1345  0826               	movf	??___ftmul,w
  2968  1346  05AF               	andwf	___ftmul@sign,f
  2969  1347  17A1               	bsf	___ftmul@f1+1,7
  2970  1348  17A4               	bsf	___ftmul@f2+1,7
  2971  1349  30FF               	movlw	255
  2972  134A  05A3               	andwf	___ftmul@f2,f
  2973  134B  30FF               	movlw	255
  2974  134C  05A4               	andwf	___ftmul@f2+1,f
  2975  134D  3000               	movlw	0
  2976  134E  05A5               	andwf	___ftmul@f2+2,f
  2977  134F  3000               	movlw	0
  2978  1350  00AB               	movwf	___ftmul@f3_as_product
  2979  1351  3000               	movlw	0
  2980  1352  00AC               	movwf	___ftmul@f3_as_product+1
  2981  1353  3000               	movlw	0
  2982  1354  00AD               	movwf	___ftmul@f3_as_product+2
  2983  1355  3007               	movlw	7
  2984  1356  00A6               	movwf	??___ftmul
  2985  1357  0826               	movf	??___ftmul,w
  2986  1358  00AE               	movwf	___ftmul@cntr
  2987  1359                     l1765:	
  2988  1359  1C20               	btfss	___ftmul@f1,0
  2989  135A  2B69               	goto	l1769
  2990  135B  0823               	movf	___ftmul@f2,w
  2991  135C  07AB               	addwf	___ftmul@f3_as_product,f
  2992  135D  0824               	movf	___ftmul@f2+1,w
  2993  135E  1103               	clrz
  2994  135F  1803               	skipnc
  2995  1360  0A24               	incf	___ftmul@f2+1,w
  2996  1361  1D03               	btfss	3,2
  2997  1362  07AC               	addwf	___ftmul@f3_as_product+1,f
  2998  1363  0825               	movf	___ftmul@f2+2,w
  2999  1364  1103               	clrz
  3000  1365  1803               	skipnc
  3001  1366  0A25               	incf	___ftmul@f2+2,w
  3002  1367  1D03               	btfss	3,2
  3003  1368  07AD               	addwf	___ftmul@f3_as_product+2,f
  3004  1369                     l1769:	
  3005  1369  3001               	movlw	1
  3006  136A                     u3685:	
  3007  136A  1003               	clrc
  3008  136B  0CA2               	rrf	___ftmul@f1+2,f
  3009  136C  0CA1               	rrf	___ftmul@f1+1,f
  3010  136D  0CA0               	rrf	___ftmul@f1,f
  3011  136E  3EFF               	addlw	-1
  3012  136F  1D03               	skipz
  3013  1370  2B6A               	goto	u3685
  3014  1371  3001               	movlw	1
  3015  1372                     u3695:	
  3016  1372  1003               	clrc
  3017  1373  0DA3               	rlf	___ftmul@f2,f
  3018  1374  0DA4               	rlf	___ftmul@f2+1,f
  3019  1375  0DA5               	rlf	___ftmul@f2+2,f
  3020  1376  3EFF               	addlw	-1
  3021  1377  1D03               	skipz
  3022  1378  2B72               	goto	u3695
  3023  1379  3001               	movlw	1
  3024  137A  02AE               	subwf	___ftmul@cntr,f
  3025  137B  1D03               	btfss	3,2
  3026  137C  2B59               	goto	l1765
  3027  137D  3009               	movlw	9
  3028  137E  00A6               	movwf	??___ftmul
  3029  137F  0826               	movf	??___ftmul,w
  3030  1380  00AE               	movwf	___ftmul@cntr
  3031  1381                     l1777:	
  3032  1381  1C20               	btfss	___ftmul@f1,0
  3033  1382  2B91               	goto	l1781
  3034  1383  0823               	movf	___ftmul@f2,w
  3035  1384  07AB               	addwf	___ftmul@f3_as_product,f
  3036  1385  0824               	movf	___ftmul@f2+1,w
  3037  1386  1103               	clrz
  3038  1387  1803               	skipnc
  3039  1388  0A24               	incf	___ftmul@f2+1,w
  3040  1389  1D03               	btfss	3,2
  3041  138A  07AC               	addwf	___ftmul@f3_as_product+1,f
  3042  138B  0825               	movf	___ftmul@f2+2,w
  3043  138C  1103               	clrz
  3044  138D  1803               	skipnc
  3045  138E  0A25               	incf	___ftmul@f2+2,w
  3046  138F  1D03               	btfss	3,2
  3047  1390  07AD               	addwf	___ftmul@f3_as_product+2,f
  3048  1391                     l1781:	
  3049  1391  3001               	movlw	1
  3050  1392                     u3735:	
  3051  1392  1003               	clrc
  3052  1393  0CA2               	rrf	___ftmul@f1+2,f
  3053  1394  0CA1               	rrf	___ftmul@f1+1,f
  3054  1395  0CA0               	rrf	___ftmul@f1,f
  3055  1396  3EFF               	addlw	-1
  3056  1397  1D03               	skipz
  3057  1398  2B92               	goto	u3735
  3058  1399  3001               	movlw	1
  3059  139A                     u3745:	
  3060  139A  1003               	clrc
  3061  139B  0CAD               	rrf	___ftmul@f3_as_product+2,f
  3062  139C  0CAC               	rrf	___ftmul@f3_as_product+1,f
  3063  139D  0CAB               	rrf	___ftmul@f3_as_product,f
  3064  139E  3EFF               	addlw	-1
  3065  139F  1D03               	skipz
  3066  13A0  2B9A               	goto	u3745
  3067  13A1  3001               	movlw	1
  3068  13A2  02AE               	subwf	___ftmul@cntr,f
  3069  13A3  1D03               	btfss	3,2
  3070  13A4  2B81               	goto	l1777
  3071  13A5  082B               	movf	___ftmul@f3_as_product,w
  3072  13A6  00F0               	movwf	___ftpack@arg
  3073  13A7  082C               	movf	___ftmul@f3_as_product+1,w
  3074  13A8  00F1               	movwf	___ftpack@arg+1
  3075  13A9  082D               	movf	___ftmul@f3_as_product+2,w
  3076  13AA  00F2               	movwf	___ftpack@arg+2
  3077  13AB  082A               	movf	___ftmul@exp,w
  3078  13AC  00A6               	movwf	??___ftmul
  3079  13AD  0826               	movf	??___ftmul,w
  3080  13AE  00F3               	movwf	___ftpack@exp
  3081  13AF  082F               	movf	___ftmul@sign,w
  3082  13B0  00A7               	movwf	??___ftmul+1
  3083  13B1  0827               	movf	??___ftmul+1,w
  3084  13B2  00F4               	movwf	___ftpack@sign
  3085  13B3  160A  158A  2728   	fcall	___ftpack
  3086  13B6  0870               	movf	?___ftpack,w
  3087  13B7  1283               	bcf	3,5	;RP0=0, select bank0
  3088  13B8  1303               	bcf	3,6	;RP1=0, select bank0
  3089  13B9  00A0               	movwf	?___ftmul
  3090  13BA  0871               	movf	?___ftpack+1,w
  3091  13BB  00A1               	movwf	?___ftmul+1
  3092  13BC  0872               	movf	?___ftpack+2,w
  3093  13BD  00A2               	movwf	?___ftmul+2
  3094  13BE  0008               	return
  3095  13BF                     __end_of___ftmul:	
  3096                           
  3097                           	psect	text10
  3098  13BF                     __ptext10:	
  3099 ;; *************** function ___ftadd *****************
  3100 ;; Defined at:
  3101 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftadd.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;  f1              3   16[BANK0 ] float 
  3104 ;;  f2              3   19[BANK0 ] float 
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;  exp1            1   28[BANK0 ] unsigned char 
  3107 ;;  exp2            1   27[BANK0 ] unsigned char 
  3108 ;;  sign            1   26[BANK0 ] unsigned char 
  3109 ;; Return value:  Size  Location     Type
  3110 ;;                  3   16[BANK0 ] float 
  3111 ;; Registers used:
  3112 ;;		wreg, status,2, status,0, pclath, cstack
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3118 ;;      Params:         0       6       0       0       0
  3119 ;;      Locals:         0       3       0       0       0
  3120 ;;      Temps:          0       4       0       0       0
  3121 ;;      Totals:         0      13       0       0       0
  3122 ;;Total ram usage:       13 bytes
  3123 ;; Hardware stack levels used:    1
  3124 ;; Hardware stack levels required when called:    1
  3125 ;; This function calls:
  3126 ;;		___ftpack
  3127 ;; This function is called by:
  3128 ;;		_main
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           
  3133                           ;psect for function ___ftadd
  3134  13BF                     ___ftadd:	
  3135                           
  3136                           ;incstack = 0
  3137                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3138  13BF  1283               	bcf	3,5	;RP0=0, select bank0
  3139  13C0  1303               	bcf	3,6	;RP1=0, select bank0
  3140  13C1  0830               	movf	___ftadd@f1,w
  3141  13C2  00B6               	movwf	??___ftadd
  3142  13C3  0831               	movf	___ftadd@f1+1,w
  3143  13C4  00B7               	movwf	??___ftadd+1
  3144  13C5  0832               	movf	___ftadd@f1+2,w
  3145  13C6  00B8               	movwf	??___ftadd+2
  3146  13C7  1003               	clrc
  3147  13C8  0D37               	rlf	??___ftadd+1,w
  3148  13C9  0D38               	rlf	??___ftadd+2,w
  3149  13CA  00B9               	movwf	??___ftadd+3
  3150  13CB  0839               	movf	??___ftadd+3,w
  3151  13CC  00BC               	movwf	___ftadd@exp1
  3152  13CD  0833               	movf	___ftadd@f2,w
  3153  13CE  00B6               	movwf	??___ftadd
  3154  13CF  0834               	movf	___ftadd@f2+1,w
  3155  13D0  00B7               	movwf	??___ftadd+1
  3156  13D1  0835               	movf	___ftadd@f2+2,w
  3157  13D2  00B8               	movwf	??___ftadd+2
  3158  13D3  1003               	clrc
  3159  13D4  0D37               	rlf	??___ftadd+1,w
  3160  13D5  0D38               	rlf	??___ftadd+2,w
  3161  13D6  00B9               	movwf	??___ftadd+3
  3162  13D7  0839               	movf	??___ftadd+3,w
  3163  13D8  00BB               	movwf	___ftadd@exp2
  3164  13D9  083C               	movf	___ftadd@exp1,w
  3165  13DA  1903               	btfsc	3,2
  3166  13DB  2BE8               	goto	l1677
  3167  13DC  083B               	movf	___ftadd@exp2,w
  3168  13DD  023C               	subwf	___ftadd@exp1,w
  3169  13DE  1803               	skipnc
  3170  13DF  2BEF               	goto	l1681
  3171  13E0  033C               	decf	___ftadd@exp1,w
  3172  13E1  3AFF               	xorlw	255
  3173  13E2  073B               	addwf	___ftadd@exp2,w
  3174  13E3  00B6               	movwf	??___ftadd
  3175  13E4  3019               	movlw	25
  3176  13E5  0236               	subwf	??___ftadd,w
  3177  13E6  1C03               	skipc
  3178  13E7  2BEF               	goto	l1681
  3179  13E8                     l1677:	
  3180  13E8  0833               	movf	___ftadd@f2,w
  3181  13E9  00B0               	movwf	?___ftadd
  3182  13EA  0834               	movf	___ftadd@f2+1,w
  3183  13EB  00B1               	movwf	?___ftadd+1
  3184  13EC  0835               	movf	___ftadd@f2+2,w
  3185  13ED  00B2               	movwf	?___ftadd+2
  3186  13EE  0008               	return
  3187  13EF                     l1681:	
  3188  13EF  083B               	movf	___ftadd@exp2,w
  3189  13F0  1903               	btfsc	3,2
  3190  13F1  0008               	return
  3191  13F2  083C               	movf	___ftadd@exp1,w
  3192  13F3  023B               	subwf	___ftadd@exp2,w
  3193  13F4  1803               	skipnc
  3194  13F5  2BFE               	goto	l1687
  3195  13F6  033B               	decf	___ftadd@exp2,w
  3196  13F7  3AFF               	xorlw	255
  3197  13F8  073C               	addwf	___ftadd@exp1,w
  3198  13F9  00B6               	movwf	??___ftadd
  3199  13FA  3019               	movlw	25
  3200  13FB  0236               	subwf	??___ftadd,w
  3201  13FC  1803               	btfsc	3,0
  3202  13FD  0008               	return
  3203  13FE                     l1687:	
  3204  13FE  3006               	movlw	6
  3205  13FF  00B6               	movwf	??___ftadd
  3206  1400  0836               	movf	??___ftadd,w
  3207  1401  00BA               	movwf	___ftadd@sign
  3208  1402  1BB2               	btfsc	___ftadd@f1+2,7
  3209  1403  17BA               	bsf	___ftadd@sign,7
  3210  1404  1BB5               	btfsc	___ftadd@f2+2,7
  3211  1405  173A               	bsf	___ftadd@sign,6
  3212  1406  17B1               	bsf	___ftadd@f1+1,7
  3213  1407  30FF               	movlw	255
  3214  1408  05B0               	andwf	___ftadd@f1,f
  3215  1409  30FF               	movlw	255
  3216  140A  05B1               	andwf	___ftadd@f1+1,f
  3217  140B  3000               	movlw	0
  3218  140C  05B2               	andwf	___ftadd@f1+2,f
  3219  140D  17B4               	bsf	___ftadd@f2+1,7
  3220  140E  30FF               	movlw	255
  3221  140F  05B3               	andwf	___ftadd@f2,f
  3222  1410  30FF               	movlw	255
  3223  1411  05B4               	andwf	___ftadd@f2+1,f
  3224  1412  3000               	movlw	0
  3225  1413  05B5               	andwf	___ftadd@f2+2,f
  3226  1414  083B               	movf	___ftadd@exp2,w
  3227  1415  023C               	subwf	___ftadd@exp1,w
  3228  1416  1803               	skipnc
  3229  1417  2C3E               	goto	l1709
  3230  1418                     l1699:	
  3231  1418  3001               	movlw	1
  3232  1419                     u3475:	
  3233  1419  1003               	clrc
  3234  141A  0DB3               	rlf	___ftadd@f2,f
  3235  141B  0DB4               	rlf	___ftadd@f2+1,f
  3236  141C  0DB5               	rlf	___ftadd@f2+2,f
  3237  141D  3EFF               	addlw	-1
  3238  141E  1D03               	skipz
  3239  141F  2C19               	goto	u3475
  3240  1420  3001               	movlw	1
  3241  1421  02BB               	subwf	___ftadd@exp2,f
  3242  1422  083B               	movf	___ftadd@exp2,w
  3243  1423  063C               	xorwf	___ftadd@exp1,w
  3244  1424  1903               	skipnz
  3245  1425  2C39               	goto	l1707
  3246  1426  3001               	movlw	1
  3247  1427  02BA               	subwf	___ftadd@sign,f
  3248  1428  083A               	movf	___ftadd@sign,w
  3249  1429  3907               	andlw	7
  3250  142A  1903               	btfsc	3,2
  3251  142B  2C39               	goto	l1707
  3252  142C  2C18               	goto	l1699
  3253  142D                     l1705:	
  3254  142D  3001               	movlw	1
  3255  142E                     u3505:	
  3256  142E  1003               	clrc
  3257  142F  0CB2               	rrf	___ftadd@f1+2,f
  3258  1430  0CB1               	rrf	___ftadd@f1+1,f
  3259  1431  0CB0               	rrf	___ftadd@f1,f
  3260  1432  3EFF               	addlw	-1
  3261  1433  1D03               	skipz
  3262  1434  2C2E               	goto	u3505
  3263  1435  3001               	movlw	1
  3264  1436  00B6               	movwf	??___ftadd
  3265  1437  0836               	movf	??___ftadd,w
  3266  1438  07BC               	addwf	___ftadd@exp1,f
  3267  1439                     l1707:	
  3268  1439  083C               	movf	___ftadd@exp1,w
  3269  143A  063B               	xorwf	___ftadd@exp2,w
  3270  143B  1903               	btfsc	3,2
  3271  143C  2C67               	goto	l477
  3272  143D  2C2D               	goto	l1705
  3273  143E                     l1709:	
  3274  143E  083C               	movf	___ftadd@exp1,w
  3275  143F  023B               	subwf	___ftadd@exp2,w
  3276  1440  1803               	skipnc
  3277  1441  2C67               	goto	l477
  3278  1442                     l1711:	
  3279  1442  3001               	movlw	1
  3280  1443                     u3535:	
  3281  1443  1003               	clrc
  3282  1444  0DB0               	rlf	___ftadd@f1,f
  3283  1445  0DB1               	rlf	___ftadd@f1+1,f
  3284  1446  0DB2               	rlf	___ftadd@f1+2,f
  3285  1447  3EFF               	addlw	-1
  3286  1448  1D03               	skipz
  3287  1449  2C43               	goto	u3535
  3288  144A  3001               	movlw	1
  3289  144B  02BC               	subwf	___ftadd@exp1,f
  3290  144C  083B               	movf	___ftadd@exp2,w
  3291  144D  063C               	xorwf	___ftadd@exp1,w
  3292  144E  1903               	skipnz
  3293  144F  2C63               	goto	l1719
  3294  1450  3001               	movlw	1
  3295  1451  02BA               	subwf	___ftadd@sign,f
  3296  1452  083A               	movf	___ftadd@sign,w
  3297  1453  3907               	andlw	7
  3298  1454  1903               	btfsc	3,2
  3299  1455  2C63               	goto	l1719
  3300  1456  2C42               	goto	l1711
  3301  1457                     l1717:	
  3302  1457  3001               	movlw	1
  3303  1458                     u3565:	
  3304  1458  1003               	clrc
  3305  1459  0CB5               	rrf	___ftadd@f2+2,f
  3306  145A  0CB4               	rrf	___ftadd@f2+1,f
  3307  145B  0CB3               	rrf	___ftadd@f2,f
  3308  145C  3EFF               	addlw	-1
  3309  145D  1D03               	skipz
  3310  145E  2C58               	goto	u3565
  3311  145F  3001               	movlw	1
  3312  1460  00B6               	movwf	??___ftadd
  3313  1461  0836               	movf	??___ftadd,w
  3314  1462  07BB               	addwf	___ftadd@exp2,f
  3315  1463                     l1719:	
  3316  1463  083C               	movf	___ftadd@exp1,w
  3317  1464  063B               	xorwf	___ftadd@exp2,w
  3318  1465  1D03               	skipz
  3319  1466  2C57               	goto	l1717
  3320  1467                     l477:	
  3321  1467  1FBA               	btfss	___ftadd@sign,7
  3322  1468  2C79               	goto	l1723
  3323  1469  30FF               	movlw	255
  3324  146A  06B0               	xorwf	___ftadd@f1,f
  3325  146B  30FF               	movlw	255
  3326  146C  06B1               	xorwf	___ftadd@f1+1,f
  3327  146D  30FF               	movlw	255
  3328  146E  06B2               	xorwf	___ftadd@f1+2,f
  3329  146F  3001               	movlw	1
  3330  1470  07B0               	addwf	___ftadd@f1,f
  3331  1471  3000               	movlw	0
  3332  1472  1803               	skipnc
  3333  1473  3001               	movlw	1
  3334  1474  07B1               	addwf	___ftadd@f1+1,f
  3335  1475  3000               	movlw	0
  3336  1476  1803               	skipnc
  3337  1477  3001               	movlw	1
  3338  1478  07B2               	addwf	___ftadd@f1+2,f
  3339  1479                     l1723:	
  3340  1479  1F3A               	btfss	___ftadd@sign,6
  3341  147A  2C8B               	goto	l1727
  3342  147B  30FF               	movlw	255
  3343  147C  06B3               	xorwf	___ftadd@f2,f
  3344  147D  30FF               	movlw	255
  3345  147E  06B4               	xorwf	___ftadd@f2+1,f
  3346  147F  30FF               	movlw	255
  3347  1480  06B5               	xorwf	___ftadd@f2+2,f
  3348  1481  3001               	movlw	1
  3349  1482  07B3               	addwf	___ftadd@f2,f
  3350  1483  3000               	movlw	0
  3351  1484  1803               	skipnc
  3352  1485  3001               	movlw	1
  3353  1486  07B4               	addwf	___ftadd@f2+1,f
  3354  1487  3000               	movlw	0
  3355  1488  1803               	skipnc
  3356  1489  3001               	movlw	1
  3357  148A  07B5               	addwf	___ftadd@f2+2,f
  3358  148B                     l1727:	
  3359  148B  01BA               	clrf	___ftadd@sign
  3360  148C  0830               	movf	___ftadd@f1,w
  3361  148D  07B3               	addwf	___ftadd@f2,f
  3362  148E  0831               	movf	___ftadd@f1+1,w
  3363  148F  1103               	clrz
  3364  1490  1803               	skipnc
  3365  1491  0A31               	incf	___ftadd@f1+1,w
  3366  1492  1D03               	btfss	3,2
  3367  1493  07B4               	addwf	___ftadd@f2+1,f
  3368  1494  0832               	movf	___ftadd@f1+2,w
  3369  1495  1103               	clrz
  3370  1496  1803               	skipnc
  3371  1497  0A32               	incf	___ftadd@f1+2,w
  3372  1498  1D03               	btfss	3,2
  3373  1499  07B5               	addwf	___ftadd@f2+2,f
  3374  149A  1FB5               	btfss	___ftadd@f2+2,7
  3375  149B  2CAE               	goto	l1737
  3376  149C  30FF               	movlw	255
  3377  149D  06B3               	xorwf	___ftadd@f2,f
  3378  149E  30FF               	movlw	255
  3379  149F  06B4               	xorwf	___ftadd@f2+1,f
  3380  14A0  30FF               	movlw	255
  3381  14A1  06B5               	xorwf	___ftadd@f2+2,f
  3382  14A2  3001               	movlw	1
  3383  14A3  07B3               	addwf	___ftadd@f2,f
  3384  14A4  3000               	movlw	0
  3385  14A5  1803               	skipnc
  3386  14A6  3001               	movlw	1
  3387  14A7  07B4               	addwf	___ftadd@f2+1,f
  3388  14A8  3000               	movlw	0
  3389  14A9  1803               	skipnc
  3390  14AA  3001               	movlw	1
  3391  14AB  07B5               	addwf	___ftadd@f2+2,f
  3392  14AC  01BA               	clrf	___ftadd@sign
  3393  14AD  0ABA               	incf	___ftadd@sign,f
  3394  14AE                     l1737:	
  3395  14AE  0833               	movf	___ftadd@f2,w
  3396  14AF  00F0               	movwf	___ftpack@arg
  3397  14B0  0834               	movf	___ftadd@f2+1,w
  3398  14B1  00F1               	movwf	___ftpack@arg+1
  3399  14B2  0835               	movf	___ftadd@f2+2,w
  3400  14B3  00F2               	movwf	___ftpack@arg+2
  3401  14B4  083C               	movf	___ftadd@exp1,w
  3402  14B5  00B6               	movwf	??___ftadd
  3403  14B6  0836               	movf	??___ftadd,w
  3404  14B7  00F3               	movwf	___ftpack@exp
  3405  14B8  083A               	movf	___ftadd@sign,w
  3406  14B9  00B7               	movwf	??___ftadd+1
  3407  14BA  0837               	movf	??___ftadd+1,w
  3408  14BB  00F4               	movwf	___ftpack@sign
  3409  14BC  160A  158A  2728   	fcall	___ftpack
  3410  14BF  0870               	movf	?___ftpack,w
  3411  14C0  1283               	bcf	3,5	;RP0=0, select bank0
  3412  14C1  1303               	bcf	3,6	;RP1=0, select bank0
  3413  14C2  00B0               	movwf	?___ftadd
  3414  14C3  0871               	movf	?___ftpack+1,w
  3415  14C4  00B1               	movwf	?___ftadd+1
  3416  14C5  0872               	movf	?___ftpack+2,w
  3417  14C6  00B2               	movwf	?___ftadd+2
  3418  14C7  0008               	return
  3419  14C8                     __end_of___ftadd:	
  3420                           
  3421                           	psect	text11
  3422  0009                     __ptext11:	
  3423 ;; *************** function ___awtoft *****************
  3424 ;; Defined at:
  3425 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awtoft.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  c               2    8[COMMON] int 
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;  sign            1   13[COMMON] unsigned char 
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  3    8[COMMON] float 
  3432 ;; Registers used:
  3433 ;;		wreg, status,2, status,0, pclath, cstack
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3439 ;;      Params:         3       0       0       0       0
  3440 ;;      Locals:         1       0       0       0       0
  3441 ;;      Temps:          2       0       0       0       0
  3442 ;;      Totals:         6       0       0       0       0
  3443 ;;Total ram usage:        6 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; Hardware stack levels required when called:    1
  3446 ;; This function calls:
  3447 ;;		___ftpack
  3448 ;; This function is called by:
  3449 ;;		_main
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           
  3454                           ;psect for function ___awtoft
  3455  0009                     ___awtoft:	
  3456                           
  3457                           ;incstack = 0
  3458                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3459  0009  01FD               	clrf	___awtoft@sign
  3460  000A  1FF9               	btfss	___awtoft@c+1,7
  3461  000B  2813               	goto	l1667
  3462  000C  09F8               	comf	___awtoft@c,f
  3463  000D  09F9               	comf	___awtoft@c+1,f
  3464  000E  0AF8               	incf	___awtoft@c,f
  3465  000F  1903               	skipnz
  3466  0010  0AF9               	incf	___awtoft@c+1,f
  3467  0011  01FD               	clrf	___awtoft@sign
  3468  0012  0AFD               	incf	___awtoft@sign,f
  3469  0013                     l1667:	
  3470  0013  0878               	movf	___awtoft@c,w
  3471  0014  00F0               	movwf	___ftpack@arg
  3472  0015  0879               	movf	___awtoft@c+1,w
  3473  0016  00F1               	movwf	___ftpack@arg+1
  3474  0017  01F2               	clrf	___ftpack@arg+2
  3475  0018  308E               	movlw	142
  3476  0019  00FB               	movwf	??___awtoft
  3477  001A  087B               	movf	??___awtoft,w
  3478  001B  00F3               	movwf	___ftpack@exp
  3479  001C  087D               	movf	___awtoft@sign,w
  3480  001D  00FC               	movwf	??___awtoft+1
  3481  001E  087C               	movf	??___awtoft+1,w
  3482  001F  00F4               	movwf	___ftpack@sign
  3483  0020  160A  158A  2728   	fcall	___ftpack
  3484  0023  0870               	movf	?___ftpack,w
  3485  0024  00F8               	movwf	?___awtoft
  3486  0025  0871               	movf	?___ftpack+1,w
  3487  0026  00F9               	movwf	?___awtoft+1
  3488  0027  0872               	movf	?___ftpack+2,w
  3489  0028  00FA               	movwf	?___awtoft+2
  3490  0029  0008               	return
  3491  002A                     __end_of___awtoft:	
  3492                           
  3493                           	psect	text12
  3494  1F28                     __ptext12:	
  3495 ;; *************** function ___ftpack *****************
  3496 ;; Defined at:
  3497 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  arg             3    0[COMMON] unsigned um
  3500 ;;  exp             1    3[COMMON] unsigned char 
  3501 ;;  sign            1    4[COMMON] unsigned char 
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;		None
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  3    0[COMMON] float 
  3506 ;; Registers used:
  3507 ;;		wreg, status,2, status,0
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3513 ;;      Params:         5       0       0       0       0
  3514 ;;      Locals:         0       0       0       0       0
  3515 ;;      Temps:          3       0       0       0       0
  3516 ;;      Totals:         8       0       0       0       0
  3517 ;;Total ram usage:        8 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; This function calls:
  3520 ;;		Nothing
  3521 ;; This function is called by:
  3522 ;;		___awtoft
  3523 ;;		___ftadd
  3524 ;;		___ftmul
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           
  3529                           ;psect for function ___ftpack
  3530  1F28                     ___ftpack:	
  3531                           
  3532                           ;incstack = 0
  3533                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3534  1F28  0873               	movf	___ftpack@exp,w
  3535  1F29  1903               	btfsc	3,2
  3536  1F2A  2F30               	goto	l1365
  3537  1F2B  0872               	movf	___ftpack@arg+2,w
  3538  1F2C  0471               	iorwf	___ftpack@arg+1,w
  3539  1F2D  0470               	iorwf	___ftpack@arg,w
  3540  1F2E  1D03               	skipz
  3541  1F2F  2F43               	goto	l1371
  3542  1F30                     l1365:	
  3543  1F30  3000               	movlw	0
  3544  1F31  00F0               	movwf	?___ftpack
  3545  1F32  3000               	movlw	0
  3546  1F33  00F1               	movwf	?___ftpack+1
  3547  1F34  3000               	movlw	0
  3548  1F35  00F2               	movwf	?___ftpack+2
  3549  1F36  0008               	return
  3550  1F37                     l1369:	
  3551  1F37  3001               	movlw	1
  3552  1F38  00F5               	movwf	??___ftpack
  3553  1F39  0875               	movf	??___ftpack,w
  3554  1F3A  07F3               	addwf	___ftpack@exp,f
  3555  1F3B  3001               	movlw	1
  3556  1F3C                     u2785:	
  3557  1F3C  1003               	clrc
  3558  1F3D  0CF2               	rrf	___ftpack@arg+2,f
  3559  1F3E  0CF1               	rrf	___ftpack@arg+1,f
  3560  1F3F  0CF0               	rrf	___ftpack@arg,f
  3561  1F40  3EFF               	addlw	-1
  3562  1F41  1D03               	skipz
  3563  1F42  2F3C               	goto	u2785
  3564  1F43                     l1371:	
  3565  1F43  30FE               	movlw	254
  3566  1F44  0572               	andwf	___ftpack@arg+2,w
  3567  1F45  1903               	btfsc	3,2
  3568  1F46  2F5E               	goto	l446
  3569  1F47  2F37               	goto	l1369
  3570  1F48                     l1373:	
  3571  1F48  3001               	movlw	1
  3572  1F49  00F5               	movwf	??___ftpack
  3573  1F4A  0875               	movf	??___ftpack,w
  3574  1F4B  07F3               	addwf	___ftpack@exp,f
  3575  1F4C  3001               	movlw	1
  3576  1F4D  07F0               	addwf	___ftpack@arg,f
  3577  1F4E  3000               	movlw	0
  3578  1F4F  1803               	skipnc
  3579  1F50  3001               	movlw	1
  3580  1F51  07F1               	addwf	___ftpack@arg+1,f
  3581  1F52  3000               	movlw	0
  3582  1F53  1803               	skipnc
  3583  1F54  3001               	movlw	1
  3584  1F55  07F2               	addwf	___ftpack@arg+2,f
  3585  1F56  3001               	movlw	1
  3586  1F57                     u2805:	
  3587  1F57  1003               	clrc
  3588  1F58  0CF2               	rrf	___ftpack@arg+2,f
  3589  1F59  0CF1               	rrf	___ftpack@arg+1,f
  3590  1F5A  0CF0               	rrf	___ftpack@arg,f
  3591  1F5B  3EFF               	addlw	-1
  3592  1F5C  1D03               	skipz
  3593  1F5D  2F57               	goto	u2805
  3594  1F5E                     l446:	
  3595  1F5E  30FF               	movlw	255
  3596  1F5F  0572               	andwf	___ftpack@arg+2,w
  3597  1F60  1903               	btfsc	3,2
  3598  1F61  2F6D               	goto	l1381
  3599  1F62  2F48               	goto	l1373
  3600  1F63                     l1379:	
  3601  1F63  3001               	movlw	1
  3602  1F64  02F3               	subwf	___ftpack@exp,f
  3603  1F65  3001               	movlw	1
  3604  1F66                     u2825:	
  3605  1F66  1003               	clrc
  3606  1F67  0DF0               	rlf	___ftpack@arg,f
  3607  1F68  0DF1               	rlf	___ftpack@arg+1,f
  3608  1F69  0DF2               	rlf	___ftpack@arg+2,f
  3609  1F6A  3EFF               	addlw	-1
  3610  1F6B  1D03               	skipz
  3611  1F6C  2F66               	goto	u2825
  3612  1F6D                     l1381:	
  3613  1F6D  1BF1               	btfsc	___ftpack@arg+1,7
  3614  1F6E  2F73               	goto	l453
  3615  1F6F  3002               	movlw	2
  3616  1F70  0273               	subwf	___ftpack@exp,w
  3617  1F71  1803               	skipnc
  3618  1F72  2F63               	goto	l1379
  3619  1F73                     l453:	
  3620  1F73  1873               	btfsc	___ftpack@exp,0
  3621  1F74  2F7B               	goto	l454
  3622  1F75  30FF               	movlw	255
  3623  1F76  05F0               	andwf	___ftpack@arg,f
  3624  1F77  307F               	movlw	127
  3625  1F78  05F1               	andwf	___ftpack@arg+1,f
  3626  1F79  30FF               	movlw	255
  3627  1F7A  05F2               	andwf	___ftpack@arg+2,f
  3628  1F7B                     l454:	
  3629  1F7B  1003               	clrc
  3630  1F7C  0CF3               	rrf	___ftpack@exp,f
  3631  1F7D  0873               	movf	___ftpack@exp,w
  3632  1F7E  00F5               	movwf	??___ftpack
  3633  1F7F  01F6               	clrf	??___ftpack+1
  3634  1F80  01F7               	clrf	??___ftpack+2
  3635  1F81  3010               	movlw	16
  3636  1F82                     u2865:	
  3637  1F82  1003               	clrc
  3638  1F83  0DF5               	rlf	??___ftpack,f
  3639  1F84  0DF6               	rlf	??___ftpack+1,f
  3640  1F85  0DF7               	rlf	??___ftpack+2,f
  3641  1F86  3EFF               	addlw	-1
  3642  1F87  1D03               	skipz
  3643  1F88  2F82               	goto	u2865
  3644  1F89  0875               	movf	??___ftpack,w
  3645  1F8A  04F0               	iorwf	___ftpack@arg,f
  3646  1F8B  0876               	movf	??___ftpack+1,w
  3647  1F8C  04F1               	iorwf	___ftpack@arg+1,f
  3648  1F8D  0877               	movf	??___ftpack+2,w
  3649  1F8E  04F2               	iorwf	___ftpack@arg+2,f
  3650  1F8F  0874               	movf	___ftpack@sign,w
  3651  1F90  1903               	btfsc	3,2
  3652  1F91  0008               	return
  3653  1F92  17F2               	bsf	___ftpack@arg+2,7
  3654  1F93  0008               	return
  3655  1F94                     __end_of___ftpack:	
  3656                           
  3657                           	psect	text13
  3658  1E50                     __ptext13:	
  3659 ;; *************** function _UART_Write_Text *****************
  3660 ;; Defined at:
  3661 ;;		line 66 in file "main.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;  text            1    wreg     PTR unsigned char 
  3664 ;;		 -> main@str(17), 
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;  text            1    4[COMMON] PTR unsigned char 
  3667 ;;		 -> main@str(17), 
  3668 ;;  i               2    2[COMMON] int 
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  1    wreg      void 
  3671 ;; Registers used:
  3672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3678 ;;      Params:         0       0       0       0       0
  3679 ;;      Locals:         3       0       0       0       0
  3680 ;;      Temps:          1       0       0       0       0
  3681 ;;      Totals:         4       0       0       0       0
  3682 ;;Total ram usage:        4 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; Hardware stack levels required when called:    1
  3685 ;; This function calls:
  3686 ;;		_UART_Write
  3687 ;; This function is called by:
  3688 ;;		_main
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           
  3693                           ;psect for function _UART_Write_Text
  3694  1E50                     _UART_Write_Text:	
  3695                           
  3696                           ;incstack = 0
  3697                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3698                           ;UART_Write_Text@text stored from wreg
  3699  1E50  00F4               	movwf	UART_Write_Text@text
  3700                           
  3701                           ;main.c: 67: int i;
  3702                           ;main.c: 68: for (i = 0; text[i] != '\0'; i++)
  3703  1E51  01F2               	clrf	UART_Write_Text@i
  3704  1E52  01F3               	clrf	UART_Write_Text@i+1
  3705  1E53                     l1589:	
  3706  1E53  0872               	movf	UART_Write_Text@i,w
  3707  1E54  0774               	addwf	UART_Write_Text@text,w
  3708  1E55  00F1               	movwf	??_UART_Write_Text
  3709  1E56  0871               	movf	??_UART_Write_Text,w
  3710  1E57  0084               	movwf	4
  3711  1E58  1383               	bcf	3,7	;select IRP bank0
  3712  1E59  0800               	movf	0,w
  3713  1E5A  1903               	btfsc	3,2
  3714  1E5B  0008               	return
  3715                           
  3716                           ;main.c: 69: UART_Write(text[i]);
  3717  1E5C  0872               	movf	UART_Write_Text@i,w
  3718  1E5D  0774               	addwf	UART_Write_Text@text,w
  3719  1E5E  00F1               	movwf	??_UART_Write_Text
  3720  1E5F  0871               	movf	??_UART_Write_Text,w
  3721  1E60  0084               	movwf	4
  3722  1E61  1383               	bcf	3,7	;select IRP bank0
  3723  1E62  0800               	movf	0,w
  3724  1E63  160A  158A  261C  160A  158A  	fcall	_UART_Write
  3725  1E68  3001               	movlw	1
  3726  1E69  07F2               	addwf	UART_Write_Text@i,f
  3727  1E6A  1803               	skipnc
  3728  1E6B  0AF3               	incf	UART_Write_Text@i+1,f
  3729  1E6C  3000               	movlw	0
  3730  1E6D  07F3               	addwf	UART_Write_Text@i+1,f
  3731  1E6E  2E53               	goto	l1589
  3732  1E6F                     __end_of_UART_Write_Text:	
  3733                           
  3734                           	psect	text14
  3735  1E1C                     __ptext14:	
  3736 ;; *************** function _UART_Write *****************
  3737 ;; Defined at:
  3738 ;;		line 46 in file "main.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;  data            1    wreg     unsigned char 
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  data            1    0[COMMON] unsigned char 
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  1    wreg      void 
  3745 ;; Registers used:
  3746 ;;		wreg
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3752 ;;      Params:         0       0       0       0       0
  3753 ;;      Locals:         1       0       0       0       0
  3754 ;;      Temps:          0       0       0       0       0
  3755 ;;      Totals:         1       0       0       0       0
  3756 ;;Total ram usage:        1 bytes
  3757 ;; Hardware stack levels used:    1
  3758 ;; This function calls:
  3759 ;;		Nothing
  3760 ;; This function is called by:
  3761 ;;		_UART_Write_Text
  3762 ;;		_main
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           
  3767                           ;psect for function _UART_Write
  3768  1E1C                     _UART_Write:	
  3769                           
  3770                           ;incstack = 0
  3771                           ; Regs used in _UART_Write: [wreg]
  3772                           ;UART_Write@data stored from wreg
  3773  1E1C  00F0               	movwf	UART_Write@data
  3774  1E1D                     l82:	
  3775                           ;main.c: 47: while (!TRMT);
  3776                           
  3777  1E1D  1683               	bsf	3,5	;RP0=1, select bank1
  3778  1E1E  1303               	bcf	3,6	;RP1=0, select bank1
  3779  1E1F  1C98               	btfss	24,1	;volatile
  3780  1E20  2E1D               	goto	l82
  3781                           
  3782                           ;main.c: 48: TXREG = data;
  3783  1E21  0870               	movf	UART_Write@data,w
  3784  1E22  1283               	bcf	3,5	;RP0=0, select bank0
  3785  1E23  1303               	bcf	3,6	;RP1=0, select bank0
  3786  1E24  0099               	movwf	25	;volatile
  3787  1E25  0008               	return
  3788  1E26                     __end_of_UART_Write:	
  3789                           
  3790                           	psect	text15
  3791  105D                     __ptext15:	
  3792 ;; *************** function _UART_Init *****************
  3793 ;; Defined at:
  3794 ;;		line 30 in file "main.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;  baudrate        4    6[BANK0 ] const long 
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;  x               2    9[COMMON] unsigned int 
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  1    wreg      unsigned char 
  3801 ;; Registers used:
  3802 ;;		wreg, status,2, status,0, pclath, cstack
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3808 ;;      Params:         0       4       0       0       0
  3809 ;;      Locals:         2       0       0       0       0
  3810 ;;      Temps:          0      12       0       0       0
  3811 ;;      Totals:         2      16       0       0       0
  3812 ;;Total ram usage:       18 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:    1
  3815 ;; This function calls:
  3816 ;;		___aldiv
  3817 ;; This function is called by:
  3818 ;;		_main
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           
  3823                           ;psect for function _UART_Init
  3824  105D                     _UART_Init:	
  3825                           
  3826                           ;main.c: 31: unsigned int x;
  3827                           ;main.c: 33: x = (8000000 - baudrate * 16) / (baudrate * 16);
  3828                           
  3829                           ;incstack = 0
  3830                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3831  105D  1283               	bcf	3,5	;RP0=0, select bank0
  3832  105E  1303               	bcf	3,6	;RP1=0, select bank0
  3833  105F  0826               	movf	UART_Init@baudrate,w
  3834  1060  00AA               	movwf	??_UART_Init
  3835  1061  0827               	movf	UART_Init@baudrate+1,w
  3836  1062  00AB               	movwf	??_UART_Init+1
  3837  1063  0828               	movf	UART_Init@baudrate+2,w
  3838  1064  00AC               	movwf	??_UART_Init+2
  3839  1065  0829               	movf	UART_Init@baudrate+3,w
  3840  1066  00AD               	movwf	??_UART_Init+3
  3841  1067  3004               	movlw	4
  3842  1068                     u3305:	
  3843  1068  1003               	clrc
  3844  1069  0DAA               	rlf	??_UART_Init,f
  3845  106A  0DAB               	rlf	??_UART_Init+1,f
  3846  106B  0DAC               	rlf	??_UART_Init+2,f
  3847  106C  0DAD               	rlf	??_UART_Init+3,f
  3848  106D  3EFF               	addlw	-1
  3849  106E  1D03               	skipz
  3850  106F  2868               	goto	u3305
  3851  1070  082D               	movf	??_UART_Init+3,w
  3852  1071  00F3               	movwf	___aldiv@divisor+3
  3853  1072  082C               	movf	??_UART_Init+2,w
  3854  1073  00F2               	movwf	___aldiv@divisor+2
  3855  1074  082B               	movf	??_UART_Init+1,w
  3856  1075  00F1               	movwf	___aldiv@divisor+1
  3857  1076  082A               	movf	??_UART_Init,w
  3858  1077  00F0               	movwf	___aldiv@divisor
  3859  1078  3000               	movlw	0
  3860  1079  00AE               	movwf	??_UART_Init+4
  3861  107A  3012               	movlw	18
  3862  107B  00AF               	movwf	??_UART_Init+5
  3863  107C  307A               	movlw	122
  3864  107D  00B0               	movwf	??_UART_Init+6
  3865  107E  3000               	movlw	0
  3866  107F  00B1               	movwf	??_UART_Init+7
  3867  1080  0826               	movf	UART_Init@baudrate,w
  3868  1081  00B2               	movwf	??_UART_Init+8
  3869  1082  0827               	movf	UART_Init@baudrate+1,w
  3870  1083  00B3               	movwf	??_UART_Init+9
  3871  1084  0828               	movf	UART_Init@baudrate+2,w
  3872  1085  00B4               	movwf	??_UART_Init+10
  3873  1086  0829               	movf	UART_Init@baudrate+3,w
  3874  1087  00B5               	movwf	??_UART_Init+11
  3875  1088  3004               	movlw	4
  3876  1089                     u3315:	
  3877  1089  1003               	clrc
  3878  108A  0DB2               	rlf	??_UART_Init+8,f
  3879  108B  0DB3               	rlf	??_UART_Init+9,f
  3880  108C  0DB4               	rlf	??_UART_Init+10,f
  3881  108D  0DB5               	rlf	??_UART_Init+11,f
  3882  108E  3EFF               	addlw	-1
  3883  108F  1D03               	skipz
  3884  1090  2889               	goto	u3315
  3885  1091  09B2               	comf	??_UART_Init+8,f
  3886  1092  09B3               	comf	??_UART_Init+9,f
  3887  1093  09B4               	comf	??_UART_Init+10,f
  3888  1094  09B5               	comf	??_UART_Init+11,f
  3889  1095  0AB2               	incf	??_UART_Init+8,f
  3890  1096  1903               	skipnz
  3891  1097  0AB3               	incf	??_UART_Init+9,f
  3892  1098  1903               	skipnz
  3893  1099  0AB4               	incf	??_UART_Init+10,f
  3894  109A  1903               	skipnz
  3895  109B  0AB5               	incf	??_UART_Init+11,f
  3896  109C  0832               	movf	??_UART_Init+8,w
  3897  109D  07AE               	addwf	??_UART_Init+4,f
  3898  109E  0833               	movf	??_UART_Init+9,w
  3899  109F  1803               	skipnc
  3900  10A0  0F33               	incfsz	??_UART_Init+9,w
  3901  10A1  28A3               	goto	u3320
  3902  10A2  28A4               	goto	u3321
  3903  10A3                     u3320:	
  3904  10A3  07AF               	addwf	??_UART_Init+5,f
  3905  10A4                     u3321:	
  3906  10A4  0834               	movf	??_UART_Init+10,w
  3907  10A5  1803               	skipnc
  3908  10A6  0F34               	incfsz	??_UART_Init+10,w
  3909  10A7  28A9               	goto	u3322
  3910  10A8  28AA               	goto	u3323
  3911  10A9                     u3322:	
  3912  10A9  07B0               	addwf	??_UART_Init+6,f
  3913  10AA                     u3323:	
  3914  10AA  0835               	movf	??_UART_Init+11,w
  3915  10AB  1803               	skipnc
  3916  10AC  0A35               	incf	??_UART_Init+11,w
  3917  10AD  07B1               	addwf	??_UART_Init+7,f
  3918  10AE  0831               	movf	??_UART_Init+7,w
  3919  10AF  00F7               	movwf	___aldiv@dividend+3
  3920  10B0  0830               	movf	??_UART_Init+6,w
  3921  10B1  00F6               	movwf	___aldiv@dividend+2
  3922  10B2  082F               	movf	??_UART_Init+5,w
  3923  10B3  00F5               	movwf	___aldiv@dividend+1
  3924  10B4  082E               	movf	??_UART_Init+4,w
  3925  10B5  00F4               	movwf	___aldiv@dividend
  3926  10B6  120A  158A  2017   	fcall	___aldiv
  3927  10B9  0871               	movf	?___aldiv+1,w
  3928  10BA  00FA               	movwf	UART_Init@x+1
  3929  10BB  0870               	movf	?___aldiv,w
  3930  10BC  00F9               	movwf	UART_Init@x
  3931                           
  3932                           ;main.c: 34: BRGH = 1;
  3933  10BD  1683               	bsf	3,5	;RP0=1, select bank1
  3934  10BE  1303               	bcf	3,6	;RP1=0, select bank1
  3935  10BF  1518               	bsf	24,2	;volatile
  3936                           
  3937                           ;main.c: 36: SPBRG = x;
  3938  10C0  0879               	movf	UART_Init@x,w
  3939  10C1  0099               	movwf	25	;volatile
  3940                           
  3941                           ;main.c: 37: SYNC = 0;
  3942  10C2  1218               	bcf	24,4	;volatile
  3943                           
  3944                           ;main.c: 38: SPEN = 1;
  3945  10C3  1283               	bcf	3,5	;RP0=0, select bank0
  3946  10C4  1303               	bcf	3,6	;RP1=0, select bank0
  3947  10C5  1798               	bsf	24,7	;volatile
  3948                           
  3949                           ;main.c: 39: TRISC7 = 1;
  3950  10C6  1683               	bsf	3,5	;RP0=1, select bank1
  3951  10C7  1303               	bcf	3,6	;RP1=0, select bank1
  3952  10C8  1787               	bsf	7,7	;volatile
  3953                           
  3954                           ;main.c: 40: TRISC6 = 1;
  3955  10C9  1707               	bsf	7,6	;volatile
  3956                           
  3957                           ;main.c: 41: CREN = 1;
  3958  10CA  1283               	bcf	3,5	;RP0=0, select bank0
  3959  10CB  1303               	bcf	3,6	;RP1=0, select bank0
  3960  10CC  1618               	bsf	24,4	;volatile
  3961                           
  3962                           ;main.c: 42: TXEN = 1;
  3963  10CD  1683               	bsf	3,5	;RP0=1, select bank1
  3964  10CE  1303               	bcf	3,6	;RP1=0, select bank1
  3965  10CF  1698               	bsf	24,5	;volatile
  3966  10D0  0008               	return
  3967  10D1                     __end_of_UART_Init:	
  3968                           ;main.c: 43: return 1;
  3969                           ;	Return value of _UART_Init is never used
  3970                           
  3971                           
  3972                           	psect	text16
  3973  0817                     __ptext16:	
  3974 ;; *************** function ___aldiv *****************
  3975 ;; Defined at:
  3976 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\aldiv.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  divisor         4    0[COMMON] long 
  3979 ;;  dividend        4    4[COMMON] long 
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;  quotient        4    2[BANK0 ] long 
  3982 ;;  sign            1    1[BANK0 ] unsigned char 
  3983 ;;  counter         1    0[BANK0 ] unsigned char 
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  4    0[COMMON] long 
  3986 ;; Registers used:
  3987 ;;		wreg, status,2, status,0
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3993 ;;      Params:         8       0       0       0       0
  3994 ;;      Locals:         0       6       0       0       0
  3995 ;;      Temps:          1       0       0       0       0
  3996 ;;      Totals:         9       6       0       0       0
  3997 ;;Total ram usage:       15 bytes
  3998 ;; Hardware stack levels used:    1
  3999 ;; This function calls:
  4000 ;;		Nothing
  4001 ;; This function is called by:
  4002 ;;		_UART_Init
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           
  4007                           ;psect for function ___aldiv
  4008  0817                     ___aldiv:	
  4009                           
  4010                           ;incstack = 0
  4011                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4012  0817  1283               	bcf	3,5	;RP0=0, select bank0
  4013  0818  1303               	bcf	3,6	;RP1=0, select bank0
  4014  0819  01A1               	clrf	___aldiv@sign
  4015  081A  1FF3               	btfss	___aldiv@divisor+3,7
  4016  081B  2829               	goto	l340
  4017  081C  09F0               	comf	___aldiv@divisor,f
  4018  081D  09F1               	comf	___aldiv@divisor+1,f
  4019  081E  09F2               	comf	___aldiv@divisor+2,f
  4020  081F  09F3               	comf	___aldiv@divisor+3,f
  4021  0820  0AF0               	incf	___aldiv@divisor,f
  4022  0821  1903               	skipnz
  4023  0822  0AF1               	incf	___aldiv@divisor+1,f
  4024  0823  1903               	skipnz
  4025  0824  0AF2               	incf	___aldiv@divisor+2,f
  4026  0825  1903               	skipnz
  4027  0826  0AF3               	incf	___aldiv@divisor+3,f
  4028  0827  01A1               	clrf	___aldiv@sign
  4029  0828  0AA1               	incf	___aldiv@sign,f
  4030  0829                     l340:	
  4031  0829  1FF7               	btfss	___aldiv@dividend+3,7
  4032  082A  283A               	goto	l1403
  4033  082B  09F4               	comf	___aldiv@dividend,f
  4034  082C  09F5               	comf	___aldiv@dividend+1,f
  4035  082D  09F6               	comf	___aldiv@dividend+2,f
  4036  082E  09F7               	comf	___aldiv@dividend+3,f
  4037  082F  0AF4               	incf	___aldiv@dividend,f
  4038  0830  1903               	skipnz
  4039  0831  0AF5               	incf	___aldiv@dividend+1,f
  4040  0832  1903               	skipnz
  4041  0833  0AF6               	incf	___aldiv@dividend+2,f
  4042  0834  1903               	skipnz
  4043  0835  0AF7               	incf	___aldiv@dividend+3,f
  4044  0836  3001               	movlw	1
  4045  0837  00F8               	movwf	??___aldiv
  4046  0838  0878               	movf	??___aldiv,w
  4047  0839  06A1               	xorwf	___aldiv@sign,f
  4048  083A                     l1403:	
  4049  083A  3000               	movlw	0
  4050  083B  00A5               	movwf	___aldiv@quotient+3
  4051  083C  3000               	movlw	0
  4052  083D  00A4               	movwf	___aldiv@quotient+2
  4053  083E  3000               	movlw	0
  4054  083F  00A3               	movwf	___aldiv@quotient+1
  4055  0840  3000               	movlw	0
  4056  0841  00A2               	movwf	___aldiv@quotient
  4057  0842  0873               	movf	___aldiv@divisor+3,w
  4058  0843  0472               	iorwf	___aldiv@divisor+2,w
  4059  0844  0471               	iorwf	___aldiv@divisor+1,w
  4060  0845  0470               	iorwf	___aldiv@divisor,w
  4061  0846  1903               	skipnz
  4062  0847  288F               	goto	l1425
  4063  0848  01A0               	clrf	___aldiv@counter
  4064  0849  0AA0               	incf	___aldiv@counter,f
  4065  084A                     l1411:	
  4066  084A  1BF3               	btfsc	___aldiv@divisor+3,7
  4067  084B  285A               	goto	l1413
  4068  084C  3001               	movlw	1
  4069  084D  00F8               	movwf	??___aldiv
  4070  084E                     u2915:	
  4071  084E  1003               	clrc
  4072  084F  0DF0               	rlf	___aldiv@divisor,f
  4073  0850  0DF1               	rlf	___aldiv@divisor+1,f
  4074  0851  0DF2               	rlf	___aldiv@divisor+2,f
  4075  0852  0DF3               	rlf	___aldiv@divisor+3,f
  4076  0853  0BF8               	decfsz	??___aldiv,f
  4077  0854  284E               	goto	u2915
  4078  0855  3001               	movlw	1
  4079  0856  00F8               	movwf	??___aldiv
  4080  0857  0878               	movf	??___aldiv,w
  4081  0858  07A0               	addwf	___aldiv@counter,f
  4082  0859  284A               	goto	l1411
  4083  085A                     l1413:	
  4084  085A  3001               	movlw	1
  4085  085B  00F8               	movwf	??___aldiv
  4086  085C                     u2935:	
  4087  085C  1003               	clrc
  4088  085D  0DA2               	rlf	___aldiv@quotient,f
  4089  085E  0DA3               	rlf	___aldiv@quotient+1,f
  4090  085F  0DA4               	rlf	___aldiv@quotient+2,f
  4091  0860  0DA5               	rlf	___aldiv@quotient+3,f
  4092  0861  0BF8               	decfsz	??___aldiv,f
  4093  0862  285C               	goto	u2935
  4094  0863  0873               	movf	___aldiv@divisor+3,w
  4095  0864  0277               	subwf	___aldiv@dividend+3,w
  4096  0865  1D03               	skipz
  4097  0866  2871               	goto	u2945
  4098  0867  0872               	movf	___aldiv@divisor+2,w
  4099  0868  0276               	subwf	___aldiv@dividend+2,w
  4100  0869  1D03               	skipz
  4101  086A  2871               	goto	u2945
  4102  086B  0871               	movf	___aldiv@divisor+1,w
  4103  086C  0275               	subwf	___aldiv@dividend+1,w
  4104  086D  1D03               	skipz
  4105  086E  2871               	goto	u2945
  4106  086F  0870               	movf	___aldiv@divisor,w
  4107  0870  0274               	subwf	___aldiv@dividend,w
  4108  0871                     u2945:	
  4109  0871  1C03               	skipc
  4110  0872  2882               	goto	l1421
  4111  0873  0870               	movf	___aldiv@divisor,w
  4112  0874  02F4               	subwf	___aldiv@dividend,f
  4113  0875  0871               	movf	___aldiv@divisor+1,w
  4114  0876  1C03               	skipc
  4115  0877  0F71               	incfsz	___aldiv@divisor+1,w
  4116  0878  02F5               	subwf	___aldiv@dividend+1,f
  4117  0879  0872               	movf	___aldiv@divisor+2,w
  4118  087A  1C03               	skipc
  4119  087B  0F72               	incfsz	___aldiv@divisor+2,w
  4120  087C  02F6               	subwf	___aldiv@dividend+2,f
  4121  087D  0873               	movf	___aldiv@divisor+3,w
  4122  087E  1C03               	skipc
  4123  087F  0F73               	incfsz	___aldiv@divisor+3,w
  4124  0880  02F7               	subwf	___aldiv@dividend+3,f
  4125  0881  1422               	bsf	___aldiv@quotient,0
  4126  0882                     l1421:	
  4127  0882  3001               	movlw	1
  4128  0883                     u2955:	
  4129  0883  1003               	clrc
  4130  0884  0CF3               	rrf	___aldiv@divisor+3,f
  4131  0885  0CF2               	rrf	___aldiv@divisor+2,f
  4132  0886  0CF1               	rrf	___aldiv@divisor+1,f
  4133  0887  0CF0               	rrf	___aldiv@divisor,f
  4134  0888  3EFF               	addlw	-1
  4135  0889  1D03               	skipz
  4136  088A  2883               	goto	u2955
  4137  088B  3001               	movlw	1
  4138  088C  02A0               	subwf	___aldiv@counter,f
  4139  088D  1D03               	btfss	3,2
  4140  088E  285A               	goto	l1413
  4141  088F                     l1425:	
  4142  088F  0821               	movf	___aldiv@sign,w
  4143  0890  1903               	btfsc	3,2
  4144  0891  289D               	goto	l1429
  4145  0892  09A2               	comf	___aldiv@quotient,f
  4146  0893  09A3               	comf	___aldiv@quotient+1,f
  4147  0894  09A4               	comf	___aldiv@quotient+2,f
  4148  0895  09A5               	comf	___aldiv@quotient+3,f
  4149  0896  0AA2               	incf	___aldiv@quotient,f
  4150  0897  1903               	skipnz
  4151  0898  0AA3               	incf	___aldiv@quotient+1,f
  4152  0899  1903               	skipnz
  4153  089A  0AA4               	incf	___aldiv@quotient+2,f
  4154  089B  1903               	skipnz
  4155  089C  0AA5               	incf	___aldiv@quotient+3,f
  4156  089D                     l1429:	
  4157  089D  0825               	movf	___aldiv@quotient+3,w
  4158  089E  00F3               	movwf	?___aldiv+3
  4159  089F  0824               	movf	___aldiv@quotient+2,w
  4160  08A0  00F2               	movwf	?___aldiv+2
  4161  08A1  0823               	movf	___aldiv@quotient+1,w
  4162  08A2  00F1               	movwf	?___aldiv+1
  4163  08A3  0822               	movf	___aldiv@quotient,w
  4164  08A4  00F0               	movwf	?___aldiv
  4165  08A5  0008               	return
  4166  08A6                     __end_of___aldiv:	
  4167                           
  4168                           	psect	text17
  4169  0C40                     __ptext17:	
  4170 ;; *************** function _LCD_mapping *****************
  4171 ;; Defined at:
  4172 ;;		line 9 in file "lcd.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  D1              1    wreg     PTR struct .
  4175 ;;		 -> main@D1(28), 
  4176 ;;  D2              1    0[COMMON] PTR struct .
  4177 ;;		 -> main@D2(28), 
  4178 ;;  D3              1    1[COMMON] PTR struct .
  4179 ;;		 -> main@D3(28), 
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;  D1              1    4[COMMON] PTR struct .
  4182 ;;		 -> main@D1(28), 
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1    wreg      void 
  4185 ;; Registers used:
  4186 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4192 ;;      Params:         2       0       0       0       0
  4193 ;;      Locals:         1       0       0       0       0
  4194 ;;      Temps:          2       0       0       0       0
  4195 ;;      Totals:         5       0       0       0       0
  4196 ;;Total ram usage:        5 bytes
  4197 ;; Hardware stack levels used:    1
  4198 ;; This function calls:
  4199 ;;		Nothing
  4200 ;; This function is called by:
  4201 ;;		_main
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           
  4206                           ;psect for function _LCD_mapping
  4207  0C40                     _LCD_mapping:	
  4208                           
  4209                           ;incstack = 0
  4210                           ; Regs used in _LCD_mapping: [wreg-fsr0h+status,2+status,0]
  4211                           ;LCD_mapping@D1 stored from wreg
  4212  0C40  00F4               	movwf	LCD_mapping@D1
  4213                           
  4214                           ;lcd.c: 11: D1->sa = &LCDDATA2; D1->bits[0] =6 ;
  4215  0C41  3012               	movlw	18
  4216  0C42  00F2               	movwf	??_LCD_mapping
  4217  0C43  3001               	movlw	1
  4218  0C44  00F3               	movwf	??_LCD_mapping+1
  4219  0C45  0874               	movf	LCD_mapping@D1,w
  4220  0C46  0084               	movwf	4
  4221  0C47  0872               	movf	??_LCD_mapping,w
  4222  0C48  1383               	bcf	3,7	;select IRP bank0
  4223  0C49  0080               	movwf	0
  4224  0C4A  0873               	movf	??_LCD_mapping+1,w
  4225  0C4B  0A84               	incf	4,f
  4226  0C4C  0080               	movwf	0
  4227  0C4D  0384               	decf	4,f
  4228  0C4E  0874               	movf	LCD_mapping@D1,w
  4229  0C4F  3E0E               	addlw	14
  4230  0C50  0084               	movwf	4
  4231  0C51  3006               	movlw	6
  4232  0C52  0080               	movwf	0
  4233  0C53  0A84               	incf	4,f
  4234  0C54  3000               	movlw	0
  4235  0C55  0080               	movwf	0
  4236                           
  4237                           ;lcd.c: 12: D1->sb = &LCDDATA2; D1->bits[1] =7 ;
  4238  0C56  3012               	movlw	18
  4239  0C57  00F2               	movwf	??_LCD_mapping
  4240  0C58  3001               	movlw	1
  4241  0C59  00F3               	movwf	??_LCD_mapping+1
  4242  0C5A  0874               	movf	LCD_mapping@D1,w
  4243  0C5B  3E02               	addlw	2
  4244  0C5C  0084               	movwf	4
  4245  0C5D  0872               	movf	??_LCD_mapping,w
  4246  0C5E  0080               	movwf	0
  4247  0C5F  0873               	movf	??_LCD_mapping+1,w
  4248  0C60  0A84               	incf	4,f
  4249  0C61  0080               	movwf	0
  4250  0C62  0384               	decf	4,f
  4251  0C63  0874               	movf	LCD_mapping@D1,w
  4252  0C64  3E10               	addlw	16
  4253  0C65  0084               	movwf	4
  4254  0C66  3007               	movlw	7
  4255  0C67  0080               	movwf	0
  4256  0C68  0A84               	incf	4,f
  4257  0C69  3000               	movlw	0
  4258  0C6A  0080               	movwf	0
  4259                           
  4260                           ;lcd.c: 13: D1->sc = &LCDDATA8; D1->bits[2] =7 ;
  4261  0C6B  3018               	movlw	24
  4262  0C6C  00F2               	movwf	??_LCD_mapping
  4263  0C6D  3001               	movlw	1
  4264  0C6E  00F3               	movwf	??_LCD_mapping+1
  4265  0C6F  0874               	movf	LCD_mapping@D1,w
  4266  0C70  3E04               	addlw	4
  4267  0C71  0084               	movwf	4
  4268  0C72  0872               	movf	??_LCD_mapping,w
  4269  0C73  0080               	movwf	0
  4270  0C74  0873               	movf	??_LCD_mapping+1,w
  4271  0C75  0A84               	incf	4,f
  4272  0C76  0080               	movwf	0
  4273  0C77  0384               	decf	4,f
  4274  0C78  0874               	movf	LCD_mapping@D1,w
  4275  0C79  3E12               	addlw	18
  4276  0C7A  0084               	movwf	4
  4277  0C7B  3007               	movlw	7
  4278  0C7C  0080               	movwf	0
  4279  0C7D  0A84               	incf	4,f
  4280  0C7E  3000               	movlw	0
  4281  0C7F  0080               	movwf	0
  4282                           
  4283                           ;lcd.c: 14: D1->sd = &LCDDATA11; D1->bits[3] =6 ;
  4284  0C80  301B               	movlw	27
  4285  0C81  00F2               	movwf	??_LCD_mapping
  4286  0C82  3001               	movlw	1
  4287  0C83  00F3               	movwf	??_LCD_mapping+1
  4288  0C84  0874               	movf	LCD_mapping@D1,w
  4289  0C85  3E06               	addlw	6
  4290  0C86  0084               	movwf	4
  4291  0C87  0872               	movf	??_LCD_mapping,w
  4292  0C88  0080               	movwf	0
  4293  0C89  0873               	movf	??_LCD_mapping+1,w
  4294  0C8A  0A84               	incf	4,f
  4295  0C8B  0080               	movwf	0
  4296  0C8C  0384               	decf	4,f
  4297  0C8D  0874               	movf	LCD_mapping@D1,w
  4298  0C8E  3E14               	addlw	20
  4299  0C8F  0084               	movwf	4
  4300  0C90  3006               	movlw	6
  4301  0C91  0080               	movwf	0
  4302  0C92  0A84               	incf	4,f
  4303  0C93  3000               	movlw	0
  4304  0C94  0080               	movwf	0
  4305                           
  4306                           ;lcd.c: 15: D1->se = &LCDDATA8; D1->bits[4] =6 ;
  4307  0C95  3018               	movlw	24
  4308  0C96  00F2               	movwf	??_LCD_mapping
  4309  0C97  3001               	movlw	1
  4310  0C98  00F3               	movwf	??_LCD_mapping+1
  4311  0C99  0874               	movf	LCD_mapping@D1,w
  4312  0C9A  3E08               	addlw	8
  4313  0C9B  0084               	movwf	4
  4314  0C9C  0872               	movf	??_LCD_mapping,w
  4315  0C9D  0080               	movwf	0
  4316  0C9E  0873               	movf	??_LCD_mapping+1,w
  4317  0C9F  0A84               	incf	4,f
  4318  0CA0  0080               	movwf	0
  4319  0CA1  0384               	decf	4,f
  4320  0CA2  0874               	movf	LCD_mapping@D1,w
  4321  0CA3  3E16               	addlw	22
  4322  0CA4  0084               	movwf	4
  4323  0CA5  3006               	movlw	6
  4324  0CA6  0080               	movwf	0
  4325  0CA7  0A84               	incf	4,f
  4326  0CA8  3000               	movlw	0
  4327  0CA9  0080               	movwf	0
  4328                           
  4329                           ;lcd.c: 16: D1->sf = &LCDDATA5; D1->bits[5] =6 ;
  4330  0CAA  3015               	movlw	21
  4331  0CAB  00F2               	movwf	??_LCD_mapping
  4332  0CAC  3001               	movlw	1
  4333  0CAD  00F3               	movwf	??_LCD_mapping+1
  4334  0CAE  0874               	movf	LCD_mapping@D1,w
  4335  0CAF  3E0A               	addlw	10
  4336  0CB0  0084               	movwf	4
  4337  0CB1  0872               	movf	??_LCD_mapping,w
  4338  0CB2  0080               	movwf	0
  4339  0CB3  0873               	movf	??_LCD_mapping+1,w
  4340  0CB4  0A84               	incf	4,f
  4341  0CB5  0080               	movwf	0
  4342  0CB6  0384               	decf	4,f
  4343  0CB7  0874               	movf	LCD_mapping@D1,w
  4344  0CB8  3E18               	addlw	24
  4345  0CB9  0084               	movwf	4
  4346  0CBA  3006               	movlw	6
  4347  0CBB  0080               	movwf	0
  4348  0CBC  0A84               	incf	4,f
  4349  0CBD  3000               	movlw	0
  4350  0CBE  0080               	movwf	0
  4351                           
  4352                           ;lcd.c: 17: D1->sg = &LCDDATA5; D1->bits[6] =7 ;
  4353  0CBF  3015               	movlw	21
  4354  0CC0  00F2               	movwf	??_LCD_mapping
  4355  0CC1  3001               	movlw	1
  4356  0CC2  00F3               	movwf	??_LCD_mapping+1
  4357  0CC3  0874               	movf	LCD_mapping@D1,w
  4358  0CC4  3E0C               	addlw	12
  4359  0CC5  0084               	movwf	4
  4360  0CC6  0872               	movf	??_LCD_mapping,w
  4361  0CC7  0080               	movwf	0
  4362  0CC8  0873               	movf	??_LCD_mapping+1,w
  4363  0CC9  0A84               	incf	4,f
  4364  0CCA  0080               	movwf	0
  4365  0CCB  0384               	decf	4,f
  4366  0CCC  0874               	movf	LCD_mapping@D1,w
  4367  0CCD  3E1A               	addlw	26
  4368  0CCE  0084               	movwf	4
  4369  0CCF  3007               	movlw	7
  4370  0CD0  0080               	movwf	0
  4371  0CD1  0A84               	incf	4,f
  4372  0CD2  3000               	movlw	0
  4373  0CD3  0080               	movwf	0
  4374                           
  4375                           ;lcd.c: 20: D2->sa = &LCDDATA0; D2->bits[0] =6 ;
  4376  0CD4  3010               	movlw	16
  4377  0CD5  00F2               	movwf	??_LCD_mapping
  4378  0CD6  3001               	movlw	1
  4379  0CD7  00F3               	movwf	??_LCD_mapping+1
  4380  0CD8  0870               	movf	LCD_mapping@D2,w
  4381  0CD9  0084               	movwf	4
  4382  0CDA  0872               	movf	??_LCD_mapping,w
  4383  0CDB  0080               	movwf	0
  4384  0CDC  0873               	movf	??_LCD_mapping+1,w
  4385  0CDD  0A84               	incf	4,f
  4386  0CDE  0080               	movwf	0
  4387  0CDF  0384               	decf	4,f
  4388  0CE0  0870               	movf	LCD_mapping@D2,w
  4389  0CE1  3E0E               	addlw	14
  4390  0CE2  0084               	movwf	4
  4391  0CE3  3006               	movlw	6
  4392  0CE4  0080               	movwf	0
  4393  0CE5  0A84               	incf	4,f
  4394  0CE6  3000               	movlw	0
  4395  0CE7  0080               	movwf	0
  4396                           
  4397                           ;lcd.c: 21: D2->sb = &LCDDATA2; D2->bits[1] =5 ;
  4398  0CE8  3012               	movlw	18
  4399  0CE9  00F2               	movwf	??_LCD_mapping
  4400  0CEA  3001               	movlw	1
  4401  0CEB  00F3               	movwf	??_LCD_mapping+1
  4402  0CEC  0870               	movf	LCD_mapping@D2,w
  4403  0CED  3E02               	addlw	2
  4404  0CEE  0084               	movwf	4
  4405  0CEF  0872               	movf	??_LCD_mapping,w
  4406  0CF0  0080               	movwf	0
  4407  0CF1  0873               	movf	??_LCD_mapping+1,w
  4408  0CF2  0A84               	incf	4,f
  4409  0CF3  0080               	movwf	0
  4410  0CF4  0384               	decf	4,f
  4411  0CF5  0870               	movf	LCD_mapping@D2,w
  4412  0CF6  3E10               	addlw	16
  4413  0CF7  0084               	movwf	4
  4414  0CF8  3005               	movlw	5
  4415  0CF9  0080               	movwf	0
  4416  0CFA  0A84               	incf	4,f
  4417  0CFB  3000               	movlw	0
  4418  0CFC  0080               	movwf	0
  4419                           
  4420                           ;lcd.c: 22: D2->sc = &LCDDATA8; D2->bits[2] =5 ;
  4421  0CFD  3018               	movlw	24
  4422  0CFE  00F2               	movwf	??_LCD_mapping
  4423  0CFF  3001               	movlw	1
  4424  0D00  00F3               	movwf	??_LCD_mapping+1
  4425  0D01  0870               	movf	LCD_mapping@D2,w
  4426  0D02  3E04               	addlw	4
  4427  0D03  0084               	movwf	4
  4428  0D04  0872               	movf	??_LCD_mapping,w
  4429  0D05  0080               	movwf	0
  4430  0D06  0873               	movf	??_LCD_mapping+1,w
  4431  0D07  0A84               	incf	4,f
  4432  0D08  0080               	movwf	0
  4433  0D09  0384               	decf	4,f
  4434  0D0A  0870               	movf	LCD_mapping@D2,w
  4435  0D0B  3E12               	addlw	18
  4436  0D0C  0084               	movwf	4
  4437  0D0D  3005               	movlw	5
  4438  0D0E  0080               	movwf	0
  4439  0D0F  0A84               	incf	4,f
  4440  0D10  3000               	movlw	0
  4441  0D11  0080               	movwf	0
  4442                           
  4443                           ;lcd.c: 23: D2->sd = &LCDDATA9; D2->bits[3] =6 ;
  4444  0D12  3019               	movlw	25
  4445  0D13  00F2               	movwf	??_LCD_mapping
  4446  0D14  3001               	movlw	1
  4447  0D15  00F3               	movwf	??_LCD_mapping+1
  4448  0D16  0870               	movf	LCD_mapping@D2,w
  4449  0D17  3E06               	addlw	6
  4450  0D18  0084               	movwf	4
  4451  0D19  0872               	movf	??_LCD_mapping,w
  4452  0D1A  0080               	movwf	0
  4453  0D1B  0873               	movf	??_LCD_mapping+1,w
  4454  0D1C  0A84               	incf	4,f
  4455  0D1D  0080               	movwf	0
  4456  0D1E  0384               	decf	4,f
  4457  0D1F  0870               	movf	LCD_mapping@D2,w
  4458  0D20  3E14               	addlw	20
  4459  0D21  0084               	movwf	4
  4460  0D22  3006               	movlw	6
  4461  0D23  0080               	movwf	0
  4462  0D24  0A84               	incf	4,f
  4463  0D25  3000               	movlw	0
  4464  0D26  0080               	movwf	0
  4465                           
  4466                           ;lcd.c: 24: D2->se = &LCDDATA6; D2->bits[4] =6 ;
  4467  0D27  3016               	movlw	22
  4468  0D28  00F2               	movwf	??_LCD_mapping
  4469  0D29  3001               	movlw	1
  4470  0D2A  00F3               	movwf	??_LCD_mapping+1
  4471  0D2B  0870               	movf	LCD_mapping@D2,w
  4472  0D2C  3E08               	addlw	8
  4473  0D2D  0084               	movwf	4
  4474  0D2E  0872               	movf	??_LCD_mapping,w
  4475  0D2F  0080               	movwf	0
  4476  0D30  0873               	movf	??_LCD_mapping+1,w
  4477  0D31  0A84               	incf	4,f
  4478  0D32  0080               	movwf	0
  4479  0D33  0384               	decf	4,f
  4480  0D34  0870               	movf	LCD_mapping@D2,w
  4481  0D35  3E16               	addlw	22
  4482  0D36  0084               	movwf	4
  4483  0D37  3006               	movlw	6
  4484  0D38  0080               	movwf	0
  4485  0D39  0A84               	incf	4,f
  4486  0D3A  3000               	movlw	0
  4487  0D3B  0080               	movwf	0
  4488                           
  4489                           ;lcd.c: 25: D2->sf = &LCDDATA3; D2->bits[5] =6 ;
  4490  0D3C  3013               	movlw	19
  4491  0D3D  00F2               	movwf	??_LCD_mapping
  4492  0D3E  3001               	movlw	1
  4493  0D3F  00F3               	movwf	??_LCD_mapping+1
  4494  0D40  0870               	movf	LCD_mapping@D2,w
  4495  0D41  3E0A               	addlw	10
  4496  0D42  0084               	movwf	4
  4497  0D43  0872               	movf	??_LCD_mapping,w
  4498  0D44  0080               	movwf	0
  4499  0D45  0873               	movf	??_LCD_mapping+1,w
  4500  0D46  0A84               	incf	4,f
  4501  0D47  0080               	movwf	0
  4502  0D48  0384               	decf	4,f
  4503  0D49  0870               	movf	LCD_mapping@D2,w
  4504  0D4A  3E18               	addlw	24
  4505  0D4B  0084               	movwf	4
  4506  0D4C  3006               	movlw	6
  4507  0D4D  0080               	movwf	0
  4508  0D4E  0A84               	incf	4,f
  4509  0D4F  3000               	movlw	0
  4510  0D50  0080               	movwf	0
  4511                           
  4512                           ;lcd.c: 26: D2->sg = &LCDDATA5; D2->bits[6] =5 ;
  4513  0D51  3015               	movlw	21
  4514  0D52  00F2               	movwf	??_LCD_mapping
  4515  0D53  3001               	movlw	1
  4516  0D54  00F3               	movwf	??_LCD_mapping+1
  4517  0D55  0870               	movf	LCD_mapping@D2,w
  4518  0D56  3E0C               	addlw	12
  4519  0D57  0084               	movwf	4
  4520  0D58  0872               	movf	??_LCD_mapping,w
  4521  0D59  0080               	movwf	0
  4522  0D5A  0873               	movf	??_LCD_mapping+1,w
  4523  0D5B  0A84               	incf	4,f
  4524  0D5C  0080               	movwf	0
  4525  0D5D  0384               	decf	4,f
  4526  0D5E  0870               	movf	LCD_mapping@D2,w
  4527  0D5F  3E1A               	addlw	26
  4528  0D60  0084               	movwf	4
  4529  0D61  3005               	movlw	5
  4530  0D62  0080               	movwf	0
  4531  0D63  0A84               	incf	4,f
  4532  0D64  3000               	movlw	0
  4533  0D65  0080               	movwf	0
  4534                           
  4535                           ;lcd.c: 29: D3->sa = &LCDDATA0; D3->bits[0] =3 ;
  4536  0D66  3010               	movlw	16
  4537  0D67  00F2               	movwf	??_LCD_mapping
  4538  0D68  3001               	movlw	1
  4539  0D69  00F3               	movwf	??_LCD_mapping+1
  4540  0D6A  0871               	movf	LCD_mapping@D3,w
  4541  0D6B  0084               	movwf	4
  4542  0D6C  0872               	movf	??_LCD_mapping,w
  4543  0D6D  1783               	bsf	3,7	;select IRP bank2
  4544  0D6E  0080               	movwf	0
  4545  0D6F  0873               	movf	??_LCD_mapping+1,w
  4546  0D70  0A84               	incf	4,f
  4547  0D71  0080               	movwf	0
  4548  0D72  0384               	decf	4,f
  4549  0D73  0871               	movf	LCD_mapping@D3,w
  4550  0D74  3E0E               	addlw	14
  4551  0D75  0084               	movwf	4
  4552  0D76  3003               	movlw	3
  4553  0D77  0080               	movwf	0
  4554  0D78  0A84               	incf	4,f
  4555  0D79  3000               	movlw	0
  4556  0D7A  0080               	movwf	0
  4557                           
  4558                           ;lcd.c: 30: D3->sb = &LCDDATA1; D3->bits[1] =3 ;
  4559  0D7B  3011               	movlw	17
  4560  0D7C  00F2               	movwf	??_LCD_mapping
  4561  0D7D  3001               	movlw	1
  4562  0D7E  00F3               	movwf	??_LCD_mapping+1
  4563  0D7F  0871               	movf	LCD_mapping@D3,w
  4564  0D80  3E02               	addlw	2
  4565  0D81  0084               	movwf	4
  4566  0D82  0872               	movf	??_LCD_mapping,w
  4567  0D83  0080               	movwf	0
  4568  0D84  0873               	movf	??_LCD_mapping+1,w
  4569  0D85  0A84               	incf	4,f
  4570  0D86  0080               	movwf	0
  4571  0D87  0384               	decf	4,f
  4572  0D88  0871               	movf	LCD_mapping@D3,w
  4573  0D89  3E10               	addlw	16
  4574  0D8A  0084               	movwf	4
  4575  0D8B  3003               	movlw	3
  4576  0D8C  0080               	movwf	0
  4577  0D8D  0A84               	incf	4,f
  4578  0D8E  3000               	movlw	0
  4579  0D8F  0080               	movwf	0
  4580                           
  4581                           ;lcd.c: 31: D3->sc = &LCDDATA7; D3->bits[2] =3 ;
  4582  0D90  3017               	movlw	23
  4583  0D91  00F2               	movwf	??_LCD_mapping
  4584  0D92  3001               	movlw	1
  4585  0D93  00F3               	movwf	??_LCD_mapping+1
  4586  0D94  0871               	movf	LCD_mapping@D3,w
  4587  0D95  3E04               	addlw	4
  4588  0D96  0084               	movwf	4
  4589  0D97  0872               	movf	??_LCD_mapping,w
  4590  0D98  0080               	movwf	0
  4591  0D99  0873               	movf	??_LCD_mapping+1,w
  4592  0D9A  0A84               	incf	4,f
  4593  0D9B  0080               	movwf	0
  4594  0D9C  0384               	decf	4,f
  4595  0D9D  0871               	movf	LCD_mapping@D3,w
  4596  0D9E  3E12               	addlw	18
  4597  0D9F  0084               	movwf	4
  4598  0DA0  3003               	movlw	3
  4599  0DA1  0080               	movwf	0
  4600  0DA2  0A84               	incf	4,f
  4601  0DA3  3000               	movlw	0
  4602  0DA4  0080               	movwf	0
  4603                           
  4604                           ;lcd.c: 32: D3->sd = &LCDDATA9; D3->bits[3] =3 ;
  4605  0DA5  3019               	movlw	25
  4606  0DA6  00F2               	movwf	??_LCD_mapping
  4607  0DA7  3001               	movlw	1
  4608  0DA8  00F3               	movwf	??_LCD_mapping+1
  4609  0DA9  0871               	movf	LCD_mapping@D3,w
  4610  0DAA  3E06               	addlw	6
  4611  0DAB  0084               	movwf	4
  4612  0DAC  0872               	movf	??_LCD_mapping,w
  4613  0DAD  0080               	movwf	0
  4614  0DAE  0873               	movf	??_LCD_mapping+1,w
  4615  0DAF  0A84               	incf	4,f
  4616  0DB0  0080               	movwf	0
  4617  0DB1  0384               	decf	4,f
  4618  0DB2  0871               	movf	LCD_mapping@D3,w
  4619  0DB3  3E14               	addlw	20
  4620  0DB4  0084               	movwf	4
  4621  0DB5  3003               	movlw	3
  4622  0DB6  0080               	movwf	0
  4623  0DB7  0A84               	incf	4,f
  4624  0DB8  3000               	movlw	0
  4625  0DB9  0080               	movwf	0
  4626                           
  4627                           ;lcd.c: 33: D3->se = &LCDDATA6; D3->bits[4] =3 ;
  4628  0DBA  3016               	movlw	22
  4629  0DBB  00F2               	movwf	??_LCD_mapping
  4630  0DBC  3001               	movlw	1
  4631  0DBD  00F3               	movwf	??_LCD_mapping+1
  4632  0DBE  0871               	movf	LCD_mapping@D3,w
  4633  0DBF  3E08               	addlw	8
  4634  0DC0  0084               	movwf	4
  4635  0DC1  0872               	movf	??_LCD_mapping,w
  4636  0DC2  0080               	movwf	0
  4637  0DC3  0873               	movf	??_LCD_mapping+1,w
  4638  0DC4  0A84               	incf	4,f
  4639  0DC5  0080               	movwf	0
  4640  0DC6  0384               	decf	4,f
  4641  0DC7  0871               	movf	LCD_mapping@D3,w
  4642  0DC8  3E16               	addlw	22
  4643  0DC9  0084               	movwf	4
  4644  0DCA  3003               	movlw	3
  4645  0DCB  0080               	movwf	0
  4646  0DCC  0A84               	incf	4,f
  4647  0DCD  3000               	movlw	0
  4648  0DCE  0080               	movwf	0
  4649                           
  4650                           ;lcd.c: 34: D3->sf = &LCDDATA3; D3->bits[5] =3 ;
  4651  0DCF  3013               	movlw	19
  4652  0DD0  00F2               	movwf	??_LCD_mapping
  4653  0DD1  3001               	movlw	1
  4654  0DD2  00F3               	movwf	??_LCD_mapping+1
  4655  0DD3  0871               	movf	LCD_mapping@D3,w
  4656  0DD4  3E0A               	addlw	10
  4657  0DD5  0084               	movwf	4
  4658  0DD6  0872               	movf	??_LCD_mapping,w
  4659  0DD7  0080               	movwf	0
  4660  0DD8  0873               	movf	??_LCD_mapping+1,w
  4661  0DD9  0A84               	incf	4,f
  4662  0DDA  0080               	movwf	0
  4663  0DDB  0384               	decf	4,f
  4664  0DDC  0871               	movf	LCD_mapping@D3,w
  4665  0DDD  3E18               	addlw	24
  4666  0DDE  0084               	movwf	4
  4667  0DDF  3003               	movlw	3
  4668  0DE0  0080               	movwf	0
  4669  0DE1  0A84               	incf	4,f
  4670  0DE2  3000               	movlw	0
  4671  0DE3  0080               	movwf	0
  4672                           
  4673                           ;lcd.c: 35: D3->sg = &LCDDATA4; D3->bits[6] =3 ;
  4674  0DE4  3014               	movlw	20
  4675  0DE5  00F2               	movwf	??_LCD_mapping
  4676  0DE6  3001               	movlw	1
  4677  0DE7  00F3               	movwf	??_LCD_mapping+1
  4678  0DE8  0871               	movf	LCD_mapping@D3,w
  4679  0DE9  3E0C               	addlw	12
  4680  0DEA  0084               	movwf	4
  4681  0DEB  0872               	movf	??_LCD_mapping,w
  4682  0DEC  0080               	movwf	0
  4683  0DED  0873               	movf	??_LCD_mapping+1,w
  4684  0DEE  0A84               	incf	4,f
  4685  0DEF  0080               	movwf	0
  4686  0DF0  0384               	decf	4,f
  4687  0DF1  0871               	movf	LCD_mapping@D3,w
  4688  0DF2  3E1A               	addlw	26
  4689  0DF3  0084               	movwf	4
  4690  0DF4  3003               	movlw	3
  4691  0DF5  0080               	movwf	0
  4692  0DF6  0A84               	incf	4,f
  4693  0DF7  3000               	movlw	0
  4694  0DF8  0080               	movwf	0
  4695  0DF9  0008               	return
  4696  0DFA                     __end_of_LCD_mapping:	
  4697                           
  4698                           	psect	text18
  4699  1E37                     __ptext18:	
  4700 ;; *************** function _LCD_init *****************
  4701 ;; Defined at:
  4702 ;;		line 38 in file "lcd.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;		None
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;		None
  4707 ;; Return value:  Size  Location     Type
  4708 ;;                  1    wreg      void 
  4709 ;; Registers used:
  4710 ;;		wreg, status,2
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4716 ;;      Params:         0       0       0       0       0
  4717 ;;      Locals:         0       0       0       0       0
  4718 ;;      Temps:          0       0       0       0       0
  4719 ;;      Totals:         0       0       0       0       0
  4720 ;;Total ram usage:        0 bytes
  4721 ;; Hardware stack levels used:    1
  4722 ;; This function calls:
  4723 ;;		Nothing
  4724 ;; This function is called by:
  4725 ;;		_main
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           
  4730                           ;psect for function _LCD_init
  4731  1E37                     _LCD_init:	
  4732                           
  4733                           ;lcd.c: 40: LCDSE0 = 0x4F;
  4734                           
  4735                           ;incstack = 0
  4736                           ; Regs used in _LCD_init: [wreg+status,2]
  4737  1E37  304F               	movlw	79
  4738  1E38  1283               	bcf	3,5	;RP0=0, select bank2
  4739  1E39  1703               	bsf	3,6	;RP1=1, select bank2
  4740  1E3A  009C               	movwf	28	;volatile
  4741                           
  4742                           ;lcd.c: 41: LCDSE1 = 0x08;
  4743  1E3B  3008               	movlw	8
  4744  1E3C  009D               	movwf	29	;volatile
  4745                           
  4746                           ;lcd.c: 42: LCDSE2 = 0xE1;
  4747  1E3D  30E1               	movlw	225
  4748  1E3E  009E               	movwf	30	;volatile
  4749                           
  4750                           ;lcd.c: 45: ((LCDDATA0) &= 0x00);
  4751  1E3F  0190               	clrf	16	;volatile
  4752                           
  4753                           ;lcd.c: 46: ((LCDDATA1) &= 0x00);
  4754  1E40  0191               	clrf	17	;volatile
  4755                           
  4756                           ;lcd.c: 47: ((LCDDATA2) &= 0x00);
  4757  1E41  0192               	clrf	18	;volatile
  4758                           
  4759                           ;lcd.c: 48: ((LCDDATA3) &= 0x00);
  4760  1E42  0193               	clrf	19	;volatile
  4761                           
  4762                           ;lcd.c: 49: ((LCDDATA4) &= 0x00);
  4763  1E43  0194               	clrf	20	;volatile
  4764                           
  4765                           ;lcd.c: 50: ((LCDDATA5) &= 0x00);
  4766  1E44  0195               	clrf	21	;volatile
  4767                           
  4768                           ;lcd.c: 51: ((LCDDATA6) &= 0x00);
  4769  1E45  0196               	clrf	22	;volatile
  4770                           
  4771                           ;lcd.c: 52: ((LCDDATA7) &= 0x00);
  4772  1E46  0197               	clrf	23	;volatile
  4773                           
  4774                           ;lcd.c: 53: ((LCDDATA8) &= 0x00);
  4775  1E47  0198               	clrf	24	;volatile
  4776                           
  4777                           ;lcd.c: 54: ((LCDDATA9) &= 0x00);
  4778  1E48  0199               	clrf	25	;volatile
  4779                           
  4780                           ;lcd.c: 55: ((LCDDATA10) &= 0x00);
  4781  1E49  019A               	clrf	26	;volatile
  4782                           
  4783                           ;lcd.c: 56: ((LCDDATA11) &= 0x00);
  4784  1E4A  019B               	clrf	27	;volatile
  4785                           
  4786                           ;lcd.c: 60: LCDPS = 0x20;
  4787  1E4B  3020               	movlw	32
  4788  1E4C  0088               	movwf	8	;volatile
  4789                           
  4790                           ;lcd.c: 64: LCDCON = 0x93;
  4791  1E4D  3093               	movlw	147
  4792  1E4E  0087               	movwf	7	;volatile
  4793  1E4F  0008               	return
  4794  1E50                     __end_of_LCD_init:	
  4795  007E                     btemp	set	126	;btemp
  4796  007E                     wtemp0	set	126
  4797                           
  4798                           	psect	text5_split_1
  4799  0B0A                     u2045:	
  4800  0B0A  1003               	clrc
  4801  0B0B  0DA3               	rlf	??_displayDigit+3,f
  4802  0B0C  0DA4               	rlf	??_displayDigit+4,f
  4803  0B0D                     u2044:	
  4804  0B0D  0BA2               	decfsz	??_displayDigit+2,f
  4805  0B0E  2B0A               	goto	u2045
  4806  0B0F  300A               	movlw	10
  4807  0B10  077B               	addwf	displayDigit@D1,w
  4808  0B11  00A5               	movwf	??_displayDigit+5
  4809  0B12  087C               	movf	displayDigit@D1+1,w
  4810  0B13  1803               	skipnc
  4811  0B14  3E01               	addlw	1
  4812  0B15  00A6               	movwf	??_displayDigit+6
  4813  0B16  0825               	movf	??_displayDigit+5,w
  4814  0B17  0084               	movwf	4
  4815  0B18  1783               	bsf	3,7
  4816  0B19  1C26               	btfss	??_displayDigit+6,0
  4817  0B1A  1383               	bcf	3,7
  4818  0B1B  0800               	movf	0,w
  4819  0B1C  00A7               	movwf	??_displayDigit+7
  4820  0B1D  0A84               	incf	4,f
  4821  0B1E  0800               	movf	0,w
  4822  0B1F  00A8               	movwf	??_displayDigit+8
  4823  0B20  0827               	movf	??_displayDigit+7,w
  4824  0B21  0084               	movwf	4
  4825  0B22  1783               	bsf	3,7
  4826  0B23  1C28               	btfss	??_displayDigit+8,0
  4827  0B24  1383               	bcf	3,7
  4828  0B25  0823               	movf	??_displayDigit+3,w
  4829  0B26  0480               	iorwf	0,f
  4830  0B27  0A84               	incf	4,f
  4831  0B28  0824               	movf	??_displayDigit+4,w
  4832  0B29  0480               	iorwf	0,f
  4833                           
  4834                           ;lcd.c: 92: ((*D1->sg) &= ~((1UL) << (D1->bits[6])));
  4835  0B2A  301A               	movlw	26
  4836  0B2B  077B               	addwf	displayDigit@D1,w
  4837  0B2C  00A0               	movwf	??_displayDigit
  4838  0B2D  087C               	movf	displayDigit@D1+1,w
  4839  0B2E  1803               	skipnc
  4840  0B2F  3E01               	addlw	1
  4841  0B30  00A1               	movwf	??_displayDigit+1
  4842  0B31  0820               	movf	??_displayDigit,w
  4843  0B32  0084               	movwf	4
  4844  0B33  1783               	bsf	3,7
  4845  0B34  1C21               	btfss	??_displayDigit+1,0
  4846  0B35  1383               	bcf	3,7
  4847  0B36  0A00               	incf	0,w
  4848  0B37  00A2               	movwf	??_displayDigit+2
  4849  0B38  3001               	movlw	1
  4850  0B39  00A3               	movwf	??_displayDigit+3
  4851  0B3A  3000               	movlw	0
  4852  0B3B  00A4               	movwf	??_displayDigit+4
  4853  0B3C  2B40               	goto	u2054
  4854  0B3D                     u2055:	
  4855  0B3D  1003               	clrc
  4856  0B3E  0DA3               	rlf	??_displayDigit+3,f
  4857  0B3F  0DA4               	rlf	??_displayDigit+4,f
  4858  0B40                     u2054:	
  4859  0B40  0BA2               	decfsz	??_displayDigit+2,f
  4860  0B41  2B3D               	goto	u2055
  4861  0B42  09A3               	comf	??_displayDigit+3,f
  4862  0B43  09A4               	comf	??_displayDigit+4,f
  4863  0B44  300C               	movlw	12
  4864  0B45  077B               	addwf	displayDigit@D1,w
  4865  0B46  00A5               	movwf	??_displayDigit+5
  4866  0B47  087C               	movf	displayDigit@D1+1,w
  4867  0B48  1803               	skipnc
  4868  0B49  3E01               	addlw	1
  4869  0B4A  00A6               	movwf	??_displayDigit+6
  4870  0B4B  0825               	movf	??_displayDigit+5,w
  4871  0B4C  0084               	movwf	4
  4872  0B4D  1783               	bsf	3,7
  4873  0B4E  1C26               	btfss	??_displayDigit+6,0
  4874  0B4F  1383               	bcf	3,7
  4875  0B50  0800               	movf	0,w
  4876  0B51  00A7               	movwf	??_displayDigit+7
  4877  0B52  0A84               	incf	4,f
  4878  0B53  0800               	movf	0,w
  4879  0B54  00A8               	movwf	??_displayDigit+8
  4880  0B55  0827               	movf	??_displayDigit+7,w
  4881  0B56  0084               	movwf	4
  4882  0B57  1783               	bsf	3,7
  4883  0B58  1C28               	btfss	??_displayDigit+8,0
  4884  0B59  1383               	bcf	3,7
  4885  0B5A  0823               	movf	??_displayDigit+3,w
  4886  0B5B  0580               	andwf	0,f
  4887  0B5C  0A84               	incf	4,f
  4888  0B5D  0824               	movf	??_displayDigit+4,w
  4889  0B5E  0580               	andwf	0,f
  4890                           
  4891                           ;lcd.c: 93: break;
  4892  0B5F  0008               	return
  4893  0B60                     l1333:	
  4894                           ;lcd.c: 94: case 1:
  4895                           
  4896                           
  4897                           ;lcd.c: 95: ((*D1->sa) &= ~((1UL) << (D1->bits[0])));
  4898  0B60  300E               	movlw	14
  4899  0B61  077B               	addwf	displayDigit@D1,w
  4900  0B62  1283               	bcf	3,5	;RP0=0, select bank0
  4901  0B63  1303               	bcf	3,6	;RP1=0, select bank0
  4902  0B64  00A0               	movwf	??_displayDigit
  4903  0B65  087C               	movf	displayDigit@D1+1,w
  4904  0B66  1803               	skipnc
  4905  0B67  3E01               	addlw	1
  4906  0B68  00A1               	movwf	??_displayDigit+1
  4907  0B69  0820               	movf	??_displayDigit,w
  4908  0B6A  0084               	movwf	4
  4909  0B6B  1783               	bsf	3,7
  4910  0B6C  1C21               	btfss	??_displayDigit+1,0
  4911  0B6D  1383               	bcf	3,7
  4912  0B6E  0A00               	incf	0,w
  4913  0B6F  00A2               	movwf	??_displayDigit+2
  4914  0B70  3001               	movlw	1
  4915  0B71  00A3               	movwf	??_displayDigit+3
  4916  0B72  3000               	movlw	0
  4917  0B73  00A4               	movwf	??_displayDigit+4
  4918  0B74  2B78               	goto	u2064
  4919  0B75                     u2065:	
  4920  0B75  1003               	clrc
  4921  0B76  0DA3               	rlf	??_displayDigit+3,f
  4922  0B77  0DA4               	rlf	??_displayDigit+4,f
  4923  0B78                     u2064:	
  4924  0B78  0BA2               	decfsz	??_displayDigit+2,f
  4925  0B79  2B75               	goto	u2065
  4926  0B7A  09A3               	comf	??_displayDigit+3,f
  4927  0B7B  09A4               	comf	??_displayDigit+4,f
  4928  0B7C  087B               	movf	displayDigit@D1,w
  4929  0B7D  0084               	movwf	4
  4930  0B7E  1783               	bsf	3,7
  4931  0B7F  1C7C               	btfss	displayDigit@D1+1,0
  4932  0B80  1383               	bcf	3,7
  4933  0B81  0800               	movf	0,w
  4934  0B82  00A5               	movwf	??_displayDigit+5
  4935  0B83  0A84               	incf	4,f
  4936  0B84  0800               	movf	0,w
  4937  0B85  00A6               	movwf	??_displayDigit+6
  4938  0B86  0825               	movf	??_displayDigit+5,w
  4939  0B87  0084               	movwf	4
  4940  0B88  1783               	bsf	3,7
  4941  0B89  1C26               	btfss	??_displayDigit+6,0
  4942  0B8A  1383               	bcf	3,7
  4943  0B8B  0823               	movf	??_displayDigit+3,w
  4944  0B8C  0580               	andwf	0,f
  4945  0B8D  0A84               	incf	4,f
  4946  0B8E  0824               	movf	??_displayDigit+4,w
  4947  0B8F  0580               	andwf	0,f
  4948                           
  4949                           ;lcd.c: 96: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  4950  0B90  3010               	movlw	16
  4951  0B91  077B               	addwf	displayDigit@D1,w
  4952  0B92  00A0               	movwf	??_displayDigit
  4953  0B93  087C               	movf	displayDigit@D1+1,w
  4954  0B94  1803               	skipnc
  4955  0B95  3E01               	addlw	1
  4956  0B96  00A1               	movwf	??_displayDigit+1
  4957  0B97  0820               	movf	??_displayDigit,w
  4958  0B98  0084               	movwf	4
  4959  0B99  1783               	bsf	3,7
  4960  0B9A  1C21               	btfss	??_displayDigit+1,0
  4961  0B9B  1383               	bcf	3,7
  4962  0B9C  0A00               	incf	0,w
  4963  0B9D  00A2               	movwf	??_displayDigit+2
  4964  0B9E  3001               	movlw	1
  4965  0B9F  00A3               	movwf	??_displayDigit+3
  4966  0BA0  3000               	movlw	0
  4967  0BA1  00A4               	movwf	??_displayDigit+4
  4968  0BA2  2BA6               	goto	u2074
  4969  0BA3                     u2075:	
  4970  0BA3  1003               	clrc
  4971  0BA4  0DA3               	rlf	??_displayDigit+3,f
  4972  0BA5  0DA4               	rlf	??_displayDigit+4,f
  4973  0BA6                     u2074:	
  4974  0BA6  0BA2               	decfsz	??_displayDigit+2,f
  4975  0BA7  2BA3               	goto	u2075
  4976  0BA8  3002               	movlw	2
  4977  0BA9  077B               	addwf	displayDigit@D1,w
  4978  0BAA  00A5               	movwf	??_displayDigit+5
  4979  0BAB  087C               	movf	displayDigit@D1+1,w
  4980  0BAC  1803               	skipnc
  4981  0BAD  3E01               	addlw	1
  4982  0BAE  00A6               	movwf	??_displayDigit+6
  4983  0BAF  0825               	movf	??_displayDigit+5,w
  4984  0BB0  0084               	movwf	4
  4985  0BB1  1783               	bsf	3,7
  4986  0BB2  1C26               	btfss	??_displayDigit+6,0
  4987  0BB3  1383               	bcf	3,7
  4988  0BB4  0800               	movf	0,w
  4989  0BB5  00A7               	movwf	??_displayDigit+7
  4990  0BB6  0A84               	incf	4,f
  4991  0BB7  0800               	movf	0,w
  4992  0BB8  00A8               	movwf	??_displayDigit+8
  4993  0BB9  0827               	movf	??_displayDigit+7,w
  4994  0BBA  0084               	movwf	4
  4995  0BBB  1783               	bsf	3,7
  4996  0BBC  1C28               	btfss	??_displayDigit+8,0
  4997  0BBD  1383               	bcf	3,7
  4998  0BBE  0823               	movf	??_displayDigit+3,w
  4999  0BBF  0480               	iorwf	0,f
  5000  0BC0  0A84               	incf	4,f
  5001  0BC1  0824               	movf	??_displayDigit+4,w
  5002  0BC2  0480               	iorwf	0,f
  5003                           
  5004                           ;lcd.c: 97: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  5005  0BC3  3012               	movlw	18
  5006  0BC4  077B               	addwf	displayDigit@D1,w
  5007  0BC5  00A0               	movwf	??_displayDigit
  5008  0BC6  087C               	movf	displayDigit@D1+1,w
  5009  0BC7  1803               	skipnc
  5010  0BC8  3E01               	addlw	1
  5011  0BC9  00A1               	movwf	??_displayDigit+1
  5012  0BCA  0820               	movf	??_displayDigit,w
  5013  0BCB  0084               	movwf	4
  5014  0BCC  1783               	bsf	3,7
  5015  0BCD  1C21               	btfss	??_displayDigit+1,0
  5016  0BCE  1383               	bcf	3,7
  5017  0BCF  0A00               	incf	0,w
  5018  0BD0  00A2               	movwf	??_displayDigit+2
  5019  0BD1  3001               	movlw	1
  5020  0BD2  00A3               	movwf	??_displayDigit+3
  5021  0BD3  3000               	movlw	0
  5022  0BD4  00A4               	movwf	??_displayDigit+4
  5023  0BD5  2BD9               	goto	u2084
  5024  0BD6                     u2085:	
  5025  0BD6  1003               	clrc
  5026  0BD7  0DA3               	rlf	??_displayDigit+3,f
  5027  0BD8  0DA4               	rlf	??_displayDigit+4,f
  5028  0BD9                     u2084:	
  5029  0BD9  0BA2               	decfsz	??_displayDigit+2,f
  5030  0BDA  2BD6               	goto	u2085
  5031  0BDB  3004               	movlw	4
  5032  0BDC  077B               	addwf	displayDigit@D1,w
  5033  0BDD  00A5               	movwf	??_displayDigit+5
  5034  0BDE  087C               	movf	displayDigit@D1+1,w
  5035  0BDF  1803               	skipnc
  5036  0BE0  3E01               	addlw	1
  5037  0BE1  00A6               	movwf	??_displayDigit+6
  5038  0BE2  0825               	movf	??_displayDigit+5,w
  5039  0BE3  0084               	movwf	4
  5040  0BE4  1783               	bsf	3,7
  5041  0BE5  1C26               	btfss	??_displayDigit+6,0
  5042  0BE6  1383               	bcf	3,7
  5043  0BE7  0800               	movf	0,w
  5044  0BE8  00A7               	movwf	??_displayDigit+7
  5045  0BE9  0A84               	incf	4,f
  5046  0BEA  0800               	movf	0,w
  5047  0BEB  00A8               	movwf	??_displayDigit+8
  5048  0BEC  0827               	movf	??_displayDigit+7,w
  5049  0BED  0084               	movwf	4
  5050  0BEE  1783               	bsf	3,7
  5051  0BEF  1C28               	btfss	??_displayDigit+8,0
  5052  0BF0  1383               	bcf	3,7
  5053  0BF1  0823               	movf	??_displayDigit+3,w
  5054  0BF2  0480               	iorwf	0,f
  5055  0BF3  0A84               	incf	4,f
  5056  0BF4  0824               	movf	??_displayDigit+4,w
  5057  0BF5  0480               	iorwf	0,f
  5058                           
  5059                           ;lcd.c: 98: ((*D1->sd) &= ~((1UL) << (D1->bits[3])));
  5060  0BF6  3014               	movlw	20
  5061  0BF7  077B               	addwf	displayDigit@D1,w
  5062  0BF8  00A0               	movwf	??_displayDigit
  5063  0BF9  087C               	movf	displayDigit@D1+1,w
  5064  0BFA  1803               	skipnc
  5065  0BFB  3E01               	addlw	1
  5066  0BFC  00A1               	movwf	??_displayDigit+1
  5067  0BFD  0820               	movf	??_displayDigit,w
  5068  0BFE  0084               	movwf	4
  5069  0BFF  1783               	bsf	3,7
  5070  0C00  1C21               	btfss	??_displayDigit+1,0
  5071  0C01  1383               	bcf	3,7
  5072  0C02  0A00               	incf	0,w
  5073  0C03  00A2               	movwf	??_displayDigit+2
  5074  0C04  3001               	movlw	1
  5075  0C05  00A3               	movwf	??_displayDigit+3
  5076  0C06  3000               	movlw	0
  5077  0C07  00A4               	movwf	??_displayDigit+4
  5078  0C08  2C0C               	goto	u2094
  5079  0C09                     u2095:	
  5080  0C09  1003               	clrc
  5081  0C0A  0DA3               	rlf	??_displayDigit+3,f
  5082  0C0B  0DA4               	rlf	??_displayDigit+4,f
  5083  0C0C                     u2094:	
  5084  0C0C  0BA2               	decfsz	??_displayDigit+2,f
  5085  0C0D  2C09               	goto	u2095
  5086  0C0E  09A3               	comf	??_displayDigit+3,f
  5087  0C0F  09A4               	comf	??_displayDigit+4,f
  5088  0C10  3006               	movlw	6
  5089  0C11  077B               	addwf	displayDigit@D1,w
  5090  0C12  00A5               	movwf	??_displayDigit+5
  5091  0C13  087C               	movf	displayDigit@D1+1,w
  5092  0C14  1803               	skipnc
  5093  0C15  3E01               	addlw	1
  5094  0C16  00A6               	movwf	??_displayDigit+6
  5095  0C17  0825               	movf	??_displayDigit+5,w
  5096  0C18  0084               	movwf	4
  5097  0C19  1783               	bsf	3,7
  5098  0C1A  1C26               	btfss	??_displayDigit+6,0
  5099  0C1B  1383               	bcf	3,7
  5100  0C1C  0800               	movf	0,w
  5101  0C1D  00A7               	movwf	??_displayDigit+7
  5102  0C1E  0A84               	incf	4,f
  5103  0C1F  0800               	movf	0,w
  5104  0C20  00A8               	movwf	??_displayDigit+8
  5105  0C21  0827               	movf	??_displayDigit+7,w
  5106  0C22  0084               	movwf	4
  5107  0C23  1783               	bsf	3,7
  5108  0C24  1C28               	btfss	??_displayDigit+8,0
  5109  0C25  1383               	bcf	3,7
  5110  0C26  0823               	movf	??_displayDigit+3,w
  5111  0C27  0580               	andwf	0,f
  5112  0C28  0A84               	incf	4,f
  5113  0C29  0824               	movf	??_displayDigit+4,w
  5114  0C2A  0580               	andwf	0,f
  5115                           
  5116                           ;lcd.c: 99: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  5117  0C2B  3016               	movlw	22
  5118  0C2C  077B               	addwf	displayDigit@D1,w
  5119  0C2D  00A0               	movwf	??_displayDigit
  5120  0C2E  087C               	movf	displayDigit@D1+1,w
  5121  0C2F  1803               	skipnc
  5122  0C30  3E01               	addlw	1
  5123  0C31  00A1               	movwf	??_displayDigit+1
  5124  0C32  0820               	movf	??_displayDigit,w
  5125  0C33  0084               	movwf	4
  5126  0C34  1783               	bsf	3,7
  5127  0C35  1C21               	btfss	??_displayDigit+1,0
  5128  0C36  1383               	bcf	3,7
  5129  0C37  0A00               	incf	0,w
  5130  0C38  00A2               	movwf	??_displayDigit+2
  5131  0C39  3001               	movlw	1
  5132  0C3A  00A3               	movwf	??_displayDigit+3
  5133  0C3B  3000               	movlw	0
  5134  0C3C  00A4               	movwf	??_displayDigit+4
  5135  0C3D  160A  118A  29D4   	goto	u2104
  5136                           
  5137                           	psect	text5_split_2
  5138  11D1                     u2105:	
  5139  11D1  1003               	clrc
  5140  11D2  0DA3               	rlf	??_displayDigit+3,f
  5141  11D3  0DA4               	rlf	??_displayDigit+4,f
  5142  11D4                     u2104:	
  5143  11D4  0BA2               	decfsz	??_displayDigit+2,f
  5144  11D5  29D1               	goto	u2105
  5145  11D6  09A3               	comf	??_displayDigit+3,f
  5146  11D7  09A4               	comf	??_displayDigit+4,f
  5147  11D8  3008               	movlw	8
  5148  11D9  077B               	addwf	displayDigit@D1,w
  5149  11DA  00A5               	movwf	??_displayDigit+5
  5150  11DB  087C               	movf	displayDigit@D1+1,w
  5151  11DC  1803               	skipnc
  5152  11DD  3E01               	addlw	1
  5153  11DE  00A6               	movwf	??_displayDigit+6
  5154  11DF  0825               	movf	??_displayDigit+5,w
  5155  11E0  0084               	movwf	4
  5156  11E1  1783               	bsf	3,7
  5157  11E2  1C26               	btfss	??_displayDigit+6,0
  5158  11E3  1383               	bcf	3,7
  5159  11E4  0800               	movf	0,w
  5160  11E5  00A7               	movwf	??_displayDigit+7
  5161  11E6  0A84               	incf	4,f
  5162  11E7  0800               	movf	0,w
  5163  11E8  00A8               	movwf	??_displayDigit+8
  5164  11E9  0827               	movf	??_displayDigit+7,w
  5165  11EA  0084               	movwf	4
  5166  11EB  1783               	bsf	3,7
  5167  11EC  1C28               	btfss	??_displayDigit+8,0
  5168  11ED  1383               	bcf	3,7
  5169  11EE  0823               	movf	??_displayDigit+3,w
  5170  11EF  0580               	andwf	0,f
  5171  11F0  0A84               	incf	4,f
  5172  11F1  0824               	movf	??_displayDigit+4,w
  5173  11F2  0580               	andwf	0,f
  5174                           
  5175                           ;lcd.c: 100: ((*D1->sf) &= ~((1UL) << (D1->bits[5])));
  5176  11F3  3018               	movlw	24
  5177  11F4  077B               	addwf	displayDigit@D1,w
  5178  11F5  00A0               	movwf	??_displayDigit
  5179  11F6  087C               	movf	displayDigit@D1+1,w
  5180  11F7  1803               	skipnc
  5181  11F8  3E01               	addlw	1
  5182  11F9  00A1               	movwf	??_displayDigit+1
  5183  11FA  0820               	movf	??_displayDigit,w
  5184  11FB  0084               	movwf	4
  5185  11FC  1783               	bsf	3,7
  5186  11FD  1C21               	btfss	??_displayDigit+1,0
  5187  11FE  1383               	bcf	3,7
  5188  11FF  0A00               	incf	0,w
  5189  1200  00A2               	movwf	??_displayDigit+2
  5190  1201  3001               	movlw	1
  5191  1202  00A3               	movwf	??_displayDigit+3
  5192  1203  3000               	movlw	0
  5193  1204  00A4               	movwf	??_displayDigit+4
  5194  1205  2A09               	goto	u2114
  5195  1206                     u2115:	
  5196  1206  1003               	clrc
  5197  1207  0DA3               	rlf	??_displayDigit+3,f
  5198  1208  0DA4               	rlf	??_displayDigit+4,f
  5199  1209                     u2114:	
  5200  1209  0BA2               	decfsz	??_displayDigit+2,f
  5201  120A  2A06               	goto	u2115
  5202  120B  09A3               	comf	??_displayDigit+3,f
  5203  120C  09A4               	comf	??_displayDigit+4,f
  5204  120D  300A               	movlw	10
  5205  120E  077B               	addwf	displayDigit@D1,w
  5206  120F  00A5               	movwf	??_displayDigit+5
  5207  1210  087C               	movf	displayDigit@D1+1,w
  5208  1211  1803               	skipnc
  5209  1212  3E01               	addlw	1
  5210  1213  00A6               	movwf	??_displayDigit+6
  5211  1214  0825               	movf	??_displayDigit+5,w
  5212  1215  0084               	movwf	4
  5213  1216  1783               	bsf	3,7
  5214  1217  1C26               	btfss	??_displayDigit+6,0
  5215  1218  1383               	bcf	3,7
  5216  1219  0800               	movf	0,w
  5217  121A  00A7               	movwf	??_displayDigit+7
  5218  121B  0A84               	incf	4,f
  5219  121C  0800               	movf	0,w
  5220  121D  00A8               	movwf	??_displayDigit+8
  5221  121E  0827               	movf	??_displayDigit+7,w
  5222  121F  0084               	movwf	4
  5223  1220  1783               	bsf	3,7
  5224  1221  1C28               	btfss	??_displayDigit+8,0
  5225  1222  1383               	bcf	3,7
  5226  1223  0823               	movf	??_displayDigit+3,w
  5227  1224  0580               	andwf	0,f
  5228  1225  0A84               	incf	4,f
  5229  1226  0824               	movf	??_displayDigit+4,w
  5230  1227  0580               	andwf	0,f
  5231                           
  5232                           ;lcd.c: 101: ((*D1->sg) &= ~((1UL) << (D1->bits[6])));
  5233  1228  301A               	movlw	26
  5234  1229  077B               	addwf	displayDigit@D1,w
  5235  122A  00A0               	movwf	??_displayDigit
  5236  122B  087C               	movf	displayDigit@D1+1,w
  5237  122C  1803               	skipnc
  5238  122D  3E01               	addlw	1
  5239  122E  00A1               	movwf	??_displayDigit+1
  5240  122F  0820               	movf	??_displayDigit,w
  5241  1230  0084               	movwf	4
  5242  1231  1783               	bsf	3,7
  5243  1232  1C21               	btfss	??_displayDigit+1,0
  5244  1233  1383               	bcf	3,7
  5245  1234  0A00               	incf	0,w
  5246  1235  00A2               	movwf	??_displayDigit+2
  5247  1236  3001               	movlw	1
  5248  1237  00A3               	movwf	??_displayDigit+3
  5249  1238  3000               	movlw	0
  5250  1239  00A4               	movwf	??_displayDigit+4
  5251  123A  2A3E               	goto	u2124
  5252  123B                     u2125:	
  5253  123B  1003               	clrc
  5254  123C  0DA3               	rlf	??_displayDigit+3,f
  5255  123D  0DA4               	rlf	??_displayDigit+4,f
  5256  123E                     u2124:	
  5257  123E  0BA2               	decfsz	??_displayDigit+2,f
  5258  123F  2A3B               	goto	u2125
  5259  1240  09A3               	comf	??_displayDigit+3,f
  5260  1241  09A4               	comf	??_displayDigit+4,f
  5261  1242  300C               	movlw	12
  5262  1243  077B               	addwf	displayDigit@D1,w
  5263  1244  00A5               	movwf	??_displayDigit+5
  5264  1245  087C               	movf	displayDigit@D1+1,w
  5265  1246  1803               	skipnc
  5266  1247  3E01               	addlw	1
  5267  1248  00A6               	movwf	??_displayDigit+6
  5268  1249  0825               	movf	??_displayDigit+5,w
  5269  124A  0084               	movwf	4
  5270  124B  1783               	bsf	3,7
  5271  124C  1C26               	btfss	??_displayDigit+6,0
  5272  124D  1383               	bcf	3,7
  5273  124E  0800               	movf	0,w
  5274  124F  00A7               	movwf	??_displayDigit+7
  5275  1250  0A84               	incf	4,f
  5276  1251  0800               	movf	0,w
  5277  1252  00A8               	movwf	??_displayDigit+8
  5278  1253  0827               	movf	??_displayDigit+7,w
  5279  1254  0084               	movwf	4
  5280  1255  1783               	bsf	3,7
  5281  1256  1C28               	btfss	??_displayDigit+8,0
  5282  1257  1383               	bcf	3,7
  5283  1258  0823               	movf	??_displayDigit+3,w
  5284  1259  0580               	andwf	0,f
  5285  125A  0A84               	incf	4,f
  5286  125B  0824               	movf	??_displayDigit+4,w
  5287  125C  0580               	andwf	0,f
  5288                           
  5289                           ;lcd.c: 102: break;
  5290  125D  0008               	return
  5291                           
  5292                           	psect	text5_split_3
  5293  14C8                     l1335:	
  5294                           ;lcd.c: 103: case 2:
  5295                           
  5296                           
  5297                           ;lcd.c: 104: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  5298  14C8  300E               	movlw	14
  5299  14C9  077B               	addwf	displayDigit@D1,w
  5300  14CA  1283               	bcf	3,5	;RP0=0, select bank0
  5301  14CB  1303               	bcf	3,6	;RP1=0, select bank0
  5302  14CC  00A0               	movwf	??_displayDigit
  5303  14CD  087C               	movf	displayDigit@D1+1,w
  5304  14CE  1803               	skipnc
  5305  14CF  3E01               	addlw	1
  5306  14D0  00A1               	movwf	??_displayDigit+1
  5307  14D1  0820               	movf	??_displayDigit,w
  5308  14D2  0084               	movwf	4
  5309  14D3  1783               	bsf	3,7
  5310  14D4  1C21               	btfss	??_displayDigit+1,0
  5311  14D5  1383               	bcf	3,7
  5312  14D6  0A00               	incf	0,w
  5313  14D7  00A2               	movwf	??_displayDigit+2
  5314  14D8  3001               	movlw	1
  5315  14D9  00A3               	movwf	??_displayDigit+3
  5316  14DA  3000               	movlw	0
  5317  14DB  00A4               	movwf	??_displayDigit+4
  5318  14DC  2CE0               	goto	u2134
  5319  14DD                     u2135:	
  5320  14DD  1003               	clrc
  5321  14DE  0DA3               	rlf	??_displayDigit+3,f
  5322  14DF  0DA4               	rlf	??_displayDigit+4,f
  5323  14E0                     u2134:	
  5324  14E0  0BA2               	decfsz	??_displayDigit+2,f
  5325  14E1  2CDD               	goto	u2135
  5326  14E2  087B               	movf	displayDigit@D1,w
  5327  14E3  0084               	movwf	4
  5328  14E4  1783               	bsf	3,7
  5329  14E5  1C7C               	btfss	displayDigit@D1+1,0
  5330  14E6  1383               	bcf	3,7
  5331  14E7  0800               	movf	0,w
  5332  14E8  00A5               	movwf	??_displayDigit+5
  5333  14E9  0A84               	incf	4,f
  5334  14EA  0800               	movf	0,w
  5335  14EB  00A6               	movwf	??_displayDigit+6
  5336  14EC  0825               	movf	??_displayDigit+5,w
  5337  14ED  0084               	movwf	4
  5338  14EE  1783               	bsf	3,7
  5339  14EF  1C26               	btfss	??_displayDigit+6,0
  5340  14F0  1383               	bcf	3,7
  5341  14F1  0823               	movf	??_displayDigit+3,w
  5342  14F2  0480               	iorwf	0,f
  5343  14F3  0A84               	incf	4,f
  5344  14F4  0824               	movf	??_displayDigit+4,w
  5345  14F5  0480               	iorwf	0,f
  5346                           
  5347                           ;lcd.c: 105: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  5348  14F6  3010               	movlw	16
  5349  14F7  077B               	addwf	displayDigit@D1,w
  5350  14F8  00A0               	movwf	??_displayDigit
  5351  14F9  087C               	movf	displayDigit@D1+1,w
  5352  14FA  1803               	skipnc
  5353  14FB  3E01               	addlw	1
  5354  14FC  00A1               	movwf	??_displayDigit+1
  5355  14FD  0820               	movf	??_displayDigit,w
  5356  14FE  0084               	movwf	4
  5357  14FF  1783               	bsf	3,7
  5358  1500  1C21               	btfss	??_displayDigit+1,0
  5359  1501  1383               	bcf	3,7
  5360  1502  0A00               	incf	0,w
  5361  1503  00A2               	movwf	??_displayDigit+2
  5362  1504  3001               	movlw	1
  5363  1505  00A3               	movwf	??_displayDigit+3
  5364  1506  3000               	movlw	0
  5365  1507  00A4               	movwf	??_displayDigit+4
  5366  1508  2D0C               	goto	u2144
  5367  1509                     u2145:	
  5368  1509  1003               	clrc
  5369  150A  0DA3               	rlf	??_displayDigit+3,f
  5370  150B  0DA4               	rlf	??_displayDigit+4,f
  5371  150C                     u2144:	
  5372  150C  0BA2               	decfsz	??_displayDigit+2,f
  5373  150D  2D09               	goto	u2145
  5374  150E  3002               	movlw	2
  5375  150F  077B               	addwf	displayDigit@D1,w
  5376  1510  00A5               	movwf	??_displayDigit+5
  5377  1511  087C               	movf	displayDigit@D1+1,w
  5378  1512  1803               	skipnc
  5379  1513  3E01               	addlw	1
  5380  1514  00A6               	movwf	??_displayDigit+6
  5381  1515  0825               	movf	??_displayDigit+5,w
  5382  1516  0084               	movwf	4
  5383  1517  1783               	bsf	3,7
  5384  1518  1C26               	btfss	??_displayDigit+6,0
  5385  1519  1383               	bcf	3,7
  5386  151A  0800               	movf	0,w
  5387  151B  00A7               	movwf	??_displayDigit+7
  5388  151C  0A84               	incf	4,f
  5389  151D  0800               	movf	0,w
  5390  151E  00A8               	movwf	??_displayDigit+8
  5391  151F  0827               	movf	??_displayDigit+7,w
  5392  1520  0084               	movwf	4
  5393  1521  1783               	bsf	3,7
  5394  1522  1C28               	btfss	??_displayDigit+8,0
  5395  1523  1383               	bcf	3,7
  5396  1524  0823               	movf	??_displayDigit+3,w
  5397  1525  0480               	iorwf	0,f
  5398  1526  0A84               	incf	4,f
  5399  1527  0824               	movf	??_displayDigit+4,w
  5400  1528  0480               	iorwf	0,f
  5401                           
  5402                           ;lcd.c: 106: ((*D1->sc) &= ~((1UL) << (D1->bits[2])));
  5403  1529  3012               	movlw	18
  5404  152A  077B               	addwf	displayDigit@D1,w
  5405  152B  00A0               	movwf	??_displayDigit
  5406  152C  087C               	movf	displayDigit@D1+1,w
  5407  152D  1803               	skipnc
  5408  152E  3E01               	addlw	1
  5409  152F  00A1               	movwf	??_displayDigit+1
  5410  1530  0820               	movf	??_displayDigit,w
  5411  1531  0084               	movwf	4
  5412  1532  1783               	bsf	3,7
  5413  1533  1C21               	btfss	??_displayDigit+1,0
  5414  1534  1383               	bcf	3,7
  5415  1535  0A00               	incf	0,w
  5416  1536  00A2               	movwf	??_displayDigit+2
  5417  1537  3001               	movlw	1
  5418  1538  00A3               	movwf	??_displayDigit+3
  5419  1539  3000               	movlw	0
  5420  153A  00A4               	movwf	??_displayDigit+4
  5421  153B  2D3F               	goto	u2154
  5422  153C                     u2155:	
  5423  153C  1003               	clrc
  5424  153D  0DA3               	rlf	??_displayDigit+3,f
  5425  153E  0DA4               	rlf	??_displayDigit+4,f
  5426  153F                     u2154:	
  5427  153F  0BA2               	decfsz	??_displayDigit+2,f
  5428  1540  2D3C               	goto	u2155
  5429  1541  09A3               	comf	??_displayDigit+3,f
  5430  1542  09A4               	comf	??_displayDigit+4,f
  5431  1543  3004               	movlw	4
  5432  1544  077B               	addwf	displayDigit@D1,w
  5433  1545  00A5               	movwf	??_displayDigit+5
  5434  1546  087C               	movf	displayDigit@D1+1,w
  5435  1547  1803               	skipnc
  5436  1548  3E01               	addlw	1
  5437  1549  00A6               	movwf	??_displayDigit+6
  5438  154A  0825               	movf	??_displayDigit+5,w
  5439  154B  0084               	movwf	4
  5440  154C  1783               	bsf	3,7
  5441  154D  1C26               	btfss	??_displayDigit+6,0
  5442  154E  1383               	bcf	3,7
  5443  154F  0800               	movf	0,w
  5444  1550  00A7               	movwf	??_displayDigit+7
  5445  1551  0A84               	incf	4,f
  5446  1552  0800               	movf	0,w
  5447  1553  00A8               	movwf	??_displayDigit+8
  5448  1554  0827               	movf	??_displayDigit+7,w
  5449  1555  0084               	movwf	4
  5450  1556  1783               	bsf	3,7
  5451  1557  1C28               	btfss	??_displayDigit+8,0
  5452  1558  1383               	bcf	3,7
  5453  1559  0823               	movf	??_displayDigit+3,w
  5454  155A  0580               	andwf	0,f
  5455  155B  0A84               	incf	4,f
  5456  155C  0824               	movf	??_displayDigit+4,w
  5457  155D  0580               	andwf	0,f
  5458                           
  5459                           ;lcd.c: 107: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  5460  155E  3014               	movlw	20
  5461  155F  077B               	addwf	displayDigit@D1,w
  5462  1560  00A0               	movwf	??_displayDigit
  5463  1561  087C               	movf	displayDigit@D1+1,w
  5464  1562  1803               	skipnc
  5465  1563  3E01               	addlw	1
  5466  1564  00A1               	movwf	??_displayDigit+1
  5467  1565  0820               	movf	??_displayDigit,w
  5468  1566  0084               	movwf	4
  5469  1567  1783               	bsf	3,7
  5470  1568  1C21               	btfss	??_displayDigit+1,0
  5471  1569  1383               	bcf	3,7
  5472  156A  0A00               	incf	0,w
  5473  156B  00A2               	movwf	??_displayDigit+2
  5474  156C  3001               	movlw	1
  5475  156D  00A3               	movwf	??_displayDigit+3
  5476  156E  3000               	movlw	0
  5477  156F  00A4               	movwf	??_displayDigit+4
  5478  1570  2D74               	goto	u2164
  5479  1571                     u2165:	
  5480  1571  1003               	clrc
  5481  1572  0DA3               	rlf	??_displayDigit+3,f
  5482  1573  0DA4               	rlf	??_displayDigit+4,f
  5483  1574                     u2164:	
  5484  1574  0BA2               	decfsz	??_displayDigit+2,f
  5485  1575  2D71               	goto	u2165
  5486  1576  3006               	movlw	6
  5487  1577  077B               	addwf	displayDigit@D1,w
  5488  1578  00A5               	movwf	??_displayDigit+5
  5489  1579  087C               	movf	displayDigit@D1+1,w
  5490  157A  1803               	skipnc
  5491  157B  3E01               	addlw	1
  5492  157C  00A6               	movwf	??_displayDigit+6
  5493  157D  0825               	movf	??_displayDigit+5,w
  5494  157E  0084               	movwf	4
  5495  157F  1783               	bsf	3,7
  5496  1580  1C26               	btfss	??_displayDigit+6,0
  5497  1581  1383               	bcf	3,7
  5498  1582  0800               	movf	0,w
  5499  1583  00A7               	movwf	??_displayDigit+7
  5500  1584  0A84               	incf	4,f
  5501  1585  0800               	movf	0,w
  5502  1586  00A8               	movwf	??_displayDigit+8
  5503  1587  0827               	movf	??_displayDigit+7,w
  5504  1588  0084               	movwf	4
  5505  1589  1783               	bsf	3,7
  5506  158A  1C28               	btfss	??_displayDigit+8,0
  5507  158B  1383               	bcf	3,7
  5508  158C  0823               	movf	??_displayDigit+3,w
  5509  158D  0480               	iorwf	0,f
  5510  158E  0A84               	incf	4,f
  5511  158F  0824               	movf	??_displayDigit+4,w
  5512  1590  0480               	iorwf	0,f
  5513                           
  5514                           ;lcd.c: 108: ((*D1->se) |= (1UL) << (D1->bits[4]));
  5515  1591  3016               	movlw	22
  5516  1592  077B               	addwf	displayDigit@D1,w
  5517  1593  00A0               	movwf	??_displayDigit
  5518  1594  087C               	movf	displayDigit@D1+1,w
  5519  1595  1803               	skipnc
  5520  1596  3E01               	addlw	1
  5521  1597  00A1               	movwf	??_displayDigit+1
  5522  1598  0820               	movf	??_displayDigit,w
  5523  1599  0084               	movwf	4
  5524  159A  1783               	bsf	3,7
  5525  159B  1C21               	btfss	??_displayDigit+1,0
  5526  159C  1383               	bcf	3,7
  5527  159D  0A00               	incf	0,w
  5528  159E  00A2               	movwf	??_displayDigit+2
  5529  159F  3001               	movlw	1
  5530  15A0  00A3               	movwf	??_displayDigit+3
  5531  15A1  3000               	movlw	0
  5532  15A2  00A4               	movwf	??_displayDigit+4
  5533  15A3  2DA7               	goto	u2174
  5534  15A4                     u2175:	
  5535  15A4  1003               	clrc
  5536  15A5  0DA3               	rlf	??_displayDigit+3,f
  5537  15A6  0DA4               	rlf	??_displayDigit+4,f
  5538  15A7                     u2174:	
  5539  15A7  0BA2               	decfsz	??_displayDigit+2,f
  5540  15A8  2DA4               	goto	u2175
  5541  15A9  3008               	movlw	8
  5542  15AA  077B               	addwf	displayDigit@D1,w
  5543  15AB  00A5               	movwf	??_displayDigit+5
  5544  15AC  087C               	movf	displayDigit@D1+1,w
  5545  15AD  1803               	skipnc
  5546  15AE  3E01               	addlw	1
  5547  15AF  00A6               	movwf	??_displayDigit+6
  5548  15B0  0825               	movf	??_displayDigit+5,w
  5549  15B1  0084               	movwf	4
  5550  15B2  1783               	bsf	3,7
  5551  15B3  1C26               	btfss	??_displayDigit+6,0
  5552  15B4  1383               	bcf	3,7
  5553  15B5  0800               	movf	0,w
  5554  15B6  00A7               	movwf	??_displayDigit+7
  5555  15B7  0A84               	incf	4,f
  5556  15B8  0800               	movf	0,w
  5557  15B9  00A8               	movwf	??_displayDigit+8
  5558  15BA  0827               	movf	??_displayDigit+7,w
  5559  15BB  0084               	movwf	4
  5560  15BC  1783               	bsf	3,7
  5561  15BD  1C28               	btfss	??_displayDigit+8,0
  5562  15BE  1383               	bcf	3,7
  5563  15BF  0823               	movf	??_displayDigit+3,w
  5564  15C0  0480               	iorwf	0,f
  5565  15C1  0A84               	incf	4,f
  5566  15C2  0824               	movf	??_displayDigit+4,w
  5567  15C3  0480               	iorwf	0,f
  5568                           
  5569                           ;lcd.c: 109: ((*D1->sf) &= ~((1UL) << (D1->bits[5])));
  5570  15C4  3018               	movlw	24
  5571  15C5  077B               	addwf	displayDigit@D1,w
  5572  15C6  00A0               	movwf	??_displayDigit
  5573  15C7  087C               	movf	displayDigit@D1+1,w
  5574  15C8  1803               	skipnc
  5575  15C9  3E01               	addlw	1
  5576  15CA  00A1               	movwf	??_displayDigit+1
  5577  15CB  0820               	movf	??_displayDigit,w
  5578  15CC  0084               	movwf	4
  5579  15CD  1783               	bsf	3,7
  5580  15CE  1C21               	btfss	??_displayDigit+1,0
  5581  15CF  1383               	bcf	3,7
  5582  15D0  0A00               	incf	0,w
  5583  15D1  00A2               	movwf	??_displayDigit+2
  5584  15D2  3001               	movlw	1
  5585  15D3  00A3               	movwf	??_displayDigit+3
  5586  15D4  3000               	movlw	0
  5587  15D5  00A4               	movwf	??_displayDigit+4
  5588  15D6  120A  158A  29DB   	goto	u2184
  5589                           
  5590                           	psect	text5_split_4
  5591  09D8                     u2185:	
  5592  09D8  1003               	clrc
  5593  09D9  0DA3               	rlf	??_displayDigit+3,f
  5594  09DA  0DA4               	rlf	??_displayDigit+4,f
  5595  09DB                     u2184:	
  5596  09DB  0BA2               	decfsz	??_displayDigit+2,f
  5597  09DC  29D8               	goto	u2185
  5598  09DD  09A3               	comf	??_displayDigit+3,f
  5599  09DE  09A4               	comf	??_displayDigit+4,f
  5600  09DF  300A               	movlw	10
  5601  09E0  077B               	addwf	displayDigit@D1,w
  5602  09E1  00A5               	movwf	??_displayDigit+5
  5603  09E2  087C               	movf	displayDigit@D1+1,w
  5604  09E3  1803               	skipnc
  5605  09E4  3E01               	addlw	1
  5606  09E5  00A6               	movwf	??_displayDigit+6
  5607  09E6  0825               	movf	??_displayDigit+5,w
  5608  09E7  0084               	movwf	4
  5609  09E8  1783               	bsf	3,7
  5610  09E9  1C26               	btfss	??_displayDigit+6,0
  5611  09EA  1383               	bcf	3,7
  5612  09EB  0800               	movf	0,w
  5613  09EC  00A7               	movwf	??_displayDigit+7
  5614  09ED  0A84               	incf	4,f
  5615  09EE  0800               	movf	0,w
  5616  09EF  00A8               	movwf	??_displayDigit+8
  5617  09F0  0827               	movf	??_displayDigit+7,w
  5618  09F1  0084               	movwf	4
  5619  09F2  1783               	bsf	3,7
  5620  09F3  1C28               	btfss	??_displayDigit+8,0
  5621  09F4  1383               	bcf	3,7
  5622  09F5  0823               	movf	??_displayDigit+3,w
  5623  09F6  0580               	andwf	0,f
  5624  09F7  0A84               	incf	4,f
  5625  09F8  0824               	movf	??_displayDigit+4,w
  5626  09F9  0580               	andwf	0,f
  5627                           
  5628                           ;lcd.c: 110: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  5629  09FA  301A               	movlw	26
  5630  09FB  077B               	addwf	displayDigit@D1,w
  5631  09FC  00A0               	movwf	??_displayDigit
  5632  09FD  087C               	movf	displayDigit@D1+1,w
  5633  09FE  1803               	skipnc
  5634  09FF  3E01               	addlw	1
  5635  0A00  00A1               	movwf	??_displayDigit+1
  5636  0A01  0820               	movf	??_displayDigit,w
  5637  0A02  0084               	movwf	4
  5638  0A03  1783               	bsf	3,7
  5639  0A04  1C21               	btfss	??_displayDigit+1,0
  5640  0A05  1383               	bcf	3,7
  5641  0A06  0A00               	incf	0,w
  5642  0A07  00A2               	movwf	??_displayDigit+2
  5643  0A08  3001               	movlw	1
  5644  0A09  00A3               	movwf	??_displayDigit+3
  5645  0A0A  3000               	movlw	0
  5646  0A0B  00A4               	movwf	??_displayDigit+4
  5647  0A0C  2A10               	goto	u2194
  5648  0A0D                     u2195:	
  5649  0A0D  1003               	clrc
  5650  0A0E  0DA3               	rlf	??_displayDigit+3,f
  5651  0A0F  0DA4               	rlf	??_displayDigit+4,f
  5652  0A10                     u2194:	
  5653  0A10  0BA2               	decfsz	??_displayDigit+2,f
  5654  0A11  2A0D               	goto	u2195
  5655  0A12  300C               	movlw	12
  5656  0A13  077B               	addwf	displayDigit@D1,w
  5657  0A14  00A5               	movwf	??_displayDigit+5
  5658  0A15  087C               	movf	displayDigit@D1+1,w
  5659  0A16  1803               	skipnc
  5660  0A17  3E01               	addlw	1
  5661  0A18  00A6               	movwf	??_displayDigit+6
  5662  0A19  0825               	movf	??_displayDigit+5,w
  5663  0A1A  0084               	movwf	4
  5664  0A1B  1783               	bsf	3,7
  5665  0A1C  1C26               	btfss	??_displayDigit+6,0
  5666  0A1D  1383               	bcf	3,7
  5667  0A1E  0800               	movf	0,w
  5668  0A1F  00A7               	movwf	??_displayDigit+7
  5669  0A20  0A84               	incf	4,f
  5670  0A21  0800               	movf	0,w
  5671  0A22  00A8               	movwf	??_displayDigit+8
  5672  0A23  0827               	movf	??_displayDigit+7,w
  5673  0A24  0084               	movwf	4
  5674  0A25  1783               	bsf	3,7
  5675  0A26  1C28               	btfss	??_displayDigit+8,0
  5676  0A27  1383               	bcf	3,7
  5677  0A28  0823               	movf	??_displayDigit+3,w
  5678  0A29  0480               	iorwf	0,f
  5679  0A2A  0A84               	incf	4,f
  5680  0A2B  0824               	movf	??_displayDigit+4,w
  5681  0A2C  0480               	iorwf	0,f
  5682                           
  5683                           ;lcd.c: 111: break;
  5684  0A2D  0008               	return
  5685  0A2E                     l1337:	
  5686                           ;lcd.c: 112: case 3:
  5687                           
  5688                           
  5689                           ;lcd.c: 113: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  5690  0A2E  300E               	movlw	14
  5691  0A2F  077B               	addwf	displayDigit@D1,w
  5692  0A30  1283               	bcf	3,5	;RP0=0, select bank0
  5693  0A31  1303               	bcf	3,6	;RP1=0, select bank0
  5694  0A32  00A0               	movwf	??_displayDigit
  5695  0A33  087C               	movf	displayDigit@D1+1,w
  5696  0A34  1803               	skipnc
  5697  0A35  3E01               	addlw	1
  5698  0A36  00A1               	movwf	??_displayDigit+1
  5699  0A37  0820               	movf	??_displayDigit,w
  5700  0A38  0084               	movwf	4
  5701  0A39  1783               	bsf	3,7
  5702  0A3A  1C21               	btfss	??_displayDigit+1,0
  5703  0A3B  1383               	bcf	3,7
  5704  0A3C  0A00               	incf	0,w
  5705  0A3D  00A2               	movwf	??_displayDigit+2
  5706  0A3E  3001               	movlw	1
  5707  0A3F  00A3               	movwf	??_displayDigit+3
  5708  0A40  3000               	movlw	0
  5709  0A41  00A4               	movwf	??_displayDigit+4
  5710  0A42  2A46               	goto	u2204
  5711  0A43                     u2205:	
  5712  0A43  1003               	clrc
  5713  0A44  0DA3               	rlf	??_displayDigit+3,f
  5714  0A45  0DA4               	rlf	??_displayDigit+4,f
  5715  0A46                     u2204:	
  5716  0A46  0BA2               	decfsz	??_displayDigit+2,f
  5717  0A47  2A43               	goto	u2205
  5718  0A48  087B               	movf	displayDigit@D1,w
  5719  0A49  0084               	movwf	4
  5720  0A4A  1783               	bsf	3,7
  5721  0A4B  1C7C               	btfss	displayDigit@D1+1,0
  5722  0A4C  1383               	bcf	3,7
  5723  0A4D  0800               	movf	0,w
  5724  0A4E  00A5               	movwf	??_displayDigit+5
  5725  0A4F  0A84               	incf	4,f
  5726  0A50  0800               	movf	0,w
  5727  0A51  00A6               	movwf	??_displayDigit+6
  5728  0A52  0825               	movf	??_displayDigit+5,w
  5729  0A53  0084               	movwf	4
  5730  0A54  1783               	bsf	3,7
  5731  0A55  1C26               	btfss	??_displayDigit+6,0
  5732  0A56  1383               	bcf	3,7
  5733  0A57  0823               	movf	??_displayDigit+3,w
  5734  0A58  0480               	iorwf	0,f
  5735  0A59  0A84               	incf	4,f
  5736  0A5A  0824               	movf	??_displayDigit+4,w
  5737  0A5B  0480               	iorwf	0,f
  5738                           
  5739                           ;lcd.c: 114: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  5740  0A5C  3010               	movlw	16
  5741  0A5D  077B               	addwf	displayDigit@D1,w
  5742  0A5E  00A0               	movwf	??_displayDigit
  5743  0A5F  087C               	movf	displayDigit@D1+1,w
  5744  0A60  1803               	skipnc
  5745  0A61  3E01               	addlw	1
  5746  0A62  00A1               	movwf	??_displayDigit+1
  5747  0A63  0820               	movf	??_displayDigit,w
  5748  0A64  0084               	movwf	4
  5749  0A65  1783               	bsf	3,7
  5750  0A66  1C21               	btfss	??_displayDigit+1,0
  5751  0A67  1383               	bcf	3,7
  5752  0A68  0A00               	incf	0,w
  5753  0A69  00A2               	movwf	??_displayDigit+2
  5754  0A6A  3001               	movlw	1
  5755  0A6B  00A3               	movwf	??_displayDigit+3
  5756  0A6C  3000               	movlw	0
  5757  0A6D  00A4               	movwf	??_displayDigit+4
  5758  0A6E  2A72               	goto	u2214
  5759  0A6F                     u2215:	
  5760  0A6F  1003               	clrc
  5761  0A70  0DA3               	rlf	??_displayDigit+3,f
  5762  0A71  0DA4               	rlf	??_displayDigit+4,f
  5763  0A72                     u2214:	
  5764  0A72  0BA2               	decfsz	??_displayDigit+2,f
  5765  0A73  2A6F               	goto	u2215
  5766  0A74  3002               	movlw	2
  5767  0A75  077B               	addwf	displayDigit@D1,w
  5768  0A76  00A5               	movwf	??_displayDigit+5
  5769  0A77  087C               	movf	displayDigit@D1+1,w
  5770  0A78  1803               	skipnc
  5771  0A79  3E01               	addlw	1
  5772  0A7A  00A6               	movwf	??_displayDigit+6
  5773  0A7B  0825               	movf	??_displayDigit+5,w
  5774  0A7C  0084               	movwf	4
  5775  0A7D  1783               	bsf	3,7
  5776  0A7E  1C26               	btfss	??_displayDigit+6,0
  5777  0A7F  1383               	bcf	3,7
  5778  0A80  0800               	movf	0,w
  5779  0A81  00A7               	movwf	??_displayDigit+7
  5780  0A82  0A84               	incf	4,f
  5781  0A83  0800               	movf	0,w
  5782  0A84  00A8               	movwf	??_displayDigit+8
  5783  0A85  0827               	movf	??_displayDigit+7,w
  5784  0A86  0084               	movwf	4
  5785  0A87  1783               	bsf	3,7
  5786  0A88  1C28               	btfss	??_displayDigit+8,0
  5787  0A89  1383               	bcf	3,7
  5788  0A8A  0823               	movf	??_displayDigit+3,w
  5789  0A8B  0480               	iorwf	0,f
  5790  0A8C  0A84               	incf	4,f
  5791  0A8D  0824               	movf	??_displayDigit+4,w
  5792  0A8E  0480               	iorwf	0,f
  5793                           
  5794                           ;lcd.c: 115: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  5795  0A8F  3012               	movlw	18
  5796  0A90  077B               	addwf	displayDigit@D1,w
  5797  0A91  00A0               	movwf	??_displayDigit
  5798  0A92  087C               	movf	displayDigit@D1+1,w
  5799  0A93  1803               	skipnc
  5800  0A94  3E01               	addlw	1
  5801  0A95  00A1               	movwf	??_displayDigit+1
  5802  0A96  0820               	movf	??_displayDigit,w
  5803  0A97  0084               	movwf	4
  5804  0A98  1783               	bsf	3,7
  5805  0A99  1C21               	btfss	??_displayDigit+1,0
  5806  0A9A  1383               	bcf	3,7
  5807  0A9B  0A00               	incf	0,w
  5808  0A9C  00A2               	movwf	??_displayDigit+2
  5809  0A9D  3001               	movlw	1
  5810  0A9E  00A3               	movwf	??_displayDigit+3
  5811  0A9F  3000               	movlw	0
  5812  0AA0  00A4               	movwf	??_displayDigit+4
  5813  0AA1  2AA5               	goto	u2224
  5814  0AA2                     u2225:	
  5815  0AA2  1003               	clrc
  5816  0AA3  0DA3               	rlf	??_displayDigit+3,f
  5817  0AA4  0DA4               	rlf	??_displayDigit+4,f
  5818  0AA5                     u2224:	
  5819  0AA5  0BA2               	decfsz	??_displayDigit+2,f
  5820  0AA6  2AA2               	goto	u2225
  5821  0AA7  3004               	movlw	4
  5822  0AA8  077B               	addwf	displayDigit@D1,w
  5823  0AA9  00A5               	movwf	??_displayDigit+5
  5824  0AAA  087C               	movf	displayDigit@D1+1,w
  5825  0AAB  1803               	skipnc
  5826  0AAC  3E01               	addlw	1
  5827  0AAD  00A6               	movwf	??_displayDigit+6
  5828  0AAE  0825               	movf	??_displayDigit+5,w
  5829  0AAF  0084               	movwf	4
  5830  0AB0  1783               	bsf	3,7
  5831  0AB1  1C26               	btfss	??_displayDigit+6,0
  5832  0AB2  1383               	bcf	3,7
  5833  0AB3  0800               	movf	0,w
  5834  0AB4  00A7               	movwf	??_displayDigit+7
  5835  0AB5  0A84               	incf	4,f
  5836  0AB6  0800               	movf	0,w
  5837  0AB7  00A8               	movwf	??_displayDigit+8
  5838  0AB8  0827               	movf	??_displayDigit+7,w
  5839  0AB9  0084               	movwf	4
  5840  0ABA  1783               	bsf	3,7
  5841  0ABB  1C28               	btfss	??_displayDigit+8,0
  5842  0ABC  1383               	bcf	3,7
  5843  0ABD  0823               	movf	??_displayDigit+3,w
  5844  0ABE  0480               	iorwf	0,f
  5845  0ABF  0A84               	incf	4,f
  5846  0AC0  0824               	movf	??_displayDigit+4,w
  5847  0AC1  0480               	iorwf	0,f
  5848                           
  5849                           ;lcd.c: 116: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  5850  0AC2  3014               	movlw	20
  5851  0AC3  077B               	addwf	displayDigit@D1,w
  5852  0AC4  00A0               	movwf	??_displayDigit
  5853  0AC5  087C               	movf	displayDigit@D1+1,w
  5854  0AC6  1803               	skipnc
  5855  0AC7  3E01               	addlw	1
  5856  0AC8  00A1               	movwf	??_displayDigit+1
  5857  0AC9  0820               	movf	??_displayDigit,w
  5858  0ACA  0084               	movwf	4
  5859  0ACB  1783               	bsf	3,7
  5860  0ACC  1C21               	btfss	??_displayDigit+1,0
  5861  0ACD  1383               	bcf	3,7
  5862  0ACE  0A00               	incf	0,w
  5863  0ACF  00A2               	movwf	??_displayDigit+2
  5864  0AD0  3001               	movlw	1
  5865  0AD1  00A3               	movwf	??_displayDigit+3
  5866  0AD2  3000               	movlw	0
  5867  0AD3  00A4               	movwf	??_displayDigit+4
  5868  0AD4  2AD8               	goto	u2234
  5869  0AD5                     u2235:	
  5870  0AD5  1003               	clrc
  5871  0AD6  0DA3               	rlf	??_displayDigit+3,f
  5872  0AD7  0DA4               	rlf	??_displayDigit+4,f
  5873  0AD8                     u2234:	
  5874  0AD8  0BA2               	decfsz	??_displayDigit+2,f
  5875  0AD9  2AD5               	goto	u2235
  5876  0ADA  3006               	movlw	6
  5877  0ADB  077B               	addwf	displayDigit@D1,w
  5878  0ADC  00A5               	movwf	??_displayDigit+5
  5879  0ADD  087C               	movf	displayDigit@D1+1,w
  5880  0ADE  1803               	skipnc
  5881  0ADF  3E01               	addlw	1
  5882  0AE0  00A6               	movwf	??_displayDigit+6
  5883  0AE1  0825               	movf	??_displayDigit+5,w
  5884  0AE2  0084               	movwf	4
  5885  0AE3  1783               	bsf	3,7
  5886  0AE4  1C26               	btfss	??_displayDigit+6,0
  5887  0AE5  1383               	bcf	3,7
  5888  0AE6  0800               	movf	0,w
  5889  0AE7  00A7               	movwf	??_displayDigit+7
  5890  0AE8  0A84               	incf	4,f
  5891  0AE9  0800               	movf	0,w
  5892  0AEA  00A8               	movwf	??_displayDigit+8
  5893  0AEB  0827               	movf	??_displayDigit+7,w
  5894  0AEC  0084               	movwf	4
  5895  0AED  1783               	bsf	3,7
  5896  0AEE  1C28               	btfss	??_displayDigit+8,0
  5897  0AEF  1383               	bcf	3,7
  5898  0AF0  0823               	movf	??_displayDigit+3,w
  5899  0AF1  0480               	iorwf	0,f
  5900  0AF2  0A84               	incf	4,f
  5901  0AF3  0824               	movf	??_displayDigit+4,w
  5902  0AF4  0480               	iorwf	0,f
  5903                           
  5904                           ;lcd.c: 117: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  5905  0AF5  3016               	movlw	22
  5906  0AF6  077B               	addwf	displayDigit@D1,w
  5907  0AF7  00A0               	movwf	??_displayDigit
  5908  0AF8  087C               	movf	displayDigit@D1+1,w
  5909  0AF9  1803               	skipnc
  5910  0AFA  3E01               	addlw	1
  5911  0AFB  00A1               	movwf	??_displayDigit+1
  5912  0AFC  0820               	movf	??_displayDigit,w
  5913  0AFD  0084               	movwf	4
  5914  0AFE  1783               	bsf	3,7
  5915  0AFF  1C21               	btfss	??_displayDigit+1,0
  5916  0B00  1383               	bcf	3,7
  5917  0B01  0A00               	incf	0,w
  5918  0B02  00A2               	movwf	??_displayDigit+2
  5919  0B03  3001               	movlw	1
  5920  0B04  00A3               	movwf	??_displayDigit+3
  5921  0B05  3000               	movlw	0
  5922  0B06  00A4               	movwf	??_displayDigit+4
  5923  0B07  160A  118A  2949   	goto	u2244
  5924                           
  5925                           	psect	text5_split_5
  5926  1146                     u2245:	
  5927  1146  1003               	clrc
  5928  1147  0DA3               	rlf	??_displayDigit+3,f
  5929  1148  0DA4               	rlf	??_displayDigit+4,f
  5930  1149                     u2244:	
  5931  1149  0BA2               	decfsz	??_displayDigit+2,f
  5932  114A  2946               	goto	u2245
  5933  114B  09A3               	comf	??_displayDigit+3,f
  5934  114C  09A4               	comf	??_displayDigit+4,f
  5935  114D  3008               	movlw	8
  5936  114E  077B               	addwf	displayDigit@D1,w
  5937  114F  00A5               	movwf	??_displayDigit+5
  5938  1150  087C               	movf	displayDigit@D1+1,w
  5939  1151  1803               	skipnc
  5940  1152  3E01               	addlw	1
  5941  1153  00A6               	movwf	??_displayDigit+6
  5942  1154  0825               	movf	??_displayDigit+5,w
  5943  1155  0084               	movwf	4
  5944  1156  1783               	bsf	3,7
  5945  1157  1C26               	btfss	??_displayDigit+6,0
  5946  1158  1383               	bcf	3,7
  5947  1159  0800               	movf	0,w
  5948  115A  00A7               	movwf	??_displayDigit+7
  5949  115B  0A84               	incf	4,f
  5950  115C  0800               	movf	0,w
  5951  115D  00A8               	movwf	??_displayDigit+8
  5952  115E  0827               	movf	??_displayDigit+7,w
  5953  115F  0084               	movwf	4
  5954  1160  1783               	bsf	3,7
  5955  1161  1C28               	btfss	??_displayDigit+8,0
  5956  1162  1383               	bcf	3,7
  5957  1163  0823               	movf	??_displayDigit+3,w
  5958  1164  0580               	andwf	0,f
  5959  1165  0A84               	incf	4,f
  5960  1166  0824               	movf	??_displayDigit+4,w
  5961  1167  0580               	andwf	0,f
  5962                           
  5963                           ;lcd.c: 118: ((*D1->sf) &= ~((1UL) << (D1->bits[5])));
  5964  1168  3018               	movlw	24
  5965  1169  077B               	addwf	displayDigit@D1,w
  5966  116A  00A0               	movwf	??_displayDigit
  5967  116B  087C               	movf	displayDigit@D1+1,w
  5968  116C  1803               	skipnc
  5969  116D  3E01               	addlw	1
  5970  116E  00A1               	movwf	??_displayDigit+1
  5971  116F  0820               	movf	??_displayDigit,w
  5972  1170  0084               	movwf	4
  5973  1171  1783               	bsf	3,7
  5974  1172  1C21               	btfss	??_displayDigit+1,0
  5975  1173  1383               	bcf	3,7
  5976  1174  0A00               	incf	0,w
  5977  1175  00A2               	movwf	??_displayDigit+2
  5978  1176  3001               	movlw	1
  5979  1177  00A3               	movwf	??_displayDigit+3
  5980  1178  3000               	movlw	0
  5981  1179  00A4               	movwf	??_displayDigit+4
  5982  117A  297E               	goto	u2254
  5983  117B                     u2255:	
  5984  117B  1003               	clrc
  5985  117C  0DA3               	rlf	??_displayDigit+3,f
  5986  117D  0DA4               	rlf	??_displayDigit+4,f
  5987  117E                     u2254:	
  5988  117E  0BA2               	decfsz	??_displayDigit+2,f
  5989  117F  297B               	goto	u2255
  5990  1180  09A3               	comf	??_displayDigit+3,f
  5991  1181  09A4               	comf	??_displayDigit+4,f
  5992  1182  300A               	movlw	10
  5993  1183  077B               	addwf	displayDigit@D1,w
  5994  1184  00A5               	movwf	??_displayDigit+5
  5995  1185  087C               	movf	displayDigit@D1+1,w
  5996  1186  1803               	skipnc
  5997  1187  3E01               	addlw	1
  5998  1188  00A6               	movwf	??_displayDigit+6
  5999  1189  0825               	movf	??_displayDigit+5,w
  6000  118A  0084               	movwf	4
  6001  118B  1783               	bsf	3,7
  6002  118C  1C26               	btfss	??_displayDigit+6,0
  6003  118D  1383               	bcf	3,7
  6004  118E  0800               	movf	0,w
  6005  118F  00A7               	movwf	??_displayDigit+7
  6006  1190  0A84               	incf	4,f
  6007  1191  0800               	movf	0,w
  6008  1192  00A8               	movwf	??_displayDigit+8
  6009  1193  0827               	movf	??_displayDigit+7,w
  6010  1194  0084               	movwf	4
  6011  1195  1783               	bsf	3,7
  6012  1196  1C28               	btfss	??_displayDigit+8,0
  6013  1197  1383               	bcf	3,7
  6014  1198  0823               	movf	??_displayDigit+3,w
  6015  1199  0580               	andwf	0,f
  6016  119A  0A84               	incf	4,f
  6017  119B  0824               	movf	??_displayDigit+4,w
  6018  119C  0580               	andwf	0,f
  6019                           
  6020                           ;lcd.c: 119: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  6021  119D  301A               	movlw	26
  6022  119E  077B               	addwf	displayDigit@D1,w
  6023  119F  00A0               	movwf	??_displayDigit
  6024  11A0  087C               	movf	displayDigit@D1+1,w
  6025  11A1  1803               	skipnc
  6026  11A2  3E01               	addlw	1
  6027  11A3  00A1               	movwf	??_displayDigit+1
  6028  11A4  0820               	movf	??_displayDigit,w
  6029  11A5  0084               	movwf	4
  6030  11A6  1783               	bsf	3,7
  6031  11A7  1C21               	btfss	??_displayDigit+1,0
  6032  11A8  1383               	bcf	3,7
  6033  11A9  0A00               	incf	0,w
  6034  11AA  00A2               	movwf	??_displayDigit+2
  6035  11AB  3001               	movlw	1
  6036  11AC  00A3               	movwf	??_displayDigit+3
  6037  11AD  3000               	movlw	0
  6038  11AE  00A4               	movwf	??_displayDigit+4
  6039  11AF  29B3               	goto	u2264
  6040  11B0                     u2265:	
  6041  11B0  1003               	clrc
  6042  11B1  0DA3               	rlf	??_displayDigit+3,f
  6043  11B2  0DA4               	rlf	??_displayDigit+4,f
  6044  11B3                     u2264:	
  6045  11B3  0BA2               	decfsz	??_displayDigit+2,f
  6046  11B4  29B0               	goto	u2265
  6047  11B5  300C               	movlw	12
  6048  11B6  077B               	addwf	displayDigit@D1,w
  6049  11B7  00A5               	movwf	??_displayDigit+5
  6050  11B8  087C               	movf	displayDigit@D1+1,w
  6051  11B9  1803               	skipnc
  6052  11BA  3E01               	addlw	1
  6053  11BB  00A6               	movwf	??_displayDigit+6
  6054  11BC  0825               	movf	??_displayDigit+5,w
  6055  11BD  0084               	movwf	4
  6056  11BE  1783               	bsf	3,7
  6057  11BF  1C26               	btfss	??_displayDigit+6,0
  6058  11C0  1383               	bcf	3,7
  6059  11C1  0800               	movf	0,w
  6060  11C2  00A7               	movwf	??_displayDigit+7
  6061  11C3  0A84               	incf	4,f
  6062  11C4  0800               	movf	0,w
  6063  11C5  00A8               	movwf	??_displayDigit+8
  6064  11C6  0827               	movf	??_displayDigit+7,w
  6065  11C7  0084               	movwf	4
  6066  11C8  1783               	bsf	3,7
  6067  11C9  1C28               	btfss	??_displayDigit+8,0
  6068  11CA  1383               	bcf	3,7
  6069  11CB  0823               	movf	??_displayDigit+3,w
  6070  11CC  0480               	iorwf	0,f
  6071  11CD  0A84               	incf	4,f
  6072  11CE  0824               	movf	??_displayDigit+4,w
  6073  11CF  0480               	iorwf	0,f
  6074                           
  6075                           ;lcd.c: 120: break;
  6076  11D0  0008               	return
  6077                           
  6078                           	psect	text5_split_6
  6079  16EB                     l1339:	
  6080                           ;lcd.c: 121: case 4:
  6081                           
  6082                           
  6083                           ;lcd.c: 122: ((*D1->sa) &= ~((1UL) << (D1->bits[0])));
  6084  16EB  300E               	movlw	14
  6085  16EC  077B               	addwf	displayDigit@D1,w
  6086  16ED  1283               	bcf	3,5	;RP0=0, select bank0
  6087  16EE  1303               	bcf	3,6	;RP1=0, select bank0
  6088  16EF  00A0               	movwf	??_displayDigit
  6089  16F0  087C               	movf	displayDigit@D1+1,w
  6090  16F1  1803               	skipnc
  6091  16F2  3E01               	addlw	1
  6092  16F3  00A1               	movwf	??_displayDigit+1
  6093  16F4  0820               	movf	??_displayDigit,w
  6094  16F5  0084               	movwf	4
  6095  16F6  1783               	bsf	3,7
  6096  16F7  1C21               	btfss	??_displayDigit+1,0
  6097  16F8  1383               	bcf	3,7
  6098  16F9  0A00               	incf	0,w
  6099  16FA  00A2               	movwf	??_displayDigit+2
  6100  16FB  3001               	movlw	1
  6101  16FC  00A3               	movwf	??_displayDigit+3
  6102  16FD  3000               	movlw	0
  6103  16FE  00A4               	movwf	??_displayDigit+4
  6104  16FF  2F03               	goto	u2274
  6105  1700                     u2275:	
  6106  1700  1003               	clrc
  6107  1701  0DA3               	rlf	??_displayDigit+3,f
  6108  1702  0DA4               	rlf	??_displayDigit+4,f
  6109  1703                     u2274:	
  6110  1703  0BA2               	decfsz	??_displayDigit+2,f
  6111  1704  2F00               	goto	u2275
  6112  1705  09A3               	comf	??_displayDigit+3,f
  6113  1706  09A4               	comf	??_displayDigit+4,f
  6114  1707  087B               	movf	displayDigit@D1,w
  6115  1708  0084               	movwf	4
  6116  1709  1783               	bsf	3,7
  6117  170A  1C7C               	btfss	displayDigit@D1+1,0
  6118  170B  1383               	bcf	3,7
  6119  170C  0800               	movf	0,w
  6120  170D  00A5               	movwf	??_displayDigit+5
  6121  170E  0A84               	incf	4,f
  6122  170F  0800               	movf	0,w
  6123  1710  00A6               	movwf	??_displayDigit+6
  6124  1711  0825               	movf	??_displayDigit+5,w
  6125  1712  0084               	movwf	4
  6126  1713  1783               	bsf	3,7
  6127  1714  1C26               	btfss	??_displayDigit+6,0
  6128  1715  1383               	bcf	3,7
  6129  1716  0823               	movf	??_displayDigit+3,w
  6130  1717  0580               	andwf	0,f
  6131  1718  0A84               	incf	4,f
  6132  1719  0824               	movf	??_displayDigit+4,w
  6133  171A  0580               	andwf	0,f
  6134                           
  6135                           ;lcd.c: 123: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  6136  171B  3010               	movlw	16
  6137  171C  077B               	addwf	displayDigit@D1,w
  6138  171D  00A0               	movwf	??_displayDigit
  6139  171E  087C               	movf	displayDigit@D1+1,w
  6140  171F  1803               	skipnc
  6141  1720  3E01               	addlw	1
  6142  1721  00A1               	movwf	??_displayDigit+1
  6143  1722  0820               	movf	??_displayDigit,w
  6144  1723  0084               	movwf	4
  6145  1724  1783               	bsf	3,7
  6146  1725  1C21               	btfss	??_displayDigit+1,0
  6147  1726  1383               	bcf	3,7
  6148  1727  0A00               	incf	0,w
  6149  1728  00A2               	movwf	??_displayDigit+2
  6150  1729  3001               	movlw	1
  6151  172A  00A3               	movwf	??_displayDigit+3
  6152  172B  3000               	movlw	0
  6153  172C  00A4               	movwf	??_displayDigit+4
  6154  172D  2F31               	goto	u2284
  6155  172E                     u2285:	
  6156  172E  1003               	clrc
  6157  172F  0DA3               	rlf	??_displayDigit+3,f
  6158  1730  0DA4               	rlf	??_displayDigit+4,f
  6159  1731                     u2284:	
  6160  1731  0BA2               	decfsz	??_displayDigit+2,f
  6161  1732  2F2E               	goto	u2285
  6162  1733  3002               	movlw	2
  6163  1734  077B               	addwf	displayDigit@D1,w
  6164  1735  00A5               	movwf	??_displayDigit+5
  6165  1736  087C               	movf	displayDigit@D1+1,w
  6166  1737  1803               	skipnc
  6167  1738  3E01               	addlw	1
  6168  1739  00A6               	movwf	??_displayDigit+6
  6169  173A  0825               	movf	??_displayDigit+5,w
  6170  173B  0084               	movwf	4
  6171  173C  1783               	bsf	3,7
  6172  173D  1C26               	btfss	??_displayDigit+6,0
  6173  173E  1383               	bcf	3,7
  6174  173F  0800               	movf	0,w
  6175  1740  00A7               	movwf	??_displayDigit+7
  6176  1741  0A84               	incf	4,f
  6177  1742  0800               	movf	0,w
  6178  1743  00A8               	movwf	??_displayDigit+8
  6179  1744  0827               	movf	??_displayDigit+7,w
  6180  1745  0084               	movwf	4
  6181  1746  1783               	bsf	3,7
  6182  1747  1C28               	btfss	??_displayDigit+8,0
  6183  1748  1383               	bcf	3,7
  6184  1749  0823               	movf	??_displayDigit+3,w
  6185  174A  0480               	iorwf	0,f
  6186  174B  0A84               	incf	4,f
  6187  174C  0824               	movf	??_displayDigit+4,w
  6188  174D  0480               	iorwf	0,f
  6189                           
  6190                           ;lcd.c: 124: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  6191  174E  3012               	movlw	18
  6192  174F  077B               	addwf	displayDigit@D1,w
  6193  1750  00A0               	movwf	??_displayDigit
  6194  1751  087C               	movf	displayDigit@D1+1,w
  6195  1752  1803               	skipnc
  6196  1753  3E01               	addlw	1
  6197  1754  00A1               	movwf	??_displayDigit+1
  6198  1755  0820               	movf	??_displayDigit,w
  6199  1756  0084               	movwf	4
  6200  1757  1783               	bsf	3,7
  6201  1758  1C21               	btfss	??_displayDigit+1,0
  6202  1759  1383               	bcf	3,7
  6203  175A  0A00               	incf	0,w
  6204  175B  00A2               	movwf	??_displayDigit+2
  6205  175C  3001               	movlw	1
  6206  175D  00A3               	movwf	??_displayDigit+3
  6207  175E  3000               	movlw	0
  6208  175F  00A4               	movwf	??_displayDigit+4
  6209  1760  2F64               	goto	u2294
  6210  1761                     u2295:	
  6211  1761  1003               	clrc
  6212  1762  0DA3               	rlf	??_displayDigit+3,f
  6213  1763  0DA4               	rlf	??_displayDigit+4,f
  6214  1764                     u2294:	
  6215  1764  0BA2               	decfsz	??_displayDigit+2,f
  6216  1765  2F61               	goto	u2295
  6217  1766  3004               	movlw	4
  6218  1767  077B               	addwf	displayDigit@D1,w
  6219  1768  00A5               	movwf	??_displayDigit+5
  6220  1769  087C               	movf	displayDigit@D1+1,w
  6221  176A  1803               	skipnc
  6222  176B  3E01               	addlw	1
  6223  176C  00A6               	movwf	??_displayDigit+6
  6224  176D  0825               	movf	??_displayDigit+5,w
  6225  176E  0084               	movwf	4
  6226  176F  1783               	bsf	3,7
  6227  1770  1C26               	btfss	??_displayDigit+6,0
  6228  1771  1383               	bcf	3,7
  6229  1772  0800               	movf	0,w
  6230  1773  00A7               	movwf	??_displayDigit+7
  6231  1774  0A84               	incf	4,f
  6232  1775  0800               	movf	0,w
  6233  1776  00A8               	movwf	??_displayDigit+8
  6234  1777  0827               	movf	??_displayDigit+7,w
  6235  1778  0084               	movwf	4
  6236  1779  1783               	bsf	3,7
  6237  177A  1C28               	btfss	??_displayDigit+8,0
  6238  177B  1383               	bcf	3,7
  6239  177C  0823               	movf	??_displayDigit+3,w
  6240  177D  0480               	iorwf	0,f
  6241  177E  0A84               	incf	4,f
  6242  177F  0824               	movf	??_displayDigit+4,w
  6243  1780  0480               	iorwf	0,f
  6244                           
  6245                           ;lcd.c: 125: ((*D1->sd) &= ~((1UL) << (D1->bits[3])));
  6246  1781  3014               	movlw	20
  6247  1782  077B               	addwf	displayDigit@D1,w
  6248  1783  00A0               	movwf	??_displayDigit
  6249  1784  087C               	movf	displayDigit@D1+1,w
  6250  1785  1803               	skipnc
  6251  1786  3E01               	addlw	1
  6252  1787  00A1               	movwf	??_displayDigit+1
  6253  1788  0820               	movf	??_displayDigit,w
  6254  1789  0084               	movwf	4
  6255  178A  1783               	bsf	3,7
  6256  178B  1C21               	btfss	??_displayDigit+1,0
  6257  178C  1383               	bcf	3,7
  6258  178D  0A00               	incf	0,w
  6259  178E  00A2               	movwf	??_displayDigit+2
  6260  178F  3001               	movlw	1
  6261  1790  00A3               	movwf	??_displayDigit+3
  6262  1791  3000               	movlw	0
  6263  1792  00A4               	movwf	??_displayDigit+4
  6264  1793  2F97               	goto	u2304
  6265  1794                     u2305:	
  6266  1794  1003               	clrc
  6267  1795  0DA3               	rlf	??_displayDigit+3,f
  6268  1796  0DA4               	rlf	??_displayDigit+4,f
  6269  1797                     u2304:	
  6270  1797  0BA2               	decfsz	??_displayDigit+2,f
  6271  1798  2F94               	goto	u2305
  6272  1799  09A3               	comf	??_displayDigit+3,f
  6273  179A  09A4               	comf	??_displayDigit+4,f
  6274  179B  3006               	movlw	6
  6275  179C  077B               	addwf	displayDigit@D1,w
  6276  179D  00A5               	movwf	??_displayDigit+5
  6277  179E  087C               	movf	displayDigit@D1+1,w
  6278  179F  1803               	skipnc
  6279  17A0  3E01               	addlw	1
  6280  17A1  00A6               	movwf	??_displayDigit+6
  6281  17A2  0825               	movf	??_displayDigit+5,w
  6282  17A3  0084               	movwf	4
  6283  17A4  1783               	bsf	3,7
  6284  17A5  1C26               	btfss	??_displayDigit+6,0
  6285  17A6  1383               	bcf	3,7
  6286  17A7  0800               	movf	0,w
  6287  17A8  00A7               	movwf	??_displayDigit+7
  6288  17A9  0A84               	incf	4,f
  6289  17AA  0800               	movf	0,w
  6290  17AB  00A8               	movwf	??_displayDigit+8
  6291  17AC  0827               	movf	??_displayDigit+7,w
  6292  17AD  0084               	movwf	4
  6293  17AE  1783               	bsf	3,7
  6294  17AF  1C28               	btfss	??_displayDigit+8,0
  6295  17B0  1383               	bcf	3,7
  6296  17B1  0823               	movf	??_displayDigit+3,w
  6297  17B2  0580               	andwf	0,f
  6298  17B3  0A84               	incf	4,f
  6299  17B4  0824               	movf	??_displayDigit+4,w
  6300  17B5  0580               	andwf	0,f
  6301                           
  6302                           ;lcd.c: 126: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  6303  17B6  3016               	movlw	22
  6304  17B7  077B               	addwf	displayDigit@D1,w
  6305  17B8  00A0               	movwf	??_displayDigit
  6306  17B9  087C               	movf	displayDigit@D1+1,w
  6307  17BA  1803               	skipnc
  6308  17BB  3E01               	addlw	1
  6309  17BC  00A1               	movwf	??_displayDigit+1
  6310  17BD  0820               	movf	??_displayDigit,w
  6311  17BE  0084               	movwf	4
  6312  17BF  1783               	bsf	3,7
  6313  17C0  1C21               	btfss	??_displayDigit+1,0
  6314  17C1  1383               	bcf	3,7
  6315  17C2  0A00               	incf	0,w
  6316  17C3  00A2               	movwf	??_displayDigit+2
  6317  17C4  3001               	movlw	1
  6318  17C5  00A3               	movwf	??_displayDigit+3
  6319  17C6  3000               	movlw	0
  6320  17C7  00A4               	movwf	??_displayDigit+4
  6321  17C8  2FCC               	goto	u2314
  6322  17C9                     u2315:	
  6323  17C9  1003               	clrc
  6324  17CA  0DA3               	rlf	??_displayDigit+3,f
  6325  17CB  0DA4               	rlf	??_displayDigit+4,f
  6326  17CC                     u2314:	
  6327  17CC  0BA2               	decfsz	??_displayDigit+2,f
  6328  17CD  2FC9               	goto	u2315
  6329  17CE  09A3               	comf	??_displayDigit+3,f
  6330  17CF  09A4               	comf	??_displayDigit+4,f
  6331  17D0  3008               	movlw	8
  6332  17D1  077B               	addwf	displayDigit@D1,w
  6333  17D2  00A5               	movwf	??_displayDigit+5
  6334  17D3  087C               	movf	displayDigit@D1+1,w
  6335  17D4  1803               	skipnc
  6336  17D5  3E01               	addlw	1
  6337  17D6  00A6               	movwf	??_displayDigit+6
  6338  17D7  0825               	movf	??_displayDigit+5,w
  6339  17D8  0084               	movwf	4
  6340  17D9  1783               	bsf	3,7
  6341  17DA  1C26               	btfss	??_displayDigit+6,0
  6342  17DB  1383               	bcf	3,7
  6343  17DC  0800               	movf	0,w
  6344  17DD  00A7               	movwf	??_displayDigit+7
  6345  17DE  0A84               	incf	4,f
  6346  17DF  0800               	movf	0,w
  6347  17E0  00A8               	movwf	??_displayDigit+8
  6348  17E1  0827               	movf	??_displayDigit+7,w
  6349  17E2  0084               	movwf	4
  6350  17E3  1783               	bsf	3,7
  6351  17E4  1C28               	btfss	??_displayDigit+8,0
  6352  17E5  1383               	bcf	3,7
  6353  17E6  0823               	movf	??_displayDigit+3,w
  6354  17E7  0580               	andwf	0,f
  6355  17E8  0A84               	incf	4,f
  6356  17E9  0824               	movf	??_displayDigit+4,w
  6357  17EA  0580               	andwf	0,f
  6358                           
  6359                           ;lcd.c: 127: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  6360  17EB  3018               	movlw	24
  6361  17EC  077B               	addwf	displayDigit@D1,w
  6362  17ED  00A0               	movwf	??_displayDigit
  6363  17EE  087C               	movf	displayDigit@D1+1,w
  6364  17EF  1803               	skipnc
  6365  17F0  3E01               	addlw	1
  6366  17F1  00A1               	movwf	??_displayDigit+1
  6367  17F2  0820               	movf	??_displayDigit,w
  6368  17F3  0084               	movwf	4
  6369  17F4  1783               	bsf	3,7
  6370  17F5  1C21               	btfss	??_displayDigit+1,0
  6371  17F6  1383               	bcf	3,7
  6372  17F7  0A00               	incf	0,w
  6373  17F8  00A2               	movwf	??_displayDigit+2
  6374  17F9  3001               	movlw	1
  6375  17FA  00A3               	movwf	??_displayDigit+3
  6376  17FB  3000               	movlw	0
  6377  17FC  00A4               	movwf	??_displayDigit+4
  6378  17FD  120A  158A  28A9   	goto	u2324
  6379                           
  6380                           	psect	text5_split_7
  6381  08A6                     u2325:	
  6382  08A6  1003               	clrc
  6383  08A7  0DA3               	rlf	??_displayDigit+3,f
  6384  08A8  0DA4               	rlf	??_displayDigit+4,f
  6385  08A9                     u2324:	
  6386  08A9  0BA2               	decfsz	??_displayDigit+2,f
  6387  08AA  28A6               	goto	u2325
  6388  08AB  300A               	movlw	10
  6389  08AC  077B               	addwf	displayDigit@D1,w
  6390  08AD  00A5               	movwf	??_displayDigit+5
  6391  08AE  087C               	movf	displayDigit@D1+1,w
  6392  08AF  1803               	skipnc
  6393  08B0  3E01               	addlw	1
  6394  08B1  00A6               	movwf	??_displayDigit+6
  6395  08B2  0825               	movf	??_displayDigit+5,w
  6396  08B3  0084               	movwf	4
  6397  08B4  1783               	bsf	3,7
  6398  08B5  1C26               	btfss	??_displayDigit+6,0
  6399  08B6  1383               	bcf	3,7
  6400  08B7  0800               	movf	0,w
  6401  08B8  00A7               	movwf	??_displayDigit+7
  6402  08B9  0A84               	incf	4,f
  6403  08BA  0800               	movf	0,w
  6404  08BB  00A8               	movwf	??_displayDigit+8
  6405  08BC  0827               	movf	??_displayDigit+7,w
  6406  08BD  0084               	movwf	4
  6407  08BE  1783               	bsf	3,7
  6408  08BF  1C28               	btfss	??_displayDigit+8,0
  6409  08C0  1383               	bcf	3,7
  6410  08C1  0823               	movf	??_displayDigit+3,w
  6411  08C2  0480               	iorwf	0,f
  6412  08C3  0A84               	incf	4,f
  6413  08C4  0824               	movf	??_displayDigit+4,w
  6414  08C5  0480               	iorwf	0,f
  6415                           
  6416                           ;lcd.c: 128: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  6417  08C6  301A               	movlw	26
  6418  08C7  077B               	addwf	displayDigit@D1,w
  6419  08C8  00A0               	movwf	??_displayDigit
  6420  08C9  087C               	movf	displayDigit@D1+1,w
  6421  08CA  1803               	skipnc
  6422  08CB  3E01               	addlw	1
  6423  08CC  00A1               	movwf	??_displayDigit+1
  6424  08CD  0820               	movf	??_displayDigit,w
  6425  08CE  0084               	movwf	4
  6426  08CF  1783               	bsf	3,7
  6427  08D0  1C21               	btfss	??_displayDigit+1,0
  6428  08D1  1383               	bcf	3,7
  6429  08D2  0A00               	incf	0,w
  6430  08D3  00A2               	movwf	??_displayDigit+2
  6431  08D4  3001               	movlw	1
  6432  08D5  00A3               	movwf	??_displayDigit+3
  6433  08D6  3000               	movlw	0
  6434  08D7  00A4               	movwf	??_displayDigit+4
  6435  08D8  28DC               	goto	u2334
  6436  08D9                     u2335:	
  6437  08D9  1003               	clrc
  6438  08DA  0DA3               	rlf	??_displayDigit+3,f
  6439  08DB  0DA4               	rlf	??_displayDigit+4,f
  6440  08DC                     u2334:	
  6441  08DC  0BA2               	decfsz	??_displayDigit+2,f
  6442  08DD  28D9               	goto	u2335
  6443  08DE  300C               	movlw	12
  6444  08DF  077B               	addwf	displayDigit@D1,w
  6445  08E0  00A5               	movwf	??_displayDigit+5
  6446  08E1  087C               	movf	displayDigit@D1+1,w
  6447  08E2  1803               	skipnc
  6448  08E3  3E01               	addlw	1
  6449  08E4  00A6               	movwf	??_displayDigit+6
  6450  08E5  0825               	movf	??_displayDigit+5,w
  6451  08E6  0084               	movwf	4
  6452  08E7  1783               	bsf	3,7
  6453  08E8  1C26               	btfss	??_displayDigit+6,0
  6454  08E9  1383               	bcf	3,7
  6455  08EA  0800               	movf	0,w
  6456  08EB  00A7               	movwf	??_displayDigit+7
  6457  08EC  0A84               	incf	4,f
  6458  08ED  0800               	movf	0,w
  6459  08EE  00A8               	movwf	??_displayDigit+8
  6460  08EF  0827               	movf	??_displayDigit+7,w
  6461  08F0  0084               	movwf	4
  6462  08F1  1783               	bsf	3,7
  6463  08F2  1C28               	btfss	??_displayDigit+8,0
  6464  08F3  1383               	bcf	3,7
  6465  08F4  0823               	movf	??_displayDigit+3,w
  6466  08F5  0480               	iorwf	0,f
  6467  08F6  0A84               	incf	4,f
  6468  08F7  0824               	movf	??_displayDigit+4,w
  6469  08F8  0480               	iorwf	0,f
  6470                           
  6471                           ;lcd.c: 129: break;
  6472  08F9  0008               	return
  6473  08FA                     l1341:	
  6474                           ;lcd.c: 130: case 5:
  6475                           
  6476                           
  6477                           ;lcd.c: 131: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  6478  08FA  300E               	movlw	14
  6479  08FB  077B               	addwf	displayDigit@D1,w
  6480  08FC  1283               	bcf	3,5	;RP0=0, select bank0
  6481  08FD  1303               	bcf	3,6	;RP1=0, select bank0
  6482  08FE  00A0               	movwf	??_displayDigit
  6483  08FF  087C               	movf	displayDigit@D1+1,w
  6484  0900  1803               	skipnc
  6485  0901  3E01               	addlw	1
  6486  0902  00A1               	movwf	??_displayDigit+1
  6487  0903  0820               	movf	??_displayDigit,w
  6488  0904  0084               	movwf	4
  6489  0905  1783               	bsf	3,7
  6490  0906  1C21               	btfss	??_displayDigit+1,0
  6491  0907  1383               	bcf	3,7
  6492  0908  0A00               	incf	0,w
  6493  0909  00A2               	movwf	??_displayDigit+2
  6494  090A  3001               	movlw	1
  6495  090B  00A3               	movwf	??_displayDigit+3
  6496  090C  3000               	movlw	0
  6497  090D  00A4               	movwf	??_displayDigit+4
  6498  090E  2912               	goto	u2344
  6499  090F                     u2345:	
  6500  090F  1003               	clrc
  6501  0910  0DA3               	rlf	??_displayDigit+3,f
  6502  0911  0DA4               	rlf	??_displayDigit+4,f
  6503  0912                     u2344:	
  6504  0912  0BA2               	decfsz	??_displayDigit+2,f
  6505  0913  290F               	goto	u2345
  6506  0914  087B               	movf	displayDigit@D1,w
  6507  0915  0084               	movwf	4
  6508  0916  1783               	bsf	3,7
  6509  0917  1C7C               	btfss	displayDigit@D1+1,0
  6510  0918  1383               	bcf	3,7
  6511  0919  0800               	movf	0,w
  6512  091A  00A5               	movwf	??_displayDigit+5
  6513  091B  0A84               	incf	4,f
  6514  091C  0800               	movf	0,w
  6515  091D  00A6               	movwf	??_displayDigit+6
  6516  091E  0825               	movf	??_displayDigit+5,w
  6517  091F  0084               	movwf	4
  6518  0920  1783               	bsf	3,7
  6519  0921  1C26               	btfss	??_displayDigit+6,0
  6520  0922  1383               	bcf	3,7
  6521  0923  0823               	movf	??_displayDigit+3,w
  6522  0924  0480               	iorwf	0,f
  6523  0925  0A84               	incf	4,f
  6524  0926  0824               	movf	??_displayDigit+4,w
  6525  0927  0480               	iorwf	0,f
  6526                           
  6527                           ;lcd.c: 132: ((*D1->sb) &= ~((1UL) << (D1->bits[1])));
  6528  0928  3010               	movlw	16
  6529  0929  077B               	addwf	displayDigit@D1,w
  6530  092A  00A0               	movwf	??_displayDigit
  6531  092B  087C               	movf	displayDigit@D1+1,w
  6532  092C  1803               	skipnc
  6533  092D  3E01               	addlw	1
  6534  092E  00A1               	movwf	??_displayDigit+1
  6535  092F  0820               	movf	??_displayDigit,w
  6536  0930  0084               	movwf	4
  6537  0931  1783               	bsf	3,7
  6538  0932  1C21               	btfss	??_displayDigit+1,0
  6539  0933  1383               	bcf	3,7
  6540  0934  0A00               	incf	0,w
  6541  0935  00A2               	movwf	??_displayDigit+2
  6542  0936  3001               	movlw	1
  6543  0937  00A3               	movwf	??_displayDigit+3
  6544  0938  3000               	movlw	0
  6545  0939  00A4               	movwf	??_displayDigit+4
  6546  093A  293E               	goto	u2354
  6547  093B                     u2355:	
  6548  093B  1003               	clrc
  6549  093C  0DA3               	rlf	??_displayDigit+3,f
  6550  093D  0DA4               	rlf	??_displayDigit+4,f
  6551  093E                     u2354:	
  6552  093E  0BA2               	decfsz	??_displayDigit+2,f
  6553  093F  293B               	goto	u2355
  6554  0940  09A3               	comf	??_displayDigit+3,f
  6555  0941  09A4               	comf	??_displayDigit+4,f
  6556  0942  3002               	movlw	2
  6557  0943  077B               	addwf	displayDigit@D1,w
  6558  0944  00A5               	movwf	??_displayDigit+5
  6559  0945  087C               	movf	displayDigit@D1+1,w
  6560  0946  1803               	skipnc
  6561  0947  3E01               	addlw	1
  6562  0948  00A6               	movwf	??_displayDigit+6
  6563  0949  0825               	movf	??_displayDigit+5,w
  6564  094A  0084               	movwf	4
  6565  094B  1783               	bsf	3,7
  6566  094C  1C26               	btfss	??_displayDigit+6,0
  6567  094D  1383               	bcf	3,7
  6568  094E  0800               	movf	0,w
  6569  094F  00A7               	movwf	??_displayDigit+7
  6570  0950  0A84               	incf	4,f
  6571  0951  0800               	movf	0,w
  6572  0952  00A8               	movwf	??_displayDigit+8
  6573  0953  0827               	movf	??_displayDigit+7,w
  6574  0954  0084               	movwf	4
  6575  0955  1783               	bsf	3,7
  6576  0956  1C28               	btfss	??_displayDigit+8,0
  6577  0957  1383               	bcf	3,7
  6578  0958  0823               	movf	??_displayDigit+3,w
  6579  0959  0580               	andwf	0,f
  6580  095A  0A84               	incf	4,f
  6581  095B  0824               	movf	??_displayDigit+4,w
  6582  095C  0580               	andwf	0,f
  6583                           
  6584                           ;lcd.c: 133: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  6585  095D  3012               	movlw	18
  6586  095E  077B               	addwf	displayDigit@D1,w
  6587  095F  00A0               	movwf	??_displayDigit
  6588  0960  087C               	movf	displayDigit@D1+1,w
  6589  0961  1803               	skipnc
  6590  0962  3E01               	addlw	1
  6591  0963  00A1               	movwf	??_displayDigit+1
  6592  0964  0820               	movf	??_displayDigit,w
  6593  0965  0084               	movwf	4
  6594  0966  1783               	bsf	3,7
  6595  0967  1C21               	btfss	??_displayDigit+1,0
  6596  0968  1383               	bcf	3,7
  6597  0969  0A00               	incf	0,w
  6598  096A  00A2               	movwf	??_displayDigit+2
  6599  096B  3001               	movlw	1
  6600  096C  00A3               	movwf	??_displayDigit+3
  6601  096D  3000               	movlw	0
  6602  096E  00A4               	movwf	??_displayDigit+4
  6603  096F  2973               	goto	u2364
  6604  0970                     u2365:	
  6605  0970  1003               	clrc
  6606  0971  0DA3               	rlf	??_displayDigit+3,f
  6607  0972  0DA4               	rlf	??_displayDigit+4,f
  6608  0973                     u2364:	
  6609  0973  0BA2               	decfsz	??_displayDigit+2,f
  6610  0974  2970               	goto	u2365
  6611  0975  3004               	movlw	4
  6612  0976  077B               	addwf	displayDigit@D1,w
  6613  0977  00A5               	movwf	??_displayDigit+5
  6614  0978  087C               	movf	displayDigit@D1+1,w
  6615  0979  1803               	skipnc
  6616  097A  3E01               	addlw	1
  6617  097B  00A6               	movwf	??_displayDigit+6
  6618  097C  0825               	movf	??_displayDigit+5,w
  6619  097D  0084               	movwf	4
  6620  097E  1783               	bsf	3,7
  6621  097F  1C26               	btfss	??_displayDigit+6,0
  6622  0980  1383               	bcf	3,7
  6623  0981  0800               	movf	0,w
  6624  0982  00A7               	movwf	??_displayDigit+7
  6625  0983  0A84               	incf	4,f
  6626  0984  0800               	movf	0,w
  6627  0985  00A8               	movwf	??_displayDigit+8
  6628  0986  0827               	movf	??_displayDigit+7,w
  6629  0987  0084               	movwf	4
  6630  0988  1783               	bsf	3,7
  6631  0989  1C28               	btfss	??_displayDigit+8,0
  6632  098A  1383               	bcf	3,7
  6633  098B  0823               	movf	??_displayDigit+3,w
  6634  098C  0480               	iorwf	0,f
  6635  098D  0A84               	incf	4,f
  6636  098E  0824               	movf	??_displayDigit+4,w
  6637  098F  0480               	iorwf	0,f
  6638                           
  6639                           ;lcd.c: 134: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  6640  0990  3014               	movlw	20
  6641  0991  077B               	addwf	displayDigit@D1,w
  6642  0992  00A0               	movwf	??_displayDigit
  6643  0993  087C               	movf	displayDigit@D1+1,w
  6644  0994  1803               	skipnc
  6645  0995  3E01               	addlw	1
  6646  0996  00A1               	movwf	??_displayDigit+1
  6647  0997  0820               	movf	??_displayDigit,w
  6648  0998  0084               	movwf	4
  6649  0999  1783               	bsf	3,7
  6650  099A  1C21               	btfss	??_displayDigit+1,0
  6651  099B  1383               	bcf	3,7
  6652  099C  0A00               	incf	0,w
  6653  099D  00A2               	movwf	??_displayDigit+2
  6654  099E  3001               	movlw	1
  6655  099F  00A3               	movwf	??_displayDigit+3
  6656  09A0  3000               	movlw	0
  6657  09A1  00A4               	movwf	??_displayDigit+4
  6658  09A2  29A6               	goto	u2374
  6659  09A3                     u2375:	
  6660  09A3  1003               	clrc
  6661  09A4  0DA3               	rlf	??_displayDigit+3,f
  6662  09A5  0DA4               	rlf	??_displayDigit+4,f
  6663  09A6                     u2374:	
  6664  09A6  0BA2               	decfsz	??_displayDigit+2,f
  6665  09A7  29A3               	goto	u2375
  6666  09A8  3006               	movlw	6
  6667  09A9  077B               	addwf	displayDigit@D1,w
  6668  09AA  00A5               	movwf	??_displayDigit+5
  6669  09AB  087C               	movf	displayDigit@D1+1,w
  6670  09AC  1803               	skipnc
  6671  09AD  3E01               	addlw	1
  6672  09AE  00A6               	movwf	??_displayDigit+6
  6673  09AF  0825               	movf	??_displayDigit+5,w
  6674  09B0  0084               	movwf	4
  6675  09B1  1783               	bsf	3,7
  6676  09B2  1C26               	btfss	??_displayDigit+6,0
  6677  09B3  1383               	bcf	3,7
  6678  09B4  0800               	movf	0,w
  6679  09B5  00A7               	movwf	??_displayDigit+7
  6680  09B6  0A84               	incf	4,f
  6681  09B7  0800               	movf	0,w
  6682  09B8  00A8               	movwf	??_displayDigit+8
  6683  09B9  0827               	movf	??_displayDigit+7,w
  6684  09BA  0084               	movwf	4
  6685  09BB  1783               	bsf	3,7
  6686  09BC  1C28               	btfss	??_displayDigit+8,0
  6687  09BD  1383               	bcf	3,7
  6688  09BE  0823               	movf	??_displayDigit+3,w
  6689  09BF  0480               	iorwf	0,f
  6690  09C0  0A84               	incf	4,f
  6691  09C1  0824               	movf	??_displayDigit+4,w
  6692  09C2  0480               	iorwf	0,f
  6693                           
  6694                           ;lcd.c: 135: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  6695  09C3  3016               	movlw	22
  6696  09C4  077B               	addwf	displayDigit@D1,w
  6697  09C5  00A0               	movwf	??_displayDigit
  6698  09C6  087C               	movf	displayDigit@D1+1,w
  6699  09C7  1803               	skipnc
  6700  09C8  3E01               	addlw	1
  6701  09C9  00A1               	movwf	??_displayDigit+1
  6702  09CA  0820               	movf	??_displayDigit,w
  6703  09CB  0084               	movwf	4
  6704  09CC  1783               	bsf	3,7
  6705  09CD  1C21               	btfss	??_displayDigit+1,0
  6706  09CE  1383               	bcf	3,7
  6707  09CF  0A00               	incf	0,w
  6708  09D0  00A2               	movwf	??_displayDigit+2
  6709  09D1  3001               	movlw	1
  6710  09D2  00A3               	movwf	??_displayDigit+3
  6711  09D3  3000               	movlw	0
  6712  09D4  00A4               	movwf	??_displayDigit+4
  6713  09D5  120A  118A  282D   	goto	u2384
  6714                           
  6715                           	psect	text5_split_8
  6716  002A                     u2385:	
  6717  002A  1003               	clrc
  6718  002B  0DA3               	rlf	??_displayDigit+3,f
  6719  002C  0DA4               	rlf	??_displayDigit+4,f
  6720  002D                     u2384:	
  6721  002D  0BA2               	decfsz	??_displayDigit+2,f
  6722  002E  282A               	goto	u2385
  6723  002F  09A3               	comf	??_displayDigit+3,f
  6724  0030  09A4               	comf	??_displayDigit+4,f
  6725  0031  3008               	movlw	8
  6726  0032  077B               	addwf	displayDigit@D1,w
  6727  0033  00A5               	movwf	??_displayDigit+5
  6728  0034  087C               	movf	displayDigit@D1+1,w
  6729  0035  1803               	skipnc
  6730  0036  3E01               	addlw	1
  6731  0037  00A6               	movwf	??_displayDigit+6
  6732  0038  0825               	movf	??_displayDigit+5,w
  6733  0039  0084               	movwf	4
  6734  003A  1783               	bsf	3,7
  6735  003B  1C26               	btfss	??_displayDigit+6,0
  6736  003C  1383               	bcf	3,7
  6737  003D  0800               	movf	0,w
  6738  003E  00A7               	movwf	??_displayDigit+7
  6739  003F  0A84               	incf	4,f
  6740  0040  0800               	movf	0,w
  6741  0041  00A8               	movwf	??_displayDigit+8
  6742  0042  0827               	movf	??_displayDigit+7,w
  6743  0043  0084               	movwf	4
  6744  0044  1783               	bsf	3,7
  6745  0045  1C28               	btfss	??_displayDigit+8,0
  6746  0046  1383               	bcf	3,7
  6747  0047  0823               	movf	??_displayDigit+3,w
  6748  0048  0580               	andwf	0,f
  6749  0049  0A84               	incf	4,f
  6750  004A  0824               	movf	??_displayDigit+4,w
  6751  004B  0580               	andwf	0,f
  6752                           
  6753                           ;lcd.c: 136: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  6754  004C  3018               	movlw	24
  6755  004D  077B               	addwf	displayDigit@D1,w
  6756  004E  00A0               	movwf	??_displayDigit
  6757  004F  087C               	movf	displayDigit@D1+1,w
  6758  0050  1803               	skipnc
  6759  0051  3E01               	addlw	1
  6760  0052  00A1               	movwf	??_displayDigit+1
  6761  0053  0820               	movf	??_displayDigit,w
  6762  0054  0084               	movwf	4
  6763  0055  1783               	bsf	3,7
  6764  0056  1C21               	btfss	??_displayDigit+1,0
  6765  0057  1383               	bcf	3,7
  6766  0058  0A00               	incf	0,w
  6767  0059  00A2               	movwf	??_displayDigit+2
  6768  005A  3001               	movlw	1
  6769  005B  00A3               	movwf	??_displayDigit+3
  6770  005C  3000               	movlw	0
  6771  005D  00A4               	movwf	??_displayDigit+4
  6772  005E  2862               	goto	u2394
  6773  005F                     u2395:	
  6774  005F  1003               	clrc
  6775  0060  0DA3               	rlf	??_displayDigit+3,f
  6776  0061  0DA4               	rlf	??_displayDigit+4,f
  6777  0062                     u2394:	
  6778  0062  0BA2               	decfsz	??_displayDigit+2,f
  6779  0063  285F               	goto	u2395
  6780  0064  300A               	movlw	10
  6781  0065  077B               	addwf	displayDigit@D1,w
  6782  0066  00A5               	movwf	??_displayDigit+5
  6783  0067  087C               	movf	displayDigit@D1+1,w
  6784  0068  1803               	skipnc
  6785  0069  3E01               	addlw	1
  6786  006A  00A6               	movwf	??_displayDigit+6
  6787  006B  0825               	movf	??_displayDigit+5,w
  6788  006C  0084               	movwf	4
  6789  006D  1783               	bsf	3,7
  6790  006E  1C26               	btfss	??_displayDigit+6,0
  6791  006F  1383               	bcf	3,7
  6792  0070  0800               	movf	0,w
  6793  0071  00A7               	movwf	??_displayDigit+7
  6794  0072  0A84               	incf	4,f
  6795  0073  0800               	movf	0,w
  6796  0074  00A8               	movwf	??_displayDigit+8
  6797  0075  0827               	movf	??_displayDigit+7,w
  6798  0076  0084               	movwf	4
  6799  0077  1783               	bsf	3,7
  6800  0078  1C28               	btfss	??_displayDigit+8,0
  6801  0079  1383               	bcf	3,7
  6802  007A  0823               	movf	??_displayDigit+3,w
  6803  007B  0480               	iorwf	0,f
  6804  007C  0A84               	incf	4,f
  6805  007D  0824               	movf	??_displayDigit+4,w
  6806  007E  0480               	iorwf	0,f
  6807                           
  6808                           ;lcd.c: 137: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  6809  007F  301A               	movlw	26
  6810  0080  077B               	addwf	displayDigit@D1,w
  6811  0081  00A0               	movwf	??_displayDigit
  6812  0082  087C               	movf	displayDigit@D1+1,w
  6813  0083  1803               	skipnc
  6814  0084  3E01               	addlw	1
  6815  0085  00A1               	movwf	??_displayDigit+1
  6816  0086  0820               	movf	??_displayDigit,w
  6817  0087  0084               	movwf	4
  6818  0088  1783               	bsf	3,7
  6819  0089  1C21               	btfss	??_displayDigit+1,0
  6820  008A  1383               	bcf	3,7
  6821  008B  0A00               	incf	0,w
  6822  008C  00A2               	movwf	??_displayDigit+2
  6823  008D  3001               	movlw	1
  6824  008E  00A3               	movwf	??_displayDigit+3
  6825  008F  3000               	movlw	0
  6826  0090  00A4               	movwf	??_displayDigit+4
  6827  0091  2895               	goto	u2404
  6828  0092                     u2405:	
  6829  0092  1003               	clrc
  6830  0093  0DA3               	rlf	??_displayDigit+3,f
  6831  0094  0DA4               	rlf	??_displayDigit+4,f
  6832  0095                     u2404:	
  6833  0095  0BA2               	decfsz	??_displayDigit+2,f
  6834  0096  2892               	goto	u2405
  6835  0097  300C               	movlw	12
  6836  0098  077B               	addwf	displayDigit@D1,w
  6837  0099  00A5               	movwf	??_displayDigit+5
  6838  009A  087C               	movf	displayDigit@D1+1,w
  6839  009B  1803               	skipnc
  6840  009C  3E01               	addlw	1
  6841  009D  00A6               	movwf	??_displayDigit+6
  6842  009E  0825               	movf	??_displayDigit+5,w
  6843  009F  0084               	movwf	4
  6844  00A0  1783               	bsf	3,7
  6845  00A1  1C26               	btfss	??_displayDigit+6,0
  6846  00A2  1383               	bcf	3,7
  6847  00A3  0800               	movf	0,w
  6848  00A4  00A7               	movwf	??_displayDigit+7
  6849  00A5  0A84               	incf	4,f
  6850  00A6  0800               	movf	0,w
  6851  00A7  00A8               	movwf	??_displayDigit+8
  6852  00A8  0827               	movf	??_displayDigit+7,w
  6853  00A9  0084               	movwf	4
  6854  00AA  1783               	bsf	3,7
  6855  00AB  1C28               	btfss	??_displayDigit+8,0
  6856  00AC  1383               	bcf	3,7
  6857  00AD  0823               	movf	??_displayDigit+3,w
  6858  00AE  0480               	iorwf	0,f
  6859  00AF  0A84               	incf	4,f
  6860  00B0  0824               	movf	??_displayDigit+4,w
  6861  00B1  0480               	iorwf	0,f
  6862                           
  6863                           ;lcd.c: 138: break;
  6864  00B2  0008               	return
  6865  00B3                     l1343:	
  6866                           ;lcd.c: 139: case 6:
  6867                           
  6868                           
  6869                           ;lcd.c: 140: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  6870  00B3  300E               	movlw	14
  6871  00B4  077B               	addwf	displayDigit@D1,w
  6872  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  6873  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  6874  00B7  00A0               	movwf	??_displayDigit
  6875  00B8  087C               	movf	displayDigit@D1+1,w
  6876  00B9  1803               	skipnc
  6877  00BA  3E01               	addlw	1
  6878  00BB  00A1               	movwf	??_displayDigit+1
  6879  00BC  0820               	movf	??_displayDigit,w
  6880  00BD  0084               	movwf	4
  6881  00BE  1783               	bsf	3,7
  6882  00BF  1C21               	btfss	??_displayDigit+1,0
  6883  00C0  1383               	bcf	3,7
  6884  00C1  0A00               	incf	0,w
  6885  00C2  00A2               	movwf	??_displayDigit+2
  6886  00C3  3001               	movlw	1
  6887  00C4  00A3               	movwf	??_displayDigit+3
  6888  00C5  3000               	movlw	0
  6889  00C6  00A4               	movwf	??_displayDigit+4
  6890  00C7  28CB               	goto	u2414
  6891  00C8                     u2415:	
  6892  00C8  1003               	clrc
  6893  00C9  0DA3               	rlf	??_displayDigit+3,f
  6894  00CA  0DA4               	rlf	??_displayDigit+4,f
  6895  00CB                     u2414:	
  6896  00CB  0BA2               	decfsz	??_displayDigit+2,f
  6897  00CC  28C8               	goto	u2415
  6898  00CD  087B               	movf	displayDigit@D1,w
  6899  00CE  0084               	movwf	4
  6900  00CF  1783               	bsf	3,7
  6901  00D0  1C7C               	btfss	displayDigit@D1+1,0
  6902  00D1  1383               	bcf	3,7
  6903  00D2  0800               	movf	0,w
  6904  00D3  00A5               	movwf	??_displayDigit+5
  6905  00D4  0A84               	incf	4,f
  6906  00D5  0800               	movf	0,w
  6907  00D6  00A6               	movwf	??_displayDigit+6
  6908  00D7  0825               	movf	??_displayDigit+5,w
  6909  00D8  0084               	movwf	4
  6910  00D9  1783               	bsf	3,7
  6911  00DA  1C26               	btfss	??_displayDigit+6,0
  6912  00DB  1383               	bcf	3,7
  6913  00DC  0823               	movf	??_displayDigit+3,w
  6914  00DD  0480               	iorwf	0,f
  6915  00DE  0A84               	incf	4,f
  6916  00DF  0824               	movf	??_displayDigit+4,w
  6917  00E0  0480               	iorwf	0,f
  6918                           
  6919                           ;lcd.c: 141: ((*D1->sb) &= ~((1UL) << (D1->bits[1])));
  6920  00E1  3010               	movlw	16
  6921  00E2  077B               	addwf	displayDigit@D1,w
  6922  00E3  00A0               	movwf	??_displayDigit
  6923  00E4  087C               	movf	displayDigit@D1+1,w
  6924  00E5  1803               	skipnc
  6925  00E6  3E01               	addlw	1
  6926  00E7  00A1               	movwf	??_displayDigit+1
  6927  00E8  0820               	movf	??_displayDigit,w
  6928  00E9  0084               	movwf	4
  6929  00EA  1783               	bsf	3,7
  6930  00EB  1C21               	btfss	??_displayDigit+1,0
  6931  00EC  1383               	bcf	3,7
  6932  00ED  0A00               	incf	0,w
  6933  00EE  00A2               	movwf	??_displayDigit+2
  6934  00EF  3001               	movlw	1
  6935  00F0  00A3               	movwf	??_displayDigit+3
  6936  00F1  3000               	movlw	0
  6937  00F2  00A4               	movwf	??_displayDigit+4
  6938  00F3  28F7               	goto	u2424
  6939  00F4                     u2425:	
  6940  00F4  1003               	clrc
  6941  00F5  0DA3               	rlf	??_displayDigit+3,f
  6942  00F6  0DA4               	rlf	??_displayDigit+4,f
  6943  00F7                     u2424:	
  6944  00F7  0BA2               	decfsz	??_displayDigit+2,f
  6945  00F8  28F4               	goto	u2425
  6946  00F9  09A3               	comf	??_displayDigit+3,f
  6947  00FA  09A4               	comf	??_displayDigit+4,f
  6948  00FB  3002               	movlw	2
  6949  00FC  077B               	addwf	displayDigit@D1,w
  6950  00FD  00A5               	movwf	??_displayDigit+5
  6951  00FE  087C               	movf	displayDigit@D1+1,w
  6952  00FF  1803               	skipnc
  6953  0100  3E01               	addlw	1
  6954  0101  00A6               	movwf	??_displayDigit+6
  6955  0102  0825               	movf	??_displayDigit+5,w
  6956  0103  0084               	movwf	4
  6957  0104  1783               	bsf	3,7
  6958  0105  1C26               	btfss	??_displayDigit+6,0
  6959  0106  1383               	bcf	3,7
  6960  0107  0800               	movf	0,w
  6961  0108  00A7               	movwf	??_displayDigit+7
  6962  0109  0A84               	incf	4,f
  6963  010A  0800               	movf	0,w
  6964  010B  00A8               	movwf	??_displayDigit+8
  6965  010C  0827               	movf	??_displayDigit+7,w
  6966  010D  0084               	movwf	4
  6967  010E  1783               	bsf	3,7
  6968  010F  1C28               	btfss	??_displayDigit+8,0
  6969  0110  1383               	bcf	3,7
  6970  0111  0823               	movf	??_displayDigit+3,w
  6971  0112  0580               	andwf	0,f
  6972  0113  0A84               	incf	4,f
  6973  0114  0824               	movf	??_displayDigit+4,w
  6974  0115  0580               	andwf	0,f
  6975                           
  6976                           ;lcd.c: 142: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  6977  0116  3012               	movlw	18
  6978  0117  077B               	addwf	displayDigit@D1,w
  6979  0118  00A0               	movwf	??_displayDigit
  6980  0119  087C               	movf	displayDigit@D1+1,w
  6981  011A  1803               	skipnc
  6982  011B  3E01               	addlw	1
  6983  011C  00A1               	movwf	??_displayDigit+1
  6984  011D  0820               	movf	??_displayDigit,w
  6985  011E  0084               	movwf	4
  6986  011F  1783               	bsf	3,7
  6987  0120  1C21               	btfss	??_displayDigit+1,0
  6988  0121  1383               	bcf	3,7
  6989  0122  0A00               	incf	0,w
  6990  0123  00A2               	movwf	??_displayDigit+2
  6991  0124  3001               	movlw	1
  6992  0125  00A3               	movwf	??_displayDigit+3
  6993  0126  3000               	movlw	0
  6994  0127  00A4               	movwf	??_displayDigit+4
  6995  0128  292C               	goto	u2434
  6996  0129                     u2435:	
  6997  0129  1003               	clrc
  6998  012A  0DA3               	rlf	??_displayDigit+3,f
  6999  012B  0DA4               	rlf	??_displayDigit+4,f
  7000  012C                     u2434:	
  7001  012C  0BA2               	decfsz	??_displayDigit+2,f
  7002  012D  2929               	goto	u2435
  7003  012E  3004               	movlw	4
  7004  012F  077B               	addwf	displayDigit@D1,w
  7005  0130  00A5               	movwf	??_displayDigit+5
  7006  0131  087C               	movf	displayDigit@D1+1,w
  7007  0132  1803               	skipnc
  7008  0133  3E01               	addlw	1
  7009  0134  00A6               	movwf	??_displayDigit+6
  7010  0135  0825               	movf	??_displayDigit+5,w
  7011  0136  0084               	movwf	4
  7012  0137  1783               	bsf	3,7
  7013  0138  1C26               	btfss	??_displayDigit+6,0
  7014  0139  1383               	bcf	3,7
  7015  013A  0800               	movf	0,w
  7016  013B  00A7               	movwf	??_displayDigit+7
  7017  013C  0A84               	incf	4,f
  7018  013D  0800               	movf	0,w
  7019  013E  00A8               	movwf	??_displayDigit+8
  7020  013F  0827               	movf	??_displayDigit+7,w
  7021  0140  0084               	movwf	4
  7022  0141  1783               	bsf	3,7
  7023  0142  1C28               	btfss	??_displayDigit+8,0
  7024  0143  1383               	bcf	3,7
  7025  0144  0823               	movf	??_displayDigit+3,w
  7026  0145  0480               	iorwf	0,f
  7027  0146  0A84               	incf	4,f
  7028  0147  0824               	movf	??_displayDigit+4,w
  7029  0148  0480               	iorwf	0,f
  7030                           
  7031                           ;lcd.c: 143: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  7032  0149  3014               	movlw	20
  7033  014A  077B               	addwf	displayDigit@D1,w
  7034  014B  00A0               	movwf	??_displayDigit
  7035  014C  087C               	movf	displayDigit@D1+1,w
  7036  014D  1803               	skipnc
  7037  014E  3E01               	addlw	1
  7038  014F  00A1               	movwf	??_displayDigit+1
  7039  0150  0820               	movf	??_displayDigit,w
  7040  0151  0084               	movwf	4
  7041  0152  1783               	bsf	3,7
  7042  0153  1C21               	btfss	??_displayDigit+1,0
  7043  0154  1383               	bcf	3,7
  7044  0155  0A00               	incf	0,w
  7045  0156  00A2               	movwf	??_displayDigit+2
  7046  0157  3001               	movlw	1
  7047  0158  00A3               	movwf	??_displayDigit+3
  7048  0159  3000               	movlw	0
  7049  015A  00A4               	movwf	??_displayDigit+4
  7050  015B  295F               	goto	u2444
  7051  015C                     u2445:	
  7052  015C  1003               	clrc
  7053  015D  0DA3               	rlf	??_displayDigit+3,f
  7054  015E  0DA4               	rlf	??_displayDigit+4,f
  7055  015F                     u2444:	
  7056  015F  0BA2               	decfsz	??_displayDigit+2,f
  7057  0160  295C               	goto	u2445
  7058  0161  3006               	movlw	6
  7059  0162  077B               	addwf	displayDigit@D1,w
  7060  0163  00A5               	movwf	??_displayDigit+5
  7061  0164  087C               	movf	displayDigit@D1+1,w
  7062  0165  1803               	skipnc
  7063  0166  3E01               	addlw	1
  7064  0167  00A6               	movwf	??_displayDigit+6
  7065  0168  0825               	movf	??_displayDigit+5,w
  7066  0169  0084               	movwf	4
  7067  016A  1783               	bsf	3,7
  7068  016B  1C26               	btfss	??_displayDigit+6,0
  7069  016C  1383               	bcf	3,7
  7070  016D  0800               	movf	0,w
  7071  016E  00A7               	movwf	??_displayDigit+7
  7072  016F  0A84               	incf	4,f
  7073  0170  0800               	movf	0,w
  7074  0171  00A8               	movwf	??_displayDigit+8
  7075  0172  0827               	movf	??_displayDigit+7,w
  7076  0173  0084               	movwf	4
  7077  0174  1783               	bsf	3,7
  7078  0175  1C28               	btfss	??_displayDigit+8,0
  7079  0176  1383               	bcf	3,7
  7080  0177  0823               	movf	??_displayDigit+3,w
  7081  0178  0480               	iorwf	0,f
  7082  0179  0A84               	incf	4,f
  7083  017A  0824               	movf	??_displayDigit+4,w
  7084  017B  0480               	iorwf	0,f
  7085                           
  7086                           ;lcd.c: 144: ((*D1->se) |= (1UL) << (D1->bits[4]));
  7087  017C  3016               	movlw	22
  7088  017D  077B               	addwf	displayDigit@D1,w
  7089  017E  00A0               	movwf	??_displayDigit
  7090  017F  087C               	movf	displayDigit@D1+1,w
  7091  0180  1803               	skipnc
  7092  0181  3E01               	addlw	1
  7093  0182  00A1               	movwf	??_displayDigit+1
  7094  0183  0820               	movf	??_displayDigit,w
  7095  0184  0084               	movwf	4
  7096  0185  1783               	bsf	3,7
  7097  0186  1C21               	btfss	??_displayDigit+1,0
  7098  0187  1383               	bcf	3,7
  7099  0188  0A00               	incf	0,w
  7100  0189  00A2               	movwf	??_displayDigit+2
  7101  018A  3001               	movlw	1
  7102  018B  00A3               	movwf	??_displayDigit+3
  7103  018C  3000               	movlw	0
  7104  018D  00A4               	movwf	??_displayDigit+4
  7105  018E  2992               	goto	u2454
  7106  018F                     u2455:	
  7107  018F  1003               	clrc
  7108  0190  0DA3               	rlf	??_displayDigit+3,f
  7109  0191  0DA4               	rlf	??_displayDigit+4,f
  7110  0192                     u2454:	
  7111  0192  0BA2               	decfsz	??_displayDigit+2,f
  7112  0193  298F               	goto	u2455
  7113  0194  3008               	movlw	8
  7114  0195  077B               	addwf	displayDigit@D1,w
  7115  0196  00A5               	movwf	??_displayDigit+5
  7116  0197  087C               	movf	displayDigit@D1+1,w
  7117  0198  1803               	skipnc
  7118  0199  3E01               	addlw	1
  7119  019A  00A6               	movwf	??_displayDigit+6
  7120  019B  0825               	movf	??_displayDigit+5,w
  7121  019C  0084               	movwf	4
  7122  019D  1783               	bsf	3,7
  7123  019E  1C26               	btfss	??_displayDigit+6,0
  7124  019F  1383               	bcf	3,7
  7125  01A0  0800               	movf	0,w
  7126  01A1  00A7               	movwf	??_displayDigit+7
  7127  01A2  0A84               	incf	4,f
  7128  01A3  0800               	movf	0,w
  7129  01A4  00A8               	movwf	??_displayDigit+8
  7130  01A5  0827               	movf	??_displayDigit+7,w
  7131  01A6  0084               	movwf	4
  7132  01A7  1783               	bsf	3,7
  7133  01A8  1C28               	btfss	??_displayDigit+8,0
  7134  01A9  1383               	bcf	3,7
  7135  01AA  0823               	movf	??_displayDigit+3,w
  7136  01AB  0480               	iorwf	0,f
  7137  01AC  0A84               	incf	4,f
  7138  01AD  0824               	movf	??_displayDigit+4,w
  7139  01AE  0480               	iorwf	0,f
  7140                           
  7141                           ;lcd.c: 145: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  7142  01AF  3018               	movlw	24
  7143  01B0  077B               	addwf	displayDigit@D1,w
  7144  01B1  00A0               	movwf	??_displayDigit
  7145  01B2  087C               	movf	displayDigit@D1+1,w
  7146  01B3  1803               	skipnc
  7147  01B4  3E01               	addlw	1
  7148  01B5  00A1               	movwf	??_displayDigit+1
  7149  01B6  0820               	movf	??_displayDigit,w
  7150  01B7  0084               	movwf	4
  7151  01B8  1783               	bsf	3,7
  7152  01B9  1C21               	btfss	??_displayDigit+1,0
  7153  01BA  1383               	bcf	3,7
  7154  01BB  0A00               	incf	0,w
  7155  01BC  00A2               	movwf	??_displayDigit+2
  7156  01BD  3001               	movlw	1
  7157  01BE  00A3               	movwf	??_displayDigit+3
  7158  01BF  3000               	movlw	0
  7159  01C0  00A4               	movwf	??_displayDigit+4
  7160  01C1  29C5               	goto	u2464
  7161  01C2                     u2465:	
  7162  01C2  1003               	clrc
  7163  01C3  0DA3               	rlf	??_displayDigit+3,f
  7164  01C4  0DA4               	rlf	??_displayDigit+4,f
  7165  01C5                     u2464:	
  7166  01C5  0BA2               	decfsz	??_displayDigit+2,f
  7167  01C6  29C2               	goto	u2465
  7168  01C7  300A               	movlw	10
  7169  01C8  077B               	addwf	displayDigit@D1,w
  7170  01C9  00A5               	movwf	??_displayDigit+5
  7171  01CA  087C               	movf	displayDigit@D1+1,w
  7172  01CB  1803               	skipnc
  7173  01CC  3E01               	addlw	1
  7174  01CD  00A6               	movwf	??_displayDigit+6
  7175  01CE  0825               	movf	??_displayDigit+5,w
  7176  01CF  0084               	movwf	4
  7177  01D0  1783               	bsf	3,7
  7178  01D1  1C26               	btfss	??_displayDigit+6,0
  7179  01D2  1383               	bcf	3,7
  7180  01D3  0800               	movf	0,w
  7181  01D4  00A7               	movwf	??_displayDigit+7
  7182  01D5  0A84               	incf	4,f
  7183  01D6  0800               	movf	0,w
  7184  01D7  00A8               	movwf	??_displayDigit+8
  7185  01D8  0827               	movf	??_displayDigit+7,w
  7186  01D9  0084               	movwf	4
  7187  01DA  1783               	bsf	3,7
  7188  01DB  1C28               	btfss	??_displayDigit+8,0
  7189  01DC  1383               	bcf	3,7
  7190  01DD  0823               	movf	??_displayDigit+3,w
  7191  01DE  0480               	iorwf	0,f
  7192  01DF  0A84               	incf	4,f
  7193  01E0  0824               	movf	??_displayDigit+4,w
  7194  01E1  0480               	iorwf	0,f
  7195                           
  7196                           ;lcd.c: 146: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  7197  01E2  301A               	movlw	26
  7198  01E3  077B               	addwf	displayDigit@D1,w
  7199  01E4  00A0               	movwf	??_displayDigit
  7200  01E5  087C               	movf	displayDigit@D1+1,w
  7201  01E6  1803               	skipnc
  7202  01E7  3E01               	addlw	1
  7203  01E8  00A1               	movwf	??_displayDigit+1
  7204  01E9  0820               	movf	??_displayDigit,w
  7205  01EA  0084               	movwf	4
  7206  01EB  1783               	bsf	3,7
  7207  01EC  1C21               	btfss	??_displayDigit+1,0
  7208  01ED  1383               	bcf	3,7
  7209  01EE  0A00               	incf	0,w
  7210  01EF  00A2               	movwf	??_displayDigit+2
  7211  01F0  3001               	movlw	1
  7212  01F1  00A3               	movwf	??_displayDigit+3
  7213  01F2  3000               	movlw	0
  7214  01F3  00A4               	movwf	??_displayDigit+4
  7215  01F4  29F8               	goto	u2474
  7216  01F5                     u2475:	
  7217  01F5  1003               	clrc
  7218  01F6  0DA3               	rlf	??_displayDigit+3,f
  7219  01F7  0DA4               	rlf	??_displayDigit+4,f
  7220  01F8                     u2474:	
  7221  01F8  0BA2               	decfsz	??_displayDigit+2,f
  7222  01F9  29F5               	goto	u2475
  7223  01FA  300C               	movlw	12
  7224  01FB  077B               	addwf	displayDigit@D1,w
  7225  01FC  00A5               	movwf	??_displayDigit+5
  7226  01FD  087C               	movf	displayDigit@D1+1,w
  7227  01FE  1803               	skipnc
  7228  01FF  3E01               	addlw	1
  7229  0200  00A6               	movwf	??_displayDigit+6
  7230  0201  0825               	movf	??_displayDigit+5,w
  7231  0202  0084               	movwf	4
  7232  0203  1783               	bsf	3,7
  7233  0204  1C26               	btfss	??_displayDigit+6,0
  7234  0205  1383               	bcf	3,7
  7235  0206  0800               	movf	0,w
  7236  0207  00A7               	movwf	??_displayDigit+7
  7237  0208  0A84               	incf	4,f
  7238  0209  0800               	movf	0,w
  7239  020A  00A8               	movwf	??_displayDigit+8
  7240  020B  0827               	movf	??_displayDigit+7,w
  7241  020C  0084               	movwf	4
  7242  020D  1783               	bsf	3,7
  7243  020E  1C28               	btfss	??_displayDigit+8,0
  7244  020F  1383               	bcf	3,7
  7245  0210  0823               	movf	??_displayDigit+3,w
  7246  0211  0480               	iorwf	0,f
  7247  0212  0A84               	incf	4,f
  7248  0213  0824               	movf	??_displayDigit+4,w
  7249  0214  0480               	iorwf	0,f
  7250                           
  7251                           ;lcd.c: 147: break;
  7252  0215  0008               	return
  7253  0216                     l1345:	
  7254                           ;lcd.c: 148: case 7:
  7255                           
  7256                           
  7257                           ;lcd.c: 149: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  7258  0216  300E               	movlw	14
  7259  0217  077B               	addwf	displayDigit@D1,w
  7260  0218  1283               	bcf	3,5	;RP0=0, select bank0
  7261  0219  1303               	bcf	3,6	;RP1=0, select bank0
  7262  021A  00A0               	movwf	??_displayDigit
  7263  021B  087C               	movf	displayDigit@D1+1,w
  7264  021C  1803               	skipnc
  7265  021D  3E01               	addlw	1
  7266  021E  00A1               	movwf	??_displayDigit+1
  7267  021F  0820               	movf	??_displayDigit,w
  7268  0220  0084               	movwf	4
  7269  0221  1783               	bsf	3,7
  7270  0222  1C21               	btfss	??_displayDigit+1,0
  7271  0223  1383               	bcf	3,7
  7272  0224  0A00               	incf	0,w
  7273  0225  00A2               	movwf	??_displayDigit+2
  7274  0226  3001               	movlw	1
  7275  0227  00A3               	movwf	??_displayDigit+3
  7276  0228  3000               	movlw	0
  7277  0229  00A4               	movwf	??_displayDigit+4
  7278  022A  2A2E               	goto	u2484
  7279  022B                     u2485:	
  7280  022B  1003               	clrc
  7281  022C  0DA3               	rlf	??_displayDigit+3,f
  7282  022D  0DA4               	rlf	??_displayDigit+4,f
  7283  022E                     u2484:	
  7284  022E  0BA2               	decfsz	??_displayDigit+2,f
  7285  022F  2A2B               	goto	u2485
  7286  0230  087B               	movf	displayDigit@D1,w
  7287  0231  0084               	movwf	4
  7288  0232  1783               	bsf	3,7
  7289  0233  1C7C               	btfss	displayDigit@D1+1,0
  7290  0234  1383               	bcf	3,7
  7291  0235  0800               	movf	0,w
  7292  0236  00A5               	movwf	??_displayDigit+5
  7293  0237  0A84               	incf	4,f
  7294  0238  0800               	movf	0,w
  7295  0239  00A6               	movwf	??_displayDigit+6
  7296  023A  0825               	movf	??_displayDigit+5,w
  7297  023B  0084               	movwf	4
  7298  023C  1783               	bsf	3,7
  7299  023D  1C26               	btfss	??_displayDigit+6,0
  7300  023E  1383               	bcf	3,7
  7301  023F  0823               	movf	??_displayDigit+3,w
  7302  0240  0480               	iorwf	0,f
  7303  0241  0A84               	incf	4,f
  7304  0242  0824               	movf	??_displayDigit+4,w
  7305  0243  0480               	iorwf	0,f
  7306                           
  7307                           ;lcd.c: 150: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  7308  0244  3010               	movlw	16
  7309  0245  077B               	addwf	displayDigit@D1,w
  7310  0246  00A0               	movwf	??_displayDigit
  7311  0247  087C               	movf	displayDigit@D1+1,w
  7312  0248  1803               	skipnc
  7313  0249  3E01               	addlw	1
  7314  024A  00A1               	movwf	??_displayDigit+1
  7315  024B  0820               	movf	??_displayDigit,w
  7316  024C  0084               	movwf	4
  7317  024D  1783               	bsf	3,7
  7318  024E  1C21               	btfss	??_displayDigit+1,0
  7319  024F  1383               	bcf	3,7
  7320  0250  0A00               	incf	0,w
  7321  0251  00A2               	movwf	??_displayDigit+2
  7322  0252  3001               	movlw	1
  7323  0253  00A3               	movwf	??_displayDigit+3
  7324  0254  3000               	movlw	0
  7325  0255  00A4               	movwf	??_displayDigit+4
  7326  0256  2A5A               	goto	u2494
  7327  0257                     u2495:	
  7328  0257  1003               	clrc
  7329  0258  0DA3               	rlf	??_displayDigit+3,f
  7330  0259  0DA4               	rlf	??_displayDigit+4,f
  7331  025A                     u2494:	
  7332  025A  0BA2               	decfsz	??_displayDigit+2,f
  7333  025B  2A57               	goto	u2495
  7334  025C  3002               	movlw	2
  7335  025D  077B               	addwf	displayDigit@D1,w
  7336  025E  00A5               	movwf	??_displayDigit+5
  7337  025F  087C               	movf	displayDigit@D1+1,w
  7338  0260  1803               	skipnc
  7339  0261  3E01               	addlw	1
  7340  0262  00A6               	movwf	??_displayDigit+6
  7341  0263  0825               	movf	??_displayDigit+5,w
  7342  0264  0084               	movwf	4
  7343  0265  1783               	bsf	3,7
  7344  0266  1C26               	btfss	??_displayDigit+6,0
  7345  0267  1383               	bcf	3,7
  7346  0268  0800               	movf	0,w
  7347  0269  00A7               	movwf	??_displayDigit+7
  7348  026A  0A84               	incf	4,f
  7349  026B  0800               	movf	0,w
  7350  026C  00A8               	movwf	??_displayDigit+8
  7351  026D  0827               	movf	??_displayDigit+7,w
  7352  026E  0084               	movwf	4
  7353  026F  1783               	bsf	3,7
  7354  0270  1C28               	btfss	??_displayDigit+8,0
  7355  0271  1383               	bcf	3,7
  7356  0272  0823               	movf	??_displayDigit+3,w
  7357  0273  0480               	iorwf	0,f
  7358  0274  0A84               	incf	4,f
  7359  0275  0824               	movf	??_displayDigit+4,w
  7360  0276  0480               	iorwf	0,f
  7361                           
  7362                           ;lcd.c: 151: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  7363  0277  3012               	movlw	18
  7364  0278  077B               	addwf	displayDigit@D1,w
  7365  0279  00A0               	movwf	??_displayDigit
  7366  027A  087C               	movf	displayDigit@D1+1,w
  7367  027B  1803               	skipnc
  7368  027C  3E01               	addlw	1
  7369  027D  00A1               	movwf	??_displayDigit+1
  7370  027E  0820               	movf	??_displayDigit,w
  7371  027F  0084               	movwf	4
  7372  0280  1783               	bsf	3,7
  7373  0281  1C21               	btfss	??_displayDigit+1,0
  7374  0282  1383               	bcf	3,7
  7375  0283  0A00               	incf	0,w
  7376  0284  00A2               	movwf	??_displayDigit+2
  7377  0285  3001               	movlw	1
  7378  0286  00A3               	movwf	??_displayDigit+3
  7379  0287  3000               	movlw	0
  7380  0288  00A4               	movwf	??_displayDigit+4
  7381  0289  2A8D               	goto	u2504
  7382  028A                     u2505:	
  7383  028A  1003               	clrc
  7384  028B  0DA3               	rlf	??_displayDigit+3,f
  7385  028C  0DA4               	rlf	??_displayDigit+4,f
  7386  028D                     u2504:	
  7387  028D  0BA2               	decfsz	??_displayDigit+2,f
  7388  028E  2A8A               	goto	u2505
  7389  028F  3004               	movlw	4
  7390  0290  077B               	addwf	displayDigit@D1,w
  7391  0291  00A5               	movwf	??_displayDigit+5
  7392  0292  087C               	movf	displayDigit@D1+1,w
  7393  0293  1803               	skipnc
  7394  0294  3E01               	addlw	1
  7395  0295  00A6               	movwf	??_displayDigit+6
  7396  0296  0825               	movf	??_displayDigit+5,w
  7397  0297  0084               	movwf	4
  7398  0298  1783               	bsf	3,7
  7399  0299  1C26               	btfss	??_displayDigit+6,0
  7400  029A  1383               	bcf	3,7
  7401  029B  0800               	movf	0,w
  7402  029C  00A7               	movwf	??_displayDigit+7
  7403  029D  0A84               	incf	4,f
  7404  029E  0800               	movf	0,w
  7405  029F  00A8               	movwf	??_displayDigit+8
  7406  02A0  0827               	movf	??_displayDigit+7,w
  7407  02A1  0084               	movwf	4
  7408  02A2  1783               	bsf	3,7
  7409  02A3  1C28               	btfss	??_displayDigit+8,0
  7410  02A4  1383               	bcf	3,7
  7411  02A5  0823               	movf	??_displayDigit+3,w
  7412  02A6  0480               	iorwf	0,f
  7413  02A7  0A84               	incf	4,f
  7414  02A8  0824               	movf	??_displayDigit+4,w
  7415  02A9  0480               	iorwf	0,f
  7416                           
  7417                           ;lcd.c: 152: ((*D1->sd) &= ~((1UL) << (D1->bits[3])));
  7418  02AA  3014               	movlw	20
  7419  02AB  077B               	addwf	displayDigit@D1,w
  7420  02AC  00A0               	movwf	??_displayDigit
  7421  02AD  087C               	movf	displayDigit@D1+1,w
  7422  02AE  1803               	skipnc
  7423  02AF  3E01               	addlw	1
  7424  02B0  00A1               	movwf	??_displayDigit+1
  7425  02B1  0820               	movf	??_displayDigit,w
  7426  02B2  0084               	movwf	4
  7427  02B3  1783               	bsf	3,7
  7428  02B4  1C21               	btfss	??_displayDigit+1,0
  7429  02B5  1383               	bcf	3,7
  7430  02B6  0A00               	incf	0,w
  7431  02B7  00A2               	movwf	??_displayDigit+2
  7432  02B8  3001               	movlw	1
  7433  02B9  00A3               	movwf	??_displayDigit+3
  7434  02BA  3000               	movlw	0
  7435  02BB  00A4               	movwf	??_displayDigit+4
  7436  02BC  2AC0               	goto	u2514
  7437  02BD                     u2515:	
  7438  02BD  1003               	clrc
  7439  02BE  0DA3               	rlf	??_displayDigit+3,f
  7440  02BF  0DA4               	rlf	??_displayDigit+4,f
  7441  02C0                     u2514:	
  7442  02C0  0BA2               	decfsz	??_displayDigit+2,f
  7443  02C1  2ABD               	goto	u2515
  7444  02C2  09A3               	comf	??_displayDigit+3,f
  7445  02C3  09A4               	comf	??_displayDigit+4,f
  7446  02C4  3006               	movlw	6
  7447  02C5  077B               	addwf	displayDigit@D1,w
  7448  02C6  00A5               	movwf	??_displayDigit+5
  7449  02C7  087C               	movf	displayDigit@D1+1,w
  7450  02C8  1803               	skipnc
  7451  02C9  3E01               	addlw	1
  7452  02CA  00A6               	movwf	??_displayDigit+6
  7453  02CB  0825               	movf	??_displayDigit+5,w
  7454  02CC  0084               	movwf	4
  7455  02CD  1783               	bsf	3,7
  7456  02CE  1C26               	btfss	??_displayDigit+6,0
  7457  02CF  1383               	bcf	3,7
  7458  02D0  0800               	movf	0,w
  7459  02D1  00A7               	movwf	??_displayDigit+7
  7460  02D2  0A84               	incf	4,f
  7461  02D3  0800               	movf	0,w
  7462  02D4  00A8               	movwf	??_displayDigit+8
  7463  02D5  0827               	movf	??_displayDigit+7,w
  7464  02D6  0084               	movwf	4
  7465  02D7  1783               	bsf	3,7
  7466  02D8  1C28               	btfss	??_displayDigit+8,0
  7467  02D9  1383               	bcf	3,7
  7468  02DA  0823               	movf	??_displayDigit+3,w
  7469  02DB  0580               	andwf	0,f
  7470  02DC  0A84               	incf	4,f
  7471  02DD  0824               	movf	??_displayDigit+4,w
  7472  02DE  0580               	andwf	0,f
  7473                           
  7474                           ;lcd.c: 153: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  7475  02DF  3016               	movlw	22
  7476  02E0  077B               	addwf	displayDigit@D1,w
  7477  02E1  00A0               	movwf	??_displayDigit
  7478  02E2  087C               	movf	displayDigit@D1+1,w
  7479  02E3  1803               	skipnc
  7480  02E4  3E01               	addlw	1
  7481  02E5  00A1               	movwf	??_displayDigit+1
  7482  02E6  0820               	movf	??_displayDigit,w
  7483  02E7  0084               	movwf	4
  7484  02E8  1783               	bsf	3,7
  7485  02E9  1C21               	btfss	??_displayDigit+1,0
  7486  02EA  1383               	bcf	3,7
  7487  02EB  0A00               	incf	0,w
  7488  02EC  00A2               	movwf	??_displayDigit+2
  7489  02ED  3001               	movlw	1
  7490  02EE  00A3               	movwf	??_displayDigit+3
  7491  02EF  3000               	movlw	0
  7492  02F0  00A4               	movwf	??_displayDigit+4
  7493  02F1  2AF5               	goto	u2524
  7494  02F2                     u2525:	
  7495  02F2  1003               	clrc
  7496  02F3  0DA3               	rlf	??_displayDigit+3,f
  7497  02F4  0DA4               	rlf	??_displayDigit+4,f
  7498  02F5                     u2524:	
  7499  02F5  0BA2               	decfsz	??_displayDigit+2,f
  7500  02F6  2AF2               	goto	u2525
  7501  02F7  09A3               	comf	??_displayDigit+3,f
  7502  02F8  09A4               	comf	??_displayDigit+4,f
  7503  02F9  3008               	movlw	8
  7504  02FA  077B               	addwf	displayDigit@D1,w
  7505  02FB  00A5               	movwf	??_displayDigit+5
  7506  02FC  087C               	movf	displayDigit@D1+1,w
  7507  02FD  1803               	skipnc
  7508  02FE  3E01               	addlw	1
  7509  02FF  00A6               	movwf	??_displayDigit+6
  7510  0300  0825               	movf	??_displayDigit+5,w
  7511  0301  0084               	movwf	4
  7512  0302  1783               	bsf	3,7
  7513  0303  1C26               	btfss	??_displayDigit+6,0
  7514  0304  1383               	bcf	3,7
  7515  0305  0800               	movf	0,w
  7516  0306  00A7               	movwf	??_displayDigit+7
  7517  0307  0A84               	incf	4,f
  7518  0308  0800               	movf	0,w
  7519  0309  00A8               	movwf	??_displayDigit+8
  7520  030A  0827               	movf	??_displayDigit+7,w
  7521  030B  0084               	movwf	4
  7522  030C  1783               	bsf	3,7
  7523  030D  1C28               	btfss	??_displayDigit+8,0
  7524  030E  1383               	bcf	3,7
  7525  030F  0823               	movf	??_displayDigit+3,w
  7526  0310  0580               	andwf	0,f
  7527  0311  0A84               	incf	4,f
  7528  0312  0824               	movf	??_displayDigit+4,w
  7529  0313  0580               	andwf	0,f
  7530                           
  7531                           ;lcd.c: 154: ((*D1->sf) &= ~((1UL) << (D1->bits[5])));
  7532  0314  3018               	movlw	24
  7533  0315  077B               	addwf	displayDigit@D1,w
  7534  0316  00A0               	movwf	??_displayDigit
  7535  0317  087C               	movf	displayDigit@D1+1,w
  7536  0318  1803               	skipnc
  7537  0319  3E01               	addlw	1
  7538  031A  00A1               	movwf	??_displayDigit+1
  7539  031B  0820               	movf	??_displayDigit,w
  7540  031C  0084               	movwf	4
  7541  031D  1783               	bsf	3,7
  7542  031E  1C21               	btfss	??_displayDigit+1,0
  7543  031F  1383               	bcf	3,7
  7544  0320  0A00               	incf	0,w
  7545  0321  00A2               	movwf	??_displayDigit+2
  7546  0322  3001               	movlw	1
  7547  0323  00A3               	movwf	??_displayDigit+3
  7548  0324  3000               	movlw	0
  7549  0325  00A4               	movwf	??_displayDigit+4
  7550  0326  2B2A               	goto	u2534
  7551  0327                     u2535:	
  7552  0327  1003               	clrc
  7553  0328  0DA3               	rlf	??_displayDigit+3,f
  7554  0329  0DA4               	rlf	??_displayDigit+4,f
  7555  032A                     u2534:	
  7556  032A  0BA2               	decfsz	??_displayDigit+2,f
  7557  032B  2B27               	goto	u2535
  7558  032C  09A3               	comf	??_displayDigit+3,f
  7559  032D  09A4               	comf	??_displayDigit+4,f
  7560  032E  300A               	movlw	10
  7561  032F  077B               	addwf	displayDigit@D1,w
  7562  0330  00A5               	movwf	??_displayDigit+5
  7563  0331  087C               	movf	displayDigit@D1+1,w
  7564  0332  1803               	skipnc
  7565  0333  3E01               	addlw	1
  7566  0334  00A6               	movwf	??_displayDigit+6
  7567  0335  0825               	movf	??_displayDigit+5,w
  7568  0336  0084               	movwf	4
  7569  0337  1783               	bsf	3,7
  7570  0338  1C26               	btfss	??_displayDigit+6,0
  7571  0339  1383               	bcf	3,7
  7572  033A  0800               	movf	0,w
  7573  033B  00A7               	movwf	??_displayDigit+7
  7574  033C  0A84               	incf	4,f
  7575  033D  0800               	movf	0,w
  7576  033E  00A8               	movwf	??_displayDigit+8
  7577  033F  0827               	movf	??_displayDigit+7,w
  7578  0340  0084               	movwf	4
  7579  0341  1783               	bsf	3,7
  7580  0342  1C28               	btfss	??_displayDigit+8,0
  7581  0343  1383               	bcf	3,7
  7582  0344  0823               	movf	??_displayDigit+3,w
  7583  0345  0580               	andwf	0,f
  7584  0346  0A84               	incf	4,f
  7585  0347  0824               	movf	??_displayDigit+4,w
  7586  0348  0580               	andwf	0,f
  7587                           
  7588                           ;lcd.c: 155: ((*D1->sg) &= ~((1UL) << (D1->bits[6])));
  7589  0349  301A               	movlw	26
  7590  034A  077B               	addwf	displayDigit@D1,w
  7591  034B  00A0               	movwf	??_displayDigit
  7592  034C  087C               	movf	displayDigit@D1+1,w
  7593  034D  1803               	skipnc
  7594  034E  3E01               	addlw	1
  7595  034F  00A1               	movwf	??_displayDigit+1
  7596  0350  0820               	movf	??_displayDigit,w
  7597  0351  0084               	movwf	4
  7598  0352  1783               	bsf	3,7
  7599  0353  1C21               	btfss	??_displayDigit+1,0
  7600  0354  1383               	bcf	3,7
  7601  0355  0A00               	incf	0,w
  7602  0356  00A2               	movwf	??_displayDigit+2
  7603  0357  3001               	movlw	1
  7604  0358  00A3               	movwf	??_displayDigit+3
  7605  0359  3000               	movlw	0
  7606  035A  00A4               	movwf	??_displayDigit+4
  7607  035B  2B5F               	goto	u2544
  7608  035C                     u2545:	
  7609  035C  1003               	clrc
  7610  035D  0DA3               	rlf	??_displayDigit+3,f
  7611  035E  0DA4               	rlf	??_displayDigit+4,f
  7612  035F                     u2544:	
  7613  035F  0BA2               	decfsz	??_displayDigit+2,f
  7614  0360  2B5C               	goto	u2545
  7615  0361  09A3               	comf	??_displayDigit+3,f
  7616  0362  09A4               	comf	??_displayDigit+4,f
  7617  0363  300C               	movlw	12
  7618  0364  077B               	addwf	displayDigit@D1,w
  7619  0365  00A5               	movwf	??_displayDigit+5
  7620  0366  087C               	movf	displayDigit@D1+1,w
  7621  0367  1803               	skipnc
  7622  0368  3E01               	addlw	1
  7623  0369  00A6               	movwf	??_displayDigit+6
  7624  036A  0825               	movf	??_displayDigit+5,w
  7625  036B  0084               	movwf	4
  7626  036C  1783               	bsf	3,7
  7627  036D  1C26               	btfss	??_displayDigit+6,0
  7628  036E  1383               	bcf	3,7
  7629  036F  0800               	movf	0,w
  7630  0370  00A7               	movwf	??_displayDigit+7
  7631  0371  0A84               	incf	4,f
  7632  0372  0800               	movf	0,w
  7633  0373  00A8               	movwf	??_displayDigit+8
  7634  0374  0827               	movf	??_displayDigit+7,w
  7635  0375  0084               	movwf	4
  7636  0376  1783               	bsf	3,7
  7637  0377  1C28               	btfss	??_displayDigit+8,0
  7638  0378  1383               	bcf	3,7
  7639  0379  0823               	movf	??_displayDigit+3,w
  7640  037A  0580               	andwf	0,f
  7641  037B  0A84               	incf	4,f
  7642  037C  0824               	movf	??_displayDigit+4,w
  7643  037D  0580               	andwf	0,f
  7644                           
  7645                           ;lcd.c: 156: break;
  7646  037E  0008               	return
  7647  037F                     l1347:	
  7648                           ;lcd.c: 157: case 8:
  7649                           
  7650                           
  7651                           ;lcd.c: 158: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  7652  037F  300E               	movlw	14
  7653  0380  077B               	addwf	displayDigit@D1,w
  7654  0381  1283               	bcf	3,5	;RP0=0, select bank0
  7655  0382  1303               	bcf	3,6	;RP1=0, select bank0
  7656  0383  00A0               	movwf	??_displayDigit
  7657  0384  087C               	movf	displayDigit@D1+1,w
  7658  0385  1803               	skipnc
  7659  0386  3E01               	addlw	1
  7660  0387  00A1               	movwf	??_displayDigit+1
  7661  0388  0820               	movf	??_displayDigit,w
  7662  0389  0084               	movwf	4
  7663  038A  1783               	bsf	3,7
  7664  038B  1C21               	btfss	??_displayDigit+1,0
  7665  038C  1383               	bcf	3,7
  7666  038D  0A00               	incf	0,w
  7667  038E  00A2               	movwf	??_displayDigit+2
  7668  038F  3001               	movlw	1
  7669  0390  00A3               	movwf	??_displayDigit+3
  7670  0391  3000               	movlw	0
  7671  0392  00A4               	movwf	??_displayDigit+4
  7672  0393  2B97               	goto	u2554
  7673  0394                     u2555:	
  7674  0394  1003               	clrc
  7675  0395  0DA3               	rlf	??_displayDigit+3,f
  7676  0396  0DA4               	rlf	??_displayDigit+4,f
  7677  0397                     u2554:	
  7678  0397  0BA2               	decfsz	??_displayDigit+2,f
  7679  0398  2B94               	goto	u2555
  7680  0399  087B               	movf	displayDigit@D1,w
  7681  039A  0084               	movwf	4
  7682  039B  1783               	bsf	3,7
  7683  039C  1C7C               	btfss	displayDigit@D1+1,0
  7684  039D  1383               	bcf	3,7
  7685  039E  0800               	movf	0,w
  7686  039F  00A5               	movwf	??_displayDigit+5
  7687  03A0  0A84               	incf	4,f
  7688  03A1  0800               	movf	0,w
  7689  03A2  00A6               	movwf	??_displayDigit+6
  7690  03A3  0825               	movf	??_displayDigit+5,w
  7691  03A4  0084               	movwf	4
  7692  03A5  1783               	bsf	3,7
  7693  03A6  1C26               	btfss	??_displayDigit+6,0
  7694  03A7  1383               	bcf	3,7
  7695  03A8  0823               	movf	??_displayDigit+3,w
  7696  03A9  0480               	iorwf	0,f
  7697  03AA  0A84               	incf	4,f
  7698  03AB  0824               	movf	??_displayDigit+4,w
  7699  03AC  0480               	iorwf	0,f
  7700                           
  7701                           ;lcd.c: 159: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  7702  03AD  3010               	movlw	16
  7703  03AE  077B               	addwf	displayDigit@D1,w
  7704  03AF  00A0               	movwf	??_displayDigit
  7705  03B0  087C               	movf	displayDigit@D1+1,w
  7706  03B1  1803               	skipnc
  7707  03B2  3E01               	addlw	1
  7708  03B3  00A1               	movwf	??_displayDigit+1
  7709  03B4  0820               	movf	??_displayDigit,w
  7710  03B5  0084               	movwf	4
  7711  03B6  1783               	bsf	3,7
  7712  03B7  1C21               	btfss	??_displayDigit+1,0
  7713  03B8  1383               	bcf	3,7
  7714  03B9  0A00               	incf	0,w
  7715  03BA  00A2               	movwf	??_displayDigit+2
  7716  03BB  3001               	movlw	1
  7717  03BC  00A3               	movwf	??_displayDigit+3
  7718  03BD  3000               	movlw	0
  7719  03BE  00A4               	movwf	??_displayDigit+4
  7720  03BF  2BC3               	goto	u2564
  7721  03C0                     u2565:	
  7722  03C0  1003               	clrc
  7723  03C1  0DA3               	rlf	??_displayDigit+3,f
  7724  03C2  0DA4               	rlf	??_displayDigit+4,f
  7725  03C3                     u2564:	
  7726  03C3  0BA2               	decfsz	??_displayDigit+2,f
  7727  03C4  2BC0               	goto	u2565
  7728  03C5  3002               	movlw	2
  7729  03C6  077B               	addwf	displayDigit@D1,w
  7730  03C7  00A5               	movwf	??_displayDigit+5
  7731  03C8  087C               	movf	displayDigit@D1+1,w
  7732  03C9  1803               	skipnc
  7733  03CA  3E01               	addlw	1
  7734  03CB  00A6               	movwf	??_displayDigit+6
  7735  03CC  0825               	movf	??_displayDigit+5,w
  7736  03CD  0084               	movwf	4
  7737  03CE  1783               	bsf	3,7
  7738  03CF  1C26               	btfss	??_displayDigit+6,0
  7739  03D0  1383               	bcf	3,7
  7740  03D1  0800               	movf	0,w
  7741  03D2  00A7               	movwf	??_displayDigit+7
  7742  03D3  0A84               	incf	4,f
  7743  03D4  0800               	movf	0,w
  7744  03D5  00A8               	movwf	??_displayDigit+8
  7745  03D6  0827               	movf	??_displayDigit+7,w
  7746  03D7  0084               	movwf	4
  7747  03D8  1783               	bsf	3,7
  7748  03D9  1C28               	btfss	??_displayDigit+8,0
  7749  03DA  1383               	bcf	3,7
  7750  03DB  0823               	movf	??_displayDigit+3,w
  7751  03DC  0480               	iorwf	0,f
  7752  03DD  0A84               	incf	4,f
  7753  03DE  0824               	movf	??_displayDigit+4,w
  7754  03DF  0480               	iorwf	0,f
  7755                           
  7756                           ;lcd.c: 160: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  7757  03E0  3012               	movlw	18
  7758  03E1  077B               	addwf	displayDigit@D1,w
  7759  03E2  00A0               	movwf	??_displayDigit
  7760  03E3  087C               	movf	displayDigit@D1+1,w
  7761  03E4  1803               	skipnc
  7762  03E5  3E01               	addlw	1
  7763  03E6  00A1               	movwf	??_displayDigit+1
  7764  03E7  0820               	movf	??_displayDigit,w
  7765  03E8  0084               	movwf	4
  7766  03E9  1783               	bsf	3,7
  7767  03EA  1C21               	btfss	??_displayDigit+1,0
  7768  03EB  1383               	bcf	3,7
  7769  03EC  0A00               	incf	0,w
  7770  03ED  00A2               	movwf	??_displayDigit+2
  7771  03EE  3001               	movlw	1
  7772  03EF  00A3               	movwf	??_displayDigit+3
  7773  03F0  3000               	movlw	0
  7774  03F1  00A4               	movwf	??_displayDigit+4
  7775  03F2  2BF6               	goto	u2574
  7776  03F3                     u2575:	
  7777  03F3  1003               	clrc
  7778  03F4  0DA3               	rlf	??_displayDigit+3,f
  7779  03F5  0DA4               	rlf	??_displayDigit+4,f
  7780  03F6                     u2574:	
  7781  03F6  0BA2               	decfsz	??_displayDigit+2,f
  7782  03F7  2BF3               	goto	u2575
  7783  03F8  3004               	movlw	4
  7784  03F9  077B               	addwf	displayDigit@D1,w
  7785  03FA  00A5               	movwf	??_displayDigit+5
  7786  03FB  087C               	movf	displayDigit@D1+1,w
  7787  03FC  1803               	skipnc
  7788  03FD  3E01               	addlw	1
  7789  03FE  00A6               	movwf	??_displayDigit+6
  7790  03FF  0825               	movf	??_displayDigit+5,w
  7791  0400  0084               	movwf	4
  7792  0401  1783               	bsf	3,7
  7793  0402  1C26               	btfss	??_displayDigit+6,0
  7794  0403  1383               	bcf	3,7
  7795  0404  0800               	movf	0,w
  7796  0405  00A7               	movwf	??_displayDigit+7
  7797  0406  0A84               	incf	4,f
  7798  0407  0800               	movf	0,w
  7799  0408  00A8               	movwf	??_displayDigit+8
  7800  0409  0827               	movf	??_displayDigit+7,w
  7801  040A  0084               	movwf	4
  7802  040B  1783               	bsf	3,7
  7803  040C  1C28               	btfss	??_displayDigit+8,0
  7804  040D  1383               	bcf	3,7
  7805  040E  0823               	movf	??_displayDigit+3,w
  7806  040F  0480               	iorwf	0,f
  7807  0410  0A84               	incf	4,f
  7808  0411  0824               	movf	??_displayDigit+4,w
  7809  0412  0480               	iorwf	0,f
  7810                           
  7811                           ;lcd.c: 161: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  7812  0413  3014               	movlw	20
  7813  0414  077B               	addwf	displayDigit@D1,w
  7814  0415  00A0               	movwf	??_displayDigit
  7815  0416  087C               	movf	displayDigit@D1+1,w
  7816  0417  1803               	skipnc
  7817  0418  3E01               	addlw	1
  7818  0419  00A1               	movwf	??_displayDigit+1
  7819  041A  0820               	movf	??_displayDigit,w
  7820  041B  0084               	movwf	4
  7821  041C  1783               	bsf	3,7
  7822  041D  1C21               	btfss	??_displayDigit+1,0
  7823  041E  1383               	bcf	3,7
  7824  041F  0A00               	incf	0,w
  7825  0420  00A2               	movwf	??_displayDigit+2
  7826  0421  3001               	movlw	1
  7827  0422  00A3               	movwf	??_displayDigit+3
  7828  0423  3000               	movlw	0
  7829  0424  00A4               	movwf	??_displayDigit+4
  7830  0425  2C29               	goto	u2584
  7831  0426                     u2585:	
  7832  0426  1003               	clrc
  7833  0427  0DA3               	rlf	??_displayDigit+3,f
  7834  0428  0DA4               	rlf	??_displayDigit+4,f
  7835  0429                     u2584:	
  7836  0429  0BA2               	decfsz	??_displayDigit+2,f
  7837  042A  2C26               	goto	u2585
  7838  042B  3006               	movlw	6
  7839  042C  077B               	addwf	displayDigit@D1,w
  7840  042D  00A5               	movwf	??_displayDigit+5
  7841  042E  087C               	movf	displayDigit@D1+1,w
  7842  042F  1803               	skipnc
  7843  0430  3E01               	addlw	1
  7844  0431  00A6               	movwf	??_displayDigit+6
  7845  0432  0825               	movf	??_displayDigit+5,w
  7846  0433  0084               	movwf	4
  7847  0434  1783               	bsf	3,7
  7848  0435  1C26               	btfss	??_displayDigit+6,0
  7849  0436  1383               	bcf	3,7
  7850  0437  0800               	movf	0,w
  7851  0438  00A7               	movwf	??_displayDigit+7
  7852  0439  0A84               	incf	4,f
  7853  043A  0800               	movf	0,w
  7854  043B  00A8               	movwf	??_displayDigit+8
  7855  043C  0827               	movf	??_displayDigit+7,w
  7856  043D  0084               	movwf	4
  7857  043E  1783               	bsf	3,7
  7858  043F  1C28               	btfss	??_displayDigit+8,0
  7859  0440  1383               	bcf	3,7
  7860  0441  0823               	movf	??_displayDigit+3,w
  7861  0442  0480               	iorwf	0,f
  7862  0443  0A84               	incf	4,f
  7863  0444  0824               	movf	??_displayDigit+4,w
  7864  0445  0480               	iorwf	0,f
  7865                           
  7866                           ;lcd.c: 162: ((*D1->se) |= (1UL) << (D1->bits[4]));
  7867  0446  3016               	movlw	22
  7868  0447  077B               	addwf	displayDigit@D1,w
  7869  0448  00A0               	movwf	??_displayDigit
  7870  0449  087C               	movf	displayDigit@D1+1,w
  7871  044A  1803               	skipnc
  7872  044B  3E01               	addlw	1
  7873  044C  00A1               	movwf	??_displayDigit+1
  7874  044D  0820               	movf	??_displayDigit,w
  7875  044E  0084               	movwf	4
  7876  044F  1783               	bsf	3,7
  7877  0450  1C21               	btfss	??_displayDigit+1,0
  7878  0451  1383               	bcf	3,7
  7879  0452  0A00               	incf	0,w
  7880  0453  00A2               	movwf	??_displayDigit+2
  7881  0454  3001               	movlw	1
  7882  0455  00A3               	movwf	??_displayDigit+3
  7883  0456  3000               	movlw	0
  7884  0457  00A4               	movwf	??_displayDigit+4
  7885  0458  2C5C               	goto	u2594
  7886  0459                     u2595:	
  7887  0459  1003               	clrc
  7888  045A  0DA3               	rlf	??_displayDigit+3,f
  7889  045B  0DA4               	rlf	??_displayDigit+4,f
  7890  045C                     u2594:	
  7891  045C  0BA2               	decfsz	??_displayDigit+2,f
  7892  045D  2C59               	goto	u2595
  7893  045E  3008               	movlw	8
  7894  045F  077B               	addwf	displayDigit@D1,w
  7895  0460  00A5               	movwf	??_displayDigit+5
  7896  0461  087C               	movf	displayDigit@D1+1,w
  7897  0462  1803               	skipnc
  7898  0463  3E01               	addlw	1
  7899  0464  00A6               	movwf	??_displayDigit+6
  7900  0465  0825               	movf	??_displayDigit+5,w
  7901  0466  0084               	movwf	4
  7902  0467  1783               	bsf	3,7
  7903  0468  1C26               	btfss	??_displayDigit+6,0
  7904  0469  1383               	bcf	3,7
  7905  046A  0800               	movf	0,w
  7906  046B  00A7               	movwf	??_displayDigit+7
  7907  046C  0A84               	incf	4,f
  7908  046D  0800               	movf	0,w
  7909  046E  00A8               	movwf	??_displayDigit+8
  7910  046F  0827               	movf	??_displayDigit+7,w
  7911  0470  0084               	movwf	4
  7912  0471  1783               	bsf	3,7
  7913  0472  1C28               	btfss	??_displayDigit+8,0
  7914  0473  1383               	bcf	3,7
  7915  0474  0823               	movf	??_displayDigit+3,w
  7916  0475  0480               	iorwf	0,f
  7917  0476  0A84               	incf	4,f
  7918  0477  0824               	movf	??_displayDigit+4,w
  7919  0478  0480               	iorwf	0,f
  7920                           
  7921                           ;lcd.c: 163: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  7922  0479  3018               	movlw	24
  7923  047A  077B               	addwf	displayDigit@D1,w
  7924  047B  00A0               	movwf	??_displayDigit
  7925  047C  087C               	movf	displayDigit@D1+1,w
  7926  047D  1803               	skipnc
  7927  047E  3E01               	addlw	1
  7928  047F  00A1               	movwf	??_displayDigit+1
  7929  0480  0820               	movf	??_displayDigit,w
  7930  0481  0084               	movwf	4
  7931  0482  1783               	bsf	3,7
  7932  0483  1C21               	btfss	??_displayDigit+1,0
  7933  0484  1383               	bcf	3,7
  7934  0485  0A00               	incf	0,w
  7935  0486  00A2               	movwf	??_displayDigit+2
  7936  0487  3001               	movlw	1
  7937  0488  00A3               	movwf	??_displayDigit+3
  7938  0489  3000               	movlw	0
  7939  048A  00A4               	movwf	??_displayDigit+4
  7940  048B  2C8F               	goto	u2604
  7941  048C                     u2605:	
  7942  048C  1003               	clrc
  7943  048D  0DA3               	rlf	??_displayDigit+3,f
  7944  048E  0DA4               	rlf	??_displayDigit+4,f
  7945  048F                     u2604:	
  7946  048F  0BA2               	decfsz	??_displayDigit+2,f
  7947  0490  2C8C               	goto	u2605
  7948  0491  300A               	movlw	10
  7949  0492  077B               	addwf	displayDigit@D1,w
  7950  0493  00A5               	movwf	??_displayDigit+5
  7951  0494  087C               	movf	displayDigit@D1+1,w
  7952  0495  1803               	skipnc
  7953  0496  3E01               	addlw	1
  7954  0497  00A6               	movwf	??_displayDigit+6
  7955  0498  0825               	movf	??_displayDigit+5,w
  7956  0499  0084               	movwf	4
  7957  049A  1783               	bsf	3,7
  7958  049B  1C26               	btfss	??_displayDigit+6,0
  7959  049C  1383               	bcf	3,7
  7960  049D  0800               	movf	0,w
  7961  049E  00A7               	movwf	??_displayDigit+7
  7962  049F  0A84               	incf	4,f
  7963  04A0  0800               	movf	0,w
  7964  04A1  00A8               	movwf	??_displayDigit+8
  7965  04A2  0827               	movf	??_displayDigit+7,w
  7966  04A3  0084               	movwf	4
  7967  04A4  1783               	bsf	3,7
  7968  04A5  1C28               	btfss	??_displayDigit+8,0
  7969  04A6  1383               	bcf	3,7
  7970  04A7  0823               	movf	??_displayDigit+3,w
  7971  04A8  0480               	iorwf	0,f
  7972  04A9  0A84               	incf	4,f
  7973  04AA  0824               	movf	??_displayDigit+4,w
  7974  04AB  0480               	iorwf	0,f
  7975                           
  7976                           ;lcd.c: 164: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  7977  04AC  301A               	movlw	26
  7978  04AD  077B               	addwf	displayDigit@D1,w
  7979  04AE  00A0               	movwf	??_displayDigit
  7980  04AF  087C               	movf	displayDigit@D1+1,w
  7981  04B0  1803               	skipnc
  7982  04B1  3E01               	addlw	1
  7983  04B2  00A1               	movwf	??_displayDigit+1
  7984  04B3  0820               	movf	??_displayDigit,w
  7985  04B4  0084               	movwf	4
  7986  04B5  1783               	bsf	3,7
  7987  04B6  1C21               	btfss	??_displayDigit+1,0
  7988  04B7  1383               	bcf	3,7
  7989  04B8  0A00               	incf	0,w
  7990  04B9  00A2               	movwf	??_displayDigit+2
  7991  04BA  3001               	movlw	1
  7992  04BB  00A3               	movwf	??_displayDigit+3
  7993  04BC  3000               	movlw	0
  7994  04BD  00A4               	movwf	??_displayDigit+4
  7995  04BE  2CC2               	goto	u2614
  7996  04BF                     u2615:	
  7997  04BF  1003               	clrc
  7998  04C0  0DA3               	rlf	??_displayDigit+3,f
  7999  04C1  0DA4               	rlf	??_displayDigit+4,f
  8000  04C2                     u2614:	
  8001  04C2  0BA2               	decfsz	??_displayDigit+2,f
  8002  04C3  2CBF               	goto	u2615
  8003  04C4  300C               	movlw	12
  8004  04C5  077B               	addwf	displayDigit@D1,w
  8005  04C6  00A5               	movwf	??_displayDigit+5
  8006  04C7  087C               	movf	displayDigit@D1+1,w
  8007  04C8  1803               	skipnc
  8008  04C9  3E01               	addlw	1
  8009  04CA  00A6               	movwf	??_displayDigit+6
  8010  04CB  0825               	movf	??_displayDigit+5,w
  8011  04CC  0084               	movwf	4
  8012  04CD  1783               	bsf	3,7
  8013  04CE  1C26               	btfss	??_displayDigit+6,0
  8014  04CF  1383               	bcf	3,7
  8015  04D0  0800               	movf	0,w
  8016  04D1  00A7               	movwf	??_displayDigit+7
  8017  04D2  0A84               	incf	4,f
  8018  04D3  0800               	movf	0,w
  8019  04D4  00A8               	movwf	??_displayDigit+8
  8020  04D5  0827               	movf	??_displayDigit+7,w
  8021  04D6  0084               	movwf	4
  8022  04D7  1783               	bsf	3,7
  8023  04D8  1C28               	btfss	??_displayDigit+8,0
  8024  04D9  1383               	bcf	3,7
  8025  04DA  0823               	movf	??_displayDigit+3,w
  8026  04DB  0480               	iorwf	0,f
  8027  04DC  0A84               	incf	4,f
  8028  04DD  0824               	movf	??_displayDigit+4,w
  8029  04DE  0480               	iorwf	0,f
  8030                           
  8031                           ;lcd.c: 165: break;
  8032  04DF  0008               	return
  8033  04E0                     l1349:	
  8034                           ;lcd.c: 166: case 9:
  8035                           
  8036                           
  8037                           ;lcd.c: 167: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  8038  04E0  300E               	movlw	14
  8039  04E1  077B               	addwf	displayDigit@D1,w
  8040  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  8041  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  8042  04E4  00A0               	movwf	??_displayDigit
  8043  04E5  087C               	movf	displayDigit@D1+1,w
  8044  04E6  1803               	skipnc
  8045  04E7  3E01               	addlw	1
  8046  04E8  00A1               	movwf	??_displayDigit+1
  8047  04E9  0820               	movf	??_displayDigit,w
  8048  04EA  0084               	movwf	4
  8049  04EB  1783               	bsf	3,7
  8050  04EC  1C21               	btfss	??_displayDigit+1,0
  8051  04ED  1383               	bcf	3,7
  8052  04EE  0A00               	incf	0,w
  8053  04EF  00A2               	movwf	??_displayDigit+2
  8054  04F0  3001               	movlw	1
  8055  04F1  00A3               	movwf	??_displayDigit+3
  8056  04F2  3000               	movlw	0
  8057  04F3  00A4               	movwf	??_displayDigit+4
  8058  04F4  2CF8               	goto	u2624
  8059  04F5                     u2625:	
  8060  04F5  1003               	clrc
  8061  04F6  0DA3               	rlf	??_displayDigit+3,f
  8062  04F7  0DA4               	rlf	??_displayDigit+4,f
  8063  04F8                     u2624:	
  8064  04F8  0BA2               	decfsz	??_displayDigit+2,f
  8065  04F9  2CF5               	goto	u2625
  8066  04FA  087B               	movf	displayDigit@D1,w
  8067  04FB  0084               	movwf	4
  8068  04FC  1783               	bsf	3,7
  8069  04FD  1C7C               	btfss	displayDigit@D1+1,0
  8070  04FE  1383               	bcf	3,7
  8071  04FF  0800               	movf	0,w
  8072  0500  00A5               	movwf	??_displayDigit+5
  8073  0501  0A84               	incf	4,f
  8074  0502  0800               	movf	0,w
  8075  0503  00A6               	movwf	??_displayDigit+6
  8076  0504  0825               	movf	??_displayDigit+5,w
  8077  0505  0084               	movwf	4
  8078  0506  1783               	bsf	3,7
  8079  0507  1C26               	btfss	??_displayDigit+6,0
  8080  0508  1383               	bcf	3,7
  8081  0509  0823               	movf	??_displayDigit+3,w
  8082  050A  0480               	iorwf	0,f
  8083  050B  0A84               	incf	4,f
  8084  050C  0824               	movf	??_displayDigit+4,w
  8085  050D  0480               	iorwf	0,f
  8086                           
  8087                           ;lcd.c: 168: ((*D1->sb) |= (1UL) << (D1->bits[1]));
  8088  050E  3010               	movlw	16
  8089  050F  077B               	addwf	displayDigit@D1,w
  8090  0510  00A0               	movwf	??_displayDigit
  8091  0511  087C               	movf	displayDigit@D1+1,w
  8092  0512  1803               	skipnc
  8093  0513  3E01               	addlw	1
  8094  0514  00A1               	movwf	??_displayDigit+1
  8095  0515  0820               	movf	??_displayDigit,w
  8096  0516  0084               	movwf	4
  8097  0517  1783               	bsf	3,7
  8098  0518  1C21               	btfss	??_displayDigit+1,0
  8099  0519  1383               	bcf	3,7
  8100  051A  0A00               	incf	0,w
  8101  051B  00A2               	movwf	??_displayDigit+2
  8102  051C  3001               	movlw	1
  8103  051D  00A3               	movwf	??_displayDigit+3
  8104  051E  3000               	movlw	0
  8105  051F  00A4               	movwf	??_displayDigit+4
  8106  0520  2D24               	goto	u2634
  8107  0521                     u2635:	
  8108  0521  1003               	clrc
  8109  0522  0DA3               	rlf	??_displayDigit+3,f
  8110  0523  0DA4               	rlf	??_displayDigit+4,f
  8111  0524                     u2634:	
  8112  0524  0BA2               	decfsz	??_displayDigit+2,f
  8113  0525  2D21               	goto	u2635
  8114  0526  3002               	movlw	2
  8115  0527  077B               	addwf	displayDigit@D1,w
  8116  0528  00A5               	movwf	??_displayDigit+5
  8117  0529  087C               	movf	displayDigit@D1+1,w
  8118  052A  1803               	skipnc
  8119  052B  3E01               	addlw	1
  8120  052C  00A6               	movwf	??_displayDigit+6
  8121  052D  0825               	movf	??_displayDigit+5,w
  8122  052E  0084               	movwf	4
  8123  052F  1783               	bsf	3,7
  8124  0530  1C26               	btfss	??_displayDigit+6,0
  8125  0531  1383               	bcf	3,7
  8126  0532  0800               	movf	0,w
  8127  0533  00A7               	movwf	??_displayDigit+7
  8128  0534  0A84               	incf	4,f
  8129  0535  0800               	movf	0,w
  8130  0536  00A8               	movwf	??_displayDigit+8
  8131  0537  0827               	movf	??_displayDigit+7,w
  8132  0538  0084               	movwf	4
  8133  0539  1783               	bsf	3,7
  8134  053A  1C28               	btfss	??_displayDigit+8,0
  8135  053B  1383               	bcf	3,7
  8136  053C  0823               	movf	??_displayDigit+3,w
  8137  053D  0480               	iorwf	0,f
  8138  053E  0A84               	incf	4,f
  8139  053F  0824               	movf	??_displayDigit+4,w
  8140  0540  0480               	iorwf	0,f
  8141                           
  8142                           ;lcd.c: 169: ((*D1->sc) |= (1UL) << (D1->bits[2]));
  8143  0541  3012               	movlw	18
  8144  0542  077B               	addwf	displayDigit@D1,w
  8145  0543  00A0               	movwf	??_displayDigit
  8146  0544  087C               	movf	displayDigit@D1+1,w
  8147  0545  1803               	skipnc
  8148  0546  3E01               	addlw	1
  8149  0547  00A1               	movwf	??_displayDigit+1
  8150  0548  0820               	movf	??_displayDigit,w
  8151  0549  0084               	movwf	4
  8152  054A  1783               	bsf	3,7
  8153  054B  1C21               	btfss	??_displayDigit+1,0
  8154  054C  1383               	bcf	3,7
  8155  054D  0A00               	incf	0,w
  8156  054E  00A2               	movwf	??_displayDigit+2
  8157  054F  3001               	movlw	1
  8158  0550  00A3               	movwf	??_displayDigit+3
  8159  0551  3000               	movlw	0
  8160  0552  00A4               	movwf	??_displayDigit+4
  8161  0553  2D57               	goto	u2644
  8162  0554                     u2645:	
  8163  0554  1003               	clrc
  8164  0555  0DA3               	rlf	??_displayDigit+3,f
  8165  0556  0DA4               	rlf	??_displayDigit+4,f
  8166  0557                     u2644:	
  8167  0557  0BA2               	decfsz	??_displayDigit+2,f
  8168  0558  2D54               	goto	u2645
  8169  0559  3004               	movlw	4
  8170  055A  077B               	addwf	displayDigit@D1,w
  8171  055B  00A5               	movwf	??_displayDigit+5
  8172  055C  087C               	movf	displayDigit@D1+1,w
  8173  055D  1803               	skipnc
  8174  055E  3E01               	addlw	1
  8175  055F  00A6               	movwf	??_displayDigit+6
  8176  0560  0825               	movf	??_displayDigit+5,w
  8177  0561  0084               	movwf	4
  8178  0562  1783               	bsf	3,7
  8179  0563  1C26               	btfss	??_displayDigit+6,0
  8180  0564  1383               	bcf	3,7
  8181  0565  0800               	movf	0,w
  8182  0566  00A7               	movwf	??_displayDigit+7
  8183  0567  0A84               	incf	4,f
  8184  0568  0800               	movf	0,w
  8185  0569  00A8               	movwf	??_displayDigit+8
  8186  056A  0827               	movf	??_displayDigit+7,w
  8187  056B  0084               	movwf	4
  8188  056C  1783               	bsf	3,7
  8189  056D  1C28               	btfss	??_displayDigit+8,0
  8190  056E  1383               	bcf	3,7
  8191  056F  0823               	movf	??_displayDigit+3,w
  8192  0570  0480               	iorwf	0,f
  8193  0571  0A84               	incf	4,f
  8194  0572  0824               	movf	??_displayDigit+4,w
  8195  0573  0480               	iorwf	0,f
  8196                           
  8197                           ;lcd.c: 170: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  8198  0574  3014               	movlw	20
  8199  0575  077B               	addwf	displayDigit@D1,w
  8200  0576  00A0               	movwf	??_displayDigit
  8201  0577  087C               	movf	displayDigit@D1+1,w
  8202  0578  1803               	skipnc
  8203  0579  3E01               	addlw	1
  8204  057A  00A1               	movwf	??_displayDigit+1
  8205  057B  0820               	movf	??_displayDigit,w
  8206  057C  0084               	movwf	4
  8207  057D  1783               	bsf	3,7
  8208  057E  1C21               	btfss	??_displayDigit+1,0
  8209  057F  1383               	bcf	3,7
  8210  0580  0A00               	incf	0,w
  8211  0581  00A2               	movwf	??_displayDigit+2
  8212  0582  3001               	movlw	1
  8213  0583  00A3               	movwf	??_displayDigit+3
  8214  0584  3000               	movlw	0
  8215  0585  00A4               	movwf	??_displayDigit+4
  8216  0586  2D8A               	goto	u2654
  8217  0587                     u2655:	
  8218  0587  1003               	clrc
  8219  0588  0DA3               	rlf	??_displayDigit+3,f
  8220  0589  0DA4               	rlf	??_displayDigit+4,f
  8221  058A                     u2654:	
  8222  058A  0BA2               	decfsz	??_displayDigit+2,f
  8223  058B  2D87               	goto	u2655
  8224  058C  3006               	movlw	6
  8225  058D  077B               	addwf	displayDigit@D1,w
  8226  058E  00A5               	movwf	??_displayDigit+5
  8227  058F  087C               	movf	displayDigit@D1+1,w
  8228  0590  1803               	skipnc
  8229  0591  3E01               	addlw	1
  8230  0592  00A6               	movwf	??_displayDigit+6
  8231  0593  0825               	movf	??_displayDigit+5,w
  8232  0594  0084               	movwf	4
  8233  0595  1783               	bsf	3,7
  8234  0596  1C26               	btfss	??_displayDigit+6,0
  8235  0597  1383               	bcf	3,7
  8236  0598  0800               	movf	0,w
  8237  0599  00A7               	movwf	??_displayDigit+7
  8238  059A  0A84               	incf	4,f
  8239  059B  0800               	movf	0,w
  8240  059C  00A8               	movwf	??_displayDigit+8
  8241  059D  0827               	movf	??_displayDigit+7,w
  8242  059E  0084               	movwf	4
  8243  059F  1783               	bsf	3,7
  8244  05A0  1C28               	btfss	??_displayDigit+8,0
  8245  05A1  1383               	bcf	3,7
  8246  05A2  0823               	movf	??_displayDigit+3,w
  8247  05A3  0480               	iorwf	0,f
  8248  05A4  0A84               	incf	4,f
  8249  05A5  0824               	movf	??_displayDigit+4,w
  8250  05A6  0480               	iorwf	0,f
  8251                           
  8252                           ;lcd.c: 171: ((*D1->se) &= ~((1UL) << (D1->bits[4])));
  8253  05A7  3016               	movlw	22
  8254  05A8  077B               	addwf	displayDigit@D1,w
  8255  05A9  00A0               	movwf	??_displayDigit
  8256  05AA  087C               	movf	displayDigit@D1+1,w
  8257  05AB  1803               	skipnc
  8258  05AC  3E01               	addlw	1
  8259  05AD  00A1               	movwf	??_displayDigit+1
  8260  05AE  0820               	movf	??_displayDigit,w
  8261  05AF  0084               	movwf	4
  8262  05B0  1783               	bsf	3,7
  8263  05B1  1C21               	btfss	??_displayDigit+1,0
  8264  05B2  1383               	bcf	3,7
  8265  05B3  0A00               	incf	0,w
  8266  05B4  00A2               	movwf	??_displayDigit+2
  8267  05B5  3001               	movlw	1
  8268  05B6  00A3               	movwf	??_displayDigit+3
  8269  05B7  3000               	movlw	0
  8270  05B8  00A4               	movwf	??_displayDigit+4
  8271  05B9  2DBD               	goto	u2664
  8272  05BA                     u2665:	
  8273  05BA  1003               	clrc
  8274  05BB  0DA3               	rlf	??_displayDigit+3,f
  8275  05BC  0DA4               	rlf	??_displayDigit+4,f
  8276  05BD                     u2664:	
  8277  05BD  0BA2               	decfsz	??_displayDigit+2,f
  8278  05BE  2DBA               	goto	u2665
  8279  05BF  09A3               	comf	??_displayDigit+3,f
  8280  05C0  09A4               	comf	??_displayDigit+4,f
  8281  05C1  3008               	movlw	8
  8282  05C2  077B               	addwf	displayDigit@D1,w
  8283  05C3  00A5               	movwf	??_displayDigit+5
  8284  05C4  087C               	movf	displayDigit@D1+1,w
  8285  05C5  1803               	skipnc
  8286  05C6  3E01               	addlw	1
  8287  05C7  00A6               	movwf	??_displayDigit+6
  8288  05C8  0825               	movf	??_displayDigit+5,w
  8289  05C9  0084               	movwf	4
  8290  05CA  1783               	bsf	3,7
  8291  05CB  1C26               	btfss	??_displayDigit+6,0
  8292  05CC  1383               	bcf	3,7
  8293  05CD  0800               	movf	0,w
  8294  05CE  00A7               	movwf	??_displayDigit+7
  8295  05CF  0A84               	incf	4,f
  8296  05D0  0800               	movf	0,w
  8297  05D1  00A8               	movwf	??_displayDigit+8
  8298  05D2  0827               	movf	??_displayDigit+7,w
  8299  05D3  0084               	movwf	4
  8300  05D4  1783               	bsf	3,7
  8301  05D5  1C28               	btfss	??_displayDigit+8,0
  8302  05D6  1383               	bcf	3,7
  8303  05D7  0823               	movf	??_displayDigit+3,w
  8304  05D8  0580               	andwf	0,f
  8305  05D9  0A84               	incf	4,f
  8306  05DA  0824               	movf	??_displayDigit+4,w
  8307  05DB  0580               	andwf	0,f
  8308                           
  8309                           ;lcd.c: 172: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  8310  05DC  3018               	movlw	24
  8311  05DD  077B               	addwf	displayDigit@D1,w
  8312  05DE  00A0               	movwf	??_displayDigit
  8313  05DF  087C               	movf	displayDigit@D1+1,w
  8314  05E0  1803               	skipnc
  8315  05E1  3E01               	addlw	1
  8316  05E2  00A1               	movwf	??_displayDigit+1
  8317  05E3  0820               	movf	??_displayDigit,w
  8318  05E4  0084               	movwf	4
  8319  05E5  1783               	bsf	3,7
  8320  05E6  1C21               	btfss	??_displayDigit+1,0
  8321  05E7  1383               	bcf	3,7
  8322  05E8  0A00               	incf	0,w
  8323  05E9  00A2               	movwf	??_displayDigit+2
  8324  05EA  3001               	movlw	1
  8325  05EB  00A3               	movwf	??_displayDigit+3
  8326  05EC  3000               	movlw	0
  8327  05ED  00A4               	movwf	??_displayDigit+4
  8328  05EE  2DF2               	goto	u2674
  8329  05EF                     u2675:	
  8330  05EF  1003               	clrc
  8331  05F0  0DA3               	rlf	??_displayDigit+3,f
  8332  05F1  0DA4               	rlf	??_displayDigit+4,f
  8333  05F2                     u2674:	
  8334  05F2  0BA2               	decfsz	??_displayDigit+2,f
  8335  05F3  2DEF               	goto	u2675
  8336  05F4  300A               	movlw	10
  8337  05F5  077B               	addwf	displayDigit@D1,w
  8338  05F6  00A5               	movwf	??_displayDigit+5
  8339  05F7  087C               	movf	displayDigit@D1+1,w
  8340  05F8  1803               	skipnc
  8341  05F9  3E01               	addlw	1
  8342  05FA  00A6               	movwf	??_displayDigit+6
  8343  05FB  0825               	movf	??_displayDigit+5,w
  8344  05FC  0084               	movwf	4
  8345  05FD  1783               	bsf	3,7
  8346  05FE  1C26               	btfss	??_displayDigit+6,0
  8347  05FF  1383               	bcf	3,7
  8348  0600  0800               	movf	0,w
  8349  0601  00A7               	movwf	??_displayDigit+7
  8350  0602  0A84               	incf	4,f
  8351  0603  0800               	movf	0,w
  8352  0604  00A8               	movwf	??_displayDigit+8
  8353  0605  0827               	movf	??_displayDigit+7,w
  8354  0606  0084               	movwf	4
  8355  0607  1783               	bsf	3,7
  8356  0608  1C28               	btfss	??_displayDigit+8,0
  8357  0609  1383               	bcf	3,7
  8358  060A  0823               	movf	??_displayDigit+3,w
  8359  060B  0480               	iorwf	0,f
  8360  060C  0A84               	incf	4,f
  8361  060D  0824               	movf	??_displayDigit+4,w
  8362  060E  0480               	iorwf	0,f
  8363                           
  8364                           ;lcd.c: 173: ((*D1->sg) |= (1UL) << (D1->bits[6]));
  8365  060F  301A               	movlw	26
  8366  0610  077B               	addwf	displayDigit@D1,w
  8367  0611  00A0               	movwf	??_displayDigit
  8368  0612  087C               	movf	displayDigit@D1+1,w
  8369  0613  1803               	skipnc
  8370  0614  3E01               	addlw	1
  8371  0615  00A1               	movwf	??_displayDigit+1
  8372  0616  0820               	movf	??_displayDigit,w
  8373  0617  0084               	movwf	4
  8374  0618  1783               	bsf	3,7
  8375  0619  1C21               	btfss	??_displayDigit+1,0
  8376  061A  1383               	bcf	3,7
  8377  061B  0A00               	incf	0,w
  8378  061C  00A2               	movwf	??_displayDigit+2
  8379  061D  3001               	movlw	1
  8380  061E  00A3               	movwf	??_displayDigit+3
  8381  061F  3000               	movlw	0
  8382  0620  00A4               	movwf	??_displayDigit+4
  8383  0621  2E25               	goto	u2684
  8384  0622                     u2685:	
  8385  0622  1003               	clrc
  8386  0623  0DA3               	rlf	??_displayDigit+3,f
  8387  0624  0DA4               	rlf	??_displayDigit+4,f
  8388  0625                     u2684:	
  8389  0625  0BA2               	decfsz	??_displayDigit+2,f
  8390  0626  2E22               	goto	u2685
  8391  0627  300C               	movlw	12
  8392  0628  077B               	addwf	displayDigit@D1,w
  8393  0629  00A5               	movwf	??_displayDigit+5
  8394  062A  087C               	movf	displayDigit@D1+1,w
  8395  062B  1803               	skipnc
  8396  062C  3E01               	addlw	1
  8397  062D  00A6               	movwf	??_displayDigit+6
  8398  062E  0825               	movf	??_displayDigit+5,w
  8399  062F  0084               	movwf	4
  8400  0630  1783               	bsf	3,7
  8401  0631  1C26               	btfss	??_displayDigit+6,0
  8402  0632  1383               	bcf	3,7
  8403  0633  0800               	movf	0,w
  8404  0634  00A7               	movwf	??_displayDigit+7
  8405  0635  0A84               	incf	4,f
  8406  0636  0800               	movf	0,w
  8407  0637  00A8               	movwf	??_displayDigit+8
  8408  0638  0827               	movf	??_displayDigit+7,w
  8409  0639  0084               	movwf	4
  8410  063A  1783               	bsf	3,7
  8411  063B  1C28               	btfss	??_displayDigit+8,0
  8412  063C  1383               	bcf	3,7
  8413  063D  0823               	movf	??_displayDigit+3,w
  8414  063E  0480               	iorwf	0,f
  8415  063F  0A84               	incf	4,f
  8416  0640  0824               	movf	??_displayDigit+4,w
  8417  0641  0480               	iorwf	0,f
  8418                           
  8419                           ;lcd.c: 174: break;
  8420  0642  0008               	return
  8421  0643                     l1351:	
  8422                           ;lcd.c: 175: case 'C':
  8423                           
  8424                           
  8425                           ;lcd.c: 176: ((*D1->sa) |= (1UL) << (D1->bits[0]));
  8426  0643  300E               	movlw	14
  8427  0644  077B               	addwf	displayDigit@D1,w
  8428  0645  1283               	bcf	3,5	;RP0=0, select bank0
  8429  0646  1303               	bcf	3,6	;RP1=0, select bank0
  8430  0647  00A0               	movwf	??_displayDigit
  8431  0648  087C               	movf	displayDigit@D1+1,w
  8432  0649  1803               	skipnc
  8433  064A  3E01               	addlw	1
  8434  064B  00A1               	movwf	??_displayDigit+1
  8435  064C  0820               	movf	??_displayDigit,w
  8436  064D  0084               	movwf	4
  8437  064E  1783               	bsf	3,7
  8438  064F  1C21               	btfss	??_displayDigit+1,0
  8439  0650  1383               	bcf	3,7
  8440  0651  0A00               	incf	0,w
  8441  0652  00A2               	movwf	??_displayDigit+2
  8442  0653  3001               	movlw	1
  8443  0654  00A3               	movwf	??_displayDigit+3
  8444  0655  3000               	movlw	0
  8445  0656  00A4               	movwf	??_displayDigit+4
  8446  0657  2E5B               	goto	u2694
  8447  0658                     u2695:	
  8448  0658  1003               	clrc
  8449  0659  0DA3               	rlf	??_displayDigit+3,f
  8450  065A  0DA4               	rlf	??_displayDigit+4,f
  8451  065B                     u2694:	
  8452  065B  0BA2               	decfsz	??_displayDigit+2,f
  8453  065C  2E58               	goto	u2695
  8454  065D  087B               	movf	displayDigit@D1,w
  8455  065E  0084               	movwf	4
  8456  065F  1783               	bsf	3,7
  8457  0660  1C7C               	btfss	displayDigit@D1+1,0
  8458  0661  1383               	bcf	3,7
  8459  0662  0800               	movf	0,w
  8460  0663  00A5               	movwf	??_displayDigit+5
  8461  0664  0A84               	incf	4,f
  8462  0665  0800               	movf	0,w
  8463  0666  00A6               	movwf	??_displayDigit+6
  8464  0667  0825               	movf	??_displayDigit+5,w
  8465  0668  0084               	movwf	4
  8466  0669  1783               	bsf	3,7
  8467  066A  1C26               	btfss	??_displayDigit+6,0
  8468  066B  1383               	bcf	3,7
  8469  066C  0823               	movf	??_displayDigit+3,w
  8470  066D  0480               	iorwf	0,f
  8471  066E  0A84               	incf	4,f
  8472  066F  0824               	movf	??_displayDigit+4,w
  8473  0670  0480               	iorwf	0,f
  8474                           
  8475                           ;lcd.c: 177: ((*D1->sb) &= ~((1UL) << (D1->bits[1])));
  8476  0671  3010               	movlw	16
  8477  0672  077B               	addwf	displayDigit@D1,w
  8478  0673  00A0               	movwf	??_displayDigit
  8479  0674  087C               	movf	displayDigit@D1+1,w
  8480  0675  1803               	skipnc
  8481  0676  3E01               	addlw	1
  8482  0677  00A1               	movwf	??_displayDigit+1
  8483  0678  0820               	movf	??_displayDigit,w
  8484  0679  0084               	movwf	4
  8485  067A  1783               	bsf	3,7
  8486  067B  1C21               	btfss	??_displayDigit+1,0
  8487  067C  1383               	bcf	3,7
  8488  067D  0A00               	incf	0,w
  8489  067E  00A2               	movwf	??_displayDigit+2
  8490  067F  3001               	movlw	1
  8491  0680  00A3               	movwf	??_displayDigit+3
  8492  0681  3000               	movlw	0
  8493  0682  00A4               	movwf	??_displayDigit+4
  8494  0683  2E87               	goto	u2704
  8495  0684                     u2705:	
  8496  0684  1003               	clrc
  8497  0685  0DA3               	rlf	??_displayDigit+3,f
  8498  0686  0DA4               	rlf	??_displayDigit+4,f
  8499  0687                     u2704:	
  8500  0687  0BA2               	decfsz	??_displayDigit+2,f
  8501  0688  2E84               	goto	u2705
  8502  0689  09A3               	comf	??_displayDigit+3,f
  8503  068A  09A4               	comf	??_displayDigit+4,f
  8504  068B  3002               	movlw	2
  8505  068C  077B               	addwf	displayDigit@D1,w
  8506  068D  00A5               	movwf	??_displayDigit+5
  8507  068E  087C               	movf	displayDigit@D1+1,w
  8508  068F  1803               	skipnc
  8509  0690  3E01               	addlw	1
  8510  0691  00A6               	movwf	??_displayDigit+6
  8511  0692  0825               	movf	??_displayDigit+5,w
  8512  0693  0084               	movwf	4
  8513  0694  1783               	bsf	3,7
  8514  0695  1C26               	btfss	??_displayDigit+6,0
  8515  0696  1383               	bcf	3,7
  8516  0697  0800               	movf	0,w
  8517  0698  00A7               	movwf	??_displayDigit+7
  8518  0699  0A84               	incf	4,f
  8519  069A  0800               	movf	0,w
  8520  069B  00A8               	movwf	??_displayDigit+8
  8521  069C  0827               	movf	??_displayDigit+7,w
  8522  069D  0084               	movwf	4
  8523  069E  1783               	bsf	3,7
  8524  069F  1C28               	btfss	??_displayDigit+8,0
  8525  06A0  1383               	bcf	3,7
  8526  06A1  0823               	movf	??_displayDigit+3,w
  8527  06A2  0580               	andwf	0,f
  8528  06A3  0A84               	incf	4,f
  8529  06A4  0824               	movf	??_displayDigit+4,w
  8530  06A5  0580               	andwf	0,f
  8531                           
  8532                           ;lcd.c: 178: ((*D1->sc) &= ~((1UL) << (D1->bits[2])));
  8533  06A6  3012               	movlw	18
  8534  06A7  077B               	addwf	displayDigit@D1,w
  8535  06A8  00A0               	movwf	??_displayDigit
  8536  06A9  087C               	movf	displayDigit@D1+1,w
  8537  06AA  1803               	skipnc
  8538  06AB  3E01               	addlw	1
  8539  06AC  00A1               	movwf	??_displayDigit+1
  8540  06AD  0820               	movf	??_displayDigit,w
  8541  06AE  0084               	movwf	4
  8542  06AF  1783               	bsf	3,7
  8543  06B0  1C21               	btfss	??_displayDigit+1,0
  8544  06B1  1383               	bcf	3,7
  8545  06B2  0A00               	incf	0,w
  8546  06B3  00A2               	movwf	??_displayDigit+2
  8547  06B4  3001               	movlw	1
  8548  06B5  00A3               	movwf	??_displayDigit+3
  8549  06B6  3000               	movlw	0
  8550  06B7  00A4               	movwf	??_displayDigit+4
  8551  06B8  2EBC               	goto	u2714
  8552  06B9                     u2715:	
  8553  06B9  1003               	clrc
  8554  06BA  0DA3               	rlf	??_displayDigit+3,f
  8555  06BB  0DA4               	rlf	??_displayDigit+4,f
  8556  06BC                     u2714:	
  8557  06BC  0BA2               	decfsz	??_displayDigit+2,f
  8558  06BD  2EB9               	goto	u2715
  8559  06BE  09A3               	comf	??_displayDigit+3,f
  8560  06BF  09A4               	comf	??_displayDigit+4,f
  8561  06C0  3004               	movlw	4
  8562  06C1  077B               	addwf	displayDigit@D1,w
  8563  06C2  00A5               	movwf	??_displayDigit+5
  8564  06C3  087C               	movf	displayDigit@D1+1,w
  8565  06C4  1803               	skipnc
  8566  06C5  3E01               	addlw	1
  8567  06C6  00A6               	movwf	??_displayDigit+6
  8568  06C7  0825               	movf	??_displayDigit+5,w
  8569  06C8  0084               	movwf	4
  8570  06C9  1783               	bsf	3,7
  8571  06CA  1C26               	btfss	??_displayDigit+6,0
  8572  06CB  1383               	bcf	3,7
  8573  06CC  0800               	movf	0,w
  8574  06CD  00A7               	movwf	??_displayDigit+7
  8575  06CE  0A84               	incf	4,f
  8576  06CF  0800               	movf	0,w
  8577  06D0  00A8               	movwf	??_displayDigit+8
  8578  06D1  0827               	movf	??_displayDigit+7,w
  8579  06D2  0084               	movwf	4
  8580  06D3  1783               	bsf	3,7
  8581  06D4  1C28               	btfss	??_displayDigit+8,0
  8582  06D5  1383               	bcf	3,7
  8583  06D6  0823               	movf	??_displayDigit+3,w
  8584  06D7  0580               	andwf	0,f
  8585  06D8  0A84               	incf	4,f
  8586  06D9  0824               	movf	??_displayDigit+4,w
  8587  06DA  0580               	andwf	0,f
  8588                           
  8589                           ;lcd.c: 179: ((*D1->sd) |= (1UL) << (D1->bits[3]));
  8590  06DB  3014               	movlw	20
  8591  06DC  077B               	addwf	displayDigit@D1,w
  8592  06DD  00A0               	movwf	??_displayDigit
  8593  06DE  087C               	movf	displayDigit@D1+1,w
  8594  06DF  1803               	skipnc
  8595  06E0  3E01               	addlw	1
  8596  06E1  00A1               	movwf	??_displayDigit+1
  8597  06E2  0820               	movf	??_displayDigit,w
  8598  06E3  0084               	movwf	4
  8599  06E4  1783               	bsf	3,7
  8600  06E5  1C21               	btfss	??_displayDigit+1,0
  8601  06E6  1383               	bcf	3,7
  8602  06E7  0A00               	incf	0,w
  8603  06E8  00A2               	movwf	??_displayDigit+2
  8604  06E9  3001               	movlw	1
  8605  06EA  00A3               	movwf	??_displayDigit+3
  8606  06EB  3000               	movlw	0
  8607  06EC  00A4               	movwf	??_displayDigit+4
  8608  06ED  2EF1               	goto	u2724
  8609  06EE                     u2725:	
  8610  06EE  1003               	clrc
  8611  06EF  0DA3               	rlf	??_displayDigit+3,f
  8612  06F0  0DA4               	rlf	??_displayDigit+4,f
  8613  06F1                     u2724:	
  8614  06F1  0BA2               	decfsz	??_displayDigit+2,f
  8615  06F2  2EEE               	goto	u2725
  8616  06F3  3006               	movlw	6
  8617  06F4  077B               	addwf	displayDigit@D1,w
  8618  06F5  00A5               	movwf	??_displayDigit+5
  8619  06F6  087C               	movf	displayDigit@D1+1,w
  8620  06F7  1803               	skipnc
  8621  06F8  3E01               	addlw	1
  8622  06F9  00A6               	movwf	??_displayDigit+6
  8623  06FA  0825               	movf	??_displayDigit+5,w
  8624  06FB  0084               	movwf	4
  8625  06FC  1783               	bsf	3,7
  8626  06FD  1C26               	btfss	??_displayDigit+6,0
  8627  06FE  1383               	bcf	3,7
  8628  06FF  0800               	movf	0,w
  8629  0700  00A7               	movwf	??_displayDigit+7
  8630  0701  0A84               	incf	4,f
  8631  0702  0800               	movf	0,w
  8632  0703  00A8               	movwf	??_displayDigit+8
  8633  0704  0827               	movf	??_displayDigit+7,w
  8634  0705  0084               	movwf	4
  8635  0706  1783               	bsf	3,7
  8636  0707  1C28               	btfss	??_displayDigit+8,0
  8637  0708  1383               	bcf	3,7
  8638  0709  0823               	movf	??_displayDigit+3,w
  8639  070A  0480               	iorwf	0,f
  8640  070B  0A84               	incf	4,f
  8641  070C  0824               	movf	??_displayDigit+4,w
  8642  070D  0480               	iorwf	0,f
  8643                           
  8644                           ;lcd.c: 180: ((*D1->se) |= (1UL) << (D1->bits[4]));
  8645  070E  3016               	movlw	22
  8646  070F  077B               	addwf	displayDigit@D1,w
  8647  0710  00A0               	movwf	??_displayDigit
  8648  0711  087C               	movf	displayDigit@D1+1,w
  8649  0712  1803               	skipnc
  8650  0713  3E01               	addlw	1
  8651  0714  00A1               	movwf	??_displayDigit+1
  8652  0715  0820               	movf	??_displayDigit,w
  8653  0716  0084               	movwf	4
  8654  0717  1783               	bsf	3,7
  8655  0718  1C21               	btfss	??_displayDigit+1,0
  8656  0719  1383               	bcf	3,7
  8657  071A  0A00               	incf	0,w
  8658  071B  00A2               	movwf	??_displayDigit+2
  8659  071C  3001               	movlw	1
  8660  071D  00A3               	movwf	??_displayDigit+3
  8661  071E  3000               	movlw	0
  8662  071F  00A4               	movwf	??_displayDigit+4
  8663  0720  2F24               	goto	u2734
  8664  0721                     u2735:	
  8665  0721  1003               	clrc
  8666  0722  0DA3               	rlf	??_displayDigit+3,f
  8667  0723  0DA4               	rlf	??_displayDigit+4,f
  8668  0724                     u2734:	
  8669  0724  0BA2               	decfsz	??_displayDigit+2,f
  8670  0725  2F21               	goto	u2735
  8671  0726  3008               	movlw	8
  8672  0727  077B               	addwf	displayDigit@D1,w
  8673  0728  00A5               	movwf	??_displayDigit+5
  8674  0729  087C               	movf	displayDigit@D1+1,w
  8675  072A  1803               	skipnc
  8676  072B  3E01               	addlw	1
  8677  072C  00A6               	movwf	??_displayDigit+6
  8678  072D  0825               	movf	??_displayDigit+5,w
  8679  072E  0084               	movwf	4
  8680  072F  1783               	bsf	3,7
  8681  0730  1C26               	btfss	??_displayDigit+6,0
  8682  0731  1383               	bcf	3,7
  8683  0732  0800               	movf	0,w
  8684  0733  00A7               	movwf	??_displayDigit+7
  8685  0734  0A84               	incf	4,f
  8686  0735  0800               	movf	0,w
  8687  0736  00A8               	movwf	??_displayDigit+8
  8688  0737  0827               	movf	??_displayDigit+7,w
  8689  0738  0084               	movwf	4
  8690  0739  1783               	bsf	3,7
  8691  073A  1C28               	btfss	??_displayDigit+8,0
  8692  073B  1383               	bcf	3,7
  8693  073C  0823               	movf	??_displayDigit+3,w
  8694  073D  0480               	iorwf	0,f
  8695  073E  0A84               	incf	4,f
  8696  073F  0824               	movf	??_displayDigit+4,w
  8697  0740  0480               	iorwf	0,f
  8698                           
  8699                           ;lcd.c: 181: ((*D1->sf) |= (1UL) << (D1->bits[5]));
  8700  0741  3018               	movlw	24
  8701  0742  077B               	addwf	displayDigit@D1,w
  8702  0743  00A0               	movwf	??_displayDigit
  8703  0744  087C               	movf	displayDigit@D1+1,w
  8704  0745  1803               	skipnc
  8705  0746  3E01               	addlw	1
  8706  0747  00A1               	movwf	??_displayDigit+1
  8707  0748  0820               	movf	??_displayDigit,w
  8708  0749  0084               	movwf	4
  8709  074A  1783               	bsf	3,7
  8710  074B  1C21               	btfss	??_displayDigit+1,0
  8711  074C  1383               	bcf	3,7
  8712  074D  0A00               	incf	0,w
  8713  074E  00A2               	movwf	??_displayDigit+2
  8714  074F  3001               	movlw	1
  8715  0750  00A3               	movwf	??_displayDigit+3
  8716  0751  3000               	movlw	0
  8717  0752  00A4               	movwf	??_displayDigit+4
  8718  0753  2F57               	goto	u2744
  8719  0754                     u2745:	
  8720  0754  1003               	clrc
  8721  0755  0DA3               	rlf	??_displayDigit+3,f
  8722  0756  0DA4               	rlf	??_displayDigit+4,f
  8723  0757                     u2744:	
  8724  0757  0BA2               	decfsz	??_displayDigit+2,f
  8725  0758  2F54               	goto	u2745
  8726  0759  300A               	movlw	10
  8727  075A  077B               	addwf	displayDigit@D1,w
  8728  075B  00A5               	movwf	??_displayDigit+5
  8729  075C  087C               	movf	displayDigit@D1+1,w
  8730  075D  1803               	skipnc
  8731  075E  3E01               	addlw	1
  8732  075F  00A6               	movwf	??_displayDigit+6
  8733  0760  0825               	movf	??_displayDigit+5,w
  8734  0761  0084               	movwf	4
  8735  0762  1783               	bsf	3,7
  8736  0763  1C26               	btfss	??_displayDigit+6,0
  8737  0764  1383               	bcf	3,7
  8738  0765  0800               	movf	0,w
  8739  0766  00A7               	movwf	??_displayDigit+7
  8740  0767  0A84               	incf	4,f
  8741  0768  0800               	movf	0,w
  8742  0769  00A8               	movwf	??_displayDigit+8
  8743  076A  0827               	movf	??_displayDigit+7,w
  8744  076B  0084               	movwf	4
  8745  076C  1783               	bsf	3,7
  8746  076D  1C28               	btfss	??_displayDigit+8,0
  8747  076E  1383               	bcf	3,7
  8748  076F  0823               	movf	??_displayDigit+3,w
  8749  0770  0480               	iorwf	0,f
  8750  0771  0A84               	incf	4,f
  8751  0772  0824               	movf	??_displayDigit+4,w
  8752  0773  0480               	iorwf	0,f
  8753                           
  8754                           ;lcd.c: 182: ((*D1->sg) &= ~((1UL) << (D1->bits[6])));
  8755  0774  301A               	movlw	26
  8756  0775  077B               	addwf	displayDigit@D1,w
  8757  0776  00A0               	movwf	??_displayDigit
  8758  0777  087C               	movf	displayDigit@D1+1,w
  8759  0778  1803               	skipnc
  8760  0779  3E01               	addlw	1
  8761  077A  00A1               	movwf	??_displayDigit+1
  8762  077B  0820               	movf	??_displayDigit,w
  8763  077C  0084               	movwf	4
  8764  077D  1783               	bsf	3,7
  8765  077E  1C21               	btfss	??_displayDigit+1,0
  8766  077F  1383               	bcf	3,7
  8767  0780  0A00               	incf	0,w
  8768  0781  00A2               	movwf	??_displayDigit+2
  8769  0782  3001               	movlw	1
  8770  0783  00A3               	movwf	??_displayDigit+3
  8771  0784  3000               	movlw	0
  8772  0785  00A4               	movwf	??_displayDigit+4
  8773  0786  2F8A               	goto	u2754
  8774  0787                     u2755:	
  8775  0787  1003               	clrc
  8776  0788  0DA3               	rlf	??_displayDigit+3,f
  8777  0789  0DA4               	rlf	??_displayDigit+4,f
  8778  078A                     u2754:	
  8779  078A  0BA2               	decfsz	??_displayDigit+2,f
  8780  078B  2F87               	goto	u2755
  8781  078C  09A3               	comf	??_displayDigit+3,f
  8782  078D  09A4               	comf	??_displayDigit+4,f
  8783  078E  300C               	movlw	12
  8784  078F  077B               	addwf	displayDigit@D1,w
  8785  0790  00A5               	movwf	??_displayDigit+5
  8786  0791  087C               	movf	displayDigit@D1+1,w
  8787  0792  1803               	skipnc
  8788  0793  3E01               	addlw	1
  8789  0794  00A6               	movwf	??_displayDigit+6
  8790  0795  0825               	movf	??_displayDigit+5,w
  8791  0796  0084               	movwf	4
  8792  0797  1783               	bsf	3,7
  8793  0798  1C26               	btfss	??_displayDigit+6,0
  8794  0799  1383               	bcf	3,7
  8795  079A  0800               	movf	0,w
  8796  079B  00A7               	movwf	??_displayDigit+7
  8797  079C  0A84               	incf	4,f
  8798  079D  0800               	movf	0,w
  8799  079E  00A8               	movwf	??_displayDigit+8
  8800  079F  0827               	movf	??_displayDigit+7,w
  8801  07A0  0084               	movwf	4
  8802  07A1  1783               	bsf	3,7
  8803  07A2  1C28               	btfss	??_displayDigit+8,0
  8804  07A3  1383               	bcf	3,7
  8805  07A4  0823               	movf	??_displayDigit+3,w
  8806  07A5  0580               	andwf	0,f
  8807  07A6  0A84               	incf	4,f
  8808  07A7  0824               	movf	??_displayDigit+4,w
  8809  07A8  0580               	andwf	0,f
  8810                           
  8811                           ;lcd.c: 184: }
  8812                           
  8813                           ;lcd.c: 183: break;
  8814  07A9  0008               	return
  8815  07AA                     l1355:	
  8816                           
  8817                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8818                           ; Switch size 1, requested type "space"
  8819                           ; Number of cases is 1, Range of values is 0 to 0
  8820                           ; switch strategies available:
  8821                           ; Name         Instructions Cycles
  8822                           ; simple_byte            4     3 (average)
  8823                           ; direct_byte           11     8 (fixed)
  8824                           ; jumptable            260     6 (fixed)
  8825                           ;	Chosen strategy is simple_byte
  8826  07AA  087A               	movf	displayDigit@digito+1,w
  8827  07AB  3A00               	xorlw	0	; case 0
  8828  07AC  1903               	skipnz
  8829  07AD  2FAF               	goto	l1949
  8830  07AE  2FD2               	goto	l201
  8831  07AF                     l1949:	
  8832                           
  8833                           ; Switch size 1, requested type "space"
  8834                           ; Number of cases is 11, Range of values is 0 to 67
  8835                           ; switch strategies available:
  8836                           ; Name         Instructions Cycles
  8837                           ; simple_byte           34    18 (average)
  8838                           ; direct_byte          212     8 (fixed)
  8839                           ; jumptable            260     6 (fixed)
  8840                           ;	Chosen strategy is simple_byte
  8841  07AF  0879               	movf	displayDigit@digito,w
  8842  07B0  3A00               	xorlw	0	; case 0
  8843  07B1  1903               	skipnz
  8844  07B2  2FD3               	goto	L1
  8845  07B3  3A01               	xorlw	1	; case 1
  8846  07B4  1903               	skipnz
  8847  07B5  2FD6               	goto	L3
  8848  07B6  3A03               	xorlw	3	; case 2
  8849  07B7  1903               	skipnz
  8850  07B8  2FD9               	goto	L5
  8851  07B9  3A01               	xorlw	1	; case 3
  8852  07BA  1903               	skipnz
  8853  07BB  2FDC               	goto	L7
  8854  07BC  3A07               	xorlw	7	; case 4
  8855  07BD  1903               	skipnz
  8856  07BE  2FDF               	goto	L9
  8857  07BF  3A01               	xorlw	1	; case 5
  8858  07C0  1903               	skipnz
  8859  07C1  2FE2               	goto	L11
  8860  07C2  3A03               	xorlw	3	; case 6
  8861  07C3  1903               	skipnz
  8862  07C4  28B3               	goto	l1343
  8863  07C5  3A01               	xorlw	1	; case 7
  8864  07C6  1903               	skipnz
  8865  07C7  2A16               	goto	l1345
  8866  07C8  3A0F               	xorlw	15	; case 8
  8867  07C9  1903               	skipnz
  8868  07CA  2B7F               	goto	l1347
  8869  07CB  3A01               	xorlw	1	; case 9
  8870  07CC  1903               	skipnz
  8871  07CD  2CE0               	goto	l1349
  8872  07CE  3A4A               	xorlw	74	; case 67
  8873  07CF  1903               	skipnz
  8874  07D0  2E43               	goto	l1351
  8875  07D1  2FD2               	goto	l201
  8876  07D2                     l201:	
  8877  07D2  0008               	return
  8878  07D3                     L1:	
  8879  07D3                     __end_of_displayDigit:	
  8880  07D3  160A  118A  2DDC   	ljmp	l1331
  8881  07D6                     L3:	
  8882  07D6                     L2:	
  8883  07D6  120A  158A  2B60   	ljmp	l1333
  8884  07D9                     L5:	
  8885  07D9                     L4:	
  8886  07D9  160A  118A  2CC8   	ljmp	l1335
  8887  07DC                     L7:	
  8888  07DC                     L6:	
  8889  07DC  120A  158A  2A2E   	ljmp	l1337
  8890  07DF                     L9:	
  8891  07DF                     L8:	
  8892  07DF  160A  118A  2EEB   	ljmp	l1339
  8893  07E2                     L11:	
  8894  07E2                     L10:	
  8895  07E2  120A  158A  28FA   	ljmp	l1341


Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     68      77
    BANK3            96     28      45
    BANK2            80      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 17
		 -> main@str(BANK0[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 0

    displayDigit@D1.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    displayDigit@D1.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    displayDigit@D1.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    displayDigit@D1.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    displayDigit@D1.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    displayDigit@D1.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    displayDigit@D1.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    displayDigit@D1	PTR struct . size(2) Largest target is 28
		 -> main@D3(BANK3[28]), main@D2(BANK1[28]), main@D1(BANK1[28]), 

    displayNumber@D1	PTR struct . size(1) Largest target is 28
		 -> main@D1(BANK1[28]), 

    displayNumber@D2	PTR struct . size(1) Largest target is 28
		 -> main@D2(BANK1[28]), 

    displayNumber@D3	PTR struct . size(1) Largest target is 28
		 -> main@D3(BANK3[28]), 

    LCD_mapping@D3.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D3.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D3.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D3.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    LCD_mapping@D3.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D3.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D3.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D3	PTR struct . size(1) Largest target is 28
		 -> main@D3(BANK3[28]), 

    LCD_mapping@D2.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D2.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D2.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D2.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    LCD_mapping@D2.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D2.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D2.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D2	PTR struct . size(1) Largest target is 28
		 -> main@D2(BANK1[28]), 

    LCD_mapping@D1.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D1.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    LCD_mapping@D1.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D1.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    LCD_mapping@D1.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    LCD_mapping@D1.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D1.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    LCD_mapping@D1	PTR struct . size(1) Largest target is 28
		 -> main@D1(BANK1[28]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 17
		 -> main@str(BANK0[17]), 

    D3.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    D3.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    D3.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    D3.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    D3.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    D3.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    D3.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    D2.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    D2.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    D2.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    D2.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    D2.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    D2.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    D2.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    S31$sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    D1.sg	PTR int  size(2) Largest target is 1
		 -> LCDDATA4(SFR2[1]), LCDDATA5(SFR2[1]), 

    S31$sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    D1.sf	PTR int  size(2) Largest target is 1
		 -> LCDDATA3(SFR2[1]), LCDDATA5(SFR2[1]), 

    S31$se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    D1.se	PTR int  size(2) Largest target is 1
		 -> LCDDATA6(SFR2[1]), LCDDATA8(SFR2[1]), 

    S31$sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    D1.sd	PTR int  size(2) Largest target is 1
		 -> LCDDATA9(SFR2[1]), LCDDATA11(SFR2[1]), 

    S31$sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    D1.sc	PTR int  size(2) Largest target is 1
		 -> LCDDATA7(SFR2[1]), LCDDATA8(SFR2[1]), 

    S31$sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    D1.sb	PTR int  size(2) Largest target is 1
		 -> LCDDATA1(SFR2[1]), LCDDATA2(SFR2[1]), 

    S31$sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    D1.sa	PTR int  size(2) Largest target is 1
		 -> LCDDATA0(SFR2[1]), LCDDATA2(SFR2[1]), 

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 17
		 -> main@str(BANK0[17]), 


Critical Paths under _main in COMMON

    _main->___awtoft
    _utoa->___lwdiv
    _displayNumber->_displayDigit
    _displayDigit->___awdiv
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    ___awtoft->___ftpack
    _UART_Write_Text->_UART_Write
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->___fttol
    _displayNumber->_displayDigit
    ___fttol->___ftadd
    ___ftadd->___ftmul
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               132   132      0   16700
                                             43 BANK0     36    36      0
                                              0 BANK1     68    68      0
                                              0 BANK3     28    28      0
                           _LCD_init
                        _LCD_mapping
                          _UART_Init
                         _UART_Write
                    _UART_Write_Text
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                      _displayNumber
                               _utoa
 ---------------------------------------------------------------------------------
 (1) _utoa                                                 9     5      4    1314
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _displayNumber                                        5     0      5    5138
                                              9 BANK0      5     0      5
                            ___awdiv
                            ___awmod
                       _displayDigit
 ---------------------------------------------------------------------------------
 (2) _displayDigit                                        13     9      4    3728
                                              9 COMMON     4     0      4
                                              0 BANK0      9     9      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     508
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     512
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     305
                                             29 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    2312
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             13     7      6    2800
                                             16 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    1918
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      4     4      0     166
                                              1 COMMON     4     4      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     526
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _LCD_mapping                                          5     3      2    1057
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
   _LCD_mapping
   _UART_Init
     ___aldiv
   _UART_Write
   _UART_Write_Text
     _UART_Write
   ___awtoft
     ___ftpack
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   _displayNumber
     ___awdiv
     ___awmod
     _displayDigit
       ___awdiv (ARG)
   _utoa
     ___lwdiv
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     1C      2D       8       46.9%
BITBANK3            60      0       0       7        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       9        0.0%
BITBANK2            50      0       0      11        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     44      4D       6       96.3%
BITBANK1            50      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      4F       4       98.8%
BITBANK0            50      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      D7      12        0.0%
ABS                  0      0      D7      10        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sun Oct 22 14:55:56 2017

                       pc 0002               __CFG_CP$OFF 0000                        l82 1E1D  
            ___awdiv@sign 0076                        _kd 00E7                        _ki 00EA  
                      _kp 00E4                        fsr 0004             ?_displayDigit 0079  
            ___ftadd@exp1 003C              ___ftadd@exp2 003B              ___ftadd@sign 003A  
                     l201 07D2                       l340 0829                       l453 1F73  
                     l454 1F7B                       l446 1F5E                       l552 1FEA  
                     l537 12D2                       l477 1467                       _RD7 0047  
                     _PR2 0092              __CFG_CPD$OFF 0000                       fsr0 0004  
                     indf 0000              ___awmod@sign 0076              __CFG_IESO$ON 0000  
          ?_displayNumber 0029                      l1411 084A                      l1403 083A  
                    l1331 15DC                      l1421 0882                      l1413 085A  
                    l1341 08FA                      l1333 0B60                      l1511 1F23  
                    l1503 1F10                      l1351 0643                      l1343 00B3  
                    l1335 14C8                      l1425 088F                      l1441 100E  
                    l1345 0216                      l1337 0A2E                      l1371 1F43  
                    l1507 1F1B                      l1347 037F                      l1339 16EB  
                    l1355 07AA                      l1429 089D                      l1381 1F6D  
                    l1373 1F48                      l1365 1F30                      l1349 04E0  
                    l1533 1ECD                      l1525 1EA9                      l1711 1442  
                    l1447 1019                      l1527 1EB7                      l1551 1E83  
                    l1631 1F9B                      l1369 1F37                      l1705 142D  
                    l1473 1058                      l1465 1045                      l1457 1021  
                    l1537 1ED8                      l1641 1FBC                      l1379 1F63  
                    l1723 1479                      l1707 1439                      l1459 102F  
                    l1555 1E91                      l1717 1457                      l1709 143E  
                    l1469 1050                      l1485 1EE7                      l1549 1E75  
                    l1727 148B                      l1719 1463                      l1823 12C7  
                    l1815 12AA                      l1559 1E9C                      l1737 14AE  
                    l1681 13EF                      l1753 131A                      l1825 12D5  
                    l1817 12BA                      l1497 1EF4                      l1489 1EEE  
                    l1913 0FB2                      l1667 0013                      l1747 1304  
                    l1499 1F02                      l1589 1E53                      l1677 13E8  
                    l1781 1391                      l1765 1359                      l1829 12E3  
                    l1687 13FE                      l1777 1381                      l1769 1369  
                    l1699 1418                      l1797 1278                      l1949 07AF  
                    l1893 0EB7                      _BRGH 04C2                      _CREN 00C4  
                    u2004 1620                      u2005 161D                      u2014 1653  
                    u2015 1650                      u2104 11D4                      u2024 1686  
                    u2105 11D1                      u2025 1683                      u2114 1209  
                    u2034 16B9                      u2115 1206                      u2035 16B6  
                    u2204 0A46                      u2124 123E                      u2044 0B0D  
                    u2205 0A43                      u2125 123B                      u2045 0B0A  
                    u2214 0A72                      u2134 14E0                      u2054 0B40  
                    u3015 1024                      u2215 0A6F                      u2135 14DD  
                    u2055 0B3D                      u2304 1797                      u2224 0AA5  
                    u2144 150C                      u2064 0B78                      u2305 1794  
                    u2225 0AA2                      u2145 1509                      u2065 0B75  
                    u2314 17CC                      u2234 0AD8                      u2154 153F  
                    u2074 0BA6                      u3035 1030                      u3115 1EF7  
                    u2315 17C9                      u2235 0AD5                      u2155 153C  
                    u2075 0BA3                      u2404 0095                      u2324 08A9  
                    u2244 1149                      u2164 1574                      u2084 0BD9  
                    u3045 103C                      u2405 0092                      u2325 08A6  
                    u2245 1146                      u2165 1571                      u2085 0BD6  
                    u3205 1EB8                      u2414 00CB                      u2334 08DC  
                    u2254 117E                      u2174 15A7                      u2094 0C0C  
                    u3055 1046                      u3135 1F08                      u2415 00C8  
                    u2335 08D9                      u2255 117B                      u2175 15A4  
                    u2095 0C09                      u3215 1EC4                      u3320 10A3  
                    u2504 028D                      u2424 00F7                      u2344 0912  
                    u2264 11B3                      u2184 09DB                      u3321 10A4  
                    u3305 1068                      u3145 1F11                      u2505 028A  
                    u2425 00F4                      u2345 090F                      u2265 11B0  
                    u2185 09D8                      u3225 1ECE                      u3322 10A9  
                    u2514 02C0                      u2434 012C                      u2354 093E  
                    u2274 1703                      u2194 0A10                      u3323 10AA  
                    u3315 1089                      u2515 02BD                      u2435 0129  
                    u2355 093B                      u2275 1700                      u2195 0A0D  
                    u2604 048F                      u2524 02F5                      u2444 015F  
                    u2364 0973                      u2284 1731                      u2605 048C  
                    u2525 02F2                      u2445 015C                      u2365 0970  
                    u2285 172E                      u2614 04C2                      u2534 032A  
                    u2454 0192                      u2374 09A6                      u2294 1764  
                    u2615 04BF                      u2535 0327                      u2455 018F  
                    u2375 09A3                      u2295 1761                      u3255 1E78  
                    u2704 0687                      u2624 04F8                      u2544 035F  
                    u2464 01C5                      u2384 002D                      u3505 142E  
                    u2705 0684                      u2625 04F5                      u2545 035C  
                    u2465 01C2                      u2385 002A                      u3185 1EAC  
                    u2714 06BC                      u2634 0524                      u2554 0397  
                    u2474 01F8                      u2394 0062                      u2715 06B9  
                    u2635 0521                      u2555 0394                      u2475 01F5  
                    u2395 005F                      u3275 1E89                      u2724 06F1  
                    u2644 0557                      u2564 03C3                      u2484 022E  
                    u2805 1F57                      u2725 06EE                      u2645 0554  
                    u2565 03C0                      u2485 022B                      u3285 1E92  
                    u2734 0724                      u2654 058A                      u2574 03F6  
                    u2494 025A                      u3535 1443                      u2735 0721  
                    u2655 0587                      u2575 03F3                      u2495 0257  
                    u2744 0757                      u2664 05BD                      u2584 0429  
                    u2825 1F66                      u2745 0754                      u2665 05BA  
                    u2585 0426                      u2754 078A                      u2674 05F2  
                    u2594 045C                      u2915 084E                      u3475 1419  
                    u2755 0787                      u2675 05EF                      u2595 0459  
                    u2684 0625                      u3565 1458                      u3645 1326  
                    u3805 12AB                      u2685 0622                      u2694 065B  
                    u2935 085C                      u3735 1392                      u3655 1338  
                    u2695 0658                      u3904 0E8A                      u2945 0871  
                    u2865 1F82                      u2785 1F3C                      u3745 139A  
                    u3905 0E88                      u1994 15F4                      u2955 0883  
                    u3835 12C9                      u1995 15F1                      u3860 0E0E  
                    _RCIF 0065                      u3685 136A                      u3695 1372  
                    u3775 127F                      u3927 0FF8                      u3874 0E60  
                    u3875 0E5E                      u3884 0E6C                      u3885 0E6A  
                    u3894 0E78                      u3895 0E76                      _SPEN 00C7  
                    _TRMT 04C1                      _TXEN 04C5                      _SYNC 04C4  
            ?_LCD_mapping 0070             __CFG_FCMEN$ON 0000                      _main 0DFA  
            ___ftpack@arg 0070              ___ftpack@exp 0073                      btemp 007E  
                    _utoa 1F94             __CFG_BOREN$ON 0000                      start 0000  
           __CFG_MCLRE$ON 0000              ___ftmul@cntr 002E              ___ftmul@sign 002F  
 __end_of_UART_Write_Text 1E6F              ___fttol@exp1 004A              ___fttol@lval 0046  
            main@desejado 006D            ??_displayDigit 0020          __end_of_LCD_init 1E50  
         __end_of___aldiv 08A6                     ?_main 0070           __end_of___awdiv 105D  
         __end_of___ftadd 14C8             __CFG_WDTE$OFF 0000           __end_of___awmod 1F28  
                   _ANSEL 0091                     ?_utoa 0078           __end_of___ftmul 13BF  
         ___awdiv@divisor 0070                     _T1CON 0010           __end_of___fttol 12EC  
                   _T2CON 0012                     _LCDPS 0108           __end_of___lwdiv 1EDD  
         __end_of___lwmod 1EA1           ___awdiv@counter 0075                     _RCREG 001A  
                   _TMR1H 000F                     _TMR1L 000E                     _SPBRG 0099  
                   _PORTD 0008                     _TRISA 0085                     _TRISC 0087  
                   _TRISD 0088                     _TXREG 0019               ?_UART_Write 0070  
      __size_of_UART_Init 0074             ___awtoft@sign 007D             ___ftpack@sign 0074  
                   main@D 00A2                     main@I 00A6                     main@P 00A0  
                   pclath 000A                     utoa@c 0022                     utoa@v 0020  
                   status 0003                     wtemp0 007E           __initialization 07E5  
            __end_of_main 1000              __end_of_utoa 2000                    ??_main 004B  
           ___fttol@sign1 0045                    ??_utoa 007C           ??_displayNumber 007D  
                  _ADCON0 001F                    _ADCON1 009F                    _ADRESH 001E  
                  _ADRESL 009E                    _CCPR2L 001B          ___awdiv@dividend 0072  
                  _CMCON0 009C          __end_of___awtoft 002A          __end_of___ftpack 1F94  
                  _LCDCON 0107                    _LCDSE0 011C                    _LCDSE1 011D  
                  _LCDSE2 011E                    _T1SYNC 0082                    _INTCON 000B  
                  _OSCCON 008F                    _TMR1CS 0081                    _TMR1ON 0080  
                  _TRISC6 043E                    _TRISC7 043F            __CFG_PWRTE$OFF 0000  
       __end_of_UART_Init 10D1       __size_of_UART_Write 000A                 ??___aldiv 0078  
               ??___awdiv 0074                 ??___ftadd 0036                 ??___awmod 0074  
        ?_UART_Write_Text 0070                 ??___ftmul 0026                 ??___fttol 0041  
               ??___lwdiv 0074                 ??___lwmod 0074          ___awdiv@quotient 0077  
         ___awmod@divisor 0070                    main@D1 00AC                    main@D2 00C8  
                  main@D3 0190           ___awmod@counter 0075                    main@kd 0064  
                  main@ki 0061                    main@kp 0067     ___ftmul@f3_as_product 002B  
    __end_of_displayDigit 07D3   __end_of__initialization 07FC                ___ftadd@f1 0030  
              ___ftadd@f2 0033                 ?_LCD_init 0070      __size_of_LCD_mapping 01BA  
              ___awtoft@c 0078                ___ftmul@f1 0020                ___ftmul@f2 0023  
              ___fttol@f1 003D            __pcstackCOMMON 0070              __pidataBANK3 0806  
              __pbssBANK1 00E4                ??_LCD_init 0070                __pmaintext 0DFA  
                 _CCP2CON 001D                 ?___awtoft 0078                 ?___ftpack 0070  
            ??_UART_Write 0070            main@duty_cycle 0060            displayDigit@D1 007B  
                 ___aldiv 0817                   ___awdiv 1004                   ___ftadd 13BF  
                 ___awmod 1EDD        __end_of_UART_Write 1E26                   ___ftmul 12EC  
                 ___fttol 125E                   ___lwdiv 1EA1                   ___lwmod 1E6F  
               _LCDDATA10 011A                 _LCDDATA11 011B                ??___awtoft 007B  
              ??___ftpack 0075                   __ptext1 1F94                   __ptext2 1E6F  
                 __ptext3 1EA1                   __ptext4 10D1                   __ptext5 15D9  
                 __ptext6 1EDD                   __ptext7 1004                   __ptext8 125E  
                 __ptext9 12EC          ___awmod@dividend 0072          ___aldiv@dividend 0074  
   __size_of_displayDigit F1FA                   main@str 004F      end_of_initialization 07FC  
        ___aldiv@quotient 0022                   psplit$0 10001E                   psplit$1 1E001F  
                 psplit$2 1F0020                   psplit$3 200021                   psplit$4 210022  
                 psplit$5 220023                   psplit$6 230024                   psplit$7 240025  
                 utoa@buf 0023                   utoa@val 0078                 _UART_Init 105D  
            _displayDigit 15D9            UART_Write@data 0070     __end_of_displayNumber 1146  
      displayDigit@digito 0079                main@timer1 00AA         __size_of_LCD_init 0019  
             ___ftmul@exp 002A             LCD_mapping@D1 0074             LCD_mapping@D2 0070  
           LCD_mapping@D3 0071                ?_UART_Init 0026  __size_of_UART_Write_Text 001F  
     start_initialization 07E5         pnum$text5_split_1 001E         pnum$text5_split_2 001F  
       pnum$text5_split_3 0020         pnum$text5_split_4 0021         pnum$text5_split_5 0022  
       pnum$text5_split_6 0023         pnum$text5_split_7 0024         pnum$text5_split_8 0025  
           ??_LCD_mapping 0072                init_fetch0 1E26               __pdataBANK3 01AC  
       __size_of___awtoft 0021         __size_of___ftpack 006C                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00A0             __pcstackBANK3 0190  
        ___lwdiv@dividend 0072       __end_of_LCD_mapping 0DFA                  ?___aldiv 0070  
                ?___awdiv 0070                  ?___ftadd 0030                  ?___awmod 0070  
                ?___ftmul 0020                  ?___fttol 003D                  ?___lwdiv 0070  
                ?___lwmod 0070               ??_UART_Init 002A          ___lwdiv@quotient 0075  
                _LCDDATA0 0110                  _LCDDATA1 0111                  _LCDDATA2 0112  
                _LCDDATA3 0113                  _LCDDATA4 0114                  _LCDDATA5 0115  
                _LCDDATA6 0116                  _LCDDATA7 0117                  _LCDDATA8 0118  
                _LCDDATA9 0119                UART_Init@x 0079         ??_UART_Write_Text 0071  
         ___aldiv@divisor 0070           ___aldiv@counter 0020                  _LCD_init 1E37  
                _GO_nDONE 00F9                 main@F2791 01AC                 main@PID_v 00A4  
       UART_Init@baudrate 0026                 main@error 00A8          displayNumber@num 0029  
             _LCD_mapping 0C40          __size_of___aldiv 008F          __size_of___awdiv 0059  
        __size_of___ftadd 0109          __size_of___awmod 004B          __size_of___ftmul 00D3  
        __size_of___fttol 008E          __size_of___lwdiv 003C          __size_of___lwmod 0032  
                ___awtoft 0009                  ___ftpack 1F28                  _main$659 006A  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0077                  __ptext10 13BF  
                __ptext11 0009                  __ptext12 1F28                  __ptext13 1E50  
                __ptext14 1E1C                  __ptext15 105D                  __ptext16 0817  
                __ptext17 0C40                  __ptext18 1E37       UART_Write_Text@text 0074  
           __size_of_main 0206                 pnum$text5 0010             __size_of_utoa 006C  
  __size_of_displayNumber 0075           displayNumber@D1 002B           displayNumber@D2 002C  
         displayNumber@D3 002D                  init_ram0 1E2A          ___lwmod@dividend 0072  
                utoa@base 007A           _UART_Write_Text 1E50           ___lwmod@divisor 0070  
         ___lwmod@counter 0075              ___aldiv@sign 0021                _UART_Write 1E1C  
           _displayNumber 10D1        __CFG_FOSC$INTOSCIO 0000          UART_Write_Text@i 0072  
